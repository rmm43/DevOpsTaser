<?xml version="1.0" encoding="utf-8"?>
<syncorp name="unknown-0.0">
<syndoc type="method" name="net.archiloque.picross.Main.main(String[])">
<syntok type="method_name" weight="1">main</syntok>
<syntok type="parameter_type" weight="1">String</syntok>
<syntok type="parameter_name" weight="1">args</syntok>
<syntok type="local_variable_name" weight="1">linesBlocks</syntok>
<syntok type="method_call" weight="1">splitBlocks</syntok>
<syntok type="primary_name_ref" weight="1">args</syntok>
<syntok type="local_variable_name" weight="1">columnsBlocks</syntok>
<syntok type="method_call" weight="1">splitBlocks</syntok>
<syntok type="primary_name_ref" weight="1">args</syntok>
<syntok type="class_or_interface_ref" weight="1">Grid</syntok>
<syntok type="local_variable_name" weight="1">grid</syntok>
<syntok type="constructor_call" weight="1">Grid</syntok>
<syntok type="primary_name_ref" weight="1">linesBlocks</syntok>
<syntok type="primary_name_ref" weight="1">columnsBlocks</syntok>
<syntok type="primary_name_ref" weight="1">grid</syntok>
<syntok type="method_call" weight="1">process</syntok>
<syntok type="primary_name_ref" weight="1">System</syntok>
<syntok type="qualified_name_ref" weight="1">out</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">grid</syntok>
<syntok type="method_call" weight="1">toString</syntok>
<syntok type="class_comment" weight="1">Run</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">picross</syntok>
<syntok type="class_comment" weight="1">and</syntok>
<syntok type="class_comment" weight="1">output</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">result</syntok>
<syntok type="class_comment" weight="1">see</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">readme</syntok>
<syntok type="class_comment" weight="1">for</syntok>
<syntok type="class_comment" weight="1">an</syntok>
<syntok type="class_comment" weight="1">example</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Main</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Main.splitBlocks(String)">
<syntok type="method_name" weight="1">splitBlocks</syntok>
<syntok type="parameter_type" weight="1">String</syntok>
<syntok type="parameter_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="local_variable_name" weight="1">splittedBlocks</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">splittedBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">splittedBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="local_variable_name" weight="1">items</syntok>
<syntok type="primary_name_ref" weight="1">splittedBlocks</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">items</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">j</syntok>
<syntok type="primary_name_ref" weight="1">j</syntok>
<syntok type="primary_name_ref" weight="1">items</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">j</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">j</syntok>
<syntok type="primary_name_ref" weight="1">Integer</syntok>
<syntok type="method_call" weight="1">parseInt</syntok>
<syntok type="primary_name_ref" weight="1">items</syntok>
<syntok type="primary_name_ref" weight="1">j</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">Run</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">picross</syntok>
<syntok type="class_comment" weight="1">and</syntok>
<syntok type="class_comment" weight="1">output</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">result</syntok>
<syntok type="class_comment" weight="1">see</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">readme</syntok>
<syntok type="class_comment" weight="1">for</syntok>
<syntok type="class_comment" weight="1">an</syntok>
<syntok type="class_comment" weight="1">example</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Main</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.Record(int,int[])">
<syntok type="method_comment" weight="1">Create</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">new</syntok>
<syntok type="method_comment" weight="1">Record</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">it</syntok>
<syntok type="method_comment" weight="1">should</syntok>
<syntok type="method_comment" weight="1">contain</syntok>
<syntok type="method_name" weight="1">Record</syntok>
<syntok type="parameter_name" weight="1">length</syntok>
<syntok type="parameter_name" weight="1">blocks</syntok>
<syntok type="qualified_name_ref" weight="1">blocks</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="primary_name_ref" weight="1">UNKNOWN</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="line_comment" weight="1">no</syntok>
<syntok type="line_comment" weight="1">block</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="line_comment" weight="1">some</syntok>
<syntok type="line_comment" weight="1">blocks</syntok>
<syntok type="line_comment" weight="1">we</syntok>
<syntok type="line_comment" weight="1">calculate</syntok>
<syntok type="line_comment" weight="1">all</syntok>
<syntok type="line_comment" weight="1">the</syntok>
<syntok type="line_comment" weight="1">available</syntok>
<syntok type="line_comment" weight="1">block</syntok>
<syntok type="line_comment" weight="1">that</syntok>
<syntok type="line_comment" weight="1">can</syntok>
<syntok type="line_comment" weight="1">be</syntok>
<syntok type="line_comment" weight="1">dispacthed</syntok>
<syntok type="line_comment" weight="1">as</syntok>
<syntok type="line_comment" weight="1">we</syntok>
<syntok type="line_comment" weight="1">want</syntok>
<syntok type="local_variable_name" weight="1">availableBlocks</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="primary_name_ref" weight="1">availableBlocks</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="method_call" weight="1">fillPossibilities</syntok>
<syntok type="primary_name_ref" weight="1">availableBlocks</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">or</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">containing</syntok>
<syntok type="class_comment" weight="1">blocks</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Record</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="field_name" weight="1">currentValues</syntok>
<syntok type="field_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="field_name" weight="1">possibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.applyChanged(List&lt;Change&gt;)">
<syntok type="method_comment" weight="1">Apply</syntok>
<syntok type="method_comment" weight="1">some</syntok>
<syntok type="method_comment" weight="1">Changes</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">this</syntok>
<syntok type="method_comment" weight="1">record</syntok>
<syntok type="method_comment" weight="1">and</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">resulting</syntok>
<syntok type="method_comment" weight="1">Changes</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">changes</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">Changes</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">apply</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">non</syntok>
<syntok type="method_comment" weight="1">null</syntok>
<syntok type="method_comment" weight="1">List</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">resulting</syntok>
<syntok type="method_comment" weight="1">changes</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="method_name" weight="1">applyChanged</syntok>
<syntok type="parameter_type" weight="1">List</syntok>
<syntok type="parameter_type" weight="1">Change</syntok>
<syntok type="parameter_name" weight="1">changes</syntok>
<syntok type="line_comment" weight="1">filter</syntok>
<syntok type="line_comment" weight="1">the</syntok>
<syntok type="line_comment" weight="1">possibilities</syntok>
<syntok type="line_comment" weight="1">with</syntok>
<syntok type="line_comment" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">isEmpty</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="local_variable_name" weight="1">newPossibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">isCompatible</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">newPossibilities</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="primary_name_ref" weight="1">newPossibilities</syntok>
<syntok type="line_comment" weight="1">apply</syntok>
<syntok type="line_comment" weight="1">the</syntok>
<syntok type="line_comment" weight="1">change</syntok>
<syntok type="line_comment" weight="1">since</syntok>
<syntok type="line_comment" weight="1">we</syntok>
<syntok type="line_comment" weight="1">know</syntok>
<syntok type="line_comment" weight="1">their</syntok>
<syntok type="line_comment" weight="1">value</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">change</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="line_comment" weight="1">check</syntok>
<syntok type="line_comment" weight="1">it</syntok>
<syntok type="line_comment" weight="1">it</syntok>
<syntok type="line_comment" weight="1">enable</syntok>
<syntok type="line_comment" weight="1">to</syntok>
<syntok type="line_comment" weight="1">calculate</syntok>
<syntok type="line_comment" weight="1">new</syntok>
<syntok type="line_comment" weight="1">things</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">UNKNOWN</syntok>
<syntok type="local_variable_name" weight="1">value</syntok>
<syntok type="method_call" weight="1">getValueFromPossibilities</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">UNKNOWN</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">currentValues</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">or</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">containing</syntok>
<syntok type="class_comment" weight="1">blocks</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Record</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="field_name" weight="1">currentValues</syntok>
<syntok type="field_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="field_name" weight="1">possibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.isCompatible(char[],List&lt;Change&gt;)">
<syntok type="method_comment" weight="1">Check</syntok>
<syntok type="method_comment" weight="1">if</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">is</syntok>
<syntok type="method_comment" weight="1">compatible</syntok>
<syntok type="method_comment" weight="1">with</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">change</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">test</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">changes</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">changes</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">apply</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">true</syntok>
<syntok type="method_comment" weight="1">if</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">is</syntok>
<syntok type="method_comment" weight="1">compatible</syntok>
<syntok type="method_name" weight="1">isCompatible</syntok>
<syntok type="parameter_name" weight="1">possibility</syntok>
<syntok type="parameter_type" weight="1">List</syntok>
<syntok type="parameter_type" weight="1">Change</syntok>
<syntok type="parameter_name" weight="1">changes</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">change</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">or</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">containing</syntok>
<syntok type="class_comment" weight="1">blocks</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Record</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="field_name" weight="1">currentValues</syntok>
<syntok type="field_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="field_name" weight="1">possibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.getValueFromPossibilities(int)">
<syntok type="method_comment" weight="1">Check</syntok>
<syntok type="method_comment" weight="1">in</syntok>
<syntok type="method_comment" weight="1">possibilities</syntok>
<syntok type="method_comment" weight="1">if</syntok>
<syntok type="method_comment" weight="1">we</syntok>
<syntok type="method_comment" weight="1">can</syntok>
<syntok type="method_comment" weight="1">deduce</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">value</syntok>
<syntok type="method_comment" weight="1">if</syntok>
<syntok type="method_comment" weight="1">all</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">possibilities</syntok>
<syntok type="method_comment" weight="1">have</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">same</syntok>
<syntok type="method_comment" weight="1">value</syntok>
<syntok type="method_comment" weight="1">at</syntok>
<syntok type="method_comment" weight="1">this</syntok>
<syntok type="method_comment" weight="1">position</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">index</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">position</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">check</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">calculated</syntok>
<syntok type="method_comment" weight="1">value</syntok>
<syntok type="method_name" weight="1">getValueFromPossibilities</syntok>
<syntok type="parameter_name" weight="1">index</syntok>
<syntok type="local_variable_name" weight="1">candidate</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">candidate</syntok>
<syntok type="primary_name_ref" weight="1">UNKNOWN</syntok>
<syntok type="primary_name_ref" weight="1">candidate</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">or</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">containing</syntok>
<syntok type="class_comment" weight="1">blocks</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Record</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="field_name" weight="1">currentValues</syntok>
<syntok type="field_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="field_name" weight="1">possibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.fillPossibilities(char[],int,int,int)">
<syntok type="method_comment" weight="1">Recursive</syntok>
<syntok type="method_comment" weight="1">function</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">create</syntok>
<syntok type="method_comment" weight="1">all</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">possibilities</syntok>
<syntok type="method_comment" weight="1">we</syntok>
<syntok type="method_comment" weight="1">create</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">by</syntok>
<syntok type="method_comment" weight="1">adding</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">currentState</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">current</syntok>
<syntok type="method_comment" weight="1">state</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">building</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">possibility</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">availableBlocks</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">available</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">be</syntok>
<syntok type="method_comment" weight="1">placed</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">nextBlockIndex</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">index</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">next</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">to</syntok>
<syntok type="method_comment" weight="1">be</syntok>
<syntok type="method_comment" weight="1">added</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">totalLength</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">total</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">record</syntok>
<syntok type="method_name" weight="1">fillPossibilities</syntok>
<syntok type="parameter_name" weight="1">currentState</syntok>
<syntok type="parameter_name" weight="1">availableBlocks</syntok>
<syntok type="parameter_name" weight="1">nextBlockIndex</syntok>
<syntok type="parameter_name" weight="1">totalLength</syntok>
<syntok type="local_variable_name" weight="1">nextBlockLength</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="primary_name_ref" weight="1">nextBlockIndex</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">availableBlocks</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="local_variable_name" weight="1">toBeAddedLength</syntok>
<syntok type="primary_name_ref" weight="1">nextBlockIndex</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="local_variable_name" weight="1">newState</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">copyOf</syntok>
<syntok type="primary_name_ref" weight="1">currentState</syntok>
<syntok type="primary_name_ref" weight="1">currentState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">toBeAddedLength</syntok>
<syntok type="primary_name_ref" weight="1">nextBlockLength</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="primary_name_ref" weight="1">currentState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">currentState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">toBeAddedLength</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="primary_name_ref" weight="1">currentState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">toBeAddedLength</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="primary_name_ref" weight="1">nextBlockIndex</syntok>
<syntok type="primary_name_ref" weight="1">blocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">lastState</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">copyOf</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="primary_name_ref" weight="1">totalLength</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">lastState</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">lastState</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">lastState</syntok>
<syntok type="method_call" weight="1">fillPossibilities</syntok>
<syntok type="primary_name_ref" weight="1">newState</syntok>
<syntok type="primary_name_ref" weight="1">availableBlocks</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">nextBlockIndex</syntok>
<syntok type="primary_name_ref" weight="1">totalLength</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">or</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">containing</syntok>
<syntok type="class_comment" weight="1">blocks</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Record</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="field_name" weight="1">currentValues</syntok>
<syntok type="field_name" weight="1">blocks</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="field_name" weight="1">possibilities</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Change.Change(int,char)">
<syntok type="method_name" weight="1">Change</syntok>
<syntok type="parameter_name" weight="1">index</syntok>
<syntok type="parameter_name" weight="1">value</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">value</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">change</syntok>
<syntok type="class_comment" weight="1">to</syntok>
<syntok type="class_comment" weight="1">be</syntok>
<syntok type="class_comment" weight="1">applied</syntok>
<syntok type="class_comment" weight="1">on</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">Record</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Change</syntok>
<syntok type="field_name" weight="1">index</syntok>
<syntok type="field_name" weight="1">value</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Change.toString()">
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="method_name" weight="1">toString</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">value</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">change</syntok>
<syntok type="class_comment" weight="1">to</syntok>
<syntok type="class_comment" weight="1">be</syntok>
<syntok type="class_comment" weight="1">applied</syntok>
<syntok type="class_comment" weight="1">on</syntok>
<syntok type="class_comment" weight="1">a</syntok>
<syntok type="class_comment" weight="1">Record</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Change</syntok>
<syntok type="field_name" weight="1">index</syntok>
<syntok type="field_name" weight="1">value</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.MainTest.something()">
<syntok type="method_name" weight="1">something</syntok>
<syntok type="primary_name_ref" weight="1">Main</syntok>
<syntok type="method_call" weight="1">main</syntok>
<syntok type="constructor_call" weight="1">String</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">MainTest</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.Grid(int[][],int[][])">
<syntok type="method_comment" weight="1">Create</syntok>
<syntok type="method_comment" weight="1">a</syntok>
<syntok type="method_comment" weight="1">grid</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">linesBlocks</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">for</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">lines</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">columnsBlocks</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">blocks</syntok>
<syntok type="method_comment" weight="1">for</syntok>
<syntok type="method_comment" weight="1">the</syntok>
<syntok type="method_comment" weight="1">columns</syntok>
<syntok type="method_name" weight="1">Grid</syntok>
<syntok type="parameter_name" weight="1">linesBlocks</syntok>
<syntok type="parameter_name" weight="1">columnsBlocks</syntok>
<syntok type="primary_name_ref" weight="1">lines</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">linesBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">linesBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">lines</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">columnsBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">linesBlocks</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">columns</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">columnsBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">columnsBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">columns</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">linesBlocks</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">columnsBlocks</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Grid</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">lines</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">columns</syntok>
<syntok type="block_comment" weight="1">Process</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">we</syntok>
<syntok type="block_comment" weight="1">find</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">solution</syntok>
<syntok type="block_comment" weight="1">or</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">is</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
<syntok type="block_comment" weight="1">Apply</syntok>
<syntok type="block_comment" weight="1">some</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">of</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">and</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">resulting</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">ready</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">be</syntok>
<syntok type="block_comment" weight="1">applied</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.hasAnyChange(List&lt;Change&gt;[])">
<syntok type="method_comment" weight="1">Check</syntok>
<syntok type="method_comment" weight="1">if</syntok>
<syntok type="method_comment" weight="1">an</syntok>
<syntok type="method_comment" weight="1">array</syntok>
<syntok type="method_comment" weight="1">of</syntok>
<syntok type="method_comment" weight="1">change</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">is</syntok>
<syntok type="method_comment" weight="1">empty</syntok>
<syntok type="method_name" weight="1">hasAnyChange</syntok>
<syntok type="parameter_type" weight="1">List</syntok>
<syntok type="parameter_type" weight="1">Change</syntok>
<syntok type="parameter_name" weight="1">changes</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">change</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="method_call" weight="1">isEmpty</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Grid</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">lines</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">columns</syntok>
<syntok type="block_comment" weight="1">Process</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">we</syntok>
<syntok type="block_comment" weight="1">find</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">solution</syntok>
<syntok type="block_comment" weight="1">or</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">is</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
<syntok type="block_comment" weight="1">Apply</syntok>
<syntok type="block_comment" weight="1">some</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">of</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">and</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">resulting</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">ready</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">be</syntok>
<syntok type="block_comment" weight="1">applied</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.process()">
<syntok type="method_name" weight="1">process</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="constructor_call" weight="1">List</syntok>
<syntok type="primary_name_ref" weight="1">columns</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">applyChanges</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">columns</syntok>
<syntok type="primary_name_ref" weight="1">lines</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="method_call" weight="1">hasAnyChange</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">applyChanges</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">lines</syntok>
<syntok type="primary_name_ref" weight="1">columns</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="method_call" weight="1">hasAnyChange</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Grid</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">lines</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">columns</syntok>
<syntok type="block_comment" weight="1">Process</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">we</syntok>
<syntok type="block_comment" weight="1">find</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">solution</syntok>
<syntok type="block_comment" weight="1">or</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">is</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
<syntok type="block_comment" weight="1">Apply</syntok>
<syntok type="block_comment" weight="1">some</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">of</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">and</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">resulting</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">ready</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">be</syntok>
<syntok type="block_comment" weight="1">applied</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.applyChanges(List&lt;Change&gt;[],Record[],int)">
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="method_name" weight="1">applyChanges</syntok>
<syntok type="parameter_type" weight="1">List</syntok>
<syntok type="parameter_type" weight="1">Change</syntok>
<syntok type="parameter_name" weight="1">changesToApply</syntok>
<syntok type="parameter_type" weight="1">Record</syntok>
<syntok type="parameter_name" weight="1">records</syntok>
<syntok type="parameter_name" weight="1">otherDimensionSize</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">List</syntok>
<syntok type="primary_name_ref" weight="1">otherDimensionSize</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">otherDimensionSize</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">records</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">records</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="primary_name_ref" weight="1">changesToApply</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">change</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">change</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Grid</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">lines</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">columns</syntok>
<syntok type="block_comment" weight="1">Process</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">we</syntok>
<syntok type="block_comment" weight="1">find</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">solution</syntok>
<syntok type="block_comment" weight="1">or</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">is</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
<syntok type="block_comment" weight="1">Apply</syntok>
<syntok type="block_comment" weight="1">some</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">of</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">and</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">resulting</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">ready</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">be</syntok>
<syntok type="block_comment" weight="1">applied</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.toString()">
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="method_name" weight="1">toString</syntok>
<syntok type="class_or_interface_ref" weight="1">StringBuilder</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">StringBuilder</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">lines</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">append</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="qualified_name_ref" weight="1">currentValues</syntok>
<syntok type="method_call" weight="1">append</syntok>
<syntok type="string_literal" weight="1">n</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">toString</syntok>
<syntok type="class_comment" weight="1">Represents</syntok>
<syntok type="class_comment" weight="1">the</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">Grid</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">lines</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="field_name" weight="1">columns</syntok>
<syntok type="block_comment" weight="1">Process</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">we</syntok>
<syntok type="block_comment" weight="1">find</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">solution</syntok>
<syntok type="block_comment" weight="1">or</syntok>
<syntok type="block_comment" weight="1">until</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">is</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
<syntok type="block_comment" weight="1">Apply</syntok>
<syntok type="block_comment" weight="1">some</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">a</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">of</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">and</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">the</syntok>
<syntok type="block_comment" weight="1">resulting</syntok>
<syntok type="block_comment" weight="1">changes</syntok>
<syntok type="block_comment" weight="1">ready</syntok>
<syntok type="block_comment" weight="1">to</syntok>
<syntok type="block_comment" weight="1">be</syntok>
<syntok type="block_comment" weight="1">applied</syntok>
<syntok type="annotation_ref" weight="1">SuppressWarnings</syntok>
<syntok type="string_literal" weight="1">unchecked</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.assertEquals(char[],char[])">
<syntok type="method_name" weight="1">assertEquals</syntok>
<syntok type="parameter_name" weight="1">expected</syntok>
<syntok type="parameter_name" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">expected</syntok>
<syntok type="string_literal" weight="1">a</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">but</syntok>
<syntok type="string_literal" weight="1">not</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">found</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">expected</syntok>
<syntok type="string_literal" weight="1">not</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">but</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">found</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="string_literal" weight="1">arrays</syntok>
<syntok type="string_literal" weight="1">dont</syntok>
<syntok type="string_literal" weight="1">have</syntok>
<syntok type="string_literal" weight="1">the</syntok>
<syntok type="string_literal" weight="1">same</syntok>
<syntok type="string_literal" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">arrays</syntok>
<syntok type="string_literal" weight="1">differ</syntok>
<syntok type="string_literal" weight="1">firstly</syntok>
<syntok type="string_literal" weight="1">at</syntok>
<syntok type="string_literal" weight="1">element</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="method_call" weight="1">format</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.format(String,Object,Object)">
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="method_name" weight="1">format</syntok>
<syntok type="parameter_type" weight="1">String</syntok>
<syntok type="parameter_name" weight="1">message</syntok>
<syntok type="parameter_type" weight="1">Object</syntok>
<syntok type="parameter_name" weight="1">expected</syntok>
<syntok type="parameter_type" weight="1">Object</syntok>
<syntok type="parameter_name" weight="1">actual</syntok>
<syntok type="class_or_interface_ref" weight="1">String</syntok>
<syntok type="local_variable_name" weight="1">formatted</syntok>
<syntok type="primary_name_ref" weight="1">message</syntok>
<syntok type="primary_name_ref" weight="1">formatted</syntok>
<syntok type="primary_name_ref" weight="1">message</syntok>
<syntok type="primary_name_ref" weight="1">formatted</syntok>
<syntok type="string_literal" weight="1">expected</syntok>
<syntok type="primary_name_ref" weight="1">expected</syntok>
<syntok type="string_literal" weight="1">but</syntok>
<syntok type="string_literal" weight="1">was</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.emptyRecord()">
<syntok type="method_name" weight="1">emptyRecord</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="method_call" weight="1">toCharArray</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.filledRecord()">
<syntok type="method_name" weight="1">filledRecord</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.twoRecordFill()">
<syntok type="method_name" weight="1">twoRecordFill</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibility</syntok>
<syntok type="string_literal" weight="1">XXXX</syntok>
<syntok type="string_literal" weight="1">XXXX</syntok>
<syntok type="method_call" weight="1">toCharArray</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">possibility</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.oneRecordWithSomeSpace()">
<syntok type="method_name" weight="1">oneRecordWithSomeSpace</syntok>
<syntok type="class_or_interface_ref" weight="1">Record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">Record</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">System</syntok>
<syntok type="qualified_name_ref" weight="1">err</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">System</syntok>
<syntok type="qualified_name_ref" weight="1">err</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="string_literal" weight="1">XXXXXXXXX</syntok>
<syntok type="method_call" weight="1">toCharArray</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibilities</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="string_literal" weight="1">XXXXXXXXX</syntok>
<syntok type="method_call" weight="1">toCharArray</syntok>
<syntok type="class_or_interface_ref" weight="1">List</syntok>
<syntok type="class_or_interface_ref" weight="1">Change</syntok>
<syntok type="local_variable_name" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="constructor_call" weight="1">ArrayList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">i</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applyChanged</syntok>
<syntok type="primary_name_ref" weight="1">Arrays</syntok>
<syntok type="method_call" weight="1">asList</syntok>
<syntok type="constructor_call" weight="1">Change</syntok>
<syntok type="primary_name_ref" weight="1">FILLED</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="qualified_name_ref" weight="1">value</syntok>
<syntok type="primary_name_ref" weight="1">EMPTY</syntok>
<syntok type="primary_name_ref" weight="1">AssertJUnit</syntok>
<syntok type="method_call" weight="1">assertEquals</syntok>
<syntok type="primary_name_ref" weight="1">changes</syntok>
<syntok type="method_call" weight="1">get</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="class_comment" weight="1">Julien</syntok>
<syntok type="class_comment" weight="1">Kirch</syntok>
<syntok type="class_comment" weight="1">Licensed</syntok>
<syntok type="class_comment" weight="1">under</syntok>
<syntok type="class_comment" weight="1">MIT</syntok>
<syntok type="class_comment" weight="1">license</syntok>
<syntok type="class_name" weight="1">RecordTest</syntok>
<syntok type="class_or_interface_ref" weight="1">SlotValue</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
<syntok type="annotation_ref" weight="1">Test</syntok>
</syndoc>
</syncorp>