<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="gnu.dtools.ritopt.ArrayOption" jls="java5">
<jent id="0" type="file" span="0:0:85:1">Source/jabref/src/java/gnu/dtools/ritopt/ArrayOption.java</jent>
<jent id="1" pid="0" type="class" span="55:1:85:1">gnu.dtools.ritopt.ArrayOption</jent>
<jent id="2" pid="1" type="method" span="62:2:64:2">gnu.dtools.ritopt.ArrayOption.ArrayOption()</jent>
<jent id="3" pid="1" type="method" span="73:2:73:43">gnu.dtools.ritopt.ArrayOption.getObjectArray()</jent>
<jent id="4" pid="1" type="method" span="81:2:83:2">gnu.dtools.ritopt.ArrayOption.getObjectList()</jent>
<jtok eid="0" type="block_comment" span="5:1:10:4">/**
 * ArrayOption.java
 *
 * Version:
 *    $Id: ArrayOption.java 2268 2007-08-19 23:37:05Z coezbek $
 */</jtok>
<jtok eid="0" type="block_comment" span="12:1:53:4">/**
 * The principal base class used to register option variables that represent
 * arrays or Collections. Array options are useful for options which represent
 * path lists or file specifications.
 * &lt;p&gt;
 * 
 * The preferred derived sub-class implementation is to provide a constructor
 * with a single array parameter to allow for simple registration. For example,
 * an ArrayOption derived class for int arrays should implement the following
 * constructor and accessor.
 * 
 * &lt;pre&gt;
 *   MyIntArrayOption( int array[] );
 *   int[] getValue();
 * &lt;/pre&gt;
 * 
 * Although this has no affect on option processing, following this philosophy
 * for the public interfaces make it easier for the programmer to use your
 * source code.
 * 
 * &lt;hr&gt;
 * 
 * &lt;pre&gt;
 * Copyright (C) Damian Ryan Eads, 2001. All Rights Reserved.
 * 
 * ritopt is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * ritopt is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ritopt; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * &lt;/pre&gt;
 * 
 * @author Damian Ryan Eads
 */</jtok>
<jtok eid="1" type="class_name" span="55:23:55:34">ArrayOption</jtok>
<jtok eid="1" type="class_or_interface_ref" span="55:43:55:49">Option</jtok>
<jtok eid="1" type="class_or_interface_ref" span="55:61:55:76">OptionArrayable</jtok>
<jtok eid="1" type="block_comment" span="57:2:60:5">/**
	 * Builds and initializes ArrayOption class members, and invokes the Option
	 * constructor.
	 */</jtok>
<jtok eid="2" type="method_name" span="62:9:62:20">ArrayOption</jtok>
<jtok eid="1" type="block_comment" span="66:2:71:5">/**
	 * Get an ArrayOption in array form. If the option value is an array of
	 * primitive values, references to wrapper objects are returned.
	 * 
	 * @return An array of objects representing the option's value.
	 */</jtok>
<jtok eid="3" type="class_or_interface_ref" span="73:18:73:24">Object</jtok>
<jtok eid="3" type="method_name" span="73:27:73:41">getObjectArray</jtok>
<jtok eid="1" type="block_comment" span="75:2:79:5">/**
	 * Get a list of objects representing the elements of this array option.
	 * 
	 * @return A list of objects representing the option's value.
	 */</jtok>
<jtok eid="4" type="class_or_interface_ref" span="81:9:81:13">List</jtok>
<jtok eid="4" type="class_or_interface_ref" span="81:14:81:20">Object</jtok>
<jtok eid="4" type="method_name" span="81:22:81:35">getObjectList</jtok>
<jtok eid="4" type="primary_name_ref" span="82:10:82:14">java</jtok>
<jtok eid="4" type="qualified_name_ref" span="82:15:82:19">util</jtok>
<jtok eid="4" type="qualified_name_ref" span="82:20:82:26">Arrays</jtok>
<jtok eid="4" type="method_call" span="82:27:82:33">asList</jtok>
<jtok eid="4" type="method_call" span="82:34:82:48">getObjectArray</jtok>
</jdoc>