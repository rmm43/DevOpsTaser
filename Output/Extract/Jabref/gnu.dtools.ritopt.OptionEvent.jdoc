<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="gnu.dtools.ritopt.OptionEvent" jls="java5">
<jent id="0" type="file" span="0:0:195:1">Source/jabref/src/java/gnu/dtools/ritopt/OptionEvent.java</jent>
<jent id="1" pid="0" type="class" span="39:1:195:1">gnu.dtools.ritopt.OptionEvent</jent>
<jent id="2" pid="1" type="method" span="64:5:66:5">gnu.dtools.ritopt.OptionEvent.OptionEvent()</jent>
<jent id="3" pid="1" type="method" span="75:5:77:5">gnu.dtools.ritopt.OptionEvent.OptionEvent(String)</jent>
<jent id="4" pid="1" type="method" span="87:5:89:5">gnu.dtools.ritopt.OptionEvent.OptionEvent(String,String)</jent>
<jent id="5" pid="1" type="method" span="101:5:116:5">gnu.dtools.ritopt.OptionEvent.OptionEvent(Option)</jent>
<jent id="6" pid="1" type="method" span="128:5:132:5">gnu.dtools.ritopt.OptionEvent.OptionEvent(String,String,Option)</jent>
<jent id="7" pid="1" type="method" span="140:5:142:5">gnu.dtools.ritopt.OptionEvent.getCommand()</jent>
<jent id="8" pid="1" type="method" span="150:5:152:5">gnu.dtools.ritopt.OptionEvent.getValue()</jent>
<jent id="9" pid="1" type="method" span="160:5:162:5">gnu.dtools.ritopt.OptionEvent.getTarget()</jent>
<jent id="10" pid="1" type="method" span="170:5:172:5">gnu.dtools.ritopt.OptionEvent.setCommand(String)</jent>
<jent id="11" pid="1" type="method" span="181:5:183:5">gnu.dtools.ritopt.OptionEvent.setValue(String)</jent>
<jent id="12" pid="1" type="method" span="191:5:193:5">gnu.dtools.ritopt.OptionEvent.setTarget(Option)</jent>
<jtok eid="0" type="block_comment" span="2:1:7:4">/**
 * OptionEvent.java
 *
 * Version:
 *    $Id: OptionEvent.java 1318 2005-11-08 04:53:29Z mortenalver $
 */</jtok>
<jtok eid="0" type="block_comment" span="9:1:37:4">/**
 * An event indicating that an option has been invoked.
 * When an OptionListener is notified by a NotifyOption, it passes
 * an OptionEvent object to all registered listeners. This includes
 * the target NotifyOption, a command (NotifyOption passes the long
 * option by default), and the option value.&lt;p&gt;
 *
 * &lt;hr&gt;
 *
 * &lt;pre&gt;
 * Copyright (C) Damian Ryan Eads, 2001. All Rights Reserved.
 *
 * ritopt is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * ritopt is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ritopt; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * &lt;/pre&gt;
 *
 * @author Damian Eads
 */</jtok>
<jtok eid="1" type="class_name" span="39:14:39:25">OptionEvent</jtok>
<jtok eid="1" type="block_comment" span="41:5:43:8">/**
     * The command string associated with this option processing event.
     */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="45:13:45:19">String</jtok>
<jtok eid="1" type="field_name" span="45:20:45:27">command</jtok>
<jtok eid="1" type="block_comment" span="47:5:49:8">/**
     * The value of the option processing event.
     */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="51:13:51:19">String</jtok>
<jtok eid="1" type="field_name" span="51:20:51:25">value</jtok>
<jtok eid="1" type="block_comment" span="53:5:55:8">/**
     * The target Option in which the option processing event occurred.
     */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="57:13:57:19">Option</jtok>
<jtok eid="1" type="field_name" span="57:20:57:26">target</jtok>
<jtok eid="1" type="block_comment" span="59:5:62:8">/**
     * Constructs an option event with the command set to "Default", the
     * value set to the empty string, and the target set to null.
     */</jtok>
<jtok eid="2" type="method_name" span="64:12:64:23">OptionEvent</jtok>
<jtok eid="2" type="string_literal" span="65:8:65:17">"Default"</jtok>
<jtok eid="2" type="string_literal" span="65:19:65:21">""</jtok>
<jtok eid="1" type="block_comment" span="68:5:73:8">/**
     * Constructs an option event with the command set to the value passed,
     * the value set to the empty string, and the target set to null.
     *
     * @param command The value to set the command string.
     */</jtok>
<jtok eid="3" type="method_name" span="75:12:75:23">OptionEvent</jtok>
<jtok eid="3" type="parameter_type" span="75:25:75:31">String</jtok>
<jtok eid="3" type="parameter_name" span="75:32:75:39">command</jtok>
<jtok eid="3" type="primary_name_ref" span="76:8:76:15">command</jtok>
<jtok eid="3" type="string_literal" span="76:17:76:19">""</jtok>
<jtok eid="1" type="block_comment" span="79:5:85:8">/**
     * Constructs an option event with the command and value set to the
     * values passed, and the target set to null.
     *
     * @param command The value to set the command string.
     * @param value   The value to set the option value.
     */</jtok>
<jtok eid="4" type="method_name" span="87:12:87:23">OptionEvent</jtok>
<jtok eid="4" type="parameter_type" span="87:25:87:31">String</jtok>
<jtok eid="4" type="parameter_name" span="87:32:87:39">command</jtok>
<jtok eid="4" type="parameter_type" span="87:41:87:47">String</jtok>
<jtok eid="4" type="parameter_name" span="87:48:87:53">value</jtok>
<jtok eid="4" type="primary_name_ref" span="88:8:88:15">command</jtok>
<jtok eid="4" type="primary_name_ref" span="88:17:88:22">value</jtok>
<jtok eid="1" type="block_comment" span="91:5:99:8">/**
     * Constructs an option event with the command set to the long or short
     * option (whichever exists), the value set to the current value of
     * the option, and the target option set to the option passed. If
     * neither the short or long option exist, a value of "Default" is
     * assigned.
     *
     * @param option The option to initialize this OptionEvent.
     */</jtok>
<jtok eid="5" type="method_name" span="101:12:101:23">OptionEvent</jtok>
<jtok eid="5" type="parameter_type" span="101:25:101:31">Option</jtok>
<jtok eid="5" type="parameter_name" span="101:32:101:38">option</jtok>
<jtok eid="5" type="qualified_name_ref" span="102:7:102:13">target</jtok>
<jtok eid="5" type="primary_name_ref" span="102:16:102:22">option</jtok>
<jtok eid="5" type="qualified_name_ref" span="103:7:103:12">value</jtok>
<jtok eid="5" type="primary_name_ref" span="103:15:103:21">option</jtok>
<jtok eid="5" type="method_call" span="103:22:103:36">getStringValue</jtok>
<jtok eid="5" type="class_or_interface_ref" span="104:2:104:8">String</jtok>
<jtok eid="5" type="local_variable_name" span="104:9:104:19">longOption</jtok>
<jtok eid="5" type="primary_name_ref" span="104:22:104:28">option</jtok>
<jtok eid="5" type="method_call" span="104:29:104:42">getLongOption</jtok>
<jtok eid="5" type="local_variable_name" span="105:7:105:18">shortOption</jtok>
<jtok eid="5" type="primary_name_ref" span="105:21:105:27">option</jtok>
<jtok eid="5" type="method_call" span="105:28:105:42">getShortOption</jtok>
<jtok eid="5" type="primary_name_ref" span="107:14:107:24">longOption</jtok>
<jtok eid="5" type="primary_name_ref" span="108:6:108:13">command</jtok>
<jtok eid="5" type="primary_name_ref" span="108:16:108:26">longOption</jtok>
<jtok eid="5" type="primary_name_ref" span="110:12:110:23">shortOption</jtok>
<jtok eid="5" type="primary_name_ref" span="111:6:111:13">command</jtok>
<jtok eid="5" type="constructor_call" span="111:20:111:29">Character</jtok>
<jtok eid="5" type="primary_name_ref" span="111:31:111:42">shortOption</jtok>
<jtok eid="5" type="method_call" span="111:45:111:53">toString</jtok>
<jtok eid="5" type="primary_name_ref" span="114:6:114:13">command</jtok>
<jtok eid="5" type="string_literal" span="114:16:114:25">"Default"</jtok>
<jtok eid="1" type="block_comment" span="118:5:126:8">/**
     * Constructs an option event with the command, value, and target
     * set to the values passed.
     *
     * @param command The value to set the command string.
     * @param value   The value to set the option value.
     * @param target  The target option in which the option processing
     *                event occurred.
     */</jtok>
<jtok eid="6" type="method_name" span="128:12:128:23">OptionEvent</jtok>
<jtok eid="6" type="parameter_type" span="128:25:128:31">String</jtok>
<jtok eid="6" type="parameter_name" span="128:32:128:39">command</jtok>
<jtok eid="6" type="parameter_type" span="128:41:128:47">String</jtok>
<jtok eid="6" type="parameter_name" span="128:48:128:53">value</jtok>
<jtok eid="6" type="parameter_type" span="128:55:128:61">Option</jtok>
<jtok eid="6" type="parameter_name" span="128:62:128:68">target</jtok>
<jtok eid="6" type="qualified_name_ref" span="129:7:129:14">command</jtok>
<jtok eid="6" type="primary_name_ref" span="129:17:129:24">command</jtok>
<jtok eid="6" type="qualified_name_ref" span="130:7:130:12">value</jtok>
<jtok eid="6" type="primary_name_ref" span="130:15:130:20">value</jtok>
<jtok eid="6" type="qualified_name_ref" span="131:7:131:13">target</jtok>
<jtok eid="6" type="primary_name_ref" span="131:16:131:22">target</jtok>
<jtok eid="1" type="block_comment" span="134:5:138:8">/**
     * Returns the command string associated with the option.
     *
     * @return The command string associated with the option.
     */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="140:12:140:18">String</jtok>
<jtok eid="7" type="method_name" span="140:19:140:29">getCommand</jtok>
<jtok eid="7" type="primary_name_ref" span="141:9:141:16">command</jtok>
<jtok eid="1" type="block_comment" span="144:5:148:8">/**
     * Returns the value associated with the target option.
     *
     * @return The value associated with the target option.
     */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="150:12:150:18">String</jtok>
<jtok eid="8" type="method_name" span="150:19:150:27">getValue</jtok>
<jtok eid="8" type="primary_name_ref" span="151:9:151:14">value</jtok>
<jtok eid="1" type="block_comment" span="154:5:158:8">/**
     * Returns the target option of the option processing event.
     *
     * @return The target option.
     */</jtok>
<jtok eid="9" type="class_or_interface_ref" span="160:12:160:18">Option</jtok>
<jtok eid="9" type="method_name" span="160:19:160:28">getTarget</jtok>
<jtok eid="9" type="primary_name_ref" span="161:9:161:15">target</jtok>
<jtok eid="1" type="block_comment" span="164:5:168:8">/**
     * Sets the command string to the value passed.
     *
     * @param command The value to set the command string.
     */</jtok>
<jtok eid="10" type="method_name" span="170:17:170:27">setCommand</jtok>
<jtok eid="10" type="parameter_type" span="170:29:170:35">String</jtok>
<jtok eid="10" type="parameter_name" span="170:36:170:43">command</jtok>
<jtok eid="10" type="qualified_name_ref" span="171:7:171:14">command</jtok>
<jtok eid="10" type="primary_name_ref" span="171:17:171:24">command</jtok>
<jtok eid="1" type="block_comment" span="174:5:179:8">/**
     * Sets the value of this option event. This value generally should be
     * equal to the value of the target option.
     *
     * @param value   The value of the option event.
     */</jtok>
<jtok eid="11" type="method_name" span="181:17:181:25">setValue</jtok>
<jtok eid="11" type="parameter_type" span="181:27:181:33">String</jtok>
<jtok eid="11" type="parameter_name" span="181:34:181:39">value</jtok>
<jtok eid="11" type="qualified_name_ref" span="182:7:182:12">value</jtok>
<jtok eid="11" type="primary_name_ref" span="182:15:182:20">value</jtok>
<jtok eid="1" type="block_comment" span="185:5:189:8">/**
     * Sets the target option of the option processing event.
     *
     * @param target   The target option.
     */</jtok>
<jtok eid="12" type="method_name" span="191:17:191:26">setTarget</jtok>
<jtok eid="12" type="parameter_type" span="191:28:191:34">Option</jtok>
<jtok eid="12" type="parameter_name" span="191:35:191:41">target</jtok>
<jtok eid="12" type="qualified_name_ref" span="192:7:192:13">target</jtok>
<jtok eid="12" type="primary_name_ref" span="192:16:192:22">target</jtok>
</jdoc>