<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="gnu.dtools.ritopt.Utility" jls="java5">
<jent id="0" type="file" span="0:0:339:1">Source/jabref/src/java/gnu/dtools/ritopt/Utility.java</jent>
<jent id="1" pid="0" type="class" span="36:1:339:1">gnu.dtools.ritopt.Utility</jent>
<jent id="2" pid="1" type="method" span="48:5:54:5">gnu.dtools.ritopt.Utility.contains(String,String)</jent>
<jent id="3" pid="1" type="method" span="66:5:72:5">gnu.dtools.ritopt.Utility.count(String,char)</jent>
<jent id="4" pid="1" type="method" span="85:5:87:5">gnu.dtools.ritopt.Utility.contains(char,String)</jent>
<jent id="5" pid="1" type="method" span="98:5:105:5">gnu.dtools.ritopt.Utility.isAlpha(String)</jent>
<jent id="6" pid="1" type="method" span="116:5:122:5">gnu.dtools.ritopt.Utility.isAlphaLower(String)</jent>
<jent id="7" pid="1" type="method" span="133:5:139:5">gnu.dtools.ritopt.Utility.isAlphaUpper(String)</jent>
<jent id="8" pid="1" type="method" span="149:5:151:5">gnu.dtools.ritopt.Utility.isAlpha(char)</jent>
<jent id="9" pid="1" type="method" span="162:5:164:5">gnu.dtools.ritopt.Utility.isAlphaLower(char)</jent>
<jent id="10" pid="1" type="method" span="175:5:177:5">gnu.dtools.ritopt.Utility.isAlphaUpper(char)</jent>
<jent id="11" pid="1" type="method" span="188:5:190:5">gnu.dtools.ritopt.Utility.isAlphaNumeric(char)</jent>
<jent id="12" pid="1" type="method" span="200:5:202:5">gnu.dtools.ritopt.Utility.isNumeric(char)</jent>
<jent id="13" pid="1" type="method" span="217:5:220:5">gnu.dtools.ritopt.Utility.expandString(String,int)</jent>
<jent id="14" pid="1" type="method" span="231:5:233:5">gnu.dtools.ritopt.Utility.getSpaces(int)</jent>
<jent id="15" pid="1" type="method" span="242:5:248:5">gnu.dtools.ritopt.Utility.repeat(char,int)</jent>
<jent id="16" pid="1" type="method" span="258:5:264:5">gnu.dtools.ritopt.Utility.ltrim(String)</jent>
<jent id="17" pid="1" type="method" span="274:5:281:5">gnu.dtools.ritopt.Utility.rtrim(String)</jent>
<jent id="18" pid="1" type="method" span="291:5:293:5">gnu.dtools.ritopt.Utility.trim(String)</jent>
<jent id="19" pid="1" type="method" span="308:5:320:5">gnu.dtools.ritopt.Utility.stripComments(String,char,char)</jent>
<jent id="20" pid="1" type="method" span="332:5:338:5">gnu.dtools.ritopt.Utility.repeat(String,int)</jent>
<jtok eid="0" type="block_comment" span="3:1:8:4">/**
 * Utility.java
 *
 * Version:
 *    $Id: Utility.java 1318 2005-11-08 04:53:29Z mortenalver $
 */</jtok>
<jtok eid="0" type="block_comment" span="10:1:34:4">/**
 * This class provides static utility members for some basic string operations.
 *
 * &lt;hr&gt;
 *
 * &lt;pre&gt;
 * Copyright (C) Damian Ryan Eads, 2001. All Rights Reserved.
 *
 * ritopt is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * ritopt is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ritopt; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * &lt;/pre&gt;
 *
 * @author Damian Eads
 */</jtok>
<jtok eid="1" type="class_name" span="36:14:36:21">Utility</jtok>
<jtok eid="1" type="block_comment" span="38:5:46:8">/**
     * Returns true if any of the characters in the list appear in the
     * check string passed.
     *
     * @param check The string to check.
     * @param list  The list of valid characters.
     *
     * @return true if the criteria of this method is satisfied.
     */</jtok>
<jtok eid="2" type="method_name" span="48:27:48:35">contains</jtok>
<jtok eid="2" type="parameter_type" span="48:37:48:43">String</jtok>
<jtok eid="2" type="parameter_name" span="48:44:48:49">check</jtok>
<jtok eid="2" type="parameter_type" span="48:51:48:57">String</jtok>
<jtok eid="2" type="parameter_name" span="48:58:48:62">list</jtok>
<jtok eid="2" type="local_variable_name" span="49:12:49:13">n</jtok>
<jtok eid="2" type="primary_name_ref" span="49:19:49:20">n</jtok>
<jtok eid="2" type="primary_name_ref" span="49:23:49:27">list</jtok>
<jtok eid="2" type="method_call" span="49:28:49:34">length</jtok>
<jtok eid="2" type="primary_name_ref" span="49:38:49:39">n</jtok>
<jtok eid="2" type="primary_name_ref" span="50:11:50:16">check</jtok>
<jtok eid="2" type="method_call" span="50:17:50:24">indexOf</jtok>
<jtok eid="2" type="primary_name_ref" span="50:26:50:30">list</jtok>
<jtok eid="2" type="method_call" span="50:31:50:40">substring</jtok>
<jtok eid="2" type="primary_name_ref" span="50:42:50:43">n</jtok>
<jtok eid="2" type="primary_name_ref" span="50:45:50:46">n</jtok>
<jtok eid="1" type="block_comment" span="56:5:64:8">/**
     * Returns the number of occurances the character specification
     * appears in the check string passed.
     *
     * @param check The string to check.
     * @param spec  The character specification.
     *
     * @return the number of occurances of the character specification.
     */</jtok>
<jtok eid="3" type="method_name" span="66:23:66:28">count</jtok>
<jtok eid="3" type="parameter_type" span="66:30:66:36">String</jtok>
<jtok eid="3" type="parameter_name" span="66:37:66:42">check</jtok>
<jtok eid="3" type="parameter_name" span="66:49:66:53">spec</jtok>
<jtok eid="3" type="local_variable_name" span="67:13:67:16">sum</jtok>
<jtok eid="3" type="local_variable_name" span="68:12:68:13">n</jtok>
<jtok eid="3" type="primary_name_ref" span="68:19:68:20">n</jtok>
<jtok eid="3" type="primary_name_ref" span="68:23:68:28">check</jtok>
<jtok eid="3" type="method_call" span="68:29:68:35">length</jtok>
<jtok eid="3" type="primary_name_ref" span="68:39:68:40">n</jtok>
<jtok eid="3" type="primary_name_ref" span="69:11:69:16">check</jtok>
<jtok eid="3" type="method_call" span="69:17:69:23">charAt</jtok>
<jtok eid="3" type="primary_name_ref" span="69:32:69:36">spec</jtok>
<jtok eid="3" type="primary_name_ref" span="69:39:69:42">sum</jtok>
<jtok eid="3" type="primary_name_ref" span="71:9:71:12">sum</jtok>
<jtok eid="1" type="block_comment" span="74:5:83:8">/**
     * Returns true if any of the characters in the list are equal to
     * the check character.
     *
     * @param check The character to check.
     * @param list  The list of valid characters.
     *
     * @return true if any of the characters in the list equal the check
     *              character. 
     */</jtok>
<jtok eid="4" type="method_name" span="85:27:85:35">contains</jtok>
<jtok eid="4" type="parameter_name" span="85:42:85:47">check</jtok>
<jtok eid="4" type="parameter_type" span="85:49:85:55">String</jtok>
<jtok eid="4" type="parameter_name" span="85:56:85:60">list</jtok>
<jtok eid="4" type="method_call" span="86:9:86:17">contains</jtok>
<jtok eid="4" type="string_literal" span="86:19:86:21">""</jtok>
<jtok eid="4" type="primary_name_ref" span="86:24:86:29">check</jtok>
<jtok eid="4" type="primary_name_ref" span="86:31:86:35">list</jtok>
<jtok eid="1" type="block_comment" span="89:5:96:8">/**
     * Returns true if the string only contains letters in the phonetic
     * alphabet.
     *
     * @param check The string to check.
     *
     * @return If this method's criteria is matched.
     */</jtok>
<jtok eid="5" type="method_name" span="98:27:98:34">isAlpha</jtok>
<jtok eid="5" type="parameter_type" span="98:36:98:42">String</jtok>
<jtok eid="5" type="parameter_name" span="98:43:98:48">check</jtok>
<jtok eid="5" type="local_variable_name" span="99:10:99:16">retval</jtok>
<jtok eid="5" type="local_variable_name" span="100:12:100:13">n</jtok>
<jtok eid="5" type="primary_name_ref" span="100:19:100:20">n</jtok>
<jtok eid="5" type="primary_name_ref" span="100:23:100:28">check</jtok>
<jtok eid="5" type="method_call" span="100:29:100:35">length</jtok>
<jtok eid="5" type="primary_name_ref" span="100:39:100:40">n</jtok>
<jtok eid="5" type="primary_name_ref" span="101:6:101:12">retval</jtok>
<jtok eid="5" type="method_call" span="101:15:101:27">isAlphaLower</jtok>
<jtok eid="5" type="primary_name_ref" span="101:29:101:34">check</jtok>
<jtok eid="5" type="method_call" span="101:35:101:41">charAt</jtok>
<jtok eid="5" type="primary_name_ref" span="101:43:101:44">n</jtok>
<jtok eid="5" type="method_call" span="102:3:102:15">isAlphaUpper</jtok>
<jtok eid="5" type="primary_name_ref" span="102:17:102:22">check</jtok>
<jtok eid="5" type="method_call" span="102:23:102:29">charAt</jtok>
<jtok eid="5" type="primary_name_ref" span="102:31:102:32">n</jtok>
<jtok eid="5" type="primary_name_ref" span="104:9:104:15">retval</jtok>
<jtok eid="1" type="block_comment" span="107:5:114:8">/**
     * Returns true if the string only contains lower case letters in the
     * phonetic alphabet.
     *
     * @param check The string to check.
     *
     * @return If this method's criteria is matched.
     */</jtok>
<jtok eid="6" type="method_name" span="116:27:116:39">isAlphaLower</jtok>
<jtok eid="6" type="parameter_type" span="116:41:116:47">String</jtok>
<jtok eid="6" type="parameter_name" span="116:48:116:53">check</jtok>
<jtok eid="6" type="local_variable_name" span="117:10:117:16">retval</jtok>
<jtok eid="6" type="local_variable_name" span="118:12:118:13">n</jtok>
<jtok eid="6" type="primary_name_ref" span="118:19:118:20">n</jtok>
<jtok eid="6" type="primary_name_ref" span="118:23:118:28">check</jtok>
<jtok eid="6" type="method_call" span="118:29:118:35">length</jtok>
<jtok eid="6" type="primary_name_ref" span="118:39:118:40">n</jtok>
<jtok eid="6" type="primary_name_ref" span="119:6:119:12">retval</jtok>
<jtok eid="6" type="method_call" span="119:15:119:27">isAlphaLower</jtok>
<jtok eid="6" type="primary_name_ref" span="119:29:119:34">check</jtok>
<jtok eid="6" type="method_call" span="119:35:119:41">charAt</jtok>
<jtok eid="6" type="primary_name_ref" span="119:43:119:44">n</jtok>
<jtok eid="6" type="primary_name_ref" span="121:9:121:15">retval</jtok>
<jtok eid="1" type="block_comment" span="124:5:131:8">/**
     * Returns true if the string only contains upper case letters in the
     * phonetic alphabet.
     *
     * @param check The string to check.
     *
     * @return If this method's criteria is matched.
     */</jtok>
<jtok eid="7" type="method_name" span="133:27:133:39">isAlphaUpper</jtok>
<jtok eid="7" type="parameter_type" span="133:41:133:47">String</jtok>
<jtok eid="7" type="parameter_name" span="133:48:133:53">check</jtok>
<jtok eid="7" type="local_variable_name" span="134:10:134:16">retval</jtok>
<jtok eid="7" type="local_variable_name" span="135:12:135:13">n</jtok>
<jtok eid="7" type="primary_name_ref" span="135:19:135:20">n</jtok>
<jtok eid="7" type="primary_name_ref" span="135:23:135:28">check</jtok>
<jtok eid="7" type="method_call" span="135:29:135:35">length</jtok>
<jtok eid="7" type="primary_name_ref" span="135:39:135:40">n</jtok>
<jtok eid="7" type="primary_name_ref" span="136:6:136:12">retval</jtok>
<jtok eid="7" type="method_call" span="136:15:136:27">isAlphaUpper</jtok>
<jtok eid="7" type="primary_name_ref" span="136:29:136:34">check</jtok>
<jtok eid="7" type="method_call" span="136:35:136:41">charAt</jtok>
<jtok eid="7" type="primary_name_ref" span="136:43:136:44">n</jtok>
<jtok eid="7" type="primary_name_ref" span="138:9:138:15">retval</jtok>
<jtok eid="1" type="block_comment" span="141:5:147:8">/**
     * Returns true if the character is a letter in the phonetic alphabetic.
     *
     * @param check The character to check.
     *
     * @return true if this method's criteria is matched.
     */</jtok>
<jtok eid="8" type="method_name" span="149:27:149:34">isAlpha</jtok>
<jtok eid="8" type="parameter_name" span="149:41:149:46">check</jtok>
<jtok eid="8" type="method_call" span="150:9:150:21">isAlphaLower</jtok>
<jtok eid="8" type="primary_name_ref" span="150:23:150:28">check</jtok>
<jtok eid="8" type="method_call" span="150:34:150:46">isAlphaUpper</jtok>
<jtok eid="8" type="primary_name_ref" span="150:48:150:53">check</jtok>
<jtok eid="1" type="block_comment" span="153:5:160:8">/**
     * Returns true if the character is a lower case letter in the
     * phonetic alphabetic.
     *
     * @param check The character to check.
     *
     * @return true if this method's criteria is matched.
     */</jtok>
<jtok eid="9" type="method_name" span="162:27:162:39">isAlphaLower</jtok>
<jtok eid="9" type="parameter_name" span="162:46:162:51">check</jtok>
<jtok eid="9" type="primary_name_ref" span="163:9:163:14">check</jtok>
<jtok eid="9" type="primary_name_ref" span="163:25:163:30">check</jtok>
<jtok eid="1" type="block_comment" span="166:5:173:8">/**
     * Returns true if the character is a upper case letter in the
     * phonetic alphabetic.
     *
     * @param check The character to check.
     *
     * @return true if this method's criteria is matched.
     */</jtok>
<jtok eid="10" type="method_name" span="175:27:175:39">isAlphaUpper</jtok>
<jtok eid="10" type="parameter_name" span="175:46:175:51">check</jtok>
<jtok eid="10" type="primary_name_ref" span="176:9:176:14">check</jtok>
<jtok eid="10" type="primary_name_ref" span="176:25:176:30">check</jtok>
<jtok eid="1" type="block_comment" span="179:5:186:8">/**
     * Returns true if the character is a letter in the phonetic alphabetic
     * or is a decimal number.
     *
     * @param check The character to check.
     *
     * @return true if this method's criteria is matched.
     */</jtok>
<jtok eid="11" type="method_name" span="188:27:188:41">isAlphaNumeric</jtok>
<jtok eid="11" type="parameter_name" span="188:48:188:53">check</jtok>
<jtok eid="11" type="method_call" span="189:9:189:16">isAlpha</jtok>
<jtok eid="11" type="primary_name_ref" span="189:18:189:23">check</jtok>
<jtok eid="11" type="method_call" span="189:29:189:38">isNumeric</jtok>
<jtok eid="11" type="primary_name_ref" span="189:40:189:45">check</jtok>
<jtok eid="1" type="block_comment" span="192:5:198:8">/**
     * Returns true if the character is a decimal number.
     *
     * @param check The character to check.
     *
     * @return true if this method's criteria is matched.
     */</jtok>
<jtok eid="12" type="method_name" span="200:27:200:36">isNumeric</jtok>
<jtok eid="12" type="parameter_name" span="200:43:200:48">check</jtok>
<jtok eid="12" type="primary_name_ref" span="201:9:201:14">check</jtok>
<jtok eid="12" type="primary_name_ref" span="201:25:201:30">check</jtok>
<jtok eid="1" type="block_comment" span="204:5:215:8">/**
     * Returns a string with no more and no less than &lt;em&gt;n&lt;/em&gt; characters
     * where n is the length. If the string passed is less than this length,
     * an appropriate number of spaces is concatenated. If the string is
     * longer than the length passed, a substring of the length passed
     * is returned.
     *
     * @param s       The string to expand.
     * @param length  The required length.
     *
     * @return The expanded string.
     */</jtok>
<jtok eid="13" type="class_or_interface_ref" span="217:19:217:25">String</jtok>
<jtok eid="13" type="method_name" span="217:26:217:38">expandString</jtok>
<jtok eid="13" type="parameter_type" span="217:40:217:46">String</jtok>
<jtok eid="13" type="parameter_name" span="217:47:217:48">s</jtok>
<jtok eid="13" type="parameter_name" span="217:54:217:60">length</jtok>
<jtok eid="13" type="primary_name_ref" span="218:7:218:8">s</jtok>
<jtok eid="13" type="method_call" span="218:9:218:15">length</jtok>
<jtok eid="13" type="primary_name_ref" span="218:20:218:26">length</jtok>
<jtok eid="13" type="primary_name_ref" span="218:29:218:30">s</jtok>
<jtok eid="13" type="primary_name_ref" span="218:33:218:34">s</jtok>
<jtok eid="13" type="method_call" span="218:35:218:44">substring</jtok>
<jtok eid="13" type="primary_name_ref" span="218:49:218:55">length</jtok>
<jtok eid="13" type="primary_name_ref" span="219:9:219:10">s</jtok>
<jtok eid="13" type="method_call" span="219:13:219:22">getSpaces</jtok>
<jtok eid="13" type="primary_name_ref" span="219:24:219:30">length</jtok>
<jtok eid="13" type="primary_name_ref" span="219:33:219:34">s</jtok>
<jtok eid="13" type="method_call" span="219:35:219:41">length</jtok>
<jtok eid="1" type="block_comment" span="222:5:229:8">/**
     * Returns a string containing the number of spaces passed as an
     * argument.
     *
     * @param count The number of spaces in the string returned.
     *
     * @return a string containing the number of spaces passed.
     */</jtok>
<jtok eid="14" type="class_or_interface_ref" span="231:19:231:25">String</jtok>
<jtok eid="14" type="method_name" span="231:26:231:35">getSpaces</jtok>
<jtok eid="14" type="parameter_name" span="231:41:231:46">count</jtok>
<jtok eid="14" type="method_call" span="232:9:232:15">repeat</jtok>
<jtok eid="14" type="primary_name_ref" span="232:22:232:27">count</jtok>
<jtok eid="1" type="block_comment" span="235:5:240:8">/**
     * Returns a string with a character repeated based on a count passed.
     *
     * @param c     The character to repeat.
     * @param count The number of times to repeat the character.
     */</jtok>
<jtok eid="15" type="class_or_interface_ref" span="242:19:242:25">String</jtok>
<jtok eid="15" type="method_name" span="242:26:242:32">repeat</jtok>
<jtok eid="15" type="parameter_name" span="242:39:242:40">c</jtok>
<jtok eid="15" type="parameter_name" span="242:46:242:51">count</jtok>
<jtok eid="15" type="class_or_interface_ref" span="243:2:243:14">StringBuffer</jtok>
<jtok eid="15" type="local_variable_name" span="243:15:243:21">retval</jtok>
<jtok eid="15" type="constructor_call" span="243:28:243:40">StringBuffer</jtok>
<jtok eid="15" type="primary_name_ref" span="243:42:243:47">count</jtok>
<jtok eid="15" type="local_variable_name" span="244:12:244:13">n</jtok>
<jtok eid="15" type="primary_name_ref" span="244:19:244:20">n</jtok>
<jtok eid="15" type="primary_name_ref" span="244:23:244:28">count</jtok>
<jtok eid="15" type="primary_name_ref" span="244:30:244:31">n</jtok>
<jtok eid="15" type="primary_name_ref" span="245:6:245:12">retval</jtok>
<jtok eid="15" type="method_call" span="245:13:245:19">append</jtok>
<jtok eid="15" type="primary_name_ref" span="245:21:245:22">c</jtok>
<jtok eid="15" type="primary_name_ref" span="247:9:247:15">retval</jtok>
<jtok eid="15" type="method_call" span="247:16:247:24">toString</jtok>
<jtok eid="1" type="block_comment" span="250:5:256:8">/**
     * Trim spaces off the left side of this string.
     *
     * @param s The string to trim.
     *
     * @return  The trimmed string.
     */</jtok>
<jtok eid="16" type="class_or_interface_ref" span="258:19:258:25">String</jtok>
<jtok eid="16" type="method_name" span="258:26:258:31">ltrim</jtok>
<jtok eid="16" type="parameter_type" span="258:33:258:39">String</jtok>
<jtok eid="16" type="parameter_name" span="258:40:258:41">s</jtok>
<jtok eid="16" type="class_or_interface_ref" span="259:2:259:14">StringBuffer</jtok>
<jtok eid="16" type="local_variable_name" span="259:15:259:18">buf</jtok>
<jtok eid="16" type="constructor_call" span="259:25:259:37">StringBuffer</jtok>
<jtok eid="16" type="primary_name_ref" span="259:39:259:40">s</jtok>
<jtok eid="16" type="local_variable_name" span="260:12:260:13">n</jtok>
<jtok eid="16" type="primary_name_ref" span="260:19:260:20">n</jtok>
<jtok eid="16" type="primary_name_ref" span="260:23:260:26">buf</jtok>
<jtok eid="16" type="method_call" span="260:27:260:33">length</jtok>
<jtok eid="16" type="primary_name_ref" span="260:39:260:42">buf</jtok>
<jtok eid="16" type="method_call" span="260:43:260:49">charAt</jtok>
<jtok eid="16" type="primary_name_ref" span="260:51:260:52">n</jtok>
<jtok eid="16" type="primary_name_ref" span="261:6:261:9">buf</jtok>
<jtok eid="16" type="method_call" span="261:10:261:16">delete</jtok>
<jtok eid="16" type="primary_name_ref" span="263:9:263:12">buf</jtok>
<jtok eid="16" type="method_call" span="263:13:263:21">toString</jtok>
<jtok eid="1" type="block_comment" span="266:5:272:8">/**
     * Trim spaces off the right side of this string.
     *
     * @param s The string to trim.
     *
     * @return  The trimmed string.
     */</jtok>
<jtok eid="17" type="class_or_interface_ref" span="274:19:274:25">String</jtok>
<jtok eid="17" type="method_name" span="274:26:274:31">rtrim</jtok>
<jtok eid="17" type="parameter_type" span="274:33:274:39">String</jtok>
<jtok eid="17" type="parameter_name" span="274:40:274:41">s</jtok>
<jtok eid="17" type="class_or_interface_ref" span="275:2:275:14">StringBuffer</jtok>
<jtok eid="17" type="local_variable_name" span="275:15:275:18">buf</jtok>
<jtok eid="17" type="constructor_call" span="275:25:275:37">StringBuffer</jtok>
<jtok eid="17" type="primary_name_ref" span="275:39:275:40">s</jtok>
<jtok eid="17" type="local_variable_name" span="276:12:276:13">k</jtok>
<jtok eid="17" type="primary_name_ref" span="276:16:276:19">buf</jtok>
<jtok eid="17" type="method_call" span="276:20:276:26">length</jtok>
<jtok eid="17" type="primary_name_ref" span="276:34:276:35">k</jtok>
<jtok eid="17" type="primary_name_ref" span="276:44:276:47">buf</jtok>
<jtok eid="17" type="method_call" span="276:48:276:54">charAt</jtok>
<jtok eid="17" type="primary_name_ref" span="276:56:276:57">k</jtok>
<jtok eid="17" type="primary_name_ref" span="277:8:277:9">k</jtok>
<jtok eid="17" type="primary_name_ref" span="277:12:277:15">buf</jtok>
<jtok eid="17" type="method_call" span="277:16:277:22">length</jtok>
<jtok eid="17" type="primary_name_ref" span="278:6:278:9">buf</jtok>
<jtok eid="17" type="method_call" span="278:10:278:16">delete</jtok>
<jtok eid="17" type="primary_name_ref" span="278:18:278:21">buf</jtok>
<jtok eid="17" type="method_call" span="278:22:278:28">length</jtok>
<jtok eid="17" type="primary_name_ref" span="278:36:278:39">buf</jtok>
<jtok eid="17" type="method_call" span="278:40:278:46">length</jtok>
<jtok eid="17" type="primary_name_ref" span="280:9:280:12">buf</jtok>
<jtok eid="17" type="method_call" span="280:13:280:21">toString</jtok>
<jtok eid="1" type="block_comment" span="283:5:289:8">/**
     * Trim spaces off both sides of this string.
     *
     * @param s The string to trim.
     *
     * @return  The trimmed string.
     */</jtok>
<jtok eid="18" type="class_or_interface_ref" span="291:19:291:25">String</jtok>
<jtok eid="18" type="method_name" span="291:26:291:30">trim</jtok>
<jtok eid="18" type="parameter_type" span="291:32:291:38">String</jtok>
<jtok eid="18" type="parameter_name" span="291:39:291:40">s</jtok>
<jtok eid="18" type="method_call" span="292:9:292:14">ltrim</jtok>
<jtok eid="18" type="method_call" span="292:16:292:21">rtrim</jtok>
<jtok eid="18" type="primary_name_ref" span="292:23:292:24">s</jtok>
<jtok eid="1" type="block_comment" span="295:5:306:8">/**
     * Takes a line (presumably from a file) and removes a comment if
     * one exists. If the comment character is enclosed within a literal
     * string defined by the delimiter passed, then the character is
     * ignored.
     *
     * @param s         The string to strip comments off.
     * @param delim     The string delimiter.
     * @param comment   The comment character.
     *
     * @return A string stripped of comments.
     */</jtok>
<jtok eid="19" type="class_or_interface_ref" span="308:19:308:25">String</jtok>
<jtok eid="19" type="method_name" span="308:26:308:39">stripComments</jtok>
<jtok eid="19" type="parameter_type" span="308:41:308:47">String</jtok>
<jtok eid="19" type="parameter_name" span="308:48:308:49">s</jtok>
<jtok eid="19" type="parameter_name" span="308:56:308:61">delim</jtok>
<jtok eid="19" type="parameter_name" span="308:68:308:75">comment</jtok>
<jtok eid="19" type="class_or_interface_ref" span="309:2:309:8">String</jtok>
<jtok eid="19" type="local_variable_name" span="309:9:309:15">retval</jtok>
<jtok eid="19" type="primary_name_ref" span="309:18:309:19">s</jtok>
<jtok eid="19" type="local_variable_name" span="310:10:310:11">q</jtok>
<jtok eid="19" type="local_variable_name" span="311:12:311:13">n</jtok>
<jtok eid="19" type="primary_name_ref" span="311:19:311:20">n</jtok>
<jtok eid="19" type="primary_name_ref" span="311:23:311:24">s</jtok>
<jtok eid="19" type="method_call" span="311:25:311:31">length</jtok>
<jtok eid="19" type="primary_name_ref" span="311:35:311:36">n</jtok>
<jtok eid="19" type="primary_name_ref" span="312:11:312:12">s</jtok>
<jtok eid="19" type="method_call" span="312:13:312:19">charAt</jtok>
<jtok eid="19" type="primary_name_ref" span="312:21:312:22">n</jtok>
<jtok eid="19" type="primary_name_ref" span="312:28:312:33">delim</jtok>
<jtok eid="19" type="primary_name_ref" span="313:3:313:4">q</jtok>
<jtok eid="19" type="primary_name_ref" span="313:8:313:9">q</jtok>
<jtok eid="19" type="primary_name_ref" span="315:17:315:18">q</jtok>
<jtok eid="19" type="primary_name_ref" span="315:22:315:23">s</jtok>
<jtok eid="19" type="method_call" span="315:24:315:30">charAt</jtok>
<jtok eid="19" type="primary_name_ref" span="315:32:315:33">n</jtok>
<jtok eid="19" type="primary_name_ref" span="315:39:315:46">comment</jtok>
<jtok eid="19" type="primary_name_ref" span="316:3:316:9">retval</jtok>
<jtok eid="19" type="primary_name_ref" span="316:12:316:13">s</jtok>
<jtok eid="19" type="method_call" span="316:14:316:23">substring</jtok>
<jtok eid="19" type="primary_name_ref" span="316:28:316:29">n</jtok>
<jtok eid="19" type="primary_name_ref" span="319:9:319:15">retval</jtok>
<jtok eid="1" type="block_comment" span="322:5:330:8">/**
     * Returns a string with the passed string repeated based on the 
     * integer count passed.
     *
     * @param s     The string to repeat.
     * @param count The number of times to repeat the string.
     *
     * @return      The repeated string.
     */</jtok>
<jtok eid="20" type="class_or_interface_ref" span="332:19:332:25">String</jtok>
<jtok eid="20" type="method_name" span="332:26:332:32">repeat</jtok>
<jtok eid="20" type="parameter_type" span="332:34:332:40">String</jtok>
<jtok eid="20" type="parameter_name" span="332:41:332:42">s</jtok>
<jtok eid="20" type="parameter_name" span="332:48:332:53">count</jtok>
<jtok eid="20" type="class_or_interface_ref" span="333:2:333:14">StringBuffer</jtok>
<jtok eid="20" type="local_variable_name" span="333:15:333:21">retval</jtok>
<jtok eid="20" type="constructor_call" span="333:28:333:40">StringBuffer</jtok>
<jtok eid="20" type="primary_name_ref" span="333:42:333:43">s</jtok>
<jtok eid="20" type="method_call" span="333:44:333:50">length</jtok>
<jtok eid="20" type="primary_name_ref" span="333:55:333:60">count</jtok>
<jtok eid="20" type="local_variable_name" span="334:12:334:13">n</jtok>
<jtok eid="20" type="primary_name_ref" span="334:19:334:20">n</jtok>
<jtok eid="20" type="primary_name_ref" span="334:23:334:28">count</jtok>
<jtok eid="20" type="primary_name_ref" span="334:30:334:31">n</jtok>
<jtok eid="20" type="primary_name_ref" span="335:6:335:12">retval</jtok>
<jtok eid="20" type="method_call" span="335:13:335:19">append</jtok>
<jtok eid="20" type="primary_name_ref" span="335:21:335:22">s</jtok>
<jtok eid="20" type="primary_name_ref" span="337:9:337:15">retval</jtok>
<jtok eid="20" type="method_call" span="337:16:337:24">toString</jtok>
</jdoc>