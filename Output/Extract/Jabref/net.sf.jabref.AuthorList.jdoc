<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.AuthorList" jls="java5">
<jent id="0" type="file" span="0:0:1169:18">Source/jabref/src/java/net/sf/jabref/AuthorList.java</jent>
<jent id="1" pid="0" type="class" span="117:1:1169:1">net.sf.jabref.AuthorList</jent>
<jent id="2" pid="1" type="method" span="225:2:238:2">net.sf.jabref.AuthorList.AuthorList(String)</jent>
<jent id="3" pid="1" type="method" span="249:2:256:2">net.sf.jabref.AuthorList.getAuthorList(String)</jent>
<jent id="4" pid="1" type="method" span="263:2:266:2">net.sf.jabref.AuthorList.fixAuthor_firstNameFirstCommas(String,boolean,boolean)</jent>
<jent id="5" pid="1" type="method" span="273:2:275:2">net.sf.jabref.AuthorList.fixAuthor_firstNameFirst(String)</jent>
<jent id="6" pid="1" type="method" span="282:2:285:2">net.sf.jabref.AuthorList.fixAuthor_lastNameFirstCommas(String,boolean,boolean)</jent>
<jent id="7" pid="1" type="method" span="292:2:294:2">net.sf.jabref.AuthorList.fixAuthor_lastNameFirst(String)</jent>
<jent id="8" pid="1" type="method" span="301:2:303:2">net.sf.jabref.AuthorList.fixAuthor_lastNameFirst(String,boolean)</jent>
<jent id="9" pid="1" type="method" span="310:2:312:2">net.sf.jabref.AuthorList.fixAuthor_lastNameOnlyCommas(String,boolean)</jent>
<jent id="10" pid="1" type="method" span="319:2:321:2">net.sf.jabref.AuthorList.fixAuthorForAlphabetization(String)</jent>
<jent id="11" pid="1" type="method" span="328:2:330:2">net.sf.jabref.AuthorList.fixAuthor_Natbib(String)</jent>
<jent id="12" pid="1" type="method" span="338:2:473:2">net.sf.jabref.AuthorList.getAuthor()</jent>
<jent id="13" pid="1" type="method" span="495:2:510:2">net.sf.jabref.AuthorList.concatTokens(int,int,int,boolean)</jent>
<jent id="14" pid="1" type="method" span="539:2:604:2">net.sf.jabref.AuthorList.getToken()</jent>
<jent id="15" pid="1" type="method" span="611:2:613:2">net.sf.jabref.AuthorList.size()</jent>
<jent id="16" pid="1" type="method" span="622:2:624:2">net.sf.jabref.AuthorList.getAuthor(int)</jent>
<jent id="17" pid="1" type="method" span="638:2:655:2">net.sf.jabref.AuthorList.getAuthorsNatbib()</jent>
<jent id="18" pid="1" type="method" span="678:2:703:2">net.sf.jabref.AuthorList.getAuthorsLastOnly(boolean)</jent>
<jent id="19" pid="1" type="method" span="732:2:758:2">net.sf.jabref.AuthorList.getAuthorsLastFirst(boolean,boolean)</jent>
<jent id="20" pid="1" type="method" span="760:2:762:2">net.sf.jabref.AuthorList.toString()</jent>
<jent id="21" pid="1" type="method" span="778:2:795:2">net.sf.jabref.AuthorList.getAuthorsLastFirstAnds(boolean)</jent>
<jent id="22" pid="1" type="method" span="797:2:814:2">net.sf.jabref.AuthorList.getAuthorsLastFirstFirstLastAnds(boolean)</jent>
<jent id="23" pid="1" type="method" span="842:2:869:2">net.sf.jabref.AuthorList.getAuthorsFirstFirst(boolean,boolean)</jent>
<jent id="24" pid="1" type="method" span="876:2:883:2">net.sf.jabref.AuthorList.equals(Object)</jent>
<jent id="25" pid="1" type="method" span="899:2:914:2">net.sf.jabref.AuthorList.getAuthorsFirstFirstAnds()</jent>
<jent id="26" pid="1" type="method" span="930:2:944:2">net.sf.jabref.AuthorList.getAuthorsForAlphabetization()</jent>
<jent id="27" pid="1" type="class" span="955:2:1152:2">net.sf.jabref.AuthorList.Author</jent>
<jent id="28" pid="27" type="method" span="972:3:982:3">net.sf.jabref.AuthorList.Author.equals(Object)</jent>
<jent id="29" pid="27" type="method" span="1010:3:1016:3">net.sf.jabref.AuthorList.Author.Author(String,String,String,String,String)</jent>
<jent id="30" pid="27" type="method" span="1023:3:1025:3">net.sf.jabref.AuthorList.Author.getFirst()</jent>
<jent id="31" pid="27" type="method" span="1034:3:1036:3">net.sf.jabref.AuthorList.Author.getFirstAbbr()</jent>
<jent id="32" pid="27" type="method" span="1044:3:1046:3">net.sf.jabref.AuthorList.Author.getVon()</jent>
<jent id="33" pid="27" type="method" span="1053:3:1055:3">net.sf.jabref.AuthorList.Author.getLast()</jent>
<jent id="34" pid="27" type="method" span="1064:3:1066:3">net.sf.jabref.AuthorList.Author.getJr()</jent>
<jent id="35" pid="27" type="method" span="1075:3:1081:3">net.sf.jabref.AuthorList.Author.getLastOnly()</jent>
<jent id="36" pid="27" type="method" span="1093:3:1105:3">net.sf.jabref.AuthorList.Author.getLastFirst(boolean)</jent>
<jent id="37" pid="27" type="method" span="1117:3:1127:3">net.sf.jabref.AuthorList.Author.getFirstLast(boolean)</jent>
<jent id="38" pid="27" type="method" span="1136:3:1151:3">net.sf.jabref.AuthorList.Author.getNameForAlphabetization()</jent>
<jent id="39" pid="1" type="method" span="1155:5:1168:5">net.sf.jabref.AuthorList.main(String[])</jent>
<jtok eid="0" type="block_comment" span="8:1:116:4">/**
 * This is an immutable class representing information of either &lt;CODE&gt;author&lt;/CODE&gt;
 * or &lt;CODE&gt;editor&lt;/CODE&gt; field in bibtex record.
 * &lt;p&gt;
 * Constructor performs parsing of raw field text and stores preformatted data.
 * Various accessor methods return author/editor field in different formats.
 * &lt;p&gt;
 * Parsing algorithm is designed to satisfy two requirements: (a) when author's
 * name is typed correctly, the result should coincide with the one of BiBTeX;
 * (b) for erroneous names, output should be reasonable (but may differ from
 * BiBTeX output). The following rules are used:
 * &lt;ol&gt;
 * &lt;li&gt; 'author field' is a sequence of tokens;
 * &lt;ul&gt;
 * &lt;li&gt; tokens are separated by sequences of whitespaces (&lt;CODE&gt;Character.isWhitespace(c)==true&lt;/CODE&gt;),
 * commas (,), dashes (-), and tildas (~);
 * &lt;li&gt; every comma separates tokens, while sequences of other separators are
 * equivalent to a single separator; for example: "a - b" consists of 2 tokens
 * ("a" and "b"), while "a,-,b" consists of 3 tokens ("a", "", and "b")
 * &lt;li&gt; anything enclosed in braces belonges to a single token; for example:
 * "abc x{a,b,-~ c}x" consists of 2 tokens, while "abc xa,b,-~ cx" consists of 4
 * tokens ("abc", "xa","b", and "cx");
 * &lt;li&gt; a token followed immediately by a dash is "dash-terminated" token, and
 * all other tokens are "space-terminated" tokens; for example: in "a-b- c - d"
 * tokens "a" and "b" are dash-terminated and "c" and "d" are space-terminated;
 * &lt;li&gt; for the purposes of splitting of 'author name' into parts and
 * construction of abbreviation of first name, one needs definitions of first
 * latter of a token, case of a token, and abbreviation of a token:
 * &lt;ul&gt;
 * &lt;li&gt; 'first letter' of a token is the first letter character (&lt;CODE&gt;Character.isLetter(c)==true&lt;/CODE&gt;)
 * that does not belong to a sequence of letters that immediately follows "\"
 * character, with one exception: if "\" is followed by "aa", "AA", "ae", "AE",
 * "l", "L", "o", "O", "oe", "OE", "i", or "j" followed by non-letter, the
 * 'first letter' of a token is a letter that follows "\"; for example: in
 * "a{x}b" 'first letter' is "a", in "{\"{U}}bel" 'first letter' is "U", in
 * "{\noopsort{\"o}}xyz" 'first letter' is "o", in "{\AE}x" 'first letter' is
 * "A", in "\aex\ijk\Oe\j" 'first letter' is "j"; if there is no letter
 * satisfying the above rule, 'first letter' is undefined;
 * &lt;li&gt; token is "lower-case" token, if its first letter id defined and is
 * lower-case (&lt;CODE&gt;Character.isLowerCase(c)==true&lt;/CODE&gt;), and token is
 * "upper-case" token otherwise;
 * &lt;li&gt; 'abbreviation' of a token is the shortest prefix of the token that (a)
 * contains 'first letter' and (b) is braces-balanced; if 'first letter' is
 * undefined, 'abbreviation' is the token itself; in the above examples,
 * 'abbreviation's are "a", "{\"{U}}", "{\noopsort{\"o}}", "{\AE}",
 * "\aex\ijk\Oe\j";
 * &lt;/ul&gt;
 * &lt;li&gt; the behavior based on the above definitions will be erroneous only in
 * one case: if the first-name-token is "{\noopsort{A}}john", we abbreviate it
 * as "{\noopsort{A}}.", while BiBTeX produces "j."; fixing this problem,
 * however, requires processing of the preabmle;
 * &lt;/ul&gt;
 * &lt;li&gt; 'author name's in 'author field' are subsequences of tokens separated by
 * token "and" ("and" is case-insensitive); if 'author name' is an empty
 * sequence of tokens, it is ignored; for examle, both "John Smith and Peter
 * Black" and "and and John Smith and and Peter Black" consists of 2 'author
 * name's "Johm Smith" and "Peter Black" (in erroneous situations, this is a bit
 * different from BiBTeX behavior);
 * &lt;li&gt; 'author name' consists of 'first-part', 'von-part', 'last-part', and
 * 'junior-part', each of which is a sequence of tokens; how a sequence of
 * tokens has to be splitted into these parts, depends the number of commas:
 * &lt;ul&gt;
 * &lt;li&gt; no commas, all tokens are upper-case: 'junior-part' and 'von-part' are
 * empty, 'last-part' consist of the last token, 'first-part' consists of all
 * other tokens ('first-part' is empty, if 'author name' consists of a single
 * token); for example, in "John James Smith", 'last-part'="Smith" and
 * 'first-part'="John James";
 * &lt;li&gt; no commas, there exists lower-case token: 'junior-part' is empty,
 * 'first-part' consists of all upper-case tokens before the first lower-case
 * token, 'von-part' consists of lower-case tokens starting the first lower-case
 * token and ending the lower-case token that is followed by upper-case token,
 * 'last-part' consists of the rest of tokens; note that both 'first-part' and
 * 'latst-part' may be empty and 'last-part' may contain lower-case tokens; for
 * example: in "von der", 'first-part'='last-part'="", 'von-part'="von der"; in
 * "Charles Louis Xavier Joseph de la Vall{\'e}e la Poussin",
 * 'first-part'="Charles Louis Xavier Joseph", 'von-part'="de la",
 * 'last-part'="Vall{\'e}e la Poussin";
 * &lt;li&gt; one comma: 'junior-part' is empty, 'first-part' consists of all tokens
 * after comma, 'von-part' consists of the longest sequence of lower-case tokens
 * in the very beginning, 'last-part' consists of all tokens after 'von-part'
 * and before comma; note that any part can be empty; for example: in "de la
 * Vall{\'e}e la Poussin, Charles Louis Xavier Joseph", 'first-part'="Charles
 * Louis Xavier Joseph", 'von-part'="de la", 'last-part'="Vall{\'e}e la
 * Poussin"; in "Joseph de la Vall{\'e}e la Poussin, Charles Louis Xavier",
 * 'first-part'="Charles Louis Xavier", 'von-part'="", 'last-part'="Joseph de la
 * Vall{\'e}e la Poussin";
 * &lt;li&gt; two or more commas (any comma after the second one is ignored; it merely
 * separates tokens): 'junior-part' consists of all tokens between first and
 * second commas, 'first-part' consists of all tokens after the second comma,
 * tokens before the first comma are splitted into 'von-part' and 'last-part'
 * similarly to the case of one comma; for example: in "de la Vall{\'e}e
 * Poussin, Jr., Charles Louis Xavier Joseph", 'first-part'="Charles Louis
 * Xavier Joseph", 'von-part'="de la", 'last-part'="Vall{\'e}e la Poussin", and
 * 'junior-part'="Jr.";
 * &lt;/ul&gt;
 * &lt;li&gt; when 'first-part', 'last-part', 'von-part', or 'junior-part' is
 * reconstructed from tokens, tokens in a part are separated either by space or
 * by dash, depending on whether the token before the separator was
 * space-terminated or dash-terminated; for the last token in a part it does not
 * matter whether it was dash- or space-terminated;
 * &lt;li&gt; when 'first-part' is abbreviated, each token is replaced by its
 * abbreviation followed by a period; separators are the same as in the case of
 * non-abbreviated name; for example: in "Heinrich-{\"{U}}bel Kurt von Minich",
 * 'first-part'="Heinrich-{\"{U}}bel Kurt", and its abbreviation is "H.-{\"{U}}.
 * K."
 * &lt;/ol&gt;
 * 
 * @see tests.net.sf.jabref.AuthorListTest Testcases for this class.
 */</jtok>
<jtok eid="1" type="class_name" span="117:14:117:24">AuthorList</jtok>
<jtok eid="1" type="class_or_interface_ref" span="119:10:119:16">Vector</jtok>
<jtok eid="1" type="class_or_interface_ref" span="119:17:119:23">Author</jtok>
<jtok eid="1" type="field_name" span="119:25:119:32">authors</jtok>
<jtok eid="1" type="line_comment" span="121:2:121:73">// Variables for storing computed strings, so they only need be created</jtok>
<jtok eid="1" type="line_comment" span="122:2:122:10">// once:</jtok>
<jtok eid="1" type="class_or_interface_ref" span="123:10:123:16">String</jtok>
<jtok eid="1" type="field_name" span="123:17:123:30">authorsNatbib</jtok>
<jtok eid="1" type="field_name" span="123:39:123:60">authorsFirstFirstAnds</jtok>
<jtok eid="1" type="field_name" span="124:3:124:14">authorsAlph</jtok>
<jtok eid="1" type="class_or_interface_ref" span="126:10:126:16">String</jtok>
<jtok eid="1" type="field_name" span="126:19:126:36">authorsFirstFirst</jtok>
<jtok eid="1" type="constructor_call" span="126:43:126:49">String</jtok>
<jtok eid="1" type="field_name" span="126:54:126:69">authorsLastOnly</jtok>
<jtok eid="1" type="constructor_call" span="126:76:126:82">String</jtok>
<jtok eid="1" type="field_name" span="127:2:127:21">authorLastFirstAnds</jtok>
<jtok eid="1" type="constructor_call" span="127:28:127:34">String</jtok>
<jtok eid="1" type="field_name" span="128:2:128:18">authorsLastFirst</jtok>
<jtok eid="1" type="constructor_call" span="128:25:128:31">String</jtok>
<jtok eid="1" type="field_name" span="129:5:129:30">authorsLastFirstFirstLast</jtok>
<jtok eid="1" type="constructor_call" span="129:37:129:43">String</jtok>
<jtok eid="1" type="line_comment" span="132:2:132:57">// The following variables are used only during parsing</jtok>
<jtok eid="1" type="class_or_interface_ref" span="134:10:134:16">String</jtok>
<jtok eid="1" type="field_name" span="134:17:134:21">orig</jtok>
<jtok eid="1" type="line_comment" span="134:23:134:60">// the raw bibtex author/editor field</jtok>
<jtok eid="1" type="line_comment" span="136:2:136:62">// the following variables are updated by getToken procedure</jtok>
<jtok eid="1" type="field_name" span="137:14:137:25">token_start</jtok>
<jtok eid="1" type="line_comment" span="137:27:137:43">// index in orig</jtok>
<jtok eid="1" type="field_name" span="139:14:139:23">token_end</jtok>
<jtok eid="1" type="line_comment" span="139:25:139:75">// to point 'abc' in ' abc xyz', start=2 and end=5</jtok>
<jtok eid="1" type="line_comment" span="141:2:141:74">// the following variables are valid only if getToken returns TOKEN_WORD</jtok>
<jtok eid="1" type="field_name" span="142:14:142:24">token_abbr</jtok>
<jtok eid="1" type="line_comment" span="142:26:142:77">// end of token abbreviation (always: token_start &lt;</jtok>
<jtok eid="1" type="line_comment" span="144:2:144:29">// token_abbr &lt;= token_end)</jtok>
<jtok eid="1" type="field_name" span="146:15:146:25">token_term</jtok>
<jtok eid="1" type="line_comment" span="146:27:146:50">// either space or dash</jtok>
<jtok eid="1" type="field_name" span="148:18:148:28">token_case</jtok>
<jtok eid="1" type="line_comment" span="148:30:148:78">// true if upper-case token, false if lower-case</jtok>
<jtok eid="1" type="line_comment" span="150:2:150:10">// token</jtok>
<jtok eid="1" type="line_comment" span="152:2:152:31">// Tokens of one author name.</jtok>
<jtok eid="1" type="line_comment" span="153:2:153:77">// Each token occupies TGL consecutive entries in this vector (as described</jtok>
<jtok eid="1" type="line_comment" span="154:2:154:11">// below)</jtok>
<jtok eid="1" type="class_or_interface_ref" span="155:10:155:16">Vector</jtok>
<jtok eid="1" type="class_or_interface_ref" span="155:17:155:23">Object</jtok>
<jtok eid="1" type="field_name" span="155:25:155:31">tokens</jtok>
<jtok eid="1" type="field_name" span="157:27:157:45">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="1" type="line_comment" span="157:51:157:75">// number of entries for</jtok>
<jtok eid="1" type="line_comment" span="159:2:159:12">// a token</jtok>
<jtok eid="1" type="line_comment" span="161:2:161:78">// the following are offsets of an entry in a group of entries for one token</jtok>
<jtok eid="1" type="field_name" span="162:27:162:39">OFFSET_TOKEN</jtok>
<jtok eid="1" type="line_comment" span="162:45:162:71">// String -- token itself;</jtok>
<jtok eid="1" type="field_name" span="164:27:164:44">OFFSET_TOKEN_ABBR</jtok>
<jtok eid="1" type="line_comment" span="164:50:164:68">// String -- token</jtok>
<jtok eid="1" type="line_comment" span="166:2:166:18">// abbreviation;</jtok>
<jtok eid="1" type="field_name" span="168:27:168:44">OFFSET_TOKEN_TERM</jtok>
<jtok eid="1" type="line_comment" span="168:50:168:71">// Character -- token</jtok>
<jtok eid="1" type="line_comment" span="170:2:170:30">// terminator (either " " or</jtok>
<jtok eid="1" type="line_comment" span="171:2:171:9">// "-")</jtok>
<jtok eid="1" type="line_comment" span="173:2:173:66">// private static final int OFFSET_TOKEN_CASE = 3; // Boolean --</jtok>
<jtok eid="1" type="line_comment" span="174:2:174:36">// true=uppercase, false=lowercase</jtok>
<jtok eid="1" type="line_comment" span="175:2:175:75">// the following are indices in 'tokens' vector created during parsing of</jtok>
<jtok eid="1" type="line_comment" span="176:2:176:16">// author name</jtok>
<jtok eid="1" type="line_comment" span="177:2:177:60">// and later used to properly split author name into parts</jtok>
<jtok eid="1" type="field_name" span="178:6:178:15">von_start</jtok>
<jtok eid="1" type="line_comment" span="178:17:178:72">// first lower-case token (-1 if all tokens upper-case)</jtok>
<jtok eid="1" type="field_name" span="179:3:179:13">last_start</jtok>
<jtok eid="1" type="line_comment" span="179:15:179:73">// first upper-case token after first lower-case token (-1</jtok>
<jtok eid="1" type="line_comment" span="180:3:180:24">// if does not exist)</jtok>
<jtok eid="1" type="field_name" span="181:3:181:14">comma_first</jtok>
<jtok eid="1" type="line_comment" span="181:16:181:60">// token after first comma (-1 if no commas)</jtok>
<jtok eid="1" type="field_name" span="182:3:182:15">comma_second</jtok>
<jtok eid="1" type="line_comment" span="182:17:182:73">// token after second comma (-1 if no commas or only one</jtok>
<jtok eid="1" type="line_comment" span="184:2:184:11">// comma)</jtok>
<jtok eid="1" type="line_comment" span="186:2:186:49">// Token types (returned by getToken procedure)</jtok>
<jtok eid="1" type="field_name" span="187:27:187:36">TOKEN_EOF</jtok>
<jtok eid="1" type="field_name" span="189:27:189:36">TOKEN_AND</jtok>
<jtok eid="1" type="field_name" span="191:27:191:38">TOKEN_COMMA</jtok>
<jtok eid="1" type="field_name" span="193:27:193:37">TOKEN_WORD</jtok>
<jtok eid="1" type="line_comment" span="195:2:195:66">// Constant Hashtable containing names of TeX special characters</jtok>
<jtok eid="1" type="class_or_interface_ref" span="196:23:196:27">java</jtok>
<jtok eid="1" type="class_or_interface_ref" span="196:28:196:32">util</jtok>
<jtok eid="1" type="class_or_interface_ref" span="196:33:196:40">HashSet</jtok>
<jtok eid="1" type="class_or_interface_ref" span="196:41:196:47">String</jtok>
<jtok eid="1" type="field_name" span="196:49:196:58">tex_names</jtok>
<jtok eid="1" type="constructor_call" span="196:65:196:69">java</jtok>
<jtok eid="1" type="constructor_call" span="196:70:196:74">util</jtok>
<jtok eid="1" type="constructor_call" span="196:75:196:82">HashSet</jtok>
<jtok eid="1" type="constructor_call" span="196:83:196:89">String</jtok>
<jtok eid="1" type="line_comment" span="197:2:197:44">// and static constructor to initialize it</jtok>
<jtok eid="1" type="primary_name_ref" span="199:3:199:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="199:13:199:16">add</jtok>
<jtok eid="1" type="string_literal" span="199:17:199:21">"aa"</jtok>
<jtok eid="1" type="primary_name_ref" span="200:3:200:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="200:13:200:16">add</jtok>
<jtok eid="1" type="string_literal" span="200:17:200:21">"ae"</jtok>
<jtok eid="1" type="primary_name_ref" span="201:3:201:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="201:13:201:16">add</jtok>
<jtok eid="1" type="string_literal" span="201:17:201:20">"l"</jtok>
<jtok eid="1" type="primary_name_ref" span="202:3:202:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="202:13:202:16">add</jtok>
<jtok eid="1" type="string_literal" span="202:17:202:20">"o"</jtok>
<jtok eid="1" type="primary_name_ref" span="203:3:203:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="203:13:203:16">add</jtok>
<jtok eid="1" type="string_literal" span="203:17:203:21">"oe"</jtok>
<jtok eid="1" type="primary_name_ref" span="204:3:204:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="204:13:204:16">add</jtok>
<jtok eid="1" type="string_literal" span="204:17:204:20">"i"</jtok>
<jtok eid="1" type="primary_name_ref" span="205:3:205:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="205:13:205:16">add</jtok>
<jtok eid="1" type="string_literal" span="205:17:205:21">"AA"</jtok>
<jtok eid="1" type="primary_name_ref" span="206:3:206:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="206:13:206:16">add</jtok>
<jtok eid="1" type="string_literal" span="206:17:206:21">"AE"</jtok>
<jtok eid="1" type="primary_name_ref" span="207:3:207:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="207:13:207:16">add</jtok>
<jtok eid="1" type="string_literal" span="207:17:207:20">"L"</jtok>
<jtok eid="1" type="primary_name_ref" span="208:3:208:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="208:13:208:16">add</jtok>
<jtok eid="1" type="string_literal" span="208:17:208:20">"O"</jtok>
<jtok eid="1" type="primary_name_ref" span="209:3:209:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="209:13:209:16">add</jtok>
<jtok eid="1" type="string_literal" span="209:17:209:21">"OE"</jtok>
<jtok eid="1" type="primary_name_ref" span="210:3:210:12">tex_names</jtok>
<jtok eid="1" type="method_call" span="210:13:210:16">add</jtok>
<jtok eid="1" type="string_literal" span="210:17:210:20">"j"</jtok>
<jtok eid="1" type="class_or_interface_ref" span="213:9:213:20">WeakHashMap</jtok>
<jtok eid="1" type="class_or_interface_ref" span="213:21:213:27">String</jtok>
<jtok eid="1" type="class_or_interface_ref" span="213:29:213:39">AuthorList</jtok>
<jtok eid="1" type="field_name" span="213:41:213:52">authorCache</jtok>
<jtok eid="1" type="constructor_call" span="213:59:213:70">WeakHashMap</jtok>
<jtok eid="1" type="constructor_call" span="213:71:213:77">String</jtok>
<jtok eid="1" type="constructor_call" span="213:79:213:89">AuthorList</jtok>
<jtok eid="1" type="block_comment" span="215:2:224:5">/**
	 * Parses the parameter strings and stores preformatted author information.
	 * 
	 * Don't call this constructor directly but rather use the getAuthorList()
	 * method which caches its results.
	 * 
	 * @param bibtex_authors
	 *            contents of either &lt;CODE&gt;author&lt;/CODE&gt; or &lt;CODE&gt;editor&lt;/CODE&gt;
	 *            bibtex field.
	 */</jtok>
<jtok eid="2" type="method_name" span="225:12:225:22">AuthorList</jtok>
<jtok eid="2" type="parameter_type" span="225:23:225:29">String</jtok>
<jtok eid="2" type="parameter_name" span="225:30:225:44">bibtex_authors</jtok>
<jtok eid="2" type="primary_name_ref" span="226:3:226:10">authors</jtok>
<jtok eid="2" type="constructor_call" span="226:17:226:23">Vector</jtok>
<jtok eid="2" type="constructor_call" span="226:24:226:30">Author</jtok>
<jtok eid="2" type="line_comment" span="226:36:226:76">// 5 seems to be reasonable initial size</jtok>
<jtok eid="2" type="primary_name_ref" span="227:3:227:7">orig</jtok>
<jtok eid="2" type="primary_name_ref" span="227:10:227:24">bibtex_authors</jtok>
<jtok eid="2" type="line_comment" span="227:26:227:43">// initialization</jtok>
<jtok eid="2" type="primary_name_ref" span="228:3:228:14">token_start</jtok>
<jtok eid="2" type="primary_name_ref" span="229:3:229:12">token_end</jtok>
<jtok eid="2" type="line_comment" span="229:18:229:30">// of parser</jtok>
<jtok eid="2" type="primary_name_ref" span="230:10:230:21">token_start</jtok>
<jtok eid="2" type="primary_name_ref" span="230:24:230:28">orig</jtok>
<jtok eid="2" type="method_call" span="230:29:230:35">length</jtok>
<jtok eid="2" type="class_or_interface_ref" span="231:4:231:10">Author</jtok>
<jtok eid="2" type="local_variable_name" span="231:11:231:17">author</jtok>
<jtok eid="2" type="method_call" span="231:20:231:29">getAuthor</jtok>
<jtok eid="2" type="primary_name_ref" span="232:8:232:14">author</jtok>
<jtok eid="2" type="primary_name_ref" span="233:5:233:12">authors</jtok>
<jtok eid="2" type="method_call" span="233:13:233:16">add</jtok>
<jtok eid="2" type="primary_name_ref" span="233:17:233:23">author</jtok>
<jtok eid="2" type="line_comment" span="235:3:235:14">// clean-up</jtok>
<jtok eid="2" type="primary_name_ref" span="236:3:236:7">orig</jtok>
<jtok eid="2" type="primary_name_ref" span="237:3:237:9">tokens</jtok>
<jtok eid="1" type="block_comment" span="240:2:248:5">/**
	 * Retrieve an AuthorList for the given string of authors or editors.
	 * 
	 * This function tries to cache AuthorLists by string passed in.
	 * 
	 * @param authors
	 *            The string of authors or editors in bibtex format to parse.
	 * @return An AuthorList object representing the given authors.
	 */</jtok>
<jtok eid="3" type="class_or_interface_ref" span="249:16:249:26">AuthorList</jtok>
<jtok eid="3" type="method_name" span="249:27:249:40">getAuthorList</jtok>
<jtok eid="3" type="parameter_type" span="249:41:249:47">String</jtok>
<jtok eid="3" type="parameter_name" span="249:48:249:55">authors</jtok>
<jtok eid="3" type="class_or_interface_ref" span="250:3:250:13">AuthorList</jtok>
<jtok eid="3" type="local_variable_name" span="250:14:250:24">authorList</jtok>
<jtok eid="3" type="primary_name_ref" span="250:27:250:38">authorCache</jtok>
<jtok eid="3" type="method_call" span="250:39:250:42">get</jtok>
<jtok eid="3" type="primary_name_ref" span="250:43:250:50">authors</jtok>
<jtok eid="3" type="primary_name_ref" span="251:7:251:17">authorList</jtok>
<jtok eid="3" type="primary_name_ref" span="252:4:252:14">authorList</jtok>
<jtok eid="3" type="constructor_call" span="252:21:252:31">AuthorList</jtok>
<jtok eid="3" type="primary_name_ref" span="252:32:252:39">authors</jtok>
<jtok eid="3" type="primary_name_ref" span="253:4:253:15">authorCache</jtok>
<jtok eid="3" type="method_call" span="253:16:253:19">put</jtok>
<jtok eid="3" type="primary_name_ref" span="253:20:253:27">authors</jtok>
<jtok eid="3" type="primary_name_ref" span="253:29:253:39">authorList</jtok>
<jtok eid="3" type="primary_name_ref" span="255:10:255:20">authorList</jtok>
<jtok eid="1" type="block_comment" span="258:2:262:5">/**
	 * This is a convenience method for getAuthorsFirstFirst()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsFirstFirst
	 */</jtok>
<jtok eid="4" type="class_or_interface_ref" span="263:16:263:22">String</jtok>
<jtok eid="4" type="method_name" span="263:23:263:53">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="parameter_type" span="263:54:263:60">String</jtok>
<jtok eid="4" type="parameter_name" span="263:61:263:68">authors</jtok>
<jtok eid="4" type="parameter_name" span="263:78:263:82">abbr</jtok>
<jtok eid="4" type="parameter_name" span="264:11:264:22">oxfordComma</jtok>
<jtok eid="4" type="method_call" span="265:10:265:23">getAuthorList</jtok>
<jtok eid="4" type="primary_name_ref" span="265:24:265:31">authors</jtok>
<jtok eid="4" type="method_call" span="265:33:265:53">getAuthorsFirstFirst</jtok>
<jtok eid="4" type="primary_name_ref" span="265:54:265:58">abbr</jtok>
<jtok eid="4" type="primary_name_ref" span="265:60:265:71">oxfordComma</jtok>
<jtok eid="1" type="block_comment" span="268:2:272:5">/**
	 * This is a convenience method for getAuthorsFirstFirstAnds()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsFirstFirstAnds
	 */</jtok>
<jtok eid="5" type="class_or_interface_ref" span="273:16:273:22">String</jtok>
<jtok eid="5" type="method_name" span="273:23:273:47">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="parameter_type" span="273:48:273:54">String</jtok>
<jtok eid="5" type="parameter_name" span="273:55:273:62">authors</jtok>
<jtok eid="5" type="method_call" span="274:10:274:23">getAuthorList</jtok>
<jtok eid="5" type="primary_name_ref" span="274:24:274:31">authors</jtok>
<jtok eid="5" type="method_call" span="274:33:274:57">getAuthorsFirstFirstAnds</jtok>
<jtok eid="1" type="block_comment" span="277:2:281:5">/**
	 * This is a convenience method for getAuthorsLastFirst()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsLastFirst
	 */</jtok>
<jtok eid="6" type="class_or_interface_ref" span="282:16:282:22">String</jtok>
<jtok eid="6" type="method_name" span="282:23:282:52">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="parameter_type" span="282:53:282:59">String</jtok>
<jtok eid="6" type="parameter_name" span="282:60:282:67">authors</jtok>
<jtok eid="6" type="parameter_name" span="282:77:282:81">abbr</jtok>
<jtok eid="6" type="parameter_name" span="283:11:283:22">oxfordComma</jtok>
<jtok eid="6" type="method_call" span="284:10:284:23">getAuthorList</jtok>
<jtok eid="6" type="primary_name_ref" span="284:24:284:31">authors</jtok>
<jtok eid="6" type="method_call" span="284:33:284:52">getAuthorsLastFirst</jtok>
<jtok eid="6" type="primary_name_ref" span="284:53:284:57">abbr</jtok>
<jtok eid="6" type="primary_name_ref" span="284:59:284:70">oxfordComma</jtok>
<jtok eid="1" type="block_comment" span="287:2:291:5">/**
	 * This is a convenience method for getAuthorsLastFirstAnds(true)
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsLastFirstAnds
	 */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="292:16:292:22">String</jtok>
<jtok eid="7" type="method_name" span="292:23:292:46">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="parameter_type" span="292:47:292:53">String</jtok>
<jtok eid="7" type="parameter_name" span="292:54:292:61">authors</jtok>
<jtok eid="7" type="method_call" span="293:10:293:23">getAuthorList</jtok>
<jtok eid="7" type="primary_name_ref" span="293:24:293:31">authors</jtok>
<jtok eid="7" type="method_call" span="293:33:293:56">getAuthorsLastFirstAnds</jtok>
<jtok eid="1" type="block_comment" span="296:2:300:5">/**
	 * This is a convenience method for getAuthorsLastFirstAnds()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsLastFirstAnds
	 */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="301:16:301:22">String</jtok>
<jtok eid="8" type="method_name" span="301:23:301:46">fixAuthor_lastNameFirst</jtok>
<jtok eid="8" type="parameter_type" span="301:47:301:53">String</jtok>
<jtok eid="8" type="parameter_name" span="301:54:301:61">authors</jtok>
<jtok eid="8" type="parameter_name" span="301:71:301:81">abbreviate</jtok>
<jtok eid="8" type="method_call" span="302:10:302:23">getAuthorList</jtok>
<jtok eid="8" type="primary_name_ref" span="302:24:302:31">authors</jtok>
<jtok eid="8" type="method_call" span="302:33:302:56">getAuthorsLastFirstAnds</jtok>
<jtok eid="8" type="primary_name_ref" span="302:57:302:67">abbreviate</jtok>
<jtok eid="1" type="block_comment" span="305:2:309:5">/**
	 * This is a convenience method for getAuthorsLastOnly()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsLastOnly
	 */</jtok>
<jtok eid="9" type="class_or_interface_ref" span="310:16:310:22">String</jtok>
<jtok eid="9" type="method_name" span="310:23:310:51">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="9" type="parameter_type" span="310:52:310:58">String</jtok>
<jtok eid="9" type="parameter_name" span="310:59:310:66">authors</jtok>
<jtok eid="9" type="parameter_name" span="310:76:310:87">oxfordComma</jtok>
<jtok eid="9" type="method_call" span="311:10:311:23">getAuthorList</jtok>
<jtok eid="9" type="primary_name_ref" span="311:24:311:31">authors</jtok>
<jtok eid="9" type="method_call" span="311:33:311:51">getAuthorsLastOnly</jtok>
<jtok eid="9" type="primary_name_ref" span="311:52:311:63">oxfordComma</jtok>
<jtok eid="1" type="block_comment" span="314:2:318:5">/**
	 * This is a convenience method for getAuthorsForAlphabetization()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsForAlphabetization
	 */</jtok>
<jtok eid="10" type="class_or_interface_ref" span="319:16:319:22">String</jtok>
<jtok eid="10" type="method_name" span="319:23:319:50">fixAuthorForAlphabetization</jtok>
<jtok eid="10" type="parameter_type" span="319:51:319:57">String</jtok>
<jtok eid="10" type="parameter_name" span="319:58:319:65">authors</jtok>
<jtok eid="10" type="method_call" span="320:10:320:23">getAuthorList</jtok>
<jtok eid="10" type="primary_name_ref" span="320:24:320:31">authors</jtok>
<jtok eid="10" type="method_call" span="320:33:320:61">getAuthorsForAlphabetization</jtok>
<jtok eid="1" type="block_comment" span="323:2:327:5">/**
	 * This is a convenience method for getAuthorsNatbib()
	 * 
	 * @see net.sf.jabref.AuthorList#getAuthorsNatbib
	 */</jtok>
<jtok eid="11" type="class_or_interface_ref" span="328:16:328:22">String</jtok>
<jtok eid="11" type="method_name" span="328:23:328:39">fixAuthor_Natbib</jtok>
<jtok eid="11" type="parameter_type" span="328:40:328:46">String</jtok>
<jtok eid="11" type="parameter_name" span="328:47:328:54">authors</jtok>
<jtok eid="11" type="primary_name_ref" span="329:10:329:20">AuthorList</jtok>
<jtok eid="11" type="method_call" span="329:21:329:34">getAuthorList</jtok>
<jtok eid="11" type="primary_name_ref" span="329:35:329:42">authors</jtok>
<jtok eid="11" type="method_call" span="329:44:329:60">getAuthorsNatbib</jtok>
<jtok eid="1" type="block_comment" span="332:2:337:5">/**
	 * Parses one author name and returns preformatted information.
	 * 
	 * @return Preformatted author name; &lt;CODE&gt;null&lt;/CODE&gt; if author name is
	 *         empty.
	 */</jtok>
<jtok eid="12" type="class_or_interface_ref" span="338:10:338:16">Author</jtok>
<jtok eid="12" type="method_name" span="338:17:338:26">getAuthor</jtok>
<jtok eid="12" type="primary_name_ref" span="340:3:340:9">tokens</jtok>
<jtok eid="12" type="constructor_call" span="340:16:340:22">Vector</jtok>
<jtok eid="12" type="constructor_call" span="340:23:340:29">Object</jtok>
<jtok eid="12" type="line_comment" span="340:34:340:51">// initialization</jtok>
<jtok eid="12" type="primary_name_ref" span="341:3:341:12">von_start</jtok>
<jtok eid="12" type="primary_name_ref" span="342:3:342:13">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="343:3:343:14">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="344:3:344:15">comma_second</jtok>
<jtok eid="12" type="line_comment" span="346:3:346:73">// First step: collect tokens in 'tokens' Vector and calculate indices</jtok>
<jtok eid="12" type="label_name" span="347:3:347:13">token_loop</jtok>
<jtok eid="12" type="local_variable_name" span="348:8:348:13">token</jtok>
<jtok eid="12" type="method_call" span="348:16:348:24">getToken</jtok>
<jtok eid="12" type="label_name" span="349:4:349:9">cases</jtok>
<jtok eid="12" type="primary_name_ref" span="349:19:349:24">token</jtok>
<jtok eid="12" type="primary_name_ref" span="350:9:350:18">TOKEN_EOF</jtok>
<jtok eid="12" type="primary_name_ref" span="351:9:351:18">TOKEN_AND</jtok>
<jtok eid="12" type="label_ref" span="352:11:352:21">token_loop</jtok>
<jtok eid="12" type="primary_name_ref" span="353:9:353:20">TOKEN_COMMA</jtok>
<jtok eid="12" type="primary_name_ref" span="354:9:354:20">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="355:6:355:17">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="355:20:355:26">tokens</jtok>
<jtok eid="12" type="method_call" span="355:27:355:31">size</jtok>
<jtok eid="12" type="primary_name_ref" span="356:14:356:26">comma_second</jtok>
<jtok eid="12" type="primary_name_ref" span="357:6:357:18">comma_second</jtok>
<jtok eid="12" type="primary_name_ref" span="357:21:357:27">tokens</jtok>
<jtok eid="12" type="method_call" span="357:28:357:32">size</jtok>
<jtok eid="12" type="label_ref" span="358:11:358:16">cases</jtok>
<jtok eid="12" type="primary_name_ref" span="359:9:359:19">TOKEN_WORD</jtok>
<jtok eid="12" type="primary_name_ref" span="360:5:360:11">tokens</jtok>
<jtok eid="12" type="method_call" span="360:12:360:15">add</jtok>
<jtok eid="12" type="primary_name_ref" span="360:16:360:20">orig</jtok>
<jtok eid="12" type="method_call" span="360:21:360:30">substring</jtok>
<jtok eid="12" type="primary_name_ref" span="360:31:360:42">token_start</jtok>
<jtok eid="12" type="primary_name_ref" span="360:44:360:53">token_end</jtok>
<jtok eid="12" type="primary_name_ref" span="361:5:361:11">tokens</jtok>
<jtok eid="12" type="method_call" span="361:12:361:15">add</jtok>
<jtok eid="12" type="primary_name_ref" span="361:16:361:20">orig</jtok>
<jtok eid="12" type="method_call" span="361:21:361:30">substring</jtok>
<jtok eid="12" type="primary_name_ref" span="361:31:361:42">token_start</jtok>
<jtok eid="12" type="primary_name_ref" span="361:44:361:54">token_abbr</jtok>
<jtok eid="12" type="primary_name_ref" span="362:5:362:11">tokens</jtok>
<jtok eid="12" type="method_call" span="362:12:362:15">add</jtok>
<jtok eid="12" type="constructor_call" span="362:20:362:29">Character</jtok>
<jtok eid="12" type="primary_name_ref" span="362:30:362:40">token_term</jtok>
<jtok eid="12" type="primary_name_ref" span="363:5:363:11">tokens</jtok>
<jtok eid="12" type="method_call" span="363:12:363:15">add</jtok>
<jtok eid="12" type="primary_name_ref" span="363:16:363:23">Boolean</jtok>
<jtok eid="12" type="method_call" span="363:24:363:31">valueOf</jtok>
<jtok eid="12" type="primary_name_ref" span="363:32:363:42">token_case</jtok>
<jtok eid="12" type="primary_name_ref" span="364:9:364:20">comma_first</jtok>
<jtok eid="12" type="label_ref" span="365:12:365:17">cases</jtok>
<jtok eid="12" type="primary_name_ref" span="366:9:366:19">last_start</jtok>
<jtok eid="12" type="label_ref" span="367:12:367:17">cases</jtok>
<jtok eid="12" type="primary_name_ref" span="368:9:368:18">von_start</jtok>
<jtok eid="12" type="primary_name_ref" span="369:11:369:21">token_case</jtok>
<jtok eid="12" type="primary_name_ref" span="370:7:370:16">von_start</jtok>
<jtok eid="12" type="primary_name_ref" span="370:19:370:25">tokens</jtok>
<jtok eid="12" type="method_call" span="370:26:370:30">size</jtok>
<jtok eid="12" type="primary_name_ref" span="370:35:370:53">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="12" type="label_ref" span="371:13:371:18">cases</jtok>
<jtok eid="12" type="primary_name_ref" span="373:16:373:26">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="373:34:373:44">token_case</jtok>
<jtok eid="12" type="primary_name_ref" span="374:6:374:16">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="374:19:374:25">tokens</jtok>
<jtok eid="12" type="method_call" span="374:26:374:30">size</jtok>
<jtok eid="12" type="primary_name_ref" span="374:35:374:53">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="12" type="label_ref" span="375:12:375:17">cases</jtok>
<jtok eid="12" type="line_comment" span="378:4:378:21">// end token_loop</jtok>
<jtok eid="12" type="line_comment" span="380:3:380:65">// Second step: split name into parts (here: calculate indices</jtok>
<jtok eid="12" type="line_comment" span="381:3:381:34">// of parts in 'tokens' Vector)</jtok>
<jtok eid="12" type="primary_name_ref" span="382:7:382:13">tokens</jtok>
<jtok eid="12" type="method_call" span="382:14:382:18">size</jtok>
<jtok eid="12" type="line_comment" span="383:17:383:41">// no author information</jtok>
<jtok eid="12" type="line_comment" span="386:3:386:72">// the following negatives indicate absence of the corresponding part</jtok>
<jtok eid="12" type="local_variable_name" span="387:7:387:23">first_part_start</jtok>
<jtok eid="12" type="local_variable_name" span="387:30:387:44">von_part_start</jtok>
<jtok eid="12" type="local_variable_name" span="387:51:387:66">last_part_start</jtok>
<jtok eid="12" type="local_variable_name" span="387:73:387:86">jr_part_start</jtok>
<jtok eid="12" type="local_variable_name" span="388:7:388:21">first_part_end</jtok>
<jtok eid="12" type="local_variable_name" span="388:27:388:39">von_part_end</jtok>
<jtok eid="12" type="local_variable_name" span="388:45:388:58">last_part_end</jtok>
<jtok eid="12" type="local_variable_name" span="388:64:388:75">jr_part_end</jtok>
<jtok eid="12" type="local_variable_name" span="389:17:389:30">jrAsFirstname</jtok>
<jtok eid="12" type="primary_name_ref" span="390:7:390:18">comma_first</jtok>
<jtok eid="12" type="line_comment" span="390:26:390:38">// no commas</jtok>
<jtok eid="12" type="primary_name_ref" span="391:8:391:17">von_start</jtok>
<jtok eid="12" type="line_comment" span="391:25:391:41">// no 'von part'</jtok>
<jtok eid="12" type="primary_name_ref" span="392:5:392:18">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="392:21:392:27">tokens</jtok>
<jtok eid="12" type="method_call" span="392:28:392:32">size</jtok>
<jtok eid="12" type="primary_name_ref" span="393:5:393:20">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="393:23:393:29">tokens</jtok>
<jtok eid="12" type="method_call" span="393:30:393:34">size</jtok>
<jtok eid="12" type="primary_name_ref" span="393:39:393:57">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="12" type="local_variable_name" span="394:9:394:14">index</jtok>
<jtok eid="12" type="primary_name_ref" span="394:17:394:23">tokens</jtok>
<jtok eid="12" type="method_call" span="394:24:394:28">size</jtok>
<jtok eid="12" type="primary_name_ref" span="394:37:394:55">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="12" type="primary_name_ref" span="394:58:394:75">OFFSET_TOKEN_TERM</jtok>
<jtok eid="12" type="primary_name_ref" span="395:9:395:14">index</jtok>
<jtok eid="12" type="class_or_interface_ref" span="396:6:396:15">Character</jtok>
<jtok eid="12" type="local_variable_name" span="396:16:396:18">ch</jtok>
<jtok eid="12" type="class_or_interface_ref" span="396:22:396:31">Character</jtok>
<jtok eid="12" type="primary_name_ref" span="396:32:396:38">tokens</jtok>
<jtok eid="12" type="method_call" span="396:39:396:48">elementAt</jtok>
<jtok eid="12" type="primary_name_ref" span="396:49:396:54">index</jtok>
<jtok eid="12" type="primary_name_ref" span="397:10:397:12">ch</jtok>
<jtok eid="12" type="method_call" span="397:13:397:22">charValue</jtok>
<jtok eid="12" type="primary_name_ref" span="398:7:398:22">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="398:26:398:44">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="12" type="primary_name_ref" span="400:5:400:19">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="400:22:400:37">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="401:9:401:23">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="402:6:402:22">first_part_start</jtok>
<jtok eid="12" type="line_comment" span="404:13:404:37">// 'von part' is present</jtok>
<jtok eid="12" type="primary_name_ref" span="405:9:405:19">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="406:6:406:19">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="406:22:406:28">tokens</jtok>
<jtok eid="12" type="method_call" span="406:29:406:33">size</jtok>
<jtok eid="12" type="primary_name_ref" span="407:6:407:21">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="407:24:407:34">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="408:6:408:18">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="408:21:408:36">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="410:6:410:18">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="410:21:410:27">tokens</jtok>
<jtok eid="12" type="method_call" span="410:28:410:32">size</jtok>
<jtok eid="12" type="primary_name_ref" span="412:5:412:19">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="412:22:412:31">von_start</jtok>
<jtok eid="12" type="primary_name_ref" span="413:5:413:19">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="413:22:413:36">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="414:9:414:23">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="415:6:415:22">first_part_start</jtok>
<jtok eid="12" type="line_comment" span="417:12:417:67">// commas are present: it affects only 'first part' and</jtok>
<jtok eid="12" type="line_comment" span="418:4:418:20">// 'junior part'</jtok>
<jtok eid="12" type="primary_name_ref" span="419:4:419:18">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="419:21:419:27">tokens</jtok>
<jtok eid="12" type="method_call" span="419:28:419:32">size</jtok>
<jtok eid="12" type="primary_name_ref" span="420:8:420:20">comma_second</jtok>
<jtok eid="12" type="line_comment" span="420:28:420:40">// one comma</jtok>
<jtok eid="12" type="primary_name_ref" span="421:9:421:20">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="421:23:421:37">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="422:21:422:37">first_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="422:40:422:51">comma_first</jtok>
<jtok eid="12" type="line_comment" span="423:21:423:98">//if (((String)tokens.get(first_part_start)).toLowerCase().startsWith("jr."))</jtok>
<jtok eid="12" type="line_comment" span="424:21:424:48">//    jrAsFirstname = true;</jtok>
<jtok eid="12" type="line_comment" span="426:13:426:34">// two or more commas</jtok>
<jtok eid="12" type="primary_name_ref" span="427:9:427:21">comma_second</jtok>
<jtok eid="12" type="primary_name_ref" span="427:24:427:38">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="428:6:428:22">first_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="428:25:428:37">comma_second</jtok>
<jtok eid="12" type="primary_name_ref" span="429:5:429:16">jr_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="429:19:429:31">comma_second</jtok>
<jtok eid="12" type="primary_name_ref" span="430:9:430:20">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="430:23:430:34">jr_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="431:6:431:19">jr_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="431:22:431:33">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="433:8:433:17">von_start</jtok>
<jtok eid="12" type="line_comment" span="433:26:433:42">// no 'von part'</jtok>
<jtok eid="12" type="primary_name_ref" span="434:5:434:18">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="434:21:434:32">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="435:9:435:22">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="436:6:436:21">last_part_start</jtok>
<jtok eid="12" type="line_comment" span="437:13:437:37">// 'von part' is present</jtok>
<jtok eid="12" type="primary_name_ref" span="438:9:438:19">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="439:6:439:18">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="439:21:439:32">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="441:6:441:19">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="441:22:441:33">comma_first</jtok>
<jtok eid="12" type="primary_name_ref" span="442:6:442:21">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="442:24:442:34">last_start</jtok>
<jtok eid="12" type="primary_name_ref" span="443:6:443:18">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="443:21:443:36">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="445:5:445:19">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="449:14:449:30">first_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="449:42:449:57">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="449:69:449:83">von_part_start</jtok>
<jtok eid="12" type="line_comment" span="450:13:450:86">// There is no first or last name, but we have a von part. This is likely</jtok>
<jtok eid="12" type="line_comment" span="451:13:451:87">// to indicate a single-entry name without an initial capital letter, such</jtok>
<jtok eid="12" type="line_comment" span="452:13:452:29">// as "unknown".</jtok>
<jtok eid="12" type="line_comment" span="453:13:453:99">// We make the von part the last name, to facilitate handling by last-name formatters:</jtok>
<jtok eid="12" type="primary_name_ref" span="454:13:454:28">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="454:31:454:45">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="455:13:455:26">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="455:29:455:41">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="456:13:456:27">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="457:13:457:25">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="459:13:459:26">jrAsFirstname</jtok>
<jtok eid="12" type="line_comment" span="460:13:460:93">// This variable, if set, indicates that the first name starts with "jr.", which</jtok>
<jtok eid="12" type="line_comment" span="461:13:461:95">// is an indication that we may have a name formatted as "Firstname Lastname, Jr."</jtok>
<jtok eid="12" type="line_comment" span="462:13:462:57">// which is an acceptable format for BibTeX.</jtok>
<jtok eid="12" type="line_comment" span="465:3:465:62">// Third step: do actual splitting, construct Author object</jtok>
<jtok eid="12" type="constructor_call" span="466:14:466:20">Author</jtok>
<jtok eid="12" type="primary_name_ref" span="466:22:466:38">first_part_start</jtok>
<jtok eid="12" type="method_call" span="466:52:466:64">concatTokens</jtok>
<jtok eid="12" type="primary_name_ref" span="466:65:466:81">first_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="467:4:467:18">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="467:20:467:32">OFFSET_TOKEN</jtok>
<jtok eid="12" type="primary_name_ref" span="467:44:467:60">first_part_start</jtok>
<jtok eid="12" type="method_call" span="467:74:467:86">concatTokens</jtok>
<jtok eid="12" type="primary_name_ref" span="468:4:468:20">first_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="468:22:468:36">first_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="468:38:468:55">OFFSET_TOKEN_ABBR</jtok>
<jtok eid="12" type="primary_name_ref" span="468:66:468:80">von_part_start</jtok>
<jtok eid="12" type="method_call" span="469:6:469:18">concatTokens</jtok>
<jtok eid="12" type="primary_name_ref" span="469:19:469:33">von_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="469:35:469:47">von_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="469:49:469:61">OFFSET_TOKEN</jtok>
<jtok eid="12" type="primary_name_ref" span="470:5:470:20">last_part_start</jtok>
<jtok eid="12" type="method_call" span="470:34:470:46">concatTokens</jtok>
<jtok eid="12" type="primary_name_ref" span="470:47:470:62">last_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="470:64:470:77">last_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="471:5:471:17">OFFSET_TOKEN</jtok>
<jtok eid="12" type="primary_name_ref" span="471:29:471:42">jr_part_start</jtok>
<jtok eid="12" type="method_call" span="471:56:471:68">concatTokens</jtok>
<jtok eid="12" type="primary_name_ref" span="471:69:471:82">jr_part_start</jtok>
<jtok eid="12" type="primary_name_ref" span="472:5:472:16">jr_part_end</jtok>
<jtok eid="12" type="primary_name_ref" span="472:18:472:30">OFFSET_TOKEN</jtok>
<jtok eid="1" type="block_comment" span="475:2:494:5">/**
	 * Concatenates list of tokens from 'tokens' Vector. Tokens are separated by
	 * spaces or dashes, dependeing on stored in 'tokens'. Callers always ensure
	 * that start &lt; end; thus, there exists at least one token to be
	 * concatenated.
	 * 
	 * @param start
	 *            index of the first token to be concatenated in 'tokens' Vector
	 *            (always divisible by TOKEN_GROUP_LENGTH).
	 * @param end
	 *            index of the first token not to be concatenated in 'tokens'
	 *            Vector (always divisible by TOKEN_GROUP_LENGTH).
	 * @param offset
	 *            offset within token group (used to request concatenation of
	 *            either full tokens or abbreviation).
	 * @param dot_after
	 *            &lt;CODE&gt;true&lt;/CODE&gt; -- add period after each token, &lt;CODE&gt;false&lt;/CODE&gt; --
	 *            do not add.
	 * @return the result of concatenation.
	 */</jtok>
<jtok eid="13" type="class_or_interface_ref" span="495:10:495:16">String</jtok>
<jtok eid="13" type="method_name" span="495:17:495:29">concatTokens</jtok>
<jtok eid="13" type="parameter_name" span="495:34:495:39">start</jtok>
<jtok eid="13" type="parameter_name" span="495:45:495:48">end</jtok>
<jtok eid="13" type="parameter_name" span="495:54:495:60">offset</jtok>
<jtok eid="13" type="parameter_name" span="495:70:495:79">dot_after</jtok>
<jtok eid="13" type="class_or_interface_ref" span="496:3:496:15">StringBuffer</jtok>
<jtok eid="13" type="local_variable_name" span="496:16:496:19">res</jtok>
<jtok eid="13" type="constructor_call" span="496:26:496:38">StringBuffer</jtok>
<jtok eid="13" type="line_comment" span="497:3:497:37">// Here we always have start &lt; end</jtok>
<jtok eid="13" type="primary_name_ref" span="498:3:498:6">res</jtok>
<jtok eid="13" type="method_call" span="498:7:498:13">append</jtok>
<jtok eid="13" type="class_or_interface_ref" span="498:15:498:21">String</jtok>
<jtok eid="13" type="primary_name_ref" span="498:23:498:29">tokens</jtok>
<jtok eid="13" type="method_call" span="498:30:498:33">get</jtok>
<jtok eid="13" type="primary_name_ref" span="498:34:498:39">start</jtok>
<jtok eid="13" type="primary_name_ref" span="498:42:498:48">offset</jtok>
<jtok eid="13" type="primary_name_ref" span="499:7:499:16">dot_after</jtok>
<jtok eid="13" type="primary_name_ref" span="500:4:500:7">res</jtok>
<jtok eid="13" type="method_call" span="500:8:500:14">append</jtok>
<jtok eid="13" type="primary_name_ref" span="501:3:501:8">start</jtok>
<jtok eid="13" type="primary_name_ref" span="501:12:501:30">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="13" type="primary_name_ref" span="502:10:502:15">start</jtok>
<jtok eid="13" type="primary_name_ref" span="502:18:502:21">end</jtok>
<jtok eid="13" type="primary_name_ref" span="503:4:503:7">res</jtok>
<jtok eid="13" type="method_call" span="503:8:503:14">append</jtok>
<jtok eid="13" type="primary_name_ref" span="503:15:503:21">tokens</jtok>
<jtok eid="13" type="method_call" span="503:22:503:25">get</jtok>
<jtok eid="13" type="primary_name_ref" span="503:26:503:31">start</jtok>
<jtok eid="13" type="primary_name_ref" span="503:34:503:52">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="13" type="primary_name_ref" span="503:55:503:72">OFFSET_TOKEN_TERM</jtok>
<jtok eid="13" type="primary_name_ref" span="504:4:504:7">res</jtok>
<jtok eid="13" type="method_call" span="504:8:504:14">append</jtok>
<jtok eid="13" type="class_or_interface_ref" span="504:16:504:22">String</jtok>
<jtok eid="13" type="primary_name_ref" span="504:24:504:30">tokens</jtok>
<jtok eid="13" type="method_call" span="504:31:504:34">get</jtok>
<jtok eid="13" type="primary_name_ref" span="504:35:504:40">start</jtok>
<jtok eid="13" type="primary_name_ref" span="504:43:504:49">offset</jtok>
<jtok eid="13" type="primary_name_ref" span="505:8:505:17">dot_after</jtok>
<jtok eid="13" type="primary_name_ref" span="506:5:506:8">res</jtok>
<jtok eid="13" type="method_call" span="506:9:506:15">append</jtok>
<jtok eid="13" type="primary_name_ref" span="507:4:507:9">start</jtok>
<jtok eid="13" type="primary_name_ref" span="507:13:507:31">TOKEN_GROUP_LENGTH</jtok>
<jtok eid="13" type="primary_name_ref" span="509:10:509:13">res</jtok>
<jtok eid="13" type="method_call" span="509:14:509:22">toString</jtok>
<jtok eid="1" type="block_comment" span="512:2:538:5">/**
	 * Parses the next token.
	 * &lt;p&gt;
	 * The string being parsed is stored in global variable &lt;CODE&gt;orig&lt;/CODE&gt;,
	 * and position which parsing has to start from is stored in global variable
	 * &lt;CODE&gt;token_end&lt;/CODE&gt;; thus, &lt;CODE&gt;token_end&lt;/CODE&gt; has to be set
	 * to 0 before the first invocation. Procedure updates &lt;CODE&gt;token_end&lt;/CODE&gt;;
	 * thus, subsequent invocations do not require any additional variable
	 * settings.
	 * &lt;p&gt;
	 * The type of the token is returned; if it is &lt;CODE&gt;TOKEN_WORD&lt;/CODE&gt;,
	 * additional information is given in global variables &lt;CODE&gt;token_start&lt;/CODE&gt;,
	 * &lt;CODE&gt;token_end&lt;/CODE&gt;, &lt;CODE&gt;token_abbr&lt;/CODE&gt;, &lt;CODE&gt;token_term&lt;/CODE&gt;,
	 * and &lt;CODE&gt;token_case&lt;/CODE&gt;; namely: &lt;CODE&gt;orig.substring(token_start,token_end)&lt;/CODE&gt;
	 * is the thext of the token, &lt;CODE&gt;orig.substring(token_start,token_abbr)&lt;/CODE&gt;
	 * is the token abbreviation, &lt;CODE&gt;token_term&lt;/CODE&gt; contains token
	 * terminator (space or dash), and &lt;CODE&gt;token_case&lt;/CODE&gt; is &lt;CODE&gt;true&lt;/CODE&gt;,
	 * if token is upper-case and &lt;CODE&gt;false&lt;/CODE&gt; if token is lower-case.
	 * 
	 * @return &lt;CODE&gt;TOKEN_EOF&lt;/CODE&gt; -- no more tokens, &lt;CODE&gt;TOKEN_COMMA&lt;/CODE&gt; --
	 *         token is comma, &lt;CODE&gt;TOKEN_AND&lt;/CODE&gt; -- token is the word
	 *         "and" (or "And", or "aND", etc.), &lt;CODE&gt;TOKEN_WORD&lt;/CODE&gt; --
	 *         token is a word; additional information is given in global
	 *         variables &lt;CODE&gt;token_start&lt;/CODE&gt;, &lt;CODE&gt;token_end&lt;/CODE&gt;,
	 *         &lt;CODE&gt;token_abbr&lt;/CODE&gt;, &lt;CODE&gt;token_term&lt;/CODE&gt;, and
	 *         &lt;CODE&gt;token_case&lt;/CODE&gt;.
	 */</jtok>
<jtok eid="14" type="method_name" span="539:14:539:22">getToken</jtok>
<jtok eid="14" type="primary_name_ref" span="540:3:540:14">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="540:17:540:26">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="541:10:541:21">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="541:24:541:28">orig</jtok>
<jtok eid="14" type="method_call" span="541:29:541:35">length</jtok>
<jtok eid="14" type="local_variable_name" span="542:9:542:10">c</jtok>
<jtok eid="14" type="primary_name_ref" span="542:13:542:17">orig</jtok>
<jtok eid="14" type="method_call" span="542:18:542:24">charAt</jtok>
<jtok eid="14" type="primary_name_ref" span="542:25:542:36">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="543:10:543:11">c</jtok>
<jtok eid="14" type="primary_name_ref" span="543:22:543:23">c</jtok>
<jtok eid="14" type="primary_name_ref" span="543:34:543:43">Character</jtok>
<jtok eid="14" type="method_call" span="543:44:543:56">isWhitespace</jtok>
<jtok eid="14" type="primary_name_ref" span="543:57:543:58">c</jtok>
<jtok eid="14" type="primary_name_ref" span="545:4:545:15">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="547:3:547:12">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="547:15:547:26">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="548:7:548:18">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="548:22:548:26">orig</jtok>
<jtok eid="14" type="method_call" span="548:27:548:33">length</jtok>
<jtok eid="14" type="primary_name_ref" span="549:11:549:20">TOKEN_EOF</jtok>
<jtok eid="14" type="primary_name_ref" span="550:7:550:11">orig</jtok>
<jtok eid="14" type="method_call" span="550:12:550:18">charAt</jtok>
<jtok eid="14" type="primary_name_ref" span="550:19:550:30">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="551:4:551:13">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="552:11:552:22">TOKEN_COMMA</jtok>
<jtok eid="14" type="primary_name_ref" span="554:3:554:13">token_abbr</jtok>
<jtok eid="14" type="primary_name_ref" span="555:3:555:13">token_term</jtok>
<jtok eid="14" type="primary_name_ref" span="556:3:556:13">token_case</jtok>
<jtok eid="14" type="local_variable_name" span="557:7:557:19">braces_level</jtok>
<jtok eid="14" type="local_variable_name" span="558:7:558:24">current_backslash</jtok>
<jtok eid="14" type="local_variable_name" span="559:11:559:32">first_letter_is_found</jtok>
<jtok eid="14" type="primary_name_ref" span="560:10:560:19">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="560:22:560:26">orig</jtok>
<jtok eid="14" type="method_call" span="560:27:560:33">length</jtok>
<jtok eid="14" type="local_variable_name" span="561:9:561:10">c</jtok>
<jtok eid="14" type="primary_name_ref" span="561:13:561:17">orig</jtok>
<jtok eid="14" type="method_call" span="561:18:561:24">charAt</jtok>
<jtok eid="14" type="primary_name_ref" span="561:25:561:34">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="562:8:562:9">c</jtok>
<jtok eid="14" type="primary_name_ref" span="563:5:563:17">braces_level</jtok>
<jtok eid="14" type="primary_name_ref" span="565:8:565:20">braces_level</jtok>
<jtok eid="14" type="primary_name_ref" span="566:9:566:10">c</jtok>
<jtok eid="14" type="primary_name_ref" span="567:6:567:18">braces_level</jtok>
<jtok eid="14" type="primary_name_ref" span="568:8:568:29">first_letter_is_found</jtok>
<jtok eid="14" type="primary_name_ref" span="568:33:568:43">token_abbr</jtok>
<jtok eid="14" type="primary_name_ref" span="568:51:568:63">braces_level</jtok>
<jtok eid="14" type="primary_name_ref" span="569:5:569:15">token_abbr</jtok>
<jtok eid="14" type="primary_name_ref" span="569:18:569:27">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="570:9:570:30">first_letter_is_found</jtok>
<jtok eid="14" type="primary_name_ref" span="570:34:570:51">current_backslash</jtok>
<jtok eid="14" type="primary_name_ref" span="570:59:570:68">Character</jtok>
<jtok eid="14" type="method_call" span="570:69:570:77">isLetter</jtok>
<jtok eid="14" type="primary_name_ref" span="570:78:570:79">c</jtok>
<jtok eid="14" type="primary_name_ref" span="571:5:571:15">token_case</jtok>
<jtok eid="14" type="primary_name_ref" span="571:18:571:27">Character</jtok>
<jtok eid="14" type="method_call" span="571:28:571:39">isUpperCase</jtok>
<jtok eid="14" type="primary_name_ref" span="571:40:571:41">c</jtok>
<jtok eid="14" type="primary_name_ref" span="572:5:572:26">first_letter_is_found</jtok>
<jtok eid="14" type="primary_name_ref" span="574:8:574:25">current_backslash</jtok>
<jtok eid="14" type="primary_name_ref" span="574:35:574:44">Character</jtok>
<jtok eid="14" type="method_call" span="574:45:574:53">isLetter</jtok>
<jtok eid="14" type="primary_name_ref" span="574:54:574:55">c</jtok>
<jtok eid="14" type="primary_name_ref" span="575:10:575:31">first_letter_is_found</jtok>
<jtok eid="14" type="class_or_interface_ref" span="576:6:576:12">String</jtok>
<jtok eid="14" type="local_variable_name" span="576:13:576:25">tex_cmd_name</jtok>
<jtok eid="14" type="primary_name_ref" span="576:28:576:32">orig</jtok>
<jtok eid="14" type="method_call" span="576:33:576:42">substring</jtok>
<jtok eid="14" type="primary_name_ref" span="576:43:576:60">current_backslash</jtok>
<jtok eid="14" type="primary_name_ref" span="576:66:576:75">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="577:10:577:19">tex_names</jtok>
<jtok eid="14" type="method_call" span="577:20:577:28">contains</jtok>
<jtok eid="14" type="primary_name_ref" span="577:29:577:41">tex_cmd_name</jtok>
<jtok eid="14" type="primary_name_ref" span="578:7:578:17">token_case</jtok>
<jtok eid="14" type="primary_name_ref" span="578:20:578:29">Character</jtok>
<jtok eid="14" type="method_call" span="578:30:578:41">isUpperCase</jtok>
<jtok eid="14" type="primary_name_ref" span="578:42:578:54">tex_cmd_name</jtok>
<jtok eid="14" type="method_call" span="578:55:578:61">charAt</jtok>
<jtok eid="14" type="primary_name_ref" span="579:7:579:28">first_letter_is_found</jtok>
<jtok eid="14" type="primary_name_ref" span="582:5:582:22">current_backslash</jtok>
<jtok eid="14" type="primary_name_ref" span="584:8:584:9">c</jtok>
<jtok eid="14" type="primary_name_ref" span="585:5:585:22">current_backslash</jtok>
<jtok eid="14" type="primary_name_ref" span="585:25:585:34">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="586:8:586:20">braces_level</jtok>
<jtok eid="14" type="primary_name_ref" span="587:9:587:10">c</jtok>
<jtok eid="14" type="primary_name_ref" span="587:21:587:22">c</jtok>
<jtok eid="14" type="primary_name_ref" span="587:33:587:34">c</jtok>
<jtok eid="14" type="primary_name_ref" span="587:43:587:52">Character</jtok>
<jtok eid="14" type="method_call" span="587:53:587:65">isWhitespace</jtok>
<jtok eid="14" type="primary_name_ref" span="587:66:587:67">c</jtok>
<jtok eid="14" type="line_comment" span="589:4:589:70">// Morten Alver 18 Apr 2006: Removed check for hyphen '-' above to</jtok>
<jtok eid="14" type="line_comment" span="590:4:590:14">// prevent</jtok>
<jtok eid="14" type="line_comment" span="591:4:591:66">// problems with names like Bailey-Jones getting broken up and</jtok>
<jtok eid="14" type="line_comment" span="592:4:592:20">// sorted wrong.</jtok>
<jtok eid="14" type="line_comment" span="593:4:593:82">// Aaron Chen 14 Sep 2008: Enable hyphen check for first names like Chang-Chin</jtok>
<jtok eid="14" type="primary_name_ref" span="594:4:594:13">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="596:7:596:17">token_abbr</jtok>
<jtok eid="14" type="primary_name_ref" span="597:4:597:14">token_abbr</jtok>
<jtok eid="14" type="primary_name_ref" span="597:17:597:26">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="598:7:598:16">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="598:19:598:23">orig</jtok>
<jtok eid="14" type="method_call" span="598:24:598:30">length</jtok>
<jtok eid="14" type="primary_name_ref" span="598:36:598:40">orig</jtok>
<jtok eid="14" type="method_call" span="598:41:598:47">charAt</jtok>
<jtok eid="14" type="primary_name_ref" span="598:48:598:57">token_end</jtok>
<jtok eid="14" type="primary_name_ref" span="599:4:599:14">token_term</jtok>
<jtok eid="14" type="primary_name_ref" span="600:7:600:11">orig</jtok>
<jtok eid="14" type="method_call" span="600:12:600:21">substring</jtok>
<jtok eid="14" type="primary_name_ref" span="600:22:600:33">token_start</jtok>
<jtok eid="14" type="primary_name_ref" span="600:35:600:44">token_end</jtok>
<jtok eid="14" type="method_call" span="600:46:600:62">equalsIgnoreCase</jtok>
<jtok eid="14" type="string_literal" span="600:63:600:68">"and"</jtok>
<jtok eid="14" type="primary_name_ref" span="601:11:601:20">TOKEN_AND</jtok>
<jtok eid="14" type="primary_name_ref" span="603:11:603:21">TOKEN_WORD</jtok>
<jtok eid="1" type="block_comment" span="606:2:610:5">/**
	 * Returns the number of author names in this object.
	 * 
	 * @return the number of author names in this object.
	 */</jtok>
<jtok eid="15" type="method_name" span="611:13:611:17">size</jtok>
<jtok eid="15" type="primary_name_ref" span="612:10:612:17">authors</jtok>
<jtok eid="15" type="method_call" span="612:18:612:22">size</jtok>
<jtok eid="1" type="block_comment" span="615:2:621:5">/**
	 * Returns the &lt;CODE&gt;Author&lt;/CODE&gt; object for the i-th author.
	 * 
	 * @param i
	 *            Index of the author (from 0 to &lt;CODE&gt;size()-1&lt;/CODE&gt;).
	 * @return the &lt;CODE&gt;Author&lt;/CODE&gt; object.
	 */</jtok>
<jtok eid="16" type="class_or_interface_ref" span="622:9:622:15">Author</jtok>
<jtok eid="16" type="method_name" span="622:16:622:25">getAuthor</jtok>
<jtok eid="16" type="parameter_name" span="622:30:622:31">i</jtok>
<jtok eid="16" type="primary_name_ref" span="623:10:623:17">authors</jtok>
<jtok eid="16" type="method_call" span="623:18:623:21">get</jtok>
<jtok eid="16" type="primary_name_ref" span="623:22:623:23">i</jtok>
<jtok eid="1" type="block_comment" span="626:2:637:5">/**
	 * Returns the list of authors in "natbib" format.
	 * &lt;p&gt;
	 * &lt;ul&gt;
	 * &lt;li&gt;"John Smith" -&gt; "Smith"&lt;/li&gt;
	 * &lt;li&gt;"John Smith and Black Brown, Peter" ==&gt; "Smith and Black Brown"&lt;/li&gt;
	 * &lt;li&gt;"John von Neumann and John Smith and Black Brown, Peter" ==&gt; "von
	 * Neumann et al." &lt;/li&gt;
	 * &lt;/ul&gt;
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="17" type="class_or_interface_ref" span="638:9:638:15">String</jtok>
<jtok eid="17" type="method_name" span="638:16:638:32">getAuthorsNatbib</jtok>
<jtok eid="17" type="line_comment" span="639:3:639:42">// Check if we've computed this before:</jtok>
<jtok eid="17" type="primary_name_ref" span="640:7:640:20">authorsNatbib</jtok>
<jtok eid="17" type="primary_name_ref" span="641:11:641:24">authorsNatbib</jtok>
<jtok eid="17" type="class_or_interface_ref" span="643:3:643:15">StringBuffer</jtok>
<jtok eid="17" type="local_variable_name" span="643:16:643:19">res</jtok>
<jtok eid="17" type="constructor_call" span="643:26:643:38">StringBuffer</jtok>
<jtok eid="17" type="method_call" span="644:7:644:11">size</jtok>
<jtok eid="17" type="primary_name_ref" span="645:4:645:7">res</jtok>
<jtok eid="17" type="method_call" span="645:8:645:14">append</jtok>
<jtok eid="17" type="method_call" span="645:15:645:24">getAuthor</jtok>
<jtok eid="17" type="method_call" span="645:28:645:39">getLastOnly</jtok>
<jtok eid="17" type="method_call" span="646:8:646:12">size</jtok>
<jtok eid="17" type="primary_name_ref" span="647:5:647:8">res</jtok>
<jtok eid="17" type="method_call" span="647:9:647:15">append</jtok>
<jtok eid="17" type="string_literal" span="647:16:647:23">" and "</jtok>
<jtok eid="17" type="primary_name_ref" span="648:5:648:8">res</jtok>
<jtok eid="17" type="method_call" span="648:9:648:15">append</jtok>
<jtok eid="17" type="method_call" span="648:16:648:25">getAuthor</jtok>
<jtok eid="17" type="method_call" span="648:29:648:40">getLastOnly</jtok>
<jtok eid="17" type="method_call" span="649:15:649:19">size</jtok>
<jtok eid="17" type="primary_name_ref" span="650:5:650:8">res</jtok>
<jtok eid="17" type="method_call" span="650:9:650:15">append</jtok>
<jtok eid="17" type="string_literal" span="650:16:650:25">" et al."</jtok>
<jtok eid="17" type="primary_name_ref" span="653:3:653:16">authorsNatbib</jtok>
<jtok eid="17" type="primary_name_ref" span="653:19:653:22">res</jtok>
<jtok eid="17" type="method_call" span="653:23:653:31">toString</jtok>
<jtok eid="17" type="primary_name_ref" span="654:10:654:23">authorsNatbib</jtok>
<jtok eid="1" type="block_comment" span="657:2:677:5">/**
	 * Returns the list of authors separated by commas with last name only; If
	 * the list consists of three or more authors, "and" is inserted before the
	 * last author's name.
	 * &lt;p&gt;
	 * 
	 * &lt;ul&gt;
	 * &lt;li&gt; "John Smith" ==&gt; "Smith"&lt;/li&gt;
	 * &lt;li&gt; "John Smith and Black Brown, Peter" ==&gt; "Smith and Black Brown"&lt;/li&gt;
	 * &lt;li&gt; "John von Neumann and John Smith and Black Brown, Peter" ==&gt; "von
	 * Neumann, Smith and Black Brown".&lt;/li&gt;
	 * &lt;/ul&gt;
	 * 
	 * @param oxfordComma
	 *            Whether to put a comma before the and at the end.
	 * 
	 * @see http://en.wikipedia.org/wiki/Serial_comma For an detailed
	 *      explaination about the Oxford comma.
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="18" type="class_or_interface_ref" span="678:9:678:15">String</jtok>
<jtok eid="18" type="method_name" span="678:16:678:34">getAuthorsLastOnly</jtok>
<jtok eid="18" type="parameter_name" span="678:43:678:54">oxfordComma</jtok>
<jtok eid="18" type="local_variable_name" span="679:7:679:14">abbrInt</jtok>
<jtok eid="18" type="primary_name_ref" span="679:18:679:29">oxfordComma</jtok>
<jtok eid="18" type="line_comment" span="681:3:681:42">// Check if we've computed this before:</jtok>
<jtok eid="18" type="primary_name_ref" span="682:7:682:22">authorsLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="682:23:682:30">abbrInt</jtok>
<jtok eid="18" type="primary_name_ref" span="683:11:683:26">authorsLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="683:27:683:34">abbrInt</jtok>
<jtok eid="18" type="class_or_interface_ref" span="685:3:685:15">StringBuffer</jtok>
<jtok eid="18" type="local_variable_name" span="685:16:685:19">res</jtok>
<jtok eid="18" type="constructor_call" span="685:26:685:38">StringBuffer</jtok>
<jtok eid="18" type="method_call" span="686:7:686:11">size</jtok>
<jtok eid="18" type="primary_name_ref" span="687:4:687:7">res</jtok>
<jtok eid="18" type="method_call" span="687:8:687:14">append</jtok>
<jtok eid="18" type="method_call" span="687:15:687:24">getAuthor</jtok>
<jtok eid="18" type="method_call" span="687:28:687:39">getLastOnly</jtok>
<jtok eid="18" type="local_variable_name" span="688:8:688:9">i</jtok>
<jtok eid="18" type="primary_name_ref" span="689:11:689:12">i</jtok>
<jtok eid="18" type="method_call" span="689:15:689:19">size</jtok>
<jtok eid="18" type="primary_name_ref" span="690:5:690:8">res</jtok>
<jtok eid="18" type="method_call" span="690:9:690:15">append</jtok>
<jtok eid="18" type="string_literal" span="690:16:690:20">", "</jtok>
<jtok eid="18" type="primary_name_ref" span="691:5:691:8">res</jtok>
<jtok eid="18" type="method_call" span="691:9:691:15">append</jtok>
<jtok eid="18" type="method_call" span="691:16:691:25">getAuthor</jtok>
<jtok eid="18" type="primary_name_ref" span="691:26:691:27">i</jtok>
<jtok eid="18" type="method_call" span="691:29:691:40">getLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="692:5:692:6">i</jtok>
<jtok eid="18" type="method_call" span="694:8:694:12">size</jtok>
<jtok eid="18" type="primary_name_ref" span="694:22:694:33">oxfordComma</jtok>
<jtok eid="18" type="primary_name_ref" span="695:5:695:8">res</jtok>
<jtok eid="18" type="method_call" span="695:9:695:15">append</jtok>
<jtok eid="18" type="string_literal" span="695:16:695:19">","</jtok>
<jtok eid="18" type="method_call" span="696:8:696:12">size</jtok>
<jtok eid="18" type="primary_name_ref" span="697:5:697:8">res</jtok>
<jtok eid="18" type="method_call" span="697:9:697:15">append</jtok>
<jtok eid="18" type="string_literal" span="697:16:697:23">" and "</jtok>
<jtok eid="18" type="primary_name_ref" span="698:5:698:8">res</jtok>
<jtok eid="18" type="method_call" span="698:9:698:15">append</jtok>
<jtok eid="18" type="method_call" span="698:16:698:25">getAuthor</jtok>
<jtok eid="18" type="primary_name_ref" span="698:26:698:27">i</jtok>
<jtok eid="18" type="method_call" span="698:29:698:40">getLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="701:3:701:18">authorsLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="701:19:701:26">abbrInt</jtok>
<jtok eid="18" type="primary_name_ref" span="701:30:701:33">res</jtok>
<jtok eid="18" type="method_call" span="701:34:701:42">toString</jtok>
<jtok eid="18" type="primary_name_ref" span="702:10:702:25">authorsLastOnly</jtok>
<jtok eid="18" type="primary_name_ref" span="702:26:702:33">abbrInt</jtok>
<jtok eid="1" type="block_comment" span="705:2:731:5">/**
	 * Returns the list of authors separated by commas with first names after
	 * last name; first names are abbreviated or not depending on parameter. If
	 * the list consists of three or more authors, "and" is inserted before the
	 * last author's name.
	 * &lt;p&gt;
	 * 
	 * &lt;ul&gt;
	 * &lt;li&gt; "John Smith" ==&gt; "Smith, John" or "Smith, J."&lt;/li&gt;
	 * &lt;li&gt; "John Smith and Black Brown, Peter" ==&gt; "Smith, John and Black
	 * Brown, Peter" or "Smith, J. and Black Brown, P."&lt;/li&gt;
	 * &lt;li&gt; "John von Neumann and John Smith and Black Brown, Peter" ==&gt; "von
	 * Neumann, John, Smith, John and Black Brown, Peter" or "von Neumann, J.,
	 * Smith, J. and Black Brown, P.".&lt;/li&gt;
	 * &lt;/ul&gt;
	 * 
	 * @param abbreviate
	 *            whether to abbreivate first names.
	 * 
	 * @param oxfordComma
	 *            Whether to put a comma before the and at the end.
	 * 
	 * @see http://en.wikipedia.org/wiki/Serial_comma For an detailed
	 *      explaination about the Oxford comma.
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="19" type="class_or_interface_ref" span="732:9:732:15">String</jtok>
<jtok eid="19" type="method_name" span="732:16:732:35">getAuthorsLastFirst</jtok>
<jtok eid="19" type="parameter_name" span="732:44:732:54">abbreviate</jtok>
<jtok eid="19" type="parameter_name" span="732:64:732:75">oxfordComma</jtok>
<jtok eid="19" type="local_variable_name" span="733:7:733:14">abbrInt</jtok>
<jtok eid="19" type="primary_name_ref" span="733:18:733:28">abbreviate</jtok>
<jtok eid="19" type="primary_name_ref" span="734:3:734:10">abbrInt</jtok>
<jtok eid="19" type="primary_name_ref" span="734:15:734:26">oxfordComma</jtok>
<jtok eid="19" type="line_comment" span="736:3:736:42">// Check if we've computed this before:</jtok>
<jtok eid="19" type="primary_name_ref" span="737:7:737:23">authorsLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="737:24:737:31">abbrInt</jtok>
<jtok eid="19" type="primary_name_ref" span="738:11:738:27">authorsLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="738:28:738:35">abbrInt</jtok>
<jtok eid="19" type="class_or_interface_ref" span="740:3:740:15">StringBuffer</jtok>
<jtok eid="19" type="local_variable_name" span="740:16:740:19">res</jtok>
<jtok eid="19" type="constructor_call" span="740:26:740:38">StringBuffer</jtok>
<jtok eid="19" type="method_call" span="741:7:741:11">size</jtok>
<jtok eid="19" type="primary_name_ref" span="742:4:742:7">res</jtok>
<jtok eid="19" type="method_call" span="742:8:742:14">append</jtok>
<jtok eid="19" type="method_call" span="742:15:742:24">getAuthor</jtok>
<jtok eid="19" type="method_call" span="742:28:742:40">getLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="742:41:742:51">abbreviate</jtok>
<jtok eid="19" type="local_variable_name" span="743:8:743:9">i</jtok>
<jtok eid="19" type="primary_name_ref" span="744:11:744:12">i</jtok>
<jtok eid="19" type="method_call" span="744:15:744:19">size</jtok>
<jtok eid="19" type="primary_name_ref" span="745:5:745:8">res</jtok>
<jtok eid="19" type="method_call" span="745:9:745:15">append</jtok>
<jtok eid="19" type="string_literal" span="745:16:745:20">", "</jtok>
<jtok eid="19" type="primary_name_ref" span="746:5:746:8">res</jtok>
<jtok eid="19" type="method_call" span="746:9:746:15">append</jtok>
<jtok eid="19" type="method_call" span="746:16:746:25">getAuthor</jtok>
<jtok eid="19" type="primary_name_ref" span="746:26:746:27">i</jtok>
<jtok eid="19" type="method_call" span="746:29:746:41">getLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="746:42:746:52">abbreviate</jtok>
<jtok eid="19" type="primary_name_ref" span="747:5:747:6">i</jtok>
<jtok eid="19" type="method_call" span="749:8:749:12">size</jtok>
<jtok eid="19" type="primary_name_ref" span="749:22:749:33">oxfordComma</jtok>
<jtok eid="19" type="primary_name_ref" span="750:5:750:8">res</jtok>
<jtok eid="19" type="method_call" span="750:9:750:15">append</jtok>
<jtok eid="19" type="string_literal" span="750:16:750:19">","</jtok>
<jtok eid="19" type="method_call" span="751:8:751:12">size</jtok>
<jtok eid="19" type="primary_name_ref" span="752:5:752:8">res</jtok>
<jtok eid="19" type="method_call" span="752:9:752:15">append</jtok>
<jtok eid="19" type="string_literal" span="752:16:752:23">" and "</jtok>
<jtok eid="19" type="primary_name_ref" span="753:5:753:8">res</jtok>
<jtok eid="19" type="method_call" span="753:9:753:15">append</jtok>
<jtok eid="19" type="method_call" span="753:16:753:25">getAuthor</jtok>
<jtok eid="19" type="primary_name_ref" span="753:26:753:27">i</jtok>
<jtok eid="19" type="method_call" span="753:29:753:41">getLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="753:42:753:52">abbreviate</jtok>
<jtok eid="19" type="primary_name_ref" span="756:3:756:19">authorsLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="756:20:756:27">abbrInt</jtok>
<jtok eid="19" type="primary_name_ref" span="756:31:756:34">res</jtok>
<jtok eid="19" type="method_call" span="756:35:756:43">toString</jtok>
<jtok eid="19" type="primary_name_ref" span="757:10:757:26">authorsLastFirst</jtok>
<jtok eid="19" type="primary_name_ref" span="757:27:757:34">abbrInt</jtok>
<jtok eid="20" type="class_or_interface_ref" span="760:9:760:15">String</jtok>
<jtok eid="20" type="method_name" span="760:16:760:24">toString</jtok>
<jtok eid="20" type="method_call" span="761:10:761:33">getAuthorsLastFirstAnds</jtok>
<jtok eid="1" type="block_comment" span="764:2:777:5">/**
	 * Returns the list of authors separated by "and"s with first names after
	 * last name; first names are not abbreviated.
	 * &lt;p&gt;
	 * &lt;ul&gt;
	 * &lt;li&gt;"John Smith" ==&gt; "Smith, John"&lt;/li&gt;
	 * &lt;li&gt;"John Smith and Black Brown, Peter" ==&gt; "Smith, John and Black
	 * Brown, Peter"&lt;/li&gt;
	 * &lt;li&gt;"John von Neumann and John Smith and Black Brown, Peter" ==&gt; "von
	 * Neumann, John and Smith, John and Black Brown, Peter".&lt;/li&gt;
	 * &lt;/ul&gt;
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="21" type="class_or_interface_ref" span="778:9:778:15">String</jtok>
<jtok eid="21" type="method_name" span="778:16:778:39">getAuthorsLastFirstAnds</jtok>
<jtok eid="21" type="parameter_name" span="778:48:778:58">abbreviate</jtok>
<jtok eid="21" type="local_variable_name" span="779:7:779:14">abbrInt</jtok>
<jtok eid="21" type="primary_name_ref" span="779:18:779:28">abbreviate</jtok>
<jtok eid="21" type="line_comment" span="780:3:780:42">// Check if we've computed this before:</jtok>
<jtok eid="21" type="primary_name_ref" span="781:7:781:26">authorLastFirstAnds</jtok>
<jtok eid="21" type="primary_name_ref" span="781:27:781:34">abbrInt</jtok>
<jtok eid="21" type="primary_name_ref" span="782:11:782:30">authorLastFirstAnds</jtok>
<jtok eid="21" type="primary_name_ref" span="782:31:782:38">abbrInt</jtok>
<jtok eid="21" type="class_or_interface_ref" span="784:3:784:15">StringBuffer</jtok>
<jtok eid="21" type="local_variable_name" span="784:16:784:19">res</jtok>
<jtok eid="21" type="constructor_call" span="784:26:784:38">StringBuffer</jtok>
<jtok eid="21" type="method_call" span="785:7:785:11">size</jtok>
<jtok eid="21" type="primary_name_ref" span="786:4:786:7">res</jtok>
<jtok eid="21" type="method_call" span="786:8:786:14">append</jtok>
<jtok eid="21" type="method_call" span="786:15:786:24">getAuthor</jtok>
<jtok eid="21" type="method_call" span="786:28:786:40">getLastFirst</jtok>
<jtok eid="21" type="primary_name_ref" span="786:41:786:51">abbreviate</jtok>
<jtok eid="21" type="local_variable_name" span="787:13:787:14">i</jtok>
<jtok eid="21" type="primary_name_ref" span="787:20:787:21">i</jtok>
<jtok eid="21" type="method_call" span="787:24:787:28">size</jtok>
<jtok eid="21" type="primary_name_ref" span="787:32:787:33">i</jtok>
<jtok eid="21" type="primary_name_ref" span="788:5:788:8">res</jtok>
<jtok eid="21" type="method_call" span="788:9:788:15">append</jtok>
<jtok eid="21" type="string_literal" span="788:16:788:23">" and "</jtok>
<jtok eid="21" type="primary_name_ref" span="789:5:789:8">res</jtok>
<jtok eid="21" type="method_call" span="789:9:789:15">append</jtok>
<jtok eid="21" type="method_call" span="789:16:789:25">getAuthor</jtok>
<jtok eid="21" type="primary_name_ref" span="789:26:789:27">i</jtok>
<jtok eid="21" type="method_call" span="789:29:789:41">getLastFirst</jtok>
<jtok eid="21" type="primary_name_ref" span="789:42:789:52">abbreviate</jtok>
<jtok eid="21" type="primary_name_ref" span="793:3:793:22">authorLastFirstAnds</jtok>
<jtok eid="21" type="primary_name_ref" span="793:23:793:30">abbrInt</jtok>
<jtok eid="21" type="primary_name_ref" span="793:34:793:37">res</jtok>
<jtok eid="21" type="method_call" span="793:38:793:46">toString</jtok>
<jtok eid="21" type="primary_name_ref" span="794:10:794:29">authorLastFirstAnds</jtok>
<jtok eid="21" type="primary_name_ref" span="794:30:794:37">abbrInt</jtok>
<jtok eid="22" type="class_or_interface_ref" span="797:9:797:15">String</jtok>
<jtok eid="22" type="method_name" span="797:16:797:48">getAuthorsLastFirstFirstLastAnds</jtok>
<jtok eid="22" type="parameter_name" span="797:57:797:67">abbreviate</jtok>
<jtok eid="22" type="local_variable_name" span="798:7:798:14">abbrInt</jtok>
<jtok eid="22" type="primary_name_ref" span="798:18:798:28">abbreviate</jtok>
<jtok eid="22" type="line_comment" span="799:3:799:42">// Check if we've computed this before:</jtok>
<jtok eid="22" type="primary_name_ref" span="800:7:800:32">authorsLastFirstFirstLast</jtok>
<jtok eid="22" type="primary_name_ref" span="800:33:800:40">abbrInt</jtok>
<jtok eid="22" type="primary_name_ref" span="801:11:801:36">authorsLastFirstFirstLast</jtok>
<jtok eid="22" type="primary_name_ref" span="801:37:801:44">abbrInt</jtok>
<jtok eid="22" type="class_or_interface_ref" span="803:3:803:15">StringBuffer</jtok>
<jtok eid="22" type="local_variable_name" span="803:16:803:19">res</jtok>
<jtok eid="22" type="constructor_call" span="803:26:803:38">StringBuffer</jtok>
<jtok eid="22" type="method_call" span="804:7:804:11">size</jtok>
<jtok eid="22" type="primary_name_ref" span="805:13:805:16">res</jtok>
<jtok eid="22" type="method_call" span="805:17:805:23">append</jtok>
<jtok eid="22" type="method_call" span="805:24:805:33">getAuthor</jtok>
<jtok eid="22" type="method_call" span="805:37:805:49">getLastFirst</jtok>
<jtok eid="22" type="primary_name_ref" span="805:50:805:60">abbreviate</jtok>
<jtok eid="22" type="local_variable_name" span="806:13:806:14">i</jtok>
<jtok eid="22" type="primary_name_ref" span="806:20:806:21">i</jtok>
<jtok eid="22" type="method_call" span="806:24:806:28">size</jtok>
<jtok eid="22" type="primary_name_ref" span="806:32:806:33">i</jtok>
<jtok eid="22" type="primary_name_ref" span="807:5:807:8">res</jtok>
<jtok eid="22" type="method_call" span="807:9:807:15">append</jtok>
<jtok eid="22" type="string_literal" span="807:16:807:23">" and "</jtok>
<jtok eid="22" type="primary_name_ref" span="808:5:808:8">res</jtok>
<jtok eid="22" type="method_call" span="808:9:808:15">append</jtok>
<jtok eid="22" type="method_call" span="808:16:808:25">getAuthor</jtok>
<jtok eid="22" type="primary_name_ref" span="808:26:808:27">i</jtok>
<jtok eid="22" type="method_call" span="808:29:808:41">getFirstLast</jtok>
<jtok eid="22" type="primary_name_ref" span="808:42:808:52">abbreviate</jtok>
<jtok eid="22" type="primary_name_ref" span="812:3:812:28">authorsLastFirstFirstLast</jtok>
<jtok eid="22" type="primary_name_ref" span="812:29:812:36">abbrInt</jtok>
<jtok eid="22" type="primary_name_ref" span="812:40:812:43">res</jtok>
<jtok eid="22" type="method_call" span="812:44:812:52">toString</jtok>
<jtok eid="22" type="primary_name_ref" span="813:10:813:35">authorsLastFirstFirstLast</jtok>
<jtok eid="22" type="primary_name_ref" span="813:36:813:43">abbrInt</jtok>
<jtok eid="1" type="block_comment" span="816:2:841:5">/**
	 * Returns the list of authors separated by commas with first names before
	 * last name; first names are abbreviated or not depending on parameter. If
	 * the list consists of three or more authors, "and" is inserted before the
	 * last author's name.
	 * &lt;p&gt;
	 * &lt;ul&gt;
	 * &lt;li&gt;"John Smith" ==&gt; "John Smith" or "J. Smith"&lt;/li&gt;
	 * &lt;li&gt;"John Smith and Black Brown, Peter" ==&gt; "John Smith and Peter Black
	 * Brown" or "J. Smith and P. Black Brown"&lt;/li&gt;
	 * &lt;li&gt; "John von Neumann and John Smith and Black Brown, Peter" ==&gt; "John
	 * von Neumann, John Smith and Peter Black Brown" or "J. von Neumann, J.
	 * Smith and P. Black Brown" &lt;/li&gt;
	 * &lt;/ul&gt;
	 * 
	 * @param abbr
	 *            whether to abbreivate first names.
	 * 
	 * @param oxfordComma
	 *            Whether to put a comma before the and at the end.
	 * 
	 * @see http://en.wikipedia.org/wiki/Serial_comma For an detailed
	 *      explaination about the Oxford comma.
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="23" type="class_or_interface_ref" span="842:9:842:15">String</jtok>
<jtok eid="23" type="method_name" span="842:16:842:36">getAuthorsFirstFirst</jtok>
<jtok eid="23" type="parameter_name" span="842:45:842:49">abbr</jtok>
<jtok eid="23" type="parameter_name" span="842:59:842:70">oxfordComma</jtok>
<jtok eid="23" type="local_variable_name" span="844:7:844:14">abbrInt</jtok>
<jtok eid="23" type="primary_name_ref" span="844:18:844:22">abbr</jtok>
<jtok eid="23" type="primary_name_ref" span="845:3:845:10">abbrInt</jtok>
<jtok eid="23" type="primary_name_ref" span="845:15:845:26">oxfordComma</jtok>
<jtok eid="23" type="line_comment" span="847:3:847:42">// Check if we've computed this before:</jtok>
<jtok eid="23" type="primary_name_ref" span="848:7:848:24">authorsFirstFirst</jtok>
<jtok eid="23" type="primary_name_ref" span="848:25:848:32">abbrInt</jtok>
<jtok eid="23" type="primary_name_ref" span="849:11:849:28">authorsFirstFirst</jtok>
<jtok eid="23" type="primary_name_ref" span="849:29:849:36">abbrInt</jtok>
<jtok eid="23" type="class_or_interface_ref" span="851:3:851:15">StringBuffer</jtok>
<jtok eid="23" type="local_variable_name" span="851:16:851:19">res</jtok>
<jtok eid="23" type="constructor_call" span="851:26:851:38">StringBuffer</jtok>
<jtok eid="23" type="method_call" span="852:7:852:11">size</jtok>
<jtok eid="23" type="primary_name_ref" span="853:4:853:7">res</jtok>
<jtok eid="23" type="method_call" span="853:8:853:14">append</jtok>
<jtok eid="23" type="method_call" span="853:15:853:24">getAuthor</jtok>
<jtok eid="23" type="method_call" span="853:28:853:40">getFirstLast</jtok>
<jtok eid="23" type="primary_name_ref" span="853:41:853:45">abbr</jtok>
<jtok eid="23" type="local_variable_name" span="854:8:854:9">i</jtok>
<jtok eid="23" type="primary_name_ref" span="855:11:855:12">i</jtok>
<jtok eid="23" type="method_call" span="855:15:855:19">size</jtok>
<jtok eid="23" type="primary_name_ref" span="856:5:856:8">res</jtok>
<jtok eid="23" type="method_call" span="856:9:856:15">append</jtok>
<jtok eid="23" type="string_literal" span="856:16:856:20">", "</jtok>
<jtok eid="23" type="primary_name_ref" span="857:5:857:8">res</jtok>
<jtok eid="23" type="method_call" span="857:9:857:15">append</jtok>
<jtok eid="23" type="method_call" span="857:16:857:25">getAuthor</jtok>
<jtok eid="23" type="primary_name_ref" span="857:26:857:27">i</jtok>
<jtok eid="23" type="method_call" span="857:29:857:41">getFirstLast</jtok>
<jtok eid="23" type="primary_name_ref" span="857:42:857:46">abbr</jtok>
<jtok eid="23" type="primary_name_ref" span="858:5:858:6">i</jtok>
<jtok eid="23" type="method_call" span="860:8:860:12">size</jtok>
<jtok eid="23" type="primary_name_ref" span="860:22:860:33">oxfordComma</jtok>
<jtok eid="23" type="primary_name_ref" span="861:5:861:8">res</jtok>
<jtok eid="23" type="method_call" span="861:9:861:15">append</jtok>
<jtok eid="23" type="string_literal" span="861:16:861:19">","</jtok>
<jtok eid="23" type="method_call" span="862:8:862:12">size</jtok>
<jtok eid="23" type="primary_name_ref" span="863:5:863:8">res</jtok>
<jtok eid="23" type="method_call" span="863:9:863:15">append</jtok>
<jtok eid="23" type="string_literal" span="863:16:863:23">" and "</jtok>
<jtok eid="23" type="primary_name_ref" span="864:5:864:8">res</jtok>
<jtok eid="23" type="method_call" span="864:9:864:15">append</jtok>
<jtok eid="23" type="method_call" span="864:16:864:25">getAuthor</jtok>
<jtok eid="23" type="primary_name_ref" span="864:26:864:27">i</jtok>
<jtok eid="23" type="method_call" span="864:29:864:41">getFirstLast</jtok>
<jtok eid="23" type="primary_name_ref" span="864:42:864:46">abbr</jtok>
<jtok eid="23" type="primary_name_ref" span="867:3:867:20">authorsFirstFirst</jtok>
<jtok eid="23" type="primary_name_ref" span="867:21:867:28">abbrInt</jtok>
<jtok eid="23" type="primary_name_ref" span="867:32:867:35">res</jtok>
<jtok eid="23" type="method_call" span="867:36:867:44">toString</jtok>
<jtok eid="23" type="primary_name_ref" span="868:10:868:27">authorsFirstFirst</jtok>
<jtok eid="23" type="primary_name_ref" span="868:28:868:35">abbrInt</jtok>
<jtok eid="1" type="block_comment" span="871:2:875:5">/**
	 * Compare this object with the given one. 
	 * 
	 * Will return true iff the other object is an Author and all fields are identical on a string comparison.
	 */</jtok>
<jtok eid="24" type="method_name" span="876:17:876:23">equals</jtok>
<jtok eid="24" type="parameter_type" span="876:24:876:30">Object</jtok>
<jtok eid="24" type="parameter_name" span="876:31:876:32">o</jtok>
<jtok eid="24" type="primary_name_ref" span="877:9:877:10">o</jtok>
<jtok eid="24" type="class_or_interface_ref" span="877:22:877:32">AuthorList</jtok>
<jtok eid="24" type="class_or_interface_ref" span="880:3:880:13">AuthorList</jtok>
<jtok eid="24" type="local_variable_name" span="880:14:880:15">a</jtok>
<jtok eid="24" type="class_or_interface_ref" span="880:19:880:29">AuthorList</jtok>
<jtok eid="24" type="primary_name_ref" span="880:31:880:32">o</jtok>
<jtok eid="24" type="qualified_name_ref" span="882:15:882:22">authors</jtok>
<jtok eid="24" type="method_call" span="882:23:882:29">equals</jtok>
<jtok eid="24" type="primary_name_ref" span="882:30:882:31">a</jtok>
<jtok eid="24" type="qualified_name_ref" span="882:32:882:39">authors</jtok>
<jtok eid="1" type="block_comment" span="885:2:898:5">/**
	 * Returns the list of authors separated by "and"s with first names before
	 * last name; first names are not abbreviated.
	 * &lt;p&gt;
	 * &lt;ul&gt;
	 * &lt;li&gt;"John Smith" ==&gt; "John Smith"&lt;/li&gt;
	 * &lt;li&gt;"John Smith and Black Brown, Peter" ==&gt; "John Smith and Peter Black
	 * Brown"&lt;/li&gt;
	 * &lt;li&gt;"John von Neumann and John Smith and Black Brown, Peter" ==&gt; "John
	 * von Neumann and John Smith and Peter Black Brown" &lt;/li&gt;
	 * &lt;/li&gt;
	 * 
	 * @return formatted list of authors.
	 */</jtok>
<jtok eid="25" type="class_or_interface_ref" span="899:9:899:15">String</jtok>
<jtok eid="25" type="method_name" span="899:16:899:40">getAuthorsFirstFirstAnds</jtok>
<jtok eid="25" type="line_comment" span="900:3:900:42">// Check if we've computed this before:</jtok>
<jtok eid="25" type="primary_name_ref" span="901:7:901:28">authorsFirstFirstAnds</jtok>
<jtok eid="25" type="primary_name_ref" span="902:11:902:32">authorsFirstFirstAnds</jtok>
<jtok eid="25" type="class_or_interface_ref" span="904:3:904:15">StringBuffer</jtok>
<jtok eid="25" type="local_variable_name" span="904:16:904:19">res</jtok>
<jtok eid="25" type="constructor_call" span="904:26:904:38">StringBuffer</jtok>
<jtok eid="25" type="method_call" span="905:7:905:11">size</jtok>
<jtok eid="25" type="primary_name_ref" span="906:4:906:7">res</jtok>
<jtok eid="25" type="method_call" span="906:8:906:14">append</jtok>
<jtok eid="25" type="method_call" span="906:15:906:24">getAuthor</jtok>
<jtok eid="25" type="method_call" span="906:28:906:40">getFirstLast</jtok>
<jtok eid="25" type="local_variable_name" span="907:13:907:14">i</jtok>
<jtok eid="25" type="primary_name_ref" span="907:20:907:21">i</jtok>
<jtok eid="25" type="method_call" span="907:24:907:28">size</jtok>
<jtok eid="25" type="primary_name_ref" span="907:32:907:33">i</jtok>
<jtok eid="25" type="primary_name_ref" span="908:5:908:8">res</jtok>
<jtok eid="25" type="method_call" span="908:9:908:15">append</jtok>
<jtok eid="25" type="string_literal" span="908:16:908:23">" and "</jtok>
<jtok eid="25" type="primary_name_ref" span="909:5:909:8">res</jtok>
<jtok eid="25" type="method_call" span="909:9:909:15">append</jtok>
<jtok eid="25" type="method_call" span="909:16:909:25">getAuthor</jtok>
<jtok eid="25" type="primary_name_ref" span="909:26:909:27">i</jtok>
<jtok eid="25" type="method_call" span="909:29:909:41">getFirstLast</jtok>
<jtok eid="25" type="primary_name_ref" span="912:3:912:24">authorsFirstFirstAnds</jtok>
<jtok eid="25" type="primary_name_ref" span="912:27:912:30">res</jtok>
<jtok eid="25" type="method_call" span="912:31:912:39">toString</jtok>
<jtok eid="25" type="primary_name_ref" span="913:10:913:31">authorsFirstFirstAnds</jtok>
<jtok eid="1" type="block_comment" span="916:2:929:5">/**
	 * Returns the list of authors in a form suitable for alphabetization. This
	 * means that last names come first, never preceded by "von" particles, and
	 * that any braces are removed. First names are abbreviated so the same name
	 * is treated similarly if abbreviated in one case and not in another. This
	 * form is not intended to be suitable for presentation, only for sorting.
	 * 
	 * &lt;p&gt;
	 * &lt;ul&gt;
	 * &lt;li&gt;"John Smith" ==&gt; "Smith, J.";&lt;/li&gt;
	 * 
	 * 
	 * @return formatted list of authors
	 */</jtok>
<jtok eid="26" type="class_or_interface_ref" span="930:9:930:15">String</jtok>
<jtok eid="26" type="method_name" span="930:16:930:44">getAuthorsForAlphabetization</jtok>
<jtok eid="26" type="primary_name_ref" span="931:7:931:18">authorsAlph</jtok>
<jtok eid="26" type="primary_name_ref" span="932:11:932:22">authorsAlph</jtok>
<jtok eid="26" type="class_or_interface_ref" span="934:3:934:15">StringBuffer</jtok>
<jtok eid="26" type="local_variable_name" span="934:16:934:19">res</jtok>
<jtok eid="26" type="constructor_call" span="934:26:934:38">StringBuffer</jtok>
<jtok eid="26" type="method_call" span="935:7:935:11">size</jtok>
<jtok eid="26" type="primary_name_ref" span="936:4:936:7">res</jtok>
<jtok eid="26" type="method_call" span="936:8:936:14">append</jtok>
<jtok eid="26" type="method_call" span="936:15:936:24">getAuthor</jtok>
<jtok eid="26" type="method_call" span="936:28:936:53">getNameForAlphabetization</jtok>
<jtok eid="26" type="local_variable_name" span="937:13:937:14">i</jtok>
<jtok eid="26" type="primary_name_ref" span="937:20:937:21">i</jtok>
<jtok eid="26" type="method_call" span="937:24:937:28">size</jtok>
<jtok eid="26" type="primary_name_ref" span="937:32:937:33">i</jtok>
<jtok eid="26" type="primary_name_ref" span="938:5:938:8">res</jtok>
<jtok eid="26" type="method_call" span="938:9:938:15">append</jtok>
<jtok eid="26" type="string_literal" span="938:16:938:23">" and "</jtok>
<jtok eid="26" type="primary_name_ref" span="939:5:939:8">res</jtok>
<jtok eid="26" type="method_call" span="939:9:939:15">append</jtok>
<jtok eid="26" type="method_call" span="939:16:939:25">getAuthor</jtok>
<jtok eid="26" type="primary_name_ref" span="939:26:939:27">i</jtok>
<jtok eid="26" type="method_call" span="939:29:939:54">getNameForAlphabetization</jtok>
<jtok eid="26" type="primary_name_ref" span="942:3:942:14">authorsAlph</jtok>
<jtok eid="26" type="primary_name_ref" span="942:17:942:20">res</jtok>
<jtok eid="26" type="method_call" span="942:21:942:29">toString</jtok>
<jtok eid="26" type="primary_name_ref" span="943:10:943:21">authorsAlph</jtok>
<jtok eid="1" type="block_comment" span="946:2:954:5">/**
	 * This is an immutable class that keeps information regarding single
	 * author. It is just a container for the information, with very simple
	 * methods to access it.
	 * &lt;p&gt;
	 * Current usage: only methods &lt;code&gt;getLastOnly&lt;/code&gt;,
	 * &lt;code&gt;getFirstLast&lt;/code&gt;, and &lt;code&gt;getLastFirst&lt;/code&gt; are used;
	 * all other methods are provided for completeness.
	 */</jtok>
<jtok eid="27" type="class_name" span="955:22:955:28">Author</jtok>
<jtok eid="27" type="class_or_interface_ref" span="957:17:957:23">String</jtok>
<jtok eid="27" type="field_name" span="957:24:957:34">first_part</jtok>
<jtok eid="27" type="class_or_interface_ref" span="959:17:959:23">String</jtok>
<jtok eid="27" type="field_name" span="959:24:959:34">first_abbr</jtok>
<jtok eid="27" type="class_or_interface_ref" span="961:17:961:23">String</jtok>
<jtok eid="27" type="field_name" span="961:24:961:32">von_part</jtok>
<jtok eid="27" type="class_or_interface_ref" span="963:17:963:23">String</jtok>
<jtok eid="27" type="field_name" span="963:24:963:33">last_part</jtok>
<jtok eid="27" type="class_or_interface_ref" span="965:17:965:23">String</jtok>
<jtok eid="27" type="field_name" span="965:24:965:31">jr_part</jtok>
<jtok eid="27" type="block_comment" span="967:3:971:6">/**
		 * Compare this object with the given one. 
		 * 
		 * Will return true iff the other object is an Author and all fields are identical on a string comparison.
		 */</jtok>
<jtok eid="28" type="method_name" span="972:18:972:24">equals</jtok>
<jtok eid="28" type="parameter_type" span="972:25:972:31">Object</jtok>
<jtok eid="28" type="parameter_name" span="972:32:972:33">o</jtok>
<jtok eid="28" type="primary_name_ref" span="973:10:973:11">o</jtok>
<jtok eid="28" type="class_or_interface_ref" span="973:23:973:29">Author</jtok>
<jtok eid="28" type="class_or_interface_ref" span="976:4:976:10">Author</jtok>
<jtok eid="28" type="local_variable_name" span="976:11:976:12">a</jtok>
<jtok eid="28" type="class_or_interface_ref" span="976:16:976:22">Author</jtok>
<jtok eid="28" type="primary_name_ref" span="976:24:976:25">o</jtok>
<jtok eid="28" type="primary_name_ref" span="977:11:977:15">Util</jtok>
<jtok eid="28" type="method_call" span="977:16:977:22">equals</jtok>
<jtok eid="28" type="primary_name_ref" span="977:23:977:33">first_part</jtok>
<jtok eid="28" type="primary_name_ref" span="977:35:977:36">a</jtok>
<jtok eid="28" type="qualified_name_ref" span="977:37:977:47">first_part</jtok>
<jtok eid="28" type="primary_name_ref" span="978:9:978:13">Util</jtok>
<jtok eid="28" type="method_call" span="978:14:978:20">equals</jtok>
<jtok eid="28" type="primary_name_ref" span="978:21:978:31">first_abbr</jtok>
<jtok eid="28" type="primary_name_ref" span="978:33:978:34">a</jtok>
<jtok eid="28" type="qualified_name_ref" span="978:35:978:45">first_abbr</jtok>
<jtok eid="28" type="primary_name_ref" span="979:9:979:13">Util</jtok>
<jtok eid="28" type="method_call" span="979:14:979:20">equals</jtok>
<jtok eid="28" type="primary_name_ref" span="979:21:979:29">von_part</jtok>
<jtok eid="28" type="primary_name_ref" span="979:31:979:32">a</jtok>
<jtok eid="28" type="qualified_name_ref" span="979:33:979:41">von_part</jtok>
<jtok eid="28" type="primary_name_ref" span="980:9:980:13">Util</jtok>
<jtok eid="28" type="method_call" span="980:14:980:20">equals</jtok>
<jtok eid="28" type="primary_name_ref" span="980:21:980:30">last_part</jtok>
<jtok eid="28" type="primary_name_ref" span="980:32:980:33">a</jtok>
<jtok eid="28" type="qualified_name_ref" span="980:34:980:43">last_part</jtok>
<jtok eid="28" type="primary_name_ref" span="981:9:981:13">Util</jtok>
<jtok eid="28" type="method_call" span="981:14:981:20">equals</jtok>
<jtok eid="28" type="primary_name_ref" span="981:21:981:28">jr_part</jtok>
<jtok eid="28" type="primary_name_ref" span="981:30:981:31">a</jtok>
<jtok eid="28" type="qualified_name_ref" span="981:32:981:39">jr_part</jtok>
<jtok eid="27" type="block_comment" span="984:3:1009:6">/**
		 * Creates the Author object. If any part of the name is absent, &lt;CODE&gt;null&lt;/CODE&gt;
		 * must be passes; otherwise other methods may return erroneous results.
		 * 
		 * @param first
		 *            the first name of the author (may consist of several
		 *            tokens, like "Charles Louis Xavier Joseph" in "Charles
		 *            Louis Xavier Joseph de la Vall{\'e}e Poussin")
		 * @param firstabbr
		 *            the abbreviated first name of the author (may consist of
		 *            several tokens, like "C. L. X. J." in "Charles Louis
		 *            Xavier Joseph de la Vall{\'e}e Poussin"). It is a
		 *            responsibility of the caller to create a reasonable
		 *            abbreviation of the first name.
		 * @param von
		 *            the von part of the author's name (may consist of several
		 *            tokens, like "de la" in "Charles Louis Xavier Joseph de la
		 *            Vall{\'e}e Poussin")
		 * @param last
		 *            the lats name of the author (may consist of several
		 *            tokens, like "Vall{\'e}e Poussin" in "Charles Louis Xavier
		 *            Joseph de la Vall{\'e}e Poussin")
		 * @param jr
		 *            the junior part of the author's name (may consist of
		 *            several tokens, like "Jr. III" in "Smith, Jr. III, John")
		 */</jtok>
<jtok eid="29" type="method_name" span="1010:10:1010:16">Author</jtok>
<jtok eid="29" type="parameter_type" span="1010:17:1010:23">String</jtok>
<jtok eid="29" type="parameter_name" span="1010:24:1010:29">first</jtok>
<jtok eid="29" type="parameter_type" span="1010:31:1010:37">String</jtok>
<jtok eid="29" type="parameter_name" span="1010:38:1010:47">firstabbr</jtok>
<jtok eid="29" type="parameter_type" span="1010:49:1010:55">String</jtok>
<jtok eid="29" type="parameter_name" span="1010:56:1010:59">von</jtok>
<jtok eid="29" type="parameter_type" span="1010:61:1010:67">String</jtok>
<jtok eid="29" type="parameter_name" span="1010:68:1010:72">last</jtok>
<jtok eid="29" type="parameter_type" span="1010:74:1010:80">String</jtok>
<jtok eid="29" type="parameter_name" span="1010:81:1010:83">jr</jtok>
<jtok eid="29" type="primary_name_ref" span="1011:4:1011:14">first_part</jtok>
<jtok eid="29" type="primary_name_ref" span="1011:17:1011:22">first</jtok>
<jtok eid="29" type="primary_name_ref" span="1012:4:1012:14">first_abbr</jtok>
<jtok eid="29" type="primary_name_ref" span="1012:17:1012:26">firstabbr</jtok>
<jtok eid="29" type="primary_name_ref" span="1013:4:1013:12">von_part</jtok>
<jtok eid="29" type="primary_name_ref" span="1013:15:1013:18">von</jtok>
<jtok eid="29" type="primary_name_ref" span="1014:4:1014:13">last_part</jtok>
<jtok eid="29" type="primary_name_ref" span="1014:16:1014:20">last</jtok>
<jtok eid="29" type="primary_name_ref" span="1015:4:1015:11">jr_part</jtok>
<jtok eid="29" type="primary_name_ref" span="1015:14:1015:16">jr</jtok>
<jtok eid="27" type="block_comment" span="1018:3:1022:6">/**
		 * Returns the first name of the author stored in this object ("First").
		 * 
		 * @return first name of the author (may consist of several tokens)
		 */</jtok>
<jtok eid="30" type="class_or_interface_ref" span="1023:10:1023:16">String</jtok>
<jtok eid="30" type="method_name" span="1023:17:1023:25">getFirst</jtok>
<jtok eid="30" type="primary_name_ref" span="1024:11:1024:21">first_part</jtok>
<jtok eid="27" type="block_comment" span="1027:3:1033:6">/**
		 * Returns the abbreviated first name of the author stored in this
		 * object ("F.").
		 * 
		 * @return abbreviated first name of the author (may consist of several
		 *         tokens)
		 */</jtok>
<jtok eid="31" type="class_or_interface_ref" span="1034:10:1034:16">String</jtok>
<jtok eid="31" type="method_name" span="1034:17:1034:29">getFirstAbbr</jtok>
<jtok eid="31" type="primary_name_ref" span="1035:11:1035:21">first_abbr</jtok>
<jtok eid="27" type="block_comment" span="1038:3:1043:6">/**
		 * Returns the von part of the author's name stored in this object
		 * ("von").
		 * 
		 * @return von part of the author's name (may consist of several tokens)
		 */</jtok>
<jtok eid="32" type="class_or_interface_ref" span="1044:10:1044:16">String</jtok>
<jtok eid="32" type="method_name" span="1044:17:1044:23">getVon</jtok>
<jtok eid="32" type="primary_name_ref" span="1045:11:1045:19">von_part</jtok>
<jtok eid="27" type="block_comment" span="1048:3:1052:6">/**
		 * Returns the last name of the author stored in this object ("Last").
		 * 
		 * @return last name of the author (may consist of several tokens)
		 */</jtok>
<jtok eid="33" type="class_or_interface_ref" span="1053:10:1053:16">String</jtok>
<jtok eid="33" type="method_name" span="1053:17:1053:24">getLast</jtok>
<jtok eid="33" type="primary_name_ref" span="1054:20:1054:29">last_part</jtok>
<jtok eid="27" type="block_comment" span="1057:3:1063:6">/**
		 * Returns the junior part of the author's name stored in this object
		 * ("Jr").
		 * 
		 * @return junior part of the author's name (may consist of several
		 *         tokens) or null if the author does not have a Jr. Part
		 */</jtok>
<jtok eid="34" type="class_or_interface_ref" span="1064:10:1064:16">String</jtok>
<jtok eid="34" type="method_name" span="1064:17:1064:22">getJr</jtok>
<jtok eid="34" type="primary_name_ref" span="1065:11:1065:18">jr_part</jtok>
<jtok eid="27" type="block_comment" span="1068:3:1074:6">/**
		 * Returns von-part followed by last name ("von Last"). If both fields
		 * were specified as &lt;CODE&gt;null&lt;/CODE&gt;, the empty string &lt;CODE&gt;""&lt;/CODE&gt;
		 * is returned.
		 * 
		 * @return 'von Last'
		 */</jtok>
<jtok eid="35" type="class_or_interface_ref" span="1075:10:1075:16">String</jtok>
<jtok eid="35" type="method_name" span="1075:17:1075:28">getLastOnly</jtok>
<jtok eid="35" type="primary_name_ref" span="1076:8:1076:16">von_part</jtok>
<jtok eid="35" type="primary_name_ref" span="1077:13:1077:22">last_part</jtok>
<jtok eid="35" type="string_literal" span="1077:33:1077:35">""</jtok>
<jtok eid="35" type="primary_name_ref" span="1077:38:1077:47">last_part</jtok>
<jtok eid="35" type="primary_name_ref" span="1079:13:1079:22">last_part</jtok>
<jtok eid="35" type="primary_name_ref" span="1079:33:1079:41">von_part</jtok>
<jtok eid="35" type="primary_name_ref" span="1079:44:1079:52">von_part</jtok>
<jtok eid="35" type="string_literal" span="1079:55:1079:58">" "</jtok>
<jtok eid="35" type="primary_name_ref" span="1079:61:1079:70">last_part</jtok>
<jtok eid="27" type="block_comment" span="1083:3:1092:6">/**
		 * Returns the author's name in form 'von Last, Jr., First' with the
		 * first name full or abbreviated depending on parameter.
		 * 
		 * @param abbr
		 *            &lt;CODE&gt;true&lt;/CODE&gt; - abbreviate first name, &lt;CODE&gt;false&lt;/CODE&gt; -
		 *            do not abbreviate
		 * @return 'von Last, Jr., First' (if &lt;CODE&gt;abbr==false&lt;/CODE&gt;) or
		 *         'von Last, Jr., F.' (if &lt;CODE&gt;abbr==true&lt;/CODE&gt;)
		 */</jtok>
<jtok eid="36" type="class_or_interface_ref" span="1093:10:1093:16">String</jtok>
<jtok eid="36" type="method_name" span="1093:17:1093:29">getLastFirst</jtok>
<jtok eid="36" type="parameter_name" span="1093:38:1093:42">abbr</jtok>
<jtok eid="36" type="class_or_interface_ref" span="1094:4:1094:10">String</jtok>
<jtok eid="36" type="local_variable_name" span="1094:11:1094:14">res</jtok>
<jtok eid="36" type="method_call" span="1094:17:1094:28">getLastOnly</jtok>
<jtok eid="36" type="primary_name_ref" span="1095:8:1095:15">jr_part</jtok>
<jtok eid="36" type="primary_name_ref" span="1096:5:1096:8">res</jtok>
<jtok eid="36" type="string_literal" span="1096:12:1096:16">", "</jtok>
<jtok eid="36" type="primary_name_ref" span="1096:19:1096:26">jr_part</jtok>
<jtok eid="36" type="primary_name_ref" span="1097:8:1097:12">abbr</jtok>
<jtok eid="36" type="primary_name_ref" span="1098:9:1098:19">first_abbr</jtok>
<jtok eid="36" type="primary_name_ref" span="1099:6:1099:9">res</jtok>
<jtok eid="36" type="string_literal" span="1099:13:1099:17">", "</jtok>
<jtok eid="36" type="primary_name_ref" span="1099:20:1099:30">first_abbr</jtok>
<jtok eid="36" type="primary_name_ref" span="1101:9:1101:19">first_part</jtok>
<jtok eid="36" type="primary_name_ref" span="1102:6:1102:9">res</jtok>
<jtok eid="36" type="string_literal" span="1102:13:1102:17">", "</jtok>
<jtok eid="36" type="primary_name_ref" span="1102:20:1102:30">first_part</jtok>
<jtok eid="36" type="primary_name_ref" span="1104:11:1104:14">res</jtok>
<jtok eid="27" type="block_comment" span="1107:3:1116:6">/**
		 * Returns the author's name in form 'First von Last, Jr.' with the
		 * first name full or abbreviated depending on parameter.
		 * 
		 * @param abbr
		 *            &lt;CODE&gt;true&lt;/CODE&gt; - abbreviate first name, &lt;CODE&gt;false&lt;/CODE&gt; -
		 *            do not abbreviate
		 * @return 'First von Last, Jr.' (if &lt;CODE&gt;abbr==false&lt;/CODE&gt;) or 'F.
		 *         von Last, Jr.' (if &lt;CODE&gt;abbr==true&lt;/CODE&gt;)
		 */</jtok>
<jtok eid="37" type="class_or_interface_ref" span="1117:10:1117:16">String</jtok>
<jtok eid="37" type="method_name" span="1117:17:1117:29">getFirstLast</jtok>
<jtok eid="37" type="parameter_name" span="1117:38:1117:42">abbr</jtok>
<jtok eid="37" type="class_or_interface_ref" span="1118:4:1118:10">String</jtok>
<jtok eid="37" type="local_variable_name" span="1118:11:1118:14">res</jtok>
<jtok eid="37" type="method_call" span="1118:17:1118:28">getLastOnly</jtok>
<jtok eid="37" type="primary_name_ref" span="1119:8:1119:12">abbr</jtok>
<jtok eid="37" type="primary_name_ref" span="1120:5:1120:8">res</jtok>
<jtok eid="37" type="primary_name_ref" span="1120:12:1120:22">first_abbr</jtok>
<jtok eid="37" type="string_literal" span="1120:33:1120:35">""</jtok>
<jtok eid="37" type="primary_name_ref" span="1120:38:1120:48">first_abbr</jtok>
<jtok eid="37" type="string_literal" span="1120:51:1120:54">" "</jtok>
<jtok eid="37" type="primary_name_ref" span="1120:58:1120:61">res</jtok>
<jtok eid="37" type="primary_name_ref" span="1122:5:1122:8">res</jtok>
<jtok eid="37" type="primary_name_ref" span="1122:12:1122:22">first_part</jtok>
<jtok eid="37" type="string_literal" span="1122:33:1122:35">""</jtok>
<jtok eid="37" type="primary_name_ref" span="1122:38:1122:48">first_part</jtok>
<jtok eid="37" type="string_literal" span="1122:51:1122:54">" "</jtok>
<jtok eid="37" type="primary_name_ref" span="1122:58:1122:61">res</jtok>
<jtok eid="37" type="primary_name_ref" span="1124:8:1124:15">jr_part</jtok>
<jtok eid="37" type="primary_name_ref" span="1125:5:1125:8">res</jtok>
<jtok eid="37" type="string_literal" span="1125:12:1125:16">", "</jtok>
<jtok eid="37" type="primary_name_ref" span="1125:19:1125:26">jr_part</jtok>
<jtok eid="37" type="primary_name_ref" span="1126:11:1126:14">res</jtok>
<jtok eid="27" type="block_comment" span="1129:3:1135:6">/**
		 * Returns the name as "Last, Jr, F." omitting the von-part and removing
		 * starting braces.
		 * 
		 * @return "Last, Jr, F." as described above or "" if all these parts
		 *         are empty.
		 */</jtok>
<jtok eid="38" type="class_or_interface_ref" span="1136:10:1136:16">String</jtok>
<jtok eid="38" type="method_name" span="1136:17:1136:42">getNameForAlphabetization</jtok>
<jtok eid="38" type="class_or_interface_ref" span="1137:4:1137:16">StringBuffer</jtok>
<jtok eid="38" type="local_variable_name" span="1137:17:1137:20">res</jtok>
<jtok eid="38" type="constructor_call" span="1137:27:1137:39">StringBuffer</jtok>
<jtok eid="38" type="primary_name_ref" span="1138:8:1138:17">last_part</jtok>
<jtok eid="38" type="primary_name_ref" span="1139:5:1139:8">res</jtok>
<jtok eid="38" type="method_call" span="1139:9:1139:15">append</jtok>
<jtok eid="38" type="primary_name_ref" span="1139:16:1139:25">last_part</jtok>
<jtok eid="38" type="primary_name_ref" span="1140:8:1140:15">jr_part</jtok>
<jtok eid="38" type="primary_name_ref" span="1141:5:1141:8">res</jtok>
<jtok eid="38" type="method_call" span="1141:9:1141:15">append</jtok>
<jtok eid="38" type="string_literal" span="1141:16:1141:20">", "</jtok>
<jtok eid="38" type="primary_name_ref" span="1142:5:1142:8">res</jtok>
<jtok eid="38" type="method_call" span="1142:9:1142:15">append</jtok>
<jtok eid="38" type="primary_name_ref" span="1142:16:1142:23">jr_part</jtok>
<jtok eid="38" type="primary_name_ref" span="1144:8:1144:18">first_abbr</jtok>
<jtok eid="38" type="primary_name_ref" span="1145:5:1145:8">res</jtok>
<jtok eid="38" type="method_call" span="1145:9:1145:15">append</jtok>
<jtok eid="38" type="string_literal" span="1145:16:1145:20">", "</jtok>
<jtok eid="38" type="primary_name_ref" span="1146:5:1146:8">res</jtok>
<jtok eid="38" type="method_call" span="1146:9:1146:15">append</jtok>
<jtok eid="38" type="primary_name_ref" span="1146:16:1146:26">first_abbr</jtok>
<jtok eid="38" type="primary_name_ref" span="1148:12:1148:15">res</jtok>
<jtok eid="38" type="method_call" span="1148:16:1148:22">length</jtok>
<jtok eid="38" type="primary_name_ref" span="1148:34:1148:37">res</jtok>
<jtok eid="38" type="method_call" span="1148:38:1148:44">charAt</jtok>
<jtok eid="38" type="primary_name_ref" span="1149:5:1149:8">res</jtok>
<jtok eid="38" type="method_call" span="1149:9:1149:21">deleteCharAt</jtok>
<jtok eid="38" type="primary_name_ref" span="1150:11:1150:14">res</jtok>
<jtok eid="38" type="method_call" span="1150:15:1150:23">toString</jtok>
<jtok eid="1" type="line_comment" span="1152:3:1152:16">// end Author</jtok>
<jtok eid="39" type="method_name" span="1155:24:1155:28">main</jtok>
<jtok eid="39" type="parameter_type" span="1155:29:1155:35">String</jtok>
<jtok eid="39" type="parameter_name" span="1155:38:1155:42">args</jtok>
<jtok eid="39" type="line_comment" span="1156:9:1156:86">//String s = "Ford, Jr., Henry and Guy L. {Steele Jr.} and Olaf Nilsen, Jr.";</jtok>
<jtok eid="39" type="class_or_interface_ref" span="1157:9:1157:15">String</jtok>
<jtok eid="39" type="local_variable_name" span="1157:16:1157:17">s</jtok>
<jtok eid="39" type="string_literal" span="1157:20:1157:42">"Olaf von Nilsen, Jr."</jtok>
<jtok eid="39" type="class_or_interface_ref" span="1158:9:1158:19">AuthorList</jtok>
<jtok eid="39" type="local_variable_name" span="1158:20:1158:22">al</jtok>
<jtok eid="39" type="primary_name_ref" span="1158:25:1158:35">AuthorList</jtok>
<jtok eid="39" type="method_call" span="1158:36:1158:49">getAuthorList</jtok>
<jtok eid="39" type="primary_name_ref" span="1158:50:1158:51">s</jtok>
<jtok eid="39" type="local_variable_name" span="1159:18:1159:19">i</jtok>
<jtok eid="39" type="primary_name_ref" span="1159:23:1159:24">i</jtok>
<jtok eid="39" type="primary_name_ref" span="1159:25:1159:27">al</jtok>
<jtok eid="39" type="method_call" span="1159:28:1159:32">size</jtok>
<jtok eid="39" type="primary_name_ref" span="1159:36:1159:37">i</jtok>
<jtok eid="39" type="class_or_interface_ref" span="1160:13:1160:19">Author</jtok>
<jtok eid="39" type="local_variable_name" span="1160:20:1160:21">a</jtok>
<jtok eid="39" type="primary_name_ref" span="1160:24:1160:26">al</jtok>
<jtok eid="39" type="method_call" span="1160:27:1160:36">getAuthor</jtok>
<jtok eid="39" type="primary_name_ref" span="1160:37:1160:38">i</jtok>
<jtok eid="39" type="primary_name_ref" span="1161:13:1161:19">System</jtok>
<jtok eid="39" type="qualified_name_ref" span="1161:20:1161:23">out</jtok>
<jtok eid="39" type="method_call" span="1161:24:1161:31">println</jtok>
<jtok eid="39" type="primary_name_ref" span="1161:33:1161:34">i</jtok>
<jtok eid="39" type="string_literal" span="1161:38:1161:51">": first = '"</jtok>
<jtok eid="39" type="primary_name_ref" span="1161:52:1161:53">a</jtok>
<jtok eid="39" type="method_call" span="1161:54:1161:62">getFirst</jtok>
<jtok eid="39" type="string_literal" span="1161:65:1161:68">"'"</jtok>
<jtok eid="39" type="primary_name_ref" span="1162:13:1162:19">System</jtok>
<jtok eid="39" type="qualified_name_ref" span="1162:20:1162:23">out</jtok>
<jtok eid="39" type="method_call" span="1162:24:1162:31">println</jtok>
<jtok eid="39" type="primary_name_ref" span="1162:33:1162:34">i</jtok>
<jtok eid="39" type="string_literal" span="1162:38:1162:50">": last = '"</jtok>
<jtok eid="39" type="primary_name_ref" span="1162:51:1162:52">a</jtok>
<jtok eid="39" type="method_call" span="1162:53:1162:60">getLast</jtok>
<jtok eid="39" type="string_literal" span="1162:63:1162:66">"'"</jtok>
<jtok eid="39" type="primary_name_ref" span="1163:13:1163:19">System</jtok>
<jtok eid="39" type="qualified_name_ref" span="1163:20:1163:23">out</jtok>
<jtok eid="39" type="method_call" span="1163:24:1163:31">println</jtok>
<jtok eid="39" type="primary_name_ref" span="1163:33:1163:34">i</jtok>
<jtok eid="39" type="string_literal" span="1163:38:1163:48">": jr = '"</jtok>
<jtok eid="39" type="primary_name_ref" span="1163:49:1163:50">a</jtok>
<jtok eid="39" type="method_call" span="1163:51:1163:56">getJr</jtok>
<jtok eid="39" type="string_literal" span="1163:59:1163:62">"'"</jtok>
<jtok eid="39" type="primary_name_ref" span="1164:13:1164:19">System</jtok>
<jtok eid="39" type="qualified_name_ref" span="1164:20:1164:23">out</jtok>
<jtok eid="39" type="method_call" span="1164:24:1164:31">println</jtok>
<jtok eid="39" type="primary_name_ref" span="1164:33:1164:34">i</jtok>
<jtok eid="39" type="string_literal" span="1164:38:1164:49">": von = '"</jtok>
<jtok eid="39" type="primary_name_ref" span="1164:50:1164:51">a</jtok>
<jtok eid="39" type="method_call" span="1164:52:1164:58">getVon</jtok>
<jtok eid="39" type="string_literal" span="1164:61:1164:64">"'"</jtok>
<jtok eid="39" type="primary_name_ref" span="1167:9:1167:15">System</jtok>
<jtok eid="39" type="qualified_name_ref" span="1167:16:1167:19">out</jtok>
<jtok eid="39" type="method_call" span="1167:20:1167:27">println</jtok>
<jtok eid="39" type="constructor_call" span="1167:33:1167:53">CreateDocBookAuthors</jtok>
<jtok eid="39" type="method_call" span="1167:57:1167:63">format</jtok>
<jtok eid="39" type="primary_name_ref" span="1167:64:1167:65">s</jtok>
<jtok eid="0" type="line_comment" span="1169:2:1169:19">// end AuthorList</jtok>
</jdoc>