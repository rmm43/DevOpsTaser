<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.BibtexDatabase" jls="java5">
<jent id="0" type="file" span="0:0:657:1">Source/jabref/src/java/net/sf/jabref/BibtexDatabase.java</jent>
<jent id="1" pid="0" type="class" span="56:1:657:1">net.sf.jabref.BibtexDatabase</jent>
<jent id="2" pid="1" type="class" span="83:9:122:9">net.sf.jabref.BibtexDatabase.$1</jent>
<jent id="3" pid="2" type="method" span="84:13:121:13">net.sf.jabref.BibtexDatabase.$1.vetoableChange(PropertyChangeEvent)</jent>
<jent id="4" pid="1" type="method" span="127:5:130:5">net.sf.jabref.BibtexDatabase.getEntryCount()</jent>
<jent id="5" pid="1" type="method" span="136:5:139:5">net.sf.jabref.BibtexDatabase.getKeySet()</jent>
<jent id="6" pid="1" type="method" span="145:5:149:5">net.sf.jabref.BibtexDatabase.getSorter(Comparator&lt;BibtexEntry&gt;)</jent>
<jent id="7" pid="1" type="method" span="155:5:155:70">net.sf.jabref.BibtexDatabase.getEntryMap()</jent>
<jent id="8" pid="1" type="method" span="160:5:163:5">net.sf.jabref.BibtexDatabase.getEntryById(String)</jent>
<jent id="9" pid="1" type="method" span="165:5:167:5">net.sf.jabref.BibtexDatabase.getEntries()</jent>
<jent id="10" pid="1" type="method" span="172:5:200:5">net.sf.jabref.BibtexDatabase.getEntryByKey(String)</jent>
<jent id="11" pid="1" type="method" span="202:5:212:5">net.sf.jabref.BibtexDatabase.getEntriesByKey(String)</jent>
<jent id="12" pid="1" type="method" span="218:5:235:5">net.sf.jabref.BibtexDatabase.insertEntry(BibtexEntry)</jent>
<jent id="13" pid="1" type="method" span="242:5:254:5">net.sf.jabref.BibtexDatabase.removeEntry(String)</jent>
<jent id="14" pid="1" type="method" span="256:5:265:5">net.sf.jabref.BibtexDatabase.setCiteKeyForEntry(String,String)</jent>
<jent id="15" pid="1" type="method" span="270:5:273:5">net.sf.jabref.BibtexDatabase.setPreamble(String)</jent>
<jent id="16" pid="1" type="method" span="278:5:281:5">net.sf.jabref.BibtexDatabase.getPreamble()</jent>
<jent id="17" pid="1" type="method" span="286:5:297:5">net.sf.jabref.BibtexDatabase.addString(BibtexString)</jent>
<jent id="18" pid="1" type="method" span="302:5:304:5">net.sf.jabref.BibtexDatabase.removeString(String)</jent>
<jent id="19" pid="1" type="method" span="310:5:312:5">net.sf.jabref.BibtexDatabase.getStringKeySet()</jent>
<jent id="20" pid="1" type="method" span="318:5:320:5">net.sf.jabref.BibtexDatabase.getStringValues()</jent>
<jent id="21" pid="1" type="method" span="325:5:327:5">net.sf.jabref.BibtexDatabase.getString(String)</jent>
<jent id="22" pid="1" type="method" span="332:5:334:5">net.sf.jabref.BibtexDatabase.getStringCount()</jent>
<jent id="23" pid="1" type="method" span="339:5:345:5">net.sf.jabref.BibtexDatabase.hasStringLabel(String)</jent>
<jent id="24" pid="1" type="method" span="351:5:356:5">net.sf.jabref.BibtexDatabase.resolveForStrings(String)</jent>
<jent id="25" pid="1" type="method" span="371:5:382:5">net.sf.jabref.BibtexDatabase.resolveForStrings(Collection&lt;BibtexEntry&gt;,boolean)</jent>
<jent id="26" pid="1" type="method" span="401:5:412:2">net.sf.jabref.BibtexDatabase.resolveForStrings(BibtexEntry,boolean)</jent>
<jent id="27" pid="1" type="method" span="420:5:458:5">net.sf.jabref.BibtexDatabase.resolveString(String,HashSet&lt;String&gt;)</jent>
<jent id="28" pid="1" type="method" span="460:5:502:5">net.sf.jabref.BibtexDatabase.resolveContent(String,HashSet&lt;String&gt;)</jent>
<jent id="29" pid="1" type="method" span="510:5:540:5">net.sf.jabref.BibtexDatabase.checkForDuplicateKeyAndAdd(String,String,boolean)</jent>
<jent id="30" pid="1" type="method" span="545:5:552:5">net.sf.jabref.BibtexDatabase.getNumberOfKeyOccurences(String)</jent>
<jent id="31" pid="1" type="method" span="557:5:568:5">net.sf.jabref.BibtexDatabase.addKeyToSet(String)</jent>
<jent id="32" pid="1" type="method" span="574:5:583:5">net.sf.jabref.BibtexDatabase.removeKeyFromSet(String)</jent>
<jent id="33" pid="1" type="method" span="587:5:591:5">net.sf.jabref.BibtexDatabase.fireDatabaseChanged(DatabaseChangeEvent)</jent>
<jent id="34" pid="1" type="method" span="593:5:595:5">net.sf.jabref.BibtexDatabase.addDatabaseChangeListener(DatabaseChangeListener)</jent>
<jent id="35" pid="1" type="method" span="597:5:599:5">net.sf.jabref.BibtexDatabase.removeDatabaseChangeListener(DatabaseChangeListener)</jent>
<jent id="36" pid="1" type="method" span="618:2:641:2">net.sf.jabref.BibtexDatabase.getResolvedField(String,BibtexEntry,BibtexDatabase)</jent>
<jent id="37" pid="1" type="method" span="651:2:656:2">net.sf.jabref.BibtexDatabase.getText(String,BibtexDatabase)</jent>
<jtok eid="0" type="block_comment" span="1:1:29:3">/*
Copyright (C) 2003 David Weitzman, Morten O. Alver

All programs in this directory and
subdirectories are published under the GNU General Public License as
described below.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
USA

Further information about the GNU GPL is available at:
http://www.gnu.org/copyleft/gpl.ja.html

Note:
Modified for use in JabRef

*/</jtok>
<jtok eid="0" type="line_comment" span="32:1:32:18">// created by : ?</jtok>
<jtok eid="0" type="line_comment" span="33:1:33:3">//</jtok>
<jtok eid="0" type="line_comment" span="34:1:34:33">// modified : r.nagel 23.08.2004</jtok>
<jtok eid="0" type="line_comment" span="35:1:35:77">//                - insert getEntryByKey() methode needed by AuxSubGenerator</jtok>
<jtok eid="1" type="class_name" span="56:14:56:28">BibtexDatabase</jtok>
<jtok eid="1" type="class_or_interface_ref" span="58:2:58:5">Map</jtok>
<jtok eid="1" type="class_or_interface_ref" span="58:6:58:12">String</jtok>
<jtok eid="1" type="class_or_interface_ref" span="58:14:58:25">BibtexEntry</jtok>
<jtok eid="1" type="field_name" span="58:27:58:35">_entries</jtok>
<jtok eid="1" type="constructor_call" span="58:42:58:51">Hashtable</jtok>
<jtok eid="1" type="constructor_call" span="58:52:58:58">String</jtok>
<jtok eid="1" type="constructor_call" span="58:60:58:71">BibtexEntry</jtok>
<jtok eid="1" type="class_or_interface_ref" span="60:2:60:8">String</jtok>
<jtok eid="1" type="field_name" span="60:9:60:18">_preamble</jtok>
<jtok eid="1" type="class_or_interface_ref" span="62:2:62:9">HashMap</jtok>
<jtok eid="1" type="class_or_interface_ref" span="62:10:62:16">String</jtok>
<jtok eid="1" type="class_or_interface_ref" span="62:18:62:30">BibtexString</jtok>
<jtok eid="1" type="field_name" span="62:32:62:40">_strings</jtok>
<jtok eid="1" type="constructor_call" span="62:47:62:54">HashMap</jtok>
<jtok eid="1" type="constructor_call" span="62:55:62:61">String</jtok>
<jtok eid="1" type="constructor_call" span="62:63:62:75">BibtexString</jtok>
<jtok eid="1" type="class_or_interface_ref" span="64:2:64:8">Vector</jtok>
<jtok eid="1" type="class_or_interface_ref" span="64:9:64:15">String</jtok>
<jtok eid="1" type="field_name" span="64:17:64:26">_strings_</jtok>
<jtok eid="1" type="constructor_call" span="64:33:64:39">Vector</jtok>
<jtok eid="1" type="constructor_call" span="64:40:64:46">String</jtok>
<jtok eid="1" type="class_or_interface_ref" span="66:2:66:5">Set</jtok>
<jtok eid="1" type="class_or_interface_ref" span="66:6:66:28">DatabaseChangeListener</jtok>
<jtok eid="1" type="field_name" span="66:30:66:45">changeListeners</jtok>
<jtok eid="1" type="constructor_call" span="66:52:66:59">HashSet</jtok>
<jtok eid="1" type="constructor_call" span="66:60:66:82">DatabaseChangeListener</jtok>
<jtok eid="1" type="block_comment" span="68:2:71:5">/**
	 * use a map instead of a set since i need to know how many of each key is
	 * inthere
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="72:10:72:17">HashMap</jtok>
<jtok eid="1" type="class_or_interface_ref" span="72:18:72:24">String</jtok>
<jtok eid="1" type="class_or_interface_ref" span="72:26:72:33">Integer</jtok>
<jtok eid="1" type="field_name" span="72:35:72:42">allKeys</jtok>
<jtok eid="1" type="constructor_call" span="72:49:72:56">HashMap</jtok>
<jtok eid="1" type="constructor_call" span="72:57:72:63">String</jtok>
<jtok eid="1" type="constructor_call" span="72:65:72:72">Integer</jtok>
<jtok eid="1" type="block_comment" span="74:5:80:5">/*
	 * Entries are stored in a HashMap with the ID as key. What happens if
	 * someone changes a BibtexEntry's ID after it has been added to this
	 * BibtexDatabase? The key of that entry would be the old ID, not the new
	 * one. Use a PropertyChangeListener to identify an ID change and update the
	 * Map.
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="81:19:81:41">VetoableChangeListener</jtok>
<jtok eid="1" type="field_name" span="81:42:81:50">listener</jtok>
<jtok eid="1" type="constructor_call" span="82:13:82:35">VetoableChangeListener</jtok>
<jtok eid="3" type="method_name" span="84:25:84:39">vetoableChange</jtok>
<jtok eid="3" type="parameter_type" span="84:40:84:59">PropertyChangeEvent</jtok>
<jtok eid="3" type="parameter_name" span="84:60:84:63">pce</jtok>
<jtok eid="3" type="throws" span="85:24:85:45">PropertyVetoException</jtok>
<jtok eid="3" type="primary_name_ref" span="87:21:87:24">pce</jtok>
<jtok eid="3" type="method_call" span="87:25:87:40">getPropertyName</jtok>
<jtok eid="3" type="method_call" span="88:21:88:40">fireDatabaseChanged</jtok>
<jtok eid="3" type="constructor_call" span="88:46:88:65">DatabaseChangeEvent</jtok>
<jtok eid="3" type="primary_name_ref" span="88:66:88:80">BibtexDatabase</jtok>
<jtok eid="3" type="primary_name_ref" span="88:87:88:106">DatabaseChangeEvent</jtok>
<jtok eid="3" type="qualified_name_ref" span="88:107:88:121">CHANGING_ENTRY</jtok>
<jtok eid="3" type="class_or_interface_ref" span="88:124:88:135">BibtexEntry</jtok>
<jtok eid="3" type="primary_name_ref" span="88:136:88:139">pce</jtok>
<jtok eid="3" type="method_call" span="88:140:88:149">getSource</jtok>
<jtok eid="3" type="string_literal" span="89:26:89:30">"id"</jtok>
<jtok eid="3" type="method_call" span="89:31:89:37">equals</jtok>
<jtok eid="3" type="primary_name_ref" span="89:38:89:41">pce</jtok>
<jtok eid="3" type="method_call" span="89:42:89:57">getPropertyName</jtok>
<jtok eid="3" type="line_comment" span="91:21:91:58">// locate the entry under its old key</jtok>
<jtok eid="3" type="class_or_interface_ref" span="92:21:92:32">BibtexEntry</jtok>
<jtok eid="3" type="local_variable_name" span="92:33:92:41">oldEntry</jtok>
<jtok eid="3" type="primary_name_ref" span="93:25:93:33">_entries</jtok>
<jtok eid="3" type="method_call" span="93:34:93:40">remove</jtok>
<jtok eid="3" type="primary_name_ref" span="93:41:93:44">pce</jtok>
<jtok eid="3" type="method_call" span="93:45:93:56">getOldValue</jtok>
<jtok eid="3" type="primary_name_ref" span="95:25:95:33">oldEntry</jtok>
<jtok eid="3" type="primary_name_ref" span="95:37:95:40">pce</jtok>
<jtok eid="3" type="method_call" span="95:41:95:50">getSource</jtok>
<jtok eid="3" type="line_comment" span="97:25:97:52">// Something is very wrong!</jtok>
<jtok eid="3" type="line_comment" span="98:25:98:61">// The entry under the old key isn't</jtok>
<jtok eid="3" type="line_comment" span="99:25:99:57">// the one that sent this event.</jtok>
<jtok eid="3" type="line_comment" span="100:25:100:50">// Restore the old state.</jtok>
<jtok eid="3" type="primary_name_ref" span="101:25:101:33">_entries</jtok>
<jtok eid="3" type="method_call" span="101:34:101:37">put</jtok>
<jtok eid="3" type="class_or_interface_ref" span="101:39:101:45">String</jtok>
<jtok eid="3" type="primary_name_ref" span="101:46:101:49">pce</jtok>
<jtok eid="3" type="method_call" span="101:50:101:61">getOldValue</jtok>
<jtok eid="3" type="primary_name_ref" span="101:65:101:73">oldEntry</jtok>
<jtok eid="3" type="constructor_call" span="102:35:102:56">PropertyVetoException</jtok>
<jtok eid="3" type="string_literal" span="102:57:102:71">"Wrong old ID"</jtok>
<jtok eid="3" type="primary_name_ref" span="102:73:102:76">pce</jtok>
<jtok eid="3" type="primary_name_ref" span="105:25:105:33">_entries</jtok>
<jtok eid="3" type="method_call" span="105:34:105:37">get</jtok>
<jtok eid="3" type="primary_name_ref" span="105:38:105:41">pce</jtok>
<jtok eid="3" type="method_call" span="105:42:105:53">getNewValue</jtok>
<jtok eid="3" type="primary_name_ref" span="107:25:107:33">_entries</jtok>
<jtok eid="3" type="method_call" span="107:34:107:37">put</jtok>
<jtok eid="3" type="class_or_interface_ref" span="107:39:107:45">String</jtok>
<jtok eid="3" type="primary_name_ref" span="107:46:107:49">pce</jtok>
<jtok eid="3" type="method_call" span="107:50:107:61">getOldValue</jtok>
<jtok eid="3" type="primary_name_ref" span="107:65:107:73">oldEntry</jtok>
<jtok eid="3" type="constructor_call" span="108:35:108:56">PropertyVetoException</jtok>
<jtok eid="3" type="string_literal" span="109:30:109:76">"New ID already in use, please choose another"</jtok>
<jtok eid="3" type="primary_name_ref" span="110:29:110:32">pce</jtok>
<jtok eid="3" type="line_comment" span="113:21:113:46">// and re-file this entry</jtok>
<jtok eid="3" type="primary_name_ref" span="114:21:114:29">_entries</jtok>
<jtok eid="3" type="method_call" span="114:30:114:33">put</jtok>
<jtok eid="3" type="class_or_interface_ref" span="114:35:114:41">String</jtok>
<jtok eid="3" type="primary_name_ref" span="114:43:114:46">pce</jtok>
<jtok eid="3" type="method_call" span="114:47:114:58">getNewValue</jtok>
<jtok eid="3" type="class_or_interface_ref" span="115:26:115:37">BibtexEntry</jtok>
<jtok eid="3" type="primary_name_ref" span="115:39:115:42">pce</jtok>
<jtok eid="3" type="method_call" span="115:43:115:52">getSource</jtok>
<jtok eid="3" type="method_call" span="117:21:117:40">fireDatabaseChanged</jtok>
<jtok eid="3" type="constructor_call" span="117:46:117:65">DatabaseChangeEvent</jtok>
<jtok eid="3" type="primary_name_ref" span="117:66:117:80">BibtexDatabase</jtok>
<jtok eid="3" type="primary_name_ref" span="117:87:117:106">DatabaseChangeEvent</jtok>
<jtok eid="3" type="qualified_name_ref" span="117:107:117:120">CHANGED_ENTRY</jtok>
<jtok eid="3" type="class_or_interface_ref" span="117:123:117:134">BibtexEntry</jtok>
<jtok eid="3" type="primary_name_ref" span="117:135:117:138">pce</jtok>
<jtok eid="3" type="method_call" span="117:139:117:148">getSource</jtok>
<jtok eid="3" type="line_comment" span="118:21:118:84">//Util.pr(pce.getSource().toString()+"\n"+pce.getPropertyName()</jtok>
<jtok eid="3" type="line_comment" span="119:21:119:52">//    +"\n"+pce.getNewValue());</jtok>
<jtok eid="1" type="block_comment" span="124:5:126:8">/**
     * Returns the number of entries.
     */</jtok>
<jtok eid="4" type="method_name" span="127:29:127:42">getEntryCount</jtok>
<jtok eid="4" type="primary_name_ref" span="129:16:129:24">_entries</jtok>
<jtok eid="4" type="method_call" span="129:25:129:29">size</jtok>
<jtok eid="1" type="block_comment" span="132:5:135:8">/**
     * Returns a Set containing the keys to all entries.
     * Use getKeySet().iterator() to iterate over all entries.
     */</jtok>
<jtok eid="5" type="class_or_interface_ref" span="136:25:136:28">Set</jtok>
<jtok eid="5" type="class_or_interface_ref" span="136:29:136:35">String</jtok>
<jtok eid="5" type="method_name" span="136:37:136:46">getKeySet</jtok>
<jtok eid="5" type="primary_name_ref" span="138:16:138:24">_entries</jtok>
<jtok eid="5" type="method_call" span="138:25:138:31">keySet</jtok>
<jtok eid="1" type="block_comment" span="141:5:144:8">/**
     * Returns an EntrySorter with the sorted entries from this base,
     * sorted by the given Comparator.
     */</jtok>
<jtok eid="6" type="class_or_interface_ref" span="145:25:145:36">EntrySorter</jtok>
<jtok eid="6" type="method_name" span="145:37:145:46">getSorter</jtok>
<jtok eid="6" type="parameter_type" span="145:47:145:57">Comparator</jtok>
<jtok eid="6" type="parameter_type" span="145:58:145:69">BibtexEntry</jtok>
<jtok eid="6" type="parameter_name" span="145:71:145:75">comp</jtok>
<jtok eid="6" type="class_or_interface_ref" span="146:9:146:20">EntrySorter</jtok>
<jtok eid="6" type="local_variable_name" span="146:21:146:27">sorter</jtok>
<jtok eid="6" type="constructor_call" span="146:34:146:45">EntrySorter</jtok>
<jtok eid="6" type="primary_name_ref" span="146:46:146:54">_entries</jtok>
<jtok eid="6" type="primary_name_ref" span="146:56:146:60">comp</jtok>
<jtok eid="6" type="method_call" span="147:9:147:34">addDatabaseChangeListener</jtok>
<jtok eid="6" type="primary_name_ref" span="147:35:147:41">sorter</jtok>
<jtok eid="6" type="primary_name_ref" span="148:16:148:22">sorter</jtok>
<jtok eid="1" type="block_comment" span="151:5:154:8">/**
     * Just temporary, for testing purposes....
     * @return
     */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="155:12:155:15">Map</jtok>
<jtok eid="7" type="class_or_interface_ref" span="155:16:155:22">String</jtok>
<jtok eid="7" type="class_or_interface_ref" span="155:24:155:35">BibtexEntry</jtok>
<jtok eid="7" type="method_name" span="155:37:155:48">getEntryMap</jtok>
<jtok eid="7" type="primary_name_ref" span="155:60:155:68">_entries</jtok>
<jtok eid="1" type="block_comment" span="157:5:159:8">/**
     * Returns the entry with the given ID (-&gt; entry_type + hashcode).
     */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="160:25:160:36">BibtexEntry</jtok>
<jtok eid="8" type="method_name" span="160:37:160:49">getEntryById</jtok>
<jtok eid="8" type="parameter_type" span="160:50:160:56">String</jtok>
<jtok eid="8" type="parameter_name" span="160:57:160:59">id</jtok>
<jtok eid="8" type="primary_name_ref" span="162:16:162:24">_entries</jtok>
<jtok eid="8" type="method_call" span="162:25:162:28">get</jtok>
<jtok eid="8" type="primary_name_ref" span="162:29:162:31">id</jtok>
<jtok eid="9" type="class_or_interface_ref" span="165:25:165:35">Collection</jtok>
<jtok eid="9" type="class_or_interface_ref" span="165:36:165:47">BibtexEntry</jtok>
<jtok eid="9" type="method_name" span="165:49:165:59">getEntries</jtok>
<jtok eid="9" type="primary_name_ref" span="166:20:166:28">_entries</jtok>
<jtok eid="9" type="method_call" span="166:29:166:35">values</jtok>
<jtok eid="1" type="block_comment" span="169:5:171:8">/**
     * Returns the entry with the given bibtex key.
     */</jtok>
<jtok eid="10" type="class_or_interface_ref" span="172:25:172:36">BibtexEntry</jtok>
<jtok eid="10" type="method_name" span="172:37:172:50">getEntryByKey</jtok>
<jtok eid="10" type="parameter_type" span="172:51:172:57">String</jtok>
<jtok eid="10" type="parameter_name" span="172:58:172:61">key</jtok>
<jtok eid="10" type="class_or_interface_ref" span="174:7:174:18">BibtexEntry</jtok>
<jtok eid="10" type="local_variable_name" span="174:19:174:23">back</jtok>
<jtok eid="10" type="local_variable_name" span="176:11:176:18">keyHash</jtok>
<jtok eid="10" type="primary_name_ref" span="176:21:176:24">key</jtok>
<jtok eid="10" type="method_call" span="176:25:176:33">hashCode</jtok>
<jtok eid="10" type="line_comment" span="176:38:176:72">// key hash for better performance</jtok>
<jtok eid="10" type="class_or_interface_ref" span="178:7:178:10">Set</jtok>
<jtok eid="10" type="class_or_interface_ref" span="178:11:178:17">String</jtok>
<jtok eid="10" type="local_variable_name" span="178:19:178:25">keySet</jtok>
<jtok eid="10" type="primary_name_ref" span="178:28:178:36">_entries</jtok>
<jtok eid="10" type="method_call" span="178:37:178:43">keySet</jtok>
<jtok eid="10" type="primary_name_ref" span="179:11:179:17">keySet</jtok>
<jtok eid="10" type="class_or_interface_ref" span="181:11:181:19">Iterator</jtok>
<jtok eid="10" type="class_or_interface_ref" span="181:20:181:26">String</jtok>
<jtok eid="10" type="local_variable_name" span="181:28:181:30">it</jtok>
<jtok eid="10" type="primary_name_ref" span="181:33:181:39">keySet</jtok>
<jtok eid="10" type="method_call" span="181:40:181:48">iterator</jtok>
<jtok eid="10" type="primary_name_ref" span="182:17:182:19">it</jtok>
<jtok eid="10" type="method_call" span="182:20:182:27">hasNext</jtok>
<jtok eid="10" type="class_or_interface_ref" span="184:13:184:19">String</jtok>
<jtok eid="10" type="local_variable_name" span="184:20:184:28">entrieID</jtok>
<jtok eid="10" type="primary_name_ref" span="184:31:184:33">it</jtok>
<jtok eid="10" type="method_call" span="184:34:184:38">next</jtok>
<jtok eid="10" type="class_or_interface_ref" span="185:13:185:24">BibtexEntry</jtok>
<jtok eid="10" type="local_variable_name" span="185:25:185:30">entry</jtok>
<jtok eid="10" type="method_call" span="185:33:185:45">getEntryById</jtok>
<jtok eid="10" type="primary_name_ref" span="185:46:185:54">entrieID</jtok>
<jtok eid="10" type="primary_name_ref" span="186:18:186:23">entry</jtok>
<jtok eid="10" type="primary_name_ref" span="186:37:186:42">entry</jtok>
<jtok eid="10" type="method_call" span="186:43:186:53">getCiteKey</jtok>
<jtok eid="10" type="class_or_interface_ref" span="188:15:188:21">String</jtok>
<jtok eid="10" type="local_variable_name" span="188:22:188:29">citeKey</jtok>
<jtok eid="10" type="primary_name_ref" span="188:32:188:37">entry</jtok>
<jtok eid="10" type="method_call" span="188:38:188:48">getCiteKey</jtok>
<jtok eid="10" type="primary_name_ref" span="189:19:189:26">citeKey</jtok>
<jtok eid="10" type="primary_name_ref" span="191:21:191:28">keyHash</jtok>
<jtok eid="10" type="primary_name_ref" span="191:32:191:39">citeKey</jtok>
<jtok eid="10" type="method_call" span="191:40:191:48">hashCode</jtok>
<jtok eid="10" type="primary_name_ref" span="193:19:193:23">back</jtok>
<jtok eid="10" type="primary_name_ref" span="193:26:193:31">entry</jtok>
<jtok eid="10" type="primary_name_ref" span="199:14:199:18">back</jtok>
<jtok eid="11" type="class_or_interface_ref" span="202:25:202:36">BibtexEntry</jtok>
<jtok eid="11" type="method_name" span="202:39:202:54">getEntriesByKey</jtok>
<jtok eid="11" type="parameter_type" span="202:55:202:61">String</jtok>
<jtok eid="11" type="parameter_name" span="202:62:202:65">key</jtok>
<jtok eid="11" type="class_or_interface_ref" span="204:6:204:15">ArrayList</jtok>
<jtok eid="11" type="class_or_interface_ref" span="204:16:204:27">BibtexEntry</jtok>
<jtok eid="11" type="local_variable_name" span="204:29:204:36">entries</jtok>
<jtok eid="11" type="constructor_call" span="204:43:204:52">ArrayList</jtok>
<jtok eid="11" type="constructor_call" span="204:53:204:64">BibtexEntry</jtok>
<jtok eid="11" type="class_or_interface_ref" span="206:14:206:25">BibtexEntry</jtok>
<jtok eid="11" type="local_variable_name" span="206:26:206:31">entry</jtok>
<jtok eid="11" type="primary_name_ref" span="206:34:206:42">_entries</jtok>
<jtok eid="11" type="method_call" span="206:43:206:49">values</jtok>
<jtok eid="11" type="primary_name_ref" span="207:17:207:20">key</jtok>
<jtok eid="11" type="method_call" span="207:21:207:27">equals</jtok>
<jtok eid="11" type="primary_name_ref" span="207:28:207:33">entry</jtok>
<jtok eid="11" type="method_call" span="207:34:207:44">getCiteKey</jtok>
<jtok eid="11" type="primary_name_ref" span="208:17:208:24">entries</jtok>
<jtok eid="11" type="method_call" span="208:25:208:28">add</jtok>
<jtok eid="11" type="primary_name_ref" span="208:29:208:34">entry</jtok>
<jtok eid="11" type="primary_name_ref" span="211:16:211:23">entries</jtok>
<jtok eid="11" type="method_call" span="211:24:211:31">toArray</jtok>
<jtok eid="11" type="constructor_call" span="211:36:211:47">BibtexEntry</jtok>
<jtok eid="11" type="primary_name_ref" span="211:48:211:55">entries</jtok>
<jtok eid="11" type="method_call" span="211:56:211:60">size</jtok>
<jtok eid="1" type="block_comment" span="214:5:217:8">/**
     * Inserts the entry, given that its ID is not already in use.
     * use Util.createId(...) to make up a unique ID for an entry.
     */</jtok>
<jtok eid="12" type="method_name" span="218:33:218:44">insertEntry</jtok>
<jtok eid="12" type="parameter_type" span="218:45:218:56">BibtexEntry</jtok>
<jtok eid="12" type="parameter_name" span="218:57:218:62">entry</jtok>
<jtok eid="12" type="throws" span="219:16:219:37">KeyCollisionException</jtok>
<jtok eid="12" type="class_or_interface_ref" span="221:9:221:15">String</jtok>
<jtok eid="12" type="local_variable_name" span="221:16:221:18">id</jtok>
<jtok eid="12" type="primary_name_ref" span="221:21:221:26">entry</jtok>
<jtok eid="12" type="method_call" span="221:27:221:32">getId</jtok>
<jtok eid="12" type="method_call" span="222:13:222:25">getEntryById</jtok>
<jtok eid="12" type="primary_name_ref" span="222:26:222:28">id</jtok>
<jtok eid="12" type="constructor_call" span="224:21:224:42">KeyCollisionException</jtok>
<jtok eid="12" type="string_literal" span="225:17:225:62">"ID is already in use, please choose another"</jtok>
<jtok eid="12" type="primary_name_ref" span="228:9:228:14">entry</jtok>
<jtok eid="12" type="method_call" span="228:15:228:40">addPropertyChangeListener</jtok>
<jtok eid="12" type="primary_name_ref" span="228:41:228:49">listener</jtok>
<jtok eid="12" type="primary_name_ref" span="230:9:230:17">_entries</jtok>
<jtok eid="12" type="method_call" span="230:18:230:21">put</jtok>
<jtok eid="12" type="primary_name_ref" span="230:22:230:24">id</jtok>
<jtok eid="12" type="primary_name_ref" span="230:26:230:31">entry</jtok>
<jtok eid="12" type="method_call" span="232:9:232:28">fireDatabaseChanged</jtok>
<jtok eid="12" type="constructor_call" span="232:33:232:52">DatabaseChangeEvent</jtok>
<jtok eid="12" type="primary_name_ref" span="232:59:232:78">DatabaseChangeEvent</jtok>
<jtok eid="12" type="qualified_name_ref" span="232:79:232:90">ADDED_ENTRY</jtok>
<jtok eid="12" type="primary_name_ref" span="232:92:232:97">entry</jtok>
<jtok eid="12" type="method_call" span="234:16:234:42">checkForDuplicateKeyAndAdd</jtok>
<jtok eid="12" type="primary_name_ref" span="234:49:234:54">entry</jtok>
<jtok eid="12" type="method_call" span="234:55:234:65">getCiteKey</jtok>
<jtok eid="1" type="block_comment" span="237:5:241:8">/**
     * Removes the entry with the given string.
     * 
     * Returns null if not found.
     */</jtok>
<jtok eid="13" type="class_or_interface_ref" span="242:25:242:36">BibtexEntry</jtok>
<jtok eid="13" type="method_name" span="242:37:242:48">removeEntry</jtok>
<jtok eid="13" type="parameter_type" span="242:49:242:55">String</jtok>
<jtok eid="13" type="parameter_name" span="242:56:242:58">id</jtok>
<jtok eid="13" type="class_or_interface_ref" span="244:9:244:20">BibtexEntry</jtok>
<jtok eid="13" type="local_variable_name" span="244:21:244:29">oldValue</jtok>
<jtok eid="13" type="primary_name_ref" span="244:32:244:40">_entries</jtok>
<jtok eid="13" type="method_call" span="244:41:244:47">remove</jtok>
<jtok eid="13" type="primary_name_ref" span="244:48:244:50">id</jtok>
<jtok eid="13" type="primary_name_ref" span="246:13:246:21">oldValue</jtok>
<jtok eid="13" type="method_call" span="249:9:249:25">removeKeyFromSet</jtok>
<jtok eid="13" type="primary_name_ref" span="249:26:249:34">oldValue</jtok>
<jtok eid="13" type="method_call" span="249:35:249:45">getCiteKey</jtok>
<jtok eid="13" type="primary_name_ref" span="250:9:250:17">oldValue</jtok>
<jtok eid="13" type="method_call" span="250:18:250:46">removePropertyChangeListener</jtok>
<jtok eid="13" type="primary_name_ref" span="250:47:250:55">listener</jtok>
<jtok eid="13" type="method_call" span="251:9:251:28">fireDatabaseChanged</jtok>
<jtok eid="13" type="constructor_call" span="251:33:251:52">DatabaseChangeEvent</jtok>
<jtok eid="13" type="primary_name_ref" span="251:59:251:78">DatabaseChangeEvent</jtok>
<jtok eid="13" type="qualified_name_ref" span="251:79:251:92">REMOVED_ENTRY</jtok>
<jtok eid="13" type="primary_name_ref" span="251:94:251:102">oldValue</jtok>
<jtok eid="13" type="primary_name_ref" span="253:16:253:24">oldValue</jtok>
<jtok eid="14" type="method_name" span="256:33:256:51">setCiteKeyForEntry</jtok>
<jtok eid="14" type="parameter_type" span="256:52:256:58">String</jtok>
<jtok eid="14" type="parameter_name" span="256:59:256:61">id</jtok>
<jtok eid="14" type="parameter_type" span="256:63:256:69">String</jtok>
<jtok eid="14" type="parameter_name" span="256:70:256:73">key</jtok>
<jtok eid="14" type="primary_name_ref" span="257:14:257:22">_entries</jtok>
<jtok eid="14" type="method_call" span="257:23:257:34">containsKey</jtok>
<jtok eid="14" type="primary_name_ref" span="257:35:257:37">id</jtok>
<jtok eid="14" type="line_comment" span="257:54:257:77">// Entry doesn't exist!</jtok>
<jtok eid="14" type="class_or_interface_ref" span="258:9:258:20">BibtexEntry</jtok>
<jtok eid="14" type="local_variable_name" span="258:21:258:26">entry</jtok>
<jtok eid="14" type="method_call" span="258:29:258:41">getEntryById</jtok>
<jtok eid="14" type="primary_name_ref" span="258:42:258:44">id</jtok>
<jtok eid="14" type="class_or_interface_ref" span="259:9:259:15">String</jtok>
<jtok eid="14" type="local_variable_name" span="259:16:259:22">oldKey</jtok>
<jtok eid="14" type="primary_name_ref" span="259:25:259:30">entry</jtok>
<jtok eid="14" type="method_call" span="259:31:259:41">getCiteKey</jtok>
<jtok eid="14" type="primary_name_ref" span="260:13:260:16">key</jtok>
<jtok eid="14" type="primary_name_ref" span="261:11:261:16">entry</jtok>
<jtok eid="14" type="method_call" span="261:17:261:25">setField</jtok>
<jtok eid="14" type="primary_name_ref" span="261:26:261:38">BibtexFields</jtok>
<jtok eid="14" type="qualified_name_ref" span="261:39:261:48">KEY_FIELD</jtok>
<jtok eid="14" type="primary_name_ref" span="261:50:261:53">key</jtok>
<jtok eid="14" type="primary_name_ref" span="263:11:263:16">entry</jtok>
<jtok eid="14" type="method_call" span="263:17:263:27">clearField</jtok>
<jtok eid="14" type="primary_name_ref" span="263:28:263:40">BibtexFields</jtok>
<jtok eid="14" type="qualified_name_ref" span="263:41:263:50">KEY_FIELD</jtok>
<jtok eid="14" type="method_call" span="264:16:264:42">checkForDuplicateKeyAndAdd</jtok>
<jtok eid="14" type="primary_name_ref" span="264:43:264:49">oldKey</jtok>
<jtok eid="14" type="primary_name_ref" span="264:51:264:56">entry</jtok>
<jtok eid="14" type="method_call" span="264:57:264:67">getCiteKey</jtok>
<jtok eid="1" type="block_comment" span="267:5:269:8">/**
     * Sets the database's preamble.
     */</jtok>
<jtok eid="15" type="method_name" span="270:30:270:41">setPreamble</jtok>
<jtok eid="15" type="parameter_type" span="270:42:270:48">String</jtok>
<jtok eid="15" type="parameter_name" span="270:49:270:57">preamble</jtok>
<jtok eid="15" type="primary_name_ref" span="272:9:272:18">_preamble</jtok>
<jtok eid="15" type="primary_name_ref" span="272:21:272:29">preamble</jtok>
<jtok eid="1" type="block_comment" span="275:5:277:8">/**
     * Returns the database's preamble.
     */</jtok>
<jtok eid="16" type="class_or_interface_ref" span="278:25:278:31">String</jtok>
<jtok eid="16" type="method_name" span="278:32:278:43">getPreamble</jtok>
<jtok eid="16" type="primary_name_ref" span="280:16:280:25">_preamble</jtok>
<jtok eid="1" type="block_comment" span="283:5:285:8">/**
     * Inserts a Bibtex String at the given index.
     */</jtok>
<jtok eid="17" type="method_name" span="286:30:286:39">addString</jtok>
<jtok eid="17" type="parameter_type" span="286:40:286:52">BibtexString</jtok>
<jtok eid="17" type="parameter_name" span="286:53:286:59">string</jtok>
<jtok eid="17" type="throws" span="287:16:287:37">KeyCollisionException</jtok>
<jtok eid="17" type="method_call" span="289:10:289:24">hasStringLabel</jtok>
<jtok eid="17" type="primary_name_ref" span="289:25:289:31">string</jtok>
<jtok eid="17" type="method_call" span="289:32:289:39">getName</jtok>
<jtok eid="17" type="constructor_call" span="290:17:290:38">KeyCollisionException</jtok>
<jtok eid="17" type="string_literal" span="290:39:290:81">"A string with this label already exists,"</jtok>
<jtok eid="17" type="primary_name_ref" span="293:13:293:21">_strings</jtok>
<jtok eid="17" type="method_call" span="293:22:293:33">containsKey</jtok>
<jtok eid="17" type="primary_name_ref" span="293:34:293:40">string</jtok>
<jtok eid="17" type="method_call" span="293:41:293:46">getId</jtok>
<jtok eid="17" type="constructor_call" span="294:23:294:44">KeyCollisionException</jtok>
<jtok eid="17" type="string_literal" span="294:45:294:73">"Duplicate BibtexString id."</jtok>
<jtok eid="17" type="primary_name_ref" span="296:9:296:17">_strings</jtok>
<jtok eid="17" type="method_call" span="296:18:296:21">put</jtok>
<jtok eid="17" type="primary_name_ref" span="296:22:296:28">string</jtok>
<jtok eid="17" type="method_call" span="296:29:296:34">getId</jtok>
<jtok eid="17" type="primary_name_ref" span="296:38:296:44">string</jtok>
<jtok eid="1" type="block_comment" span="299:5:301:8">/**
     * Removes the string at the given index.
     */</jtok>
<jtok eid="18" type="method_name" span="302:30:302:42">removeString</jtok>
<jtok eid="18" type="parameter_type" span="302:43:302:49">String</jtok>
<jtok eid="18" type="parameter_name" span="302:50:302:52">id</jtok>
<jtok eid="18" type="primary_name_ref" span="303:9:303:17">_strings</jtok>
<jtok eid="18" type="method_call" span="303:18:303:24">remove</jtok>
<jtok eid="18" type="primary_name_ref" span="303:25:303:27">id</jtok>
<jtok eid="1" type="block_comment" span="306:5:309:8">/**
     * Returns a Set of keys to all BibtexString objects in the database.
     * These are in no sorted order.
     */</jtok>
<jtok eid="19" type="class_or_interface_ref" span="310:12:310:15">Set</jtok>
<jtok eid="19" type="class_or_interface_ref" span="310:16:310:22">String</jtok>
<jtok eid="19" type="method_name" span="310:24:310:39">getStringKeySet</jtok>
<jtok eid="19" type="primary_name_ref" span="311:16:311:24">_strings</jtok>
<jtok eid="19" type="method_call" span="311:25:311:31">keySet</jtok>
<jtok eid="1" type="block_comment" span="314:5:317:8">/**
     * Returns a Collection of all BibtexString objects in the database.
     * These are in no particular order.
     */</jtok>
<jtok eid="20" type="class_or_interface_ref" span="318:12:318:22">Collection</jtok>
<jtok eid="20" type="class_or_interface_ref" span="318:23:318:35">BibtexString</jtok>
<jtok eid="20" type="method_name" span="318:37:318:52">getStringValues</jtok>
<jtok eid="20" type="primary_name_ref" span="319:16:319:24">_strings</jtok>
<jtok eid="20" type="method_call" span="319:25:319:31">values</jtok>
<jtok eid="1" type="block_comment" span="322:5:324:8">/**
     * Returns the string at the given index.
     */</jtok>
<jtok eid="21" type="class_or_interface_ref" span="325:25:325:37">BibtexString</jtok>
<jtok eid="21" type="method_name" span="325:38:325:47">getString</jtok>
<jtok eid="21" type="parameter_type" span="325:48:325:54">String</jtok>
<jtok eid="21" type="parameter_name" span="325:55:325:56">o</jtok>
<jtok eid="21" type="primary_name_ref" span="326:16:326:24">_strings</jtok>
<jtok eid="21" type="method_call" span="326:25:326:28">get</jtok>
<jtok eid="21" type="primary_name_ref" span="326:29:326:30">o</jtok>
<jtok eid="1" type="block_comment" span="329:5:331:8">/**
     * Returns the number of strings.
     */</jtok>
<jtok eid="22" type="method_name" span="332:29:332:43">getStringCount</jtok>
<jtok eid="22" type="primary_name_ref" span="333:16:333:24">_strings</jtok>
<jtok eid="22" type="method_call" span="333:25:333:29">size</jtok>
<jtok eid="1" type="block_comment" span="336:5:338:8">/**
     * Returns true if a string with the given label already exists.
     */</jtok>
<jtok eid="23" type="method_name" span="339:33:339:47">hasStringLabel</jtok>
<jtok eid="23" type="parameter_type" span="339:48:339:54">String</jtok>
<jtok eid="23" type="parameter_name" span="339:55:339:60">label</jtok>
<jtok eid="23" type="class_or_interface_ref" span="340:11:340:23">BibtexString</jtok>
<jtok eid="23" type="local_variable_name" span="340:24:340:29">value</jtok>
<jtok eid="23" type="primary_name_ref" span="340:32:340:40">_strings</jtok>
<jtok eid="23" type="method_call" span="340:41:340:47">values</jtok>
<jtok eid="23" type="primary_name_ref" span="341:18:341:23">value</jtok>
<jtok eid="23" type="method_call" span="341:24:341:31">getName</jtok>
<jtok eid="23" type="method_call" span="341:34:341:40">equals</jtok>
<jtok eid="23" type="primary_name_ref" span="341:41:341:46">label</jtok>
<jtok eid="1" type="block_comment" span="347:5:350:8">/**
     * Resolves any references to strings contained in this field content,
     * if possible.
     */</jtok>
<jtok eid="24" type="class_or_interface_ref" span="351:12:351:18">String</jtok>
<jtok eid="24" type="method_name" span="351:19:351:36">resolveForStrings</jtok>
<jtok eid="24" type="parameter_type" span="351:37:351:43">String</jtok>
<jtok eid="24" type="parameter_name" span="351:44:351:51">content</jtok>
<jtok eid="24" type="primary_name_ref" span="352:10:352:17">content</jtok>
<jtok eid="24" type="constructor_call" span="353:17:353:41">IllegalArgumentException</jtok>
<jtok eid="24" type="string_literal" span="353:42:353:91">"Content for resolveForStrings must not be null."</jtok>
<jtok eid="24" type="method_call" span="355:16:355:30">resolveContent</jtok>
<jtok eid="24" type="primary_name_ref" span="355:31:355:38">content</jtok>
<jtok eid="24" type="constructor_call" span="355:44:355:51">HashSet</jtok>
<jtok eid="24" type="constructor_call" span="355:52:355:58">String</jtok>
<jtok eid="1" type="block_comment" span="358:5:370:5">/**
	 * Take the given collection of BibtexEntry and resolve any string
	 * references.
	 * 
	 * @param entries
	 *            A collection of BibtexEntries in which all strings of the form
	 *            #xxx# will be resolved against the hash map of string
	 *            references stored in the databasee.
	 *            
	 * @param inPlace If inPlace is true then the given BibtexEntries will be modified, if false then copies of the BibtexEntries are made before resolving the strings.
	 * 
	 * @return a list of bibtexentries, with all strings resolved. It is dependent on the value of inPlace whether copies are made or the given BibtexEntries are modified. 
	 */</jtok>
<jtok eid="25" type="class_or_interface_ref" span="371:12:371:16">List</jtok>
<jtok eid="25" type="class_or_interface_ref" span="371:17:371:28">BibtexEntry</jtok>
<jtok eid="25" type="method_name" span="371:30:371:47">resolveForStrings</jtok>
<jtok eid="25" type="parameter_type" span="371:48:371:58">Collection</jtok>
<jtok eid="25" type="parameter_type" span="371:59:371:70">BibtexEntry</jtok>
<jtok eid="25" type="parameter_name" span="371:72:371:79">entries</jtok>
<jtok eid="25" type="parameter_name" span="371:89:371:96">inPlace</jtok>
<jtok eid="25" type="primary_name_ref" span="373:10:373:17">entries</jtok>
<jtok eid="25" type="constructor_call" span="374:17:374:37">NullPointerException</jtok>
<jtok eid="25" type="class_or_interface_ref" span="376:6:376:10">List</jtok>
<jtok eid="25" type="class_or_interface_ref" span="376:11:376:22">BibtexEntry</jtok>
<jtok eid="25" type="local_variable_name" span="376:24:376:31">results</jtok>
<jtok eid="25" type="constructor_call" span="376:38:376:47">ArrayList</jtok>
<jtok eid="25" type="constructor_call" span="376:48:376:59">BibtexEntry</jtok>
<jtok eid="25" type="primary_name_ref" span="376:61:376:68">entries</jtok>
<jtok eid="25" type="method_call" span="376:69:376:73">size</jtok>
<jtok eid="25" type="class_or_interface_ref" span="378:11:378:22">BibtexEntry</jtok>
<jtok eid="25" type="local_variable_name" span="378:23:378:28">entry</jtok>
<jtok eid="25" type="primary_name_ref" span="378:31:378:38">entries</jtok>
<jtok eid="25" type="primary_name_ref" span="379:7:379:14">results</jtok>
<jtok eid="25" type="method_call" span="379:15:379:18">add</jtok>
<jtok eid="25" type="method_call" span="379:24:379:41">resolveForStrings</jtok>
<jtok eid="25" type="primary_name_ref" span="379:42:379:47">entry</jtok>
<jtok eid="25" type="primary_name_ref" span="379:49:379:56">inPlace</jtok>
<jtok eid="25" type="primary_name_ref" span="381:13:381:20">results</jtok>
<jtok eid="1" type="block_comment" span="384:5:400:5">/**
	 * Take the given BibtexEntry and resolve any string references.
	 * 
	 * @param entry
	 *            A BibtexEntry in which all strings of the form #xxx# will be
	 *            resolved against the hash map of string references stored in
	 *            the databasee.
	 * 
	 * @param inPlace
	 *            If inPlace is true then the given BibtexEntry will be
	 *            modified, if false then a copy is made using close made before
	 *            resolving the strings.
	 * 
	 * @return a BibtexEntry with all string references resolved. It is
	 *         dependent on the value of inPlace whether a copy is made or the
	 *         given BibtexEntries is modified.
	 */</jtok>
<jtok eid="26" type="class_or_interface_ref" span="401:12:401:23">BibtexEntry</jtok>
<jtok eid="26" type="method_name" span="401:24:401:41">resolveForStrings</jtok>
<jtok eid="26" type="parameter_type" span="401:42:401:53">BibtexEntry</jtok>
<jtok eid="26" type="parameter_name" span="401:54:401:59">entry</jtok>
<jtok eid="26" type="parameter_name" span="401:69:401:76">inPlace</jtok>
<jtok eid="26" type="primary_name_ref" span="403:11:403:18">inPlace</jtok>
<jtok eid="26" type="primary_name_ref" span="404:7:404:12">entry</jtok>
<jtok eid="26" type="class_or_interface_ref" span="404:16:404:27">BibtexEntry</jtok>
<jtok eid="26" type="primary_name_ref" span="404:28:404:33">entry</jtok>
<jtok eid="26" type="method_call" span="404:34:404:39">clone</jtok>
<jtok eid="26" type="class_or_interface_ref" span="407:11:407:17">Object</jtok>
<jtok eid="26" type="local_variable_name" span="407:18:407:23">field</jtok>
<jtok eid="26" type="primary_name_ref" span="407:26:407:31">entry</jtok>
<jtok eid="26" type="method_call" span="407:32:407:44">getAllFields</jtok>
<jtok eid="26" type="primary_name_ref" span="408:7:408:12">entry</jtok>
<jtok eid="26" type="method_call" span="408:13:408:21">setField</jtok>
<jtok eid="26" type="primary_name_ref" span="408:22:408:27">field</jtok>
<jtok eid="26" type="method_call" span="408:28:408:36">toString</jtok>
<jtok eid="26" type="method_call" span="408:45:408:62">resolveForStrings</jtok>
<jtok eid="26" type="primary_name_ref" span="408:63:408:68">entry</jtok>
<jtok eid="26" type="method_call" span="408:69:408:77">getField</jtok>
<jtok eid="26" type="primary_name_ref" span="408:78:408:83">field</jtok>
<jtok eid="26" type="method_call" span="408:84:408:92">toString</jtok>
<jtok eid="26" type="method_call" span="408:96:408:104">toString</jtok>
<jtok eid="26" type="primary_name_ref" span="411:13:411:18">entry</jtok>
<jtok eid="1" type="block_comment" span="414:2:419:7">/**
    * If the label represents a string contained in this database, returns
    * that string's content. Resolves references to other strings, taking
    * care not to follow a circular reference pattern.
    * If the string is undefined, returns null.
    */</jtok>
<jtok eid="27" type="class_or_interface_ref" span="420:13:420:19">String</jtok>
<jtok eid="27" type="method_name" span="420:20:420:33">resolveString</jtok>
<jtok eid="27" type="parameter_type" span="420:34:420:40">String</jtok>
<jtok eid="27" type="parameter_name" span="420:41:420:46">label</jtok>
<jtok eid="27" type="parameter_type" span="420:48:420:55">HashSet</jtok>
<jtok eid="27" type="parameter_type" span="420:56:420:62">String</jtok>
<jtok eid="27" type="parameter_name" span="420:64:420:71">usedIds</jtok>
<jtok eid="27" type="class_or_interface_ref" span="421:11:421:23">BibtexString</jtok>
<jtok eid="27" type="local_variable_name" span="421:24:421:30">string</jtok>
<jtok eid="27" type="primary_name_ref" span="421:33:421:41">_strings</jtok>
<jtok eid="27" type="method_call" span="421:42:421:48">values</jtok>
<jtok eid="27" type="line_comment" span="423:17:423:57">//Util.pr(label+" : "+string.getName());</jtok>
<jtok eid="27" type="primary_name_ref" span="424:17:424:23">string</jtok>
<jtok eid="27" type="method_call" span="424:24:424:31">getName</jtok>
<jtok eid="27" type="method_call" span="424:34:424:45">toLowerCase</jtok>
<jtok eid="27" type="method_call" span="424:48:424:54">equals</jtok>
<jtok eid="27" type="primary_name_ref" span="424:55:424:60">label</jtok>
<jtok eid="27" type="method_call" span="424:61:424:72">toLowerCase</jtok>
<jtok eid="27" type="line_comment" span="426:17:426:70">// First check if this string label has been resolved</jtok>
<jtok eid="27" type="line_comment" span="427:17:427:63">// earlier in this recursion. If so, we have a</jtok>
<jtok eid="27" type="line_comment" span="428:17:428:65">// circular reference, and have to stop to avoid</jtok>
<jtok eid="27" type="line_comment" span="429:17:429:39">// infinite recursion.</jtok>
<jtok eid="27" type="primary_name_ref" span="430:21:430:28">usedIds</jtok>
<jtok eid="27" type="method_call" span="430:29:430:37">contains</jtok>
<jtok eid="27" type="primary_name_ref" span="430:38:430:44">string</jtok>
<jtok eid="27" type="method_call" span="430:45:430:50">getId</jtok>
<jtok eid="27" type="primary_name_ref" span="431:21:431:25">Util</jtok>
<jtok eid="27" type="method_call" span="431:26:431:28">pr</jtok>
<jtok eid="27" type="string_literal" span="431:29:431:77">"Stopped due to circular reference in strings: "</jtok>
<jtok eid="27" type="primary_name_ref" span="431:78:431:83">label</jtok>
<jtok eid="27" type="primary_name_ref" span="432:28:432:33">label</jtok>
<jtok eid="27" type="line_comment" span="434:17:434:53">// If not, log this string's ID now.</jtok>
<jtok eid="27" type="primary_name_ref" span="435:17:435:24">usedIds</jtok>
<jtok eid="27" type="method_call" span="435:25:435:28">add</jtok>
<jtok eid="27" type="primary_name_ref" span="435:29:435:35">string</jtok>
<jtok eid="27" type="method_call" span="435:36:435:41">getId</jtok>
<jtok eid="27" type="line_comment" span="437:17:437:69">// Ok, we found the string. Now we must make sure we</jtok>
<jtok eid="27" type="line_comment" span="438:17:438:72">// resolve any references to other strings in this one.</jtok>
<jtok eid="27" type="class_or_interface_ref" span="439:17:439:23">String</jtok>
<jtok eid="27" type="local_variable_name" span="439:24:439:27">res</jtok>
<jtok eid="27" type="primary_name_ref" span="439:30:439:36">string</jtok>
<jtok eid="27" type="method_call" span="439:37:439:47">getContent</jtok>
<jtok eid="27" type="primary_name_ref" span="440:17:440:20">res</jtok>
<jtok eid="27" type="method_call" span="440:23:440:37">resolveContent</jtok>
<jtok eid="27" type="primary_name_ref" span="440:38:440:41">res</jtok>
<jtok eid="27" type="primary_name_ref" span="440:43:440:50">usedIds</jtok>
<jtok eid="27" type="line_comment" span="442:17:442:73">// Finished with recursing this branch, so we remove our</jtok>
<jtok eid="27" type="line_comment" span="443:17:443:29">// ID again:</jtok>
<jtok eid="27" type="primary_name_ref" span="444:17:444:24">usedIds</jtok>
<jtok eid="27" type="method_call" span="444:25:444:31">remove</jtok>
<jtok eid="27" type="primary_name_ref" span="444:32:444:38">string</jtok>
<jtok eid="27" type="method_call" span="444:39:444:44">getId</jtok>
<jtok eid="27" type="primary_name_ref" span="446:24:446:27">res</jtok>
<jtok eid="27" type="line_comment" span="450:9:450:87">// If we get to this point, the string has obviously not been defined locally.</jtok>
<jtok eid="27" type="line_comment" span="451:9:451:76">// Check if one of the standard BibTeX month strings has been used:</jtok>
<jtok eid="27" type="class_or_interface_ref" span="452:9:452:15">Object</jtok>
<jtok eid="27" type="local_variable_name" span="452:16:452:17">o</jtok>
<jtok eid="27" type="primary_name_ref" span="453:14:453:15">o</jtok>
<jtok eid="27" type="primary_name_ref" span="453:18:453:25">Globals</jtok>
<jtok eid="27" type="qualified_name_ref" span="453:26:453:39">MONTH_STRINGS</jtok>
<jtok eid="27" type="method_call" span="453:40:453:43">get</jtok>
<jtok eid="27" type="primary_name_ref" span="453:44:453:49">label</jtok>
<jtok eid="27" type="method_call" span="453:50:453:61">toLowerCase</jtok>
<jtok eid="27" type="class_or_interface_ref" span="454:21:454:27">String</jtok>
<jtok eid="27" type="primary_name_ref" span="454:28:454:29">o</jtok>
<jtok eid="28" type="class_or_interface_ref" span="460:13:460:19">String</jtok>
<jtok eid="28" type="method_name" span="460:20:460:34">resolveContent</jtok>
<jtok eid="28" type="parameter_type" span="460:35:460:41">String</jtok>
<jtok eid="28" type="parameter_name" span="460:42:460:45">res</jtok>
<jtok eid="28" type="parameter_type" span="460:47:460:54">HashSet</jtok>
<jtok eid="28" type="parameter_type" span="460:55:460:61">String</jtok>
<jtok eid="28" type="parameter_name" span="460:63:460:70">usedIds</jtok>
<jtok eid="28" type="line_comment" span="461:9:461:52">//if (res.matches(".*#[-\\^\\:\\w]+#.*")) {</jtok>
<jtok eid="28" type="primary_name_ref" span="462:9:462:12">res</jtok>
<jtok eid="28" type="method_call" span="462:13:462:20">matches</jtok>
<jtok eid="28" type="string_literal" span="462:21:462:34">".*#[^#]+#.*"</jtok>
<jtok eid="28" type="class_or_interface_ref" span="463:13:463:25">StringBuffer</jtok>
<jtok eid="28" type="local_variable_name" span="463:26:463:32">newRes</jtok>
<jtok eid="28" type="constructor_call" span="463:39:463:51">StringBuffer</jtok>
<jtok eid="28" type="local_variable_name" span="464:17:464:20">piv</jtok>
<jtok eid="28" type="local_variable_name" span="464:26:464:30">next</jtok>
<jtok eid="28" type="primary_name_ref" span="465:21:465:25">next</jtok>
<jtok eid="28" type="primary_name_ref" span="465:26:465:29">res</jtok>
<jtok eid="28" type="method_call" span="465:30:465:37">indexOf</jtok>
<jtok eid="28" type="string_literal" span="465:38:465:41">"#"</jtok>
<jtok eid="28" type="primary_name_ref" span="465:43:465:46">piv</jtok>
<jtok eid="28" type="line_comment" span="467:17:467:65">// We found the next string ref. Append the text</jtok>
<jtok eid="28" type="line_comment" span="468:17:468:29">// up to it.</jtok>
<jtok eid="28" type="primary_name_ref" span="469:21:469:25">next</jtok>
<jtok eid="28" type="primary_name_ref" span="470:21:470:27">newRes</jtok>
<jtok eid="28" type="method_call" span="470:28:470:34">append</jtok>
<jtok eid="28" type="primary_name_ref" span="470:35:470:38">res</jtok>
<jtok eid="28" type="method_call" span="470:39:470:48">substring</jtok>
<jtok eid="28" type="primary_name_ref" span="470:49:470:52">piv</jtok>
<jtok eid="28" type="primary_name_ref" span="470:54:470:58">next</jtok>
<jtok eid="28" type="local_variable_name" span="471:21:471:30">stringEnd</jtok>
<jtok eid="28" type="primary_name_ref" span="471:33:471:36">res</jtok>
<jtok eid="28" type="method_call" span="471:37:471:44">indexOf</jtok>
<jtok eid="28" type="string_literal" span="471:45:471:48">"#"</jtok>
<jtok eid="28" type="primary_name_ref" span="471:50:471:54">next</jtok>
<jtok eid="28" type="primary_name_ref" span="472:21:472:30">stringEnd</jtok>
<jtok eid="28" type="line_comment" span="473:21:473:66">// We found the boundaries of the string ref,</jtok>
<jtok eid="28" type="line_comment" span="474:21:474:45">// now resolve that one.</jtok>
<jtok eid="28" type="class_or_interface_ref" span="475:21:475:27">String</jtok>
<jtok eid="28" type="local_variable_name" span="475:28:475:36">refLabel</jtok>
<jtok eid="28" type="primary_name_ref" span="475:39:475:42">res</jtok>
<jtok eid="28" type="method_call" span="475:43:475:52">substring</jtok>
<jtok eid="28" type="primary_name_ref" span="475:53:475:57">next</jtok>
<jtok eid="28" type="primary_name_ref" span="475:61:475:70">stringEnd</jtok>
<jtok eid="28" type="class_or_interface_ref" span="476:21:476:27">String</jtok>
<jtok eid="28" type="local_variable_name" span="476:28:476:36">resolved</jtok>
<jtok eid="28" type="method_call" span="476:39:476:52">resolveString</jtok>
<jtok eid="28" type="primary_name_ref" span="476:53:476:61">refLabel</jtok>
<jtok eid="28" type="primary_name_ref" span="476:63:476:70">usedIds</jtok>
<jtok eid="28" type="primary_name_ref" span="478:25:478:33">resolved</jtok>
<jtok eid="28" type="line_comment" span="479:25:479:67">// Could not resolve string. Display the #</jtok>
<jtok eid="28" type="line_comment" span="480:25:480:65">// characters rather than removing them:</jtok>
<jtok eid="28" type="primary_name_ref" span="481:25:481:31">newRes</jtok>
<jtok eid="28" type="method_call" span="481:32:481:38">append</jtok>
<jtok eid="28" type="primary_name_ref" span="481:39:481:42">res</jtok>
<jtok eid="28" type="method_call" span="481:43:481:52">substring</jtok>
<jtok eid="28" type="primary_name_ref" span="481:53:481:57">next</jtok>
<jtok eid="28" type="primary_name_ref" span="481:59:481:68">stringEnd</jtok>
<jtok eid="28" type="line_comment" span="483:25:483:84">// The string was resolved, so we display its meaning only,</jtok>
<jtok eid="28" type="line_comment" span="484:25:484:83">// stripping the # characters signifying the string label:</jtok>
<jtok eid="28" type="primary_name_ref" span="485:25:485:31">newRes</jtok>
<jtok eid="28" type="method_call" span="485:32:485:38">append</jtok>
<jtok eid="28" type="primary_name_ref" span="485:39:485:47">resolved</jtok>
<jtok eid="28" type="primary_name_ref" span="486:21:486:24">piv</jtok>
<jtok eid="28" type="primary_name_ref" span="486:27:486:36">stringEnd</jtok>
<jtok eid="28" type="line_comment" span="488:21:488:77">// We didn't find the boundaries of the string ref. This</jtok>
<jtok eid="28" type="line_comment" span="489:21:489:78">// makes it impossible to interpret it as a string label.</jtok>
<jtok eid="28" type="line_comment" span="490:21:490:81">// So we should just append the rest of the text and finish.</jtok>
<jtok eid="28" type="primary_name_ref" span="491:21:491:27">newRes</jtok>
<jtok eid="28" type="method_call" span="491:28:491:34">append</jtok>
<jtok eid="28" type="primary_name_ref" span="491:35:491:38">res</jtok>
<jtok eid="28" type="method_call" span="491:39:491:48">substring</jtok>
<jtok eid="28" type="primary_name_ref" span="491:49:491:53">next</jtok>
<jtok eid="28" type="primary_name_ref" span="492:21:492:24">piv</jtok>
<jtok eid="28" type="primary_name_ref" span="492:27:492:30">res</jtok>
<jtok eid="28" type="method_call" span="492:31:492:37">length</jtok>
<jtok eid="28" type="primary_name_ref" span="497:17:497:20">piv</jtok>
<jtok eid="28" type="primary_name_ref" span="497:23:497:26">res</jtok>
<jtok eid="28" type="method_call" span="497:27:497:33">length</jtok>
<jtok eid="28" type="primary_name_ref" span="498:17:498:23">newRes</jtok>
<jtok eid="28" type="method_call" span="498:24:498:30">append</jtok>
<jtok eid="28" type="primary_name_ref" span="498:31:498:34">res</jtok>
<jtok eid="28" type="method_call" span="498:35:498:44">substring</jtok>
<jtok eid="28" type="primary_name_ref" span="498:45:498:48">piv</jtok>
<jtok eid="28" type="primary_name_ref" span="499:13:499:16">res</jtok>
<jtok eid="28" type="primary_name_ref" span="499:19:499:25">newRes</jtok>
<jtok eid="28" type="method_call" span="499:26:499:34">toString</jtok>
<jtok eid="28" type="primary_name_ref" span="501:16:501:19">res</jtok>
<jtok eid="1" type="line_comment" span="504:5:504:49">//##########################################</jtok>
<jtok eid="1" type="line_comment" span="505:5:505:15">//  usage:</jtok>
<jtok eid="1" type="line_comment" span="506:5:506:91">//  isDuplicate=checkForDuplicateKeyAndAdd( null, b.getKey() , issueDuplicateWarning);</jtok>
<jtok eid="1" type="line_comment" span="507:5:507:51">//############################################</jtok>
<jtok eid="1" type="line_comment" span="508:9:508:93">// if the newkey already exists and is not the same as oldkey it will give a warning</jtok>
<jtok eid="1" type="line_comment" span="509:5:509:71">// else it will add the newkey to the to set and remove the oldkey</jtok>
<jtok eid="29" type="method_name" span="510:20:510:46">checkForDuplicateKeyAndAdd</jtok>
<jtok eid="29" type="parameter_type" span="510:47:510:53">String</jtok>
<jtok eid="29" type="parameter_name" span="510:54:510:60">oldKey</jtok>
<jtok eid="29" type="parameter_type" span="510:62:510:68">String</jtok>
<jtok eid="29" type="parameter_name" span="510:69:510:75">newKey</jtok>
<jtok eid="29" type="parameter_name" span="510:85:510:97">issueWarning</jtok>
<jtok eid="29" type="line_comment" span="511:17:511:118">// Globals.logger(" checkForDuplicateKeyAndAdd [oldKey = " + oldKey + "] [newKey = " + newKey + "]");</jtok>
<jtok eid="29" type="local_variable_name" span="513:17:513:26">duplicate</jtok>
<jtok eid="29" type="primary_name_ref" span="514:12:514:18">oldKey</jtok>
<jtok eid="29" type="line_comment" span="514:26:514:80">// this is a new entry so don't bother removing oldKey</jtok>
<jtok eid="29" type="primary_name_ref" span="515:13:515:22">duplicate</jtok>
<jtok eid="29" type="method_call" span="515:24:515:35">addKeyToSet</jtok>
<jtok eid="29" type="primary_name_ref" span="515:37:515:43">newKey</jtok>
<jtok eid="29" type="primary_name_ref" span="517:16:517:22">oldKey</jtok>
<jtok eid="29" type="method_call" span="517:23:517:29">equals</jtok>
<jtok eid="29" type="primary_name_ref" span="517:30:517:36">newKey</jtok>
<jtok eid="29" type="line_comment" span="517:39:517:86">// were OK because the user did not change keys</jtok>
<jtok eid="29" type="primary_name_ref" span="518:17:518:26">duplicate</jtok>
<jtok eid="29" type="line_comment" span="519:19:519:42">// user changed the key</jtok>
<jtok eid="29" type="line_comment" span="521:17:521:38">// removed the oldkey</jtok>
<jtok eid="29" type="line_comment" span="522:17:522:64">// But what if more than two have the same key?</jtok>
<jtok eid="29" type="line_comment" span="523:17:523:89">// this means that user can add another key and would not get a warning!</jtok>
<jtok eid="29" type="line_comment" span="524:17:524:123">// consider this: i add a key xxx, then i add another key xxx . I get a warning. I delete the key xxx. JBM</jtok>
<jtok eid="29" type="line_comment" span="525:17:525:104">// removes this key from the allKey. then I add another key xxx. I don't get a warning!</jtok>
<jtok eid="29" type="line_comment" span="526:17:526:73">// i need a way to count the number of keys of each type</jtok>
<jtok eid="29" type="line_comment" span="527:17:527:54">// hashmap=&gt;int (increment each time)</jtok>
<jtok eid="29" type="method_call" span="529:17:529:33">removeKeyFromSet</jtok>
<jtok eid="29" type="primary_name_ref" span="529:35:529:41">oldKey</jtok>
<jtok eid="29" type="primary_name_ref" span="530:17:530:26">duplicate</jtok>
<jtok eid="29" type="method_call" span="530:29:530:40">addKeyToSet</jtok>
<jtok eid="29" type="primary_name_ref" span="530:42:530:48">newKey</jtok>
<jtok eid="29" type="primary_name_ref" span="533:12:533:21">duplicate</jtok>
<jtok eid="29" type="primary_name_ref" span="533:31:533:43">issueWarning</jtok>
<jtok eid="29" type="primary_name_ref" span="534:13:534:24">JOptionPane</jtok>
<jtok eid="29" type="method_call" span="534:25:534:42">showMessageDialog</jtok>
<jtok eid="29" type="primary_name_ref" span="534:50:534:57">Globals</jtok>
<jtok eid="29" type="method_call" span="534:58:534:62">lang</jtok>
<jtok eid="29" type="string_literal" span="534:63:534:97">"Warning there is a duplicate key"</jtok>
<jtok eid="29" type="string_literal" span="534:99:534:102">":"</jtok>
<jtok eid="29" type="primary_name_ref" span="534:105:534:111">newKey</jtok>
<jtok eid="29" type="primary_name_ref" span="535:43:535:50">Globals</jtok>
<jtok eid="29" type="method_call" span="535:51:535:55">lang</jtok>
<jtok eid="29" type="string_literal" span="535:56:535:79">"Duplicate Key Warning"</jtok>
<jtok eid="29" type="primary_name_ref" span="536:43:536:54">JOptionPane</jtok>
<jtok eid="29" type="qualified_name_ref" span="536:55:536:70">WARNING_MESSAGE</jtok>
<jtok eid="29" type="line_comment" span="536:72:536:85">//, options);</jtok>
<jtok eid="29" type="primary_name_ref" span="539:16:539:25">duplicate</jtok>
<jtok eid="1" type="block_comment" span="542:5:544:8">/**
     * Returns the number of occurences of the given key in this database.
     */</jtok>
<jtok eid="30" type="method_name" span="545:16:545:40">getNumberOfKeyOccurences</jtok>
<jtok eid="30" type="parameter_type" span="545:41:545:47">String</jtok>
<jtok eid="30" type="parameter_name" span="545:48:545:51">key</jtok>
<jtok eid="30" type="class_or_interface_ref" span="546:9:546:15">Object</jtok>
<jtok eid="30" type="local_variable_name" span="546:16:546:17">o</jtok>
<jtok eid="30" type="primary_name_ref" span="546:20:546:27">allKeys</jtok>
<jtok eid="30" type="method_call" span="546:28:546:31">get</jtok>
<jtok eid="30" type="primary_name_ref" span="546:32:546:35">key</jtok>
<jtok eid="30" type="primary_name_ref" span="547:13:547:14">o</jtok>
<jtok eid="30" type="class_or_interface_ref" span="550:22:550:29">Integer</jtok>
<jtok eid="30" type="primary_name_ref" span="550:30:550:31">o</jtok>
<jtok eid="30" type="method_call" span="550:33:550:41">intValue</jtok>
<jtok eid="1" type="line_comment" span="554:5:554:63">//========================================================</jtok>
<jtok eid="1" type="line_comment" span="555:5:555:66">// keep track of all the keys to warn if there are duplicates</jtok>
<jtok eid="1" type="line_comment" span="556:5:556:63">//========================================================</jtok>
<jtok eid="31" type="method_name" span="557:21:557:32">addKeyToSet</jtok>
<jtok eid="31" type="parameter_type" span="557:33:557:39">String</jtok>
<jtok eid="31" type="parameter_name" span="557:40:557:43">key</jtok>
<jtok eid="31" type="local_variable_name" span="558:25:558:31">exists</jtok>
<jtok eid="31" type="primary_name_ref" span="559:21:559:24">key</jtok>
<jtok eid="31" type="primary_name_ref" span="559:37:559:40">key</jtok>
<jtok eid="31" type="method_call" span="559:41:559:47">equals</jtok>
<jtok eid="31" type="string_literal" span="559:48:559:50">""</jtok>
<jtok eid="31" type="line_comment" span="560:38:560:59">//don't put empty key</jtok>
<jtok eid="31" type="primary_name_ref" span="561:20:561:27">allKeys</jtok>
<jtok eid="31" type="method_call" span="561:28:561:39">containsKey</jtok>
<jtok eid="31" type="primary_name_ref" span="561:40:561:43">key</jtok>
<jtok eid="31" type="line_comment" span="562:25:562:35">// warning</jtok>
<jtok eid="31" type="primary_name_ref" span="563:25:563:31">exists</jtok>
<jtok eid="31" type="primary_name_ref" span="564:25:564:32">allKeys</jtok>
<jtok eid="31" type="method_call" span="564:33:564:36">put</jtok>
<jtok eid="31" type="primary_name_ref" span="564:38:564:41">key</jtok>
<jtok eid="31" type="constructor_call" span="564:47:564:54">Integer</jtok>
<jtok eid="31" type="primary_name_ref" span="564:56:564:63">allKeys</jtok>
<jtok eid="31" type="method_call" span="564:64:564:67">get</jtok>
<jtok eid="31" type="primary_name_ref" span="564:68:564:71">key</jtok>
<jtok eid="31" type="method_call" span="564:73:564:81">intValue</jtok>
<jtok eid="31" type="line_comment" span="564:90:564:130">// incrementInteger( allKeys.get(key)));</jtok>
<jtok eid="31" type="primary_name_ref" span="566:25:566:32">allKeys</jtok>
<jtok eid="31" type="method_call" span="566:33:566:36">put</jtok>
<jtok eid="31" type="primary_name_ref" span="566:38:566:41">key</jtok>
<jtok eid="31" type="constructor_call" span="566:47:566:54">Integer</jtok>
<jtok eid="31" type="primary_name_ref" span="567:24:567:30">exists</jtok>
<jtok eid="1" type="line_comment" span="570:5:570:63">//========================================================</jtok>
<jtok eid="1" type="line_comment" span="571:5:571:92">// reduce the number of keys by 1. if this number goes to zero then remove from the set</jtok>
<jtok eid="1" type="line_comment" span="572:5:572:92">// note: there is a good reason why we should not use a hashset but use hashmap instead</jtok>
<jtok eid="1" type="line_comment" span="573:5:573:63">//========================================================</jtok>
<jtok eid="32" type="method_name" span="574:18:574:34">removeKeyFromSet</jtok>
<jtok eid="32" type="parameter_type" span="574:35:574:41">String</jtok>
<jtok eid="32" type="parameter_name" span="574:42:574:45">key</jtok>
<jtok eid="32" type="primary_name_ref" span="575:21:575:24">key</jtok>
<jtok eid="32" type="primary_name_ref" span="575:37:575:40">key</jtok>
<jtok eid="32" type="method_call" span="575:41:575:47">equals</jtok>
<jtok eid="32" type="string_literal" span="575:48:575:50">""</jtok>
<jtok eid="32" type="primary_name_ref" span="576:20:576:27">allKeys</jtok>
<jtok eid="32" type="method_call" span="576:28:576:39">containsKey</jtok>
<jtok eid="32" type="primary_name_ref" span="576:40:576:43">key</jtok>
<jtok eid="32" type="class_or_interface_ref" span="577:25:577:32">Integer</jtok>
<jtok eid="32" type="local_variable_name" span="577:33:577:35">tI</jtok>
<jtok eid="32" type="primary_name_ref" span="577:38:577:45">allKeys</jtok>
<jtok eid="32" type="method_call" span="577:46:577:49">get</jtok>
<jtok eid="32" type="primary_name_ref" span="577:50:577:53">key</jtok>
<jtok eid="32" type="line_comment" span="577:56:577:98">// if(allKeys.get(key) instanceof Integer)</jtok>
<jtok eid="32" type="primary_name_ref" span="578:28:578:30">tI</jtok>
<jtok eid="32" type="method_call" span="578:31:578:39">intValue</jtok>
<jtok eid="32" type="primary_name_ref" span="579:33:579:40">allKeys</jtok>
<jtok eid="32" type="method_call" span="579:41:579:47">remove</jtok>
<jtok eid="32" type="primary_name_ref" span="579:49:579:52">key</jtok>
<jtok eid="32" type="primary_name_ref" span="581:33:581:40">allKeys</jtok>
<jtok eid="32" type="method_call" span="581:41:581:44">put</jtok>
<jtok eid="32" type="primary_name_ref" span="581:46:581:49">key</jtok>
<jtok eid="32" type="constructor_call" span="581:55:581:62">Integer</jtok>
<jtok eid="32" type="primary_name_ref" span="581:65:581:67">tI</jtok>
<jtok eid="32" type="method_call" span="581:69:581:77">intValue</jtok>
<jtok eid="32" type="line_comment" span="581:86:581:112">//decrementInteger( tI ));</jtok>
<jtok eid="33" type="method_name" span="587:17:587:36">fireDatabaseChanged</jtok>
<jtok eid="33" type="parameter_type" span="587:37:587:56">DatabaseChangeEvent</jtok>
<jtok eid="33" type="parameter_name" span="587:57:587:58">e</jtok>
<jtok eid="33" type="class_or_interface_ref" span="588:11:588:33">DatabaseChangeListener</jtok>
<jtok eid="33" type="local_variable_name" span="588:34:588:42">listener</jtok>
<jtok eid="33" type="primary_name_ref" span="588:45:588:60">changeListeners</jtok>
<jtok eid="33" type="primary_name_ref" span="589:7:589:15">listener</jtok>
<jtok eid="33" type="method_call" span="589:16:589:31">databaseChanged</jtok>
<jtok eid="33" type="primary_name_ref" span="589:32:589:33">e</jtok>
<jtok eid="34" type="method_name" span="593:17:593:42">addDatabaseChangeListener</jtok>
<jtok eid="34" type="parameter_type" span="593:43:593:65">DatabaseChangeListener</jtok>
<jtok eid="34" type="parameter_name" span="593:66:593:67">l</jtok>
<jtok eid="34" type="primary_name_ref" span="594:9:594:24">changeListeners</jtok>
<jtok eid="34" type="method_call" span="594:25:594:28">add</jtok>
<jtok eid="34" type="primary_name_ref" span="594:29:594:30">l</jtok>
<jtok eid="35" type="method_name" span="597:17:597:45">removeDatabaseChangeListener</jtok>
<jtok eid="35" type="parameter_type" span="597:46:597:68">DatabaseChangeListener</jtok>
<jtok eid="35" type="parameter_name" span="597:69:597:70">l</jtok>
<jtok eid="35" type="primary_name_ref" span="598:9:598:24">changeListeners</jtok>
<jtok eid="35" type="method_call" span="598:25:598:31">remove</jtok>
<jtok eid="35" type="primary_name_ref" span="598:32:598:33">l</jtok>
<jtok eid="1" type="block_comment" span="601:2:617:5">/**
	 * Returns the text stored in the given field of the given bibtex entry
	 * which belongs to the given database.
	 * 
	 * If a database is given, this function will try to resolve any string
	 * references in the field-value.
     * Also, if a database is given, this function will try to find values for
     * unset fields in the entry linked by the "crossref" field, if any.
	 * 
	 * @param field
	 *            The field to return the value of.
	 * @param bibtex maybenull
	 *            The bibtex entry which contains the field.
	 * @param database maybenull
	 *            The database of the bibtex entry.
	 * @return The resolved field value or null if not found.
	 */</jtok>
<jtok eid="36" type="class_or_interface_ref" span="618:16:618:22">String</jtok>
<jtok eid="36" type="method_name" span="618:23:618:39">getResolvedField</jtok>
<jtok eid="36" type="parameter_type" span="618:40:618:46">String</jtok>
<jtok eid="36" type="parameter_name" span="618:47:618:52">field</jtok>
<jtok eid="36" type="parameter_type" span="618:54:618:65">BibtexEntry</jtok>
<jtok eid="36" type="parameter_name" span="618:66:618:72">bibtex</jtok>
<jtok eid="36" type="parameter_type" span="619:4:619:18">BibtexDatabase</jtok>
<jtok eid="36" type="parameter_name" span="619:19:619:27">database</jtok>
<jtok eid="36" type="primary_name_ref" span="621:7:621:12">field</jtok>
<jtok eid="36" type="method_call" span="621:13:621:19">equals</jtok>
<jtok eid="36" type="string_literal" span="621:20:621:32">"bibtextype"</jtok>
<jtok eid="36" type="primary_name_ref" span="622:11:622:17">bibtex</jtok>
<jtok eid="36" type="method_call" span="622:18:622:25">getType</jtok>
<jtok eid="36" type="method_call" span="622:28:622:35">getName</jtok>
<jtok eid="36" type="class_or_interface_ref" span="624:9:624:15">Object</jtok>
<jtok eid="36" type="local_variable_name" span="624:16:624:17">o</jtok>
<jtok eid="36" type="primary_name_ref" span="624:20:624:26">bibtex</jtok>
<jtok eid="36" type="method_call" span="624:27:624:35">getField</jtok>
<jtok eid="36" type="primary_name_ref" span="624:36:624:41">field</jtok>
<jtok eid="36" type="line_comment" span="626:9:626:86">// If this field is not set, and the entry has a crossref, try to look up the</jtok>
<jtok eid="36" type="line_comment" span="627:9:627:40">// field in the referred entry:</jtok>
<jtok eid="36" type="primary_name_ref" span="628:14:628:15">o</jtok>
<jtok eid="36" type="primary_name_ref" span="628:29:628:37">database</jtok>
<jtok eid="36" type="class_or_interface_ref" span="629:13:629:19">Object</jtok>
<jtok eid="36" type="local_variable_name" span="629:20:629:28">crossRef</jtok>
<jtok eid="36" type="primary_name_ref" span="629:31:629:37">bibtex</jtok>
<jtok eid="36" type="method_call" span="629:38:629:46">getField</jtok>
<jtok eid="36" type="string_literal" span="629:47:629:57">"crossref"</jtok>
<jtok eid="36" type="primary_name_ref" span="630:17:630:25">crossRef</jtok>
<jtok eid="36" type="class_or_interface_ref" span="631:17:631:28">BibtexEntry</jtok>
<jtok eid="36" type="local_variable_name" span="631:29:631:37">referred</jtok>
<jtok eid="36" type="primary_name_ref" span="631:40:631:48">database</jtok>
<jtok eid="36" type="method_call" span="631:49:631:62">getEntryByKey</jtok>
<jtok eid="36" type="class_or_interface_ref" span="631:64:631:70">String</jtok>
<jtok eid="36" type="primary_name_ref" span="631:71:631:79">crossRef</jtok>
<jtok eid="36" type="primary_name_ref" span="632:21:632:29">referred</jtok>
<jtok eid="36" type="line_comment" span="633:21:633:86">// Ok, we found the referred entry. Get the field value from that</jtok>
<jtok eid="36" type="line_comment" span="634:21:634:71">// entry. If it is unset there, too, stop looking:</jtok>
<jtok eid="36" type="primary_name_ref" span="635:21:635:22">o</jtok>
<jtok eid="36" type="primary_name_ref" span="635:25:635:33">referred</jtok>
<jtok eid="36" type="method_call" span="635:34:635:42">getField</jtok>
<jtok eid="36" type="primary_name_ref" span="635:43:635:48">field</jtok>
<jtok eid="36" type="method_call" span="640:16:640:23">getText</jtok>
<jtok eid="36" type="class_or_interface_ref" span="640:25:640:31">String</jtok>
<jtok eid="36" type="primary_name_ref" span="640:32:640:33">o</jtok>
<jtok eid="36" type="primary_name_ref" span="640:35:640:43">database</jtok>
<jtok eid="1" type="block_comment" span="643:2:650:5">/**
	 * Returns a text with references resolved according to an optionally given
	 * database.
	
	 * @param toResolve maybenull The text to resolve.
	 * @param database maybenull The database to use for resolving the text.
	 * @return The resolved text or the original text if either the text or the database are null
	 */</jtok>
<jtok eid="37" type="class_or_interface_ref" span="651:16:651:22">String</jtok>
<jtok eid="37" type="method_name" span="651:23:651:30">getText</jtok>
<jtok eid="37" type="parameter_type" span="651:31:651:37">String</jtok>
<jtok eid="37" type="parameter_name" span="651:38:651:47">toResolve</jtok>
<jtok eid="37" type="parameter_type" span="651:49:651:63">BibtexDatabase</jtok>
<jtok eid="37" type="parameter_name" span="651:64:651:72">database</jtok>
<jtok eid="37" type="primary_name_ref" span="652:7:652:16">toResolve</jtok>
<jtok eid="37" type="primary_name_ref" span="652:28:652:36">database</jtok>
<jtok eid="37" type="primary_name_ref" span="653:11:653:19">database</jtok>
<jtok eid="37" type="method_call" span="653:20:653:37">resolveForStrings</jtok>
<jtok eid="37" type="primary_name_ref" span="653:38:653:47">toResolve</jtok>
<jtok eid="37" type="primary_name_ref" span="655:10:655:19">toResolve</jtok>
</jdoc>