<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.ErrorMessageDisplay" jls="java5">
<jent id="0" type="file" span="0:0:25:1">Source/jabref/src/java/net/sf/jabref/ErrorMessageDisplay.java</jent>
<jent id="1" pid="0" type="interface" span="10:1:25:1">net.sf.jabref.ErrorMessageDisplay</jent>
<jent id="2" pid="1" type="method" span="16:5:16:49">net.sf.jabref.ErrorMessageDisplay.reportError(String)</jent>
<jent id="3" pid="1" type="method" span="23:5:23:70">net.sf.jabref.ErrorMessageDisplay.reportError(String,Exception)</jent>
<jtok eid="0" type="block_comment" span="3:1:9:4">/**
 * A class implementing this interface can provided as a receiver for error messages originating
 * in a thread that can't return any value or throw any exceptions. E.g. net.sf.jabref.DatabaseSearch.
 *
 * The point is that the worker thread doesn't need to know what interface it is working against,
 * since the ErrorMessageDisplay implementer will be responsible for displaying the error message.
 */</jtok>
<jtok eid="1" type="interface_name" span="10:18:10:37">ErrorMessageDisplay</jtok>
<jtok eid="1" type="block_comment" span="12:5:15:8">/**
     * An error has occured.
     * @param errorMessage Error message.
     */</jtok>
<jtok eid="2" type="method_name" span="16:17:16:28">reportError</jtok>
<jtok eid="2" type="parameter_type" span="16:29:16:35">String</jtok>
<jtok eid="2" type="parameter_name" span="16:36:16:48">errorMessage</jtok>
<jtok eid="1" type="block_comment" span="18:5:22:8">/**
     * An error has occured.
     * @param errorMessage Error message.
     * @param exception Exception representing the error condition.
     */</jtok>
<jtok eid="3" type="method_name" span="23:17:23:28">reportError</jtok>
<jtok eid="3" type="parameter_type" span="23:29:23:35">String</jtok>
<jtok eid="3" type="parameter_name" span="23:36:23:48">errorMessage</jtok>
<jtok eid="3" type="parameter_type" span="23:50:23:59">Exception</jtok>
<jtok eid="3" type="parameter_name" span="23:60:23:69">exception</jtok>
</jdoc>