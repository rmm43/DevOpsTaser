<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.export.layout.LayoutFormatter" jls="java5">
<jent id="0" type="file" span="0:0:54:1">Source/jabref/src/java/net/sf/jabref/export/layout/LayoutFormatter.java</jent>
<jent id="1" pid="0" type="interface" span="39:1:54:1">net.sf.jabref.export.layout.LayoutFormatter</jent>
<jent id="2" pid="1" type="method" span="53:2:53:40">net.sf.jabref.export.layout.LayoutFormatter.format(String)</jent>
<jtok eid="0" type="block_comment" span="1:1:25:4">/*
 Copyright (C) 2003-2006 Morten O. Alver, JabRef-Team
 
 All programs in this directory and subdirectories are published 
 under the GNU General Public License as described below.

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or (at
 your option) any later version.

 This program is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 USA

 Further information about the GNU GPL is available at:
 http://www.gnu.org/copyleft/gpl.ja.html

 */</jtok>
<jtok eid="0" type="block_comment" span="28:1:38:4">/**
 * The LayoutFormatter is used for a Filter design-pattern.
 * 
 * Implementing classes have to accept a String and returned a formatted version of it.
 * 
 * Example:
 * 
 *   "John von Neumann" =&gt; "von Neumann, John"
 *
 * @version 1.2 - Documentation CO
 */</jtok>
<jtok eid="1" type="interface_name" span="39:18:39:33">LayoutFormatter</jtok>
<jtok eid="1" type="block_comment" span="40:2:52:5">/**
	 * Failure Mode:
	 * &lt;p&gt;
	 * Formatters should be robust in the sense that they always return some
	 * relevant string.
	 * &lt;p&gt;
	 * If the formatter can detect an invalid input it should return the
	 * original string otherwise it may simply return a wrong output.
	 * 
	 * @param fieldText
	 *            The text to layout.
	 * @return The layouted text.
	 */</jtok>
<jtok eid="2" type="class_or_interface_ref" span="53:9:53:15">String</jtok>
<jtok eid="2" type="method_name" span="53:16:53:22">format</jtok>
<jtok eid="2" type="parameter_type" span="53:23:53:29">String</jtok>
<jtok eid="2" type="parameter_name" span="53:30:53:39">fieldText</jtok>
</jdoc>