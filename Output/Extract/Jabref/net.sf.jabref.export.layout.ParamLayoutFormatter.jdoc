<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.export.layout.ParamLayoutFormatter" jls="java5">
<jent id="0" type="file" span="0:0:22:1">Source/jabref/src/java/net/sf/jabref/export/layout/ParamLayoutFormatter.java</jent>
<jent id="1" pid="0" type="interface" span="14:1:22:1">net.sf.jabref.export.layout.ParamLayoutFormatter</jent>
<jent id="2" pid="1" type="method" span="20:5:20:40">net.sf.jabref.export.layout.ParamLayoutFormatter.setArgument(String)</jent>
<jtok eid="0" type="block_comment" span="5:1:13:4">/**
 * This interface extends LayoutFormatter, adding the capability of taking
 * and additional parameter. Such a parameter is specified in the layout file
 * by the following construct: \format[MyFormatter(argument){\field}
 * If and only if MyFormatter is a class that implements ParamLayoutFormatter,
 * it will be set up with the argument given in the parenthesis by way of the
 * method setArgument(String). If no argument is given, the formatter will be
 * invoked without the setArgument() method being called first.
 */</jtok>
<jtok eid="1" type="interface_name" span="14:18:14:38">ParamLayoutFormatter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="14:47:14:62">LayoutFormatter</jtok>
<jtok eid="1" type="block_comment" span="16:5:19:8">/**
     * Method for setting the argument of this formatter.
     * @param arg A String argument.
     */</jtok>
<jtok eid="2" type="method_name" span="20:17:20:28">setArgument</jtok>
<jtok eid="2" type="parameter_type" span="20:29:20:35">String</jtok>
<jtok eid="2" type="parameter_name" span="20:36:20:39">arg</jtok>
</jdoc>