<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.export.layout.format.IfPlural" jls="java5">
<jent id="0" type="file" span="0:0:47:1">Source/jabref/src/java/net/sf/jabref/export/layout/format/IfPlural.java</jent>
<jent id="1" pid="0" type="class" span="22:1:47:1">net.sf.jabref.export.layout.format.IfPlural</jent>
<jent id="2" pid="1" type="method" span="26:3:34:1">net.sf.jabref.export.layout.format.IfPlural.setArgument(String)</jent>
<jent id="3" pid="1" type="method" span="36:1:44:1">net.sf.jabref.export.layout.format.IfPlural.format(String)</jent>
<jtok eid="0" type="block_comment" span="1:1:3:4">/**
 * 
 */</jtok>
<jtok eid="0" type="block_comment" span="8:1:21:4">/**
 * @author ralmond
 * 
 * This formatter takes two arguments and examines the field text.  
 * If the field text represents multiple individuals, that is it contains the string "and"
 * then the field text is replaced with the first argument, otherwise it is replaced with the second.
 * For example:
 * 
 * \format[IfPlural(Eds.,Ed.)]{\editor}
 * 
 * Should expand to 'Eds.' if the document has more than one editor and 'Ed.' if it only has one.
 * 
 *
 */</jtok>
<jtok eid="1" type="class_name" span="22:14:22:22">IfPlural</jtok>
<jtok eid="1" type="class_or_interface_ref" span="22:31:22:59">AbstractParamLayoutFormatter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="24:13:24:19">String</jtok>
<jtok eid="1" type="field_name" span="24:20:24:30">pluralText</jtok>
<jtok eid="1" type="field_name" span="24:32:24:44">singularText</jtok>
<jtok eid="2" type="method_name" span="26:15:26:26">setArgument</jtok>
<jtok eid="2" type="parameter_type" span="26:27:26:33">String</jtok>
<jtok eid="2" type="parameter_name" span="26:34:26:37">arg</jtok>
<jtok eid="2" type="class_or_interface_ref" span="27:5:27:11">String</jtok>
<jtok eid="2" type="local_variable_name" span="27:14:27:19">parts</jtok>
<jtok eid="2" type="method_call" span="27:22:27:35">parseArgument</jtok>
<jtok eid="2" type="primary_name_ref" span="27:36:27:39">arg</jtok>
<jtok eid="2" type="primary_name_ref" span="29:9:29:14">parts</jtok>
<jtok eid="2" type="qualified_name_ref" span="29:15:29:21">length</jtok>
<jtok eid="2" type="line_comment" span="30:17:30:73">// TODO: too few arguments. Print an error message here?</jtok>
<jtok eid="2" type="primary_name_ref" span="31:5:31:15">pluralText</jtok>
<jtok eid="2" type="primary_name_ref" span="31:18:31:23">parts</jtok>
<jtok eid="2" type="primary_name_ref" span="32:5:32:17">singularText</jtok>
<jtok eid="2" type="primary_name_ref" span="32:20:32:25">parts</jtok>
<jtok eid="3" type="class_or_interface_ref" span="36:8:36:14">String</jtok>
<jtok eid="3" type="method_name" span="36:15:36:21">format</jtok>
<jtok eid="3" type="parameter_type" span="36:22:36:28">String</jtok>
<jtok eid="3" type="parameter_name" span="36:29:36:38">fieldText</jtok>
<jtok eid="3" type="primary_name_ref" span="37:9:37:19">pluralText</jtok>
<jtok eid="3" type="primary_name_ref" span="38:16:38:25">fieldText</jtok>
<jtok eid="3" type="line_comment" span="38:27:38:93">// TODO: argument missing or invalid. Print an error message here?</jtok>
<jtok eid="3" type="primary_name_ref" span="39:9:39:18">fieldText</jtok>
<jtok eid="3" type="method_call" span="39:19:39:26">matches</jtok>
<jtok eid="3" type="string_literal" span="39:27:39:42">".*\\sand\\s.*"</jtok>
<jtok eid="3" type="primary_name_ref" span="40:14:40:24">pluralText</jtok>
<jtok eid="3" type="primary_name_ref" span="42:14:42:26">singularText</jtok>
</jdoc>