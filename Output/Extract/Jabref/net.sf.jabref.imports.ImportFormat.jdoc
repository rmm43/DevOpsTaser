<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.imports.ImportFormat" jls="java5">
<jent id="0" type="file" span="0:0:157:1">Source/jabref/src/java/net/sf/jabref/imports/ImportFormat.java</jent>
<jent id="1" pid="0" type="class" span="20:1:157:1">net.sf.jabref.imports.ImportFormat</jent>
<jent id="2" pid="1" type="method" span="27:5:29:5">net.sf.jabref.imports.ImportFormat.ImportFormat()</jent>
<jent id="3" pid="1" type="method" span="34:5:34:82">net.sf.jabref.imports.ImportFormat.isRecognizedFormat(InputStream)</jent>
<jent id="4" pid="1" type="method" span="40:5:40:87">net.sf.jabref.imports.ImportFormat.importEntries(InputStream)</jent>
<jent id="5" pid="1" type="method" span="50:5:50:43">net.sf.jabref.imports.ImportFormat.getFormatName()</jent>
<jent id="6" pid="1" type="method" span="57:5:59:5">net.sf.jabref.imports.ImportFormat.getExtensions()</jent>
<jent id="7" pid="1" type="method" span="66:5:76:5">net.sf.jabref.imports.ImportFormat.getCLIId()</jent>
<jent id="8" pid="1" type="method" span="90:5:92:5">net.sf.jabref.imports.ImportFormat.getDescription()</jent>
<jent id="9" pid="1" type="method" span="102:5:104:5">net.sf.jabref.imports.ImportFormat.setIsCustomImporter(boolean)</jent>
<jent id="10" pid="1" type="method" span="113:5:115:5">net.sf.jabref.imports.ImportFormat.getIsCustomImporter()</jent>
<jent id="11" pid="1" type="method" span="121:5:123:5">net.sf.jabref.imports.ImportFormat.hashCode()</jent>
<jent id="12" pid="1" type="method" span="129:5:134:5">net.sf.jabref.imports.ImportFormat.equals(Object)</jent>
<jent id="13" pid="1" type="method" span="140:5:142:5">net.sf.jabref.imports.ImportFormat.toString()</jent>
<jent id="14" pid="1" type="method" span="148:5:156:5">net.sf.jabref.imports.ImportFormat.compareTo(ImportFormat)</jent>
<jtok eid="0" type="block_comment" span="9:1:19:4">/**
 * Role of an importer for JabRef.
 * 
 * &lt;p&gt;Importers are sorted according to following criteria
 * &lt;ol&gt;&lt;li&gt;
 *   custom importers come first, then importers shipped with JabRef
 * &lt;/li&gt;&lt;li&gt;
 *   then importers are sorted by name.
 * &lt;/li&gt;&lt;/ol&gt;
 * &lt;/p&gt;
 */</jtok>
<jtok eid="1" type="class_name" span="20:23:20:35">ImportFormat</jtok>
<jtok eid="1" type="class_or_interface_ref" span="20:47:20:57">Comparable</jtok>
<jtok eid="1" type="class_or_interface_ref" span="20:58:20:70">ImportFormat</jtok>
<jtok eid="1" type="field_name" span="22:21:22:37">isCustomImporter</jtok>
<jtok eid="1" type="block_comment" span="24:5:26:8">/**
     * Constructor for custom importers.
     */</jtok>
<jtok eid="2" type="method_name" span="27:12:27:24">ImportFormat</jtok>
<jtok eid="2" type="qualified_name_ref" span="28:12:28:28">isCustomImporter</jtok>
<jtok eid="1" type="block_comment" span="31:5:33:8">/**
     * Check whether the source is in the correct format for this importer.
     */</jtok>
<jtok eid="3" type="method_name" span="34:29:34:47">isRecognizedFormat</jtok>
<jtok eid="3" type="parameter_type" span="34:48:34:59">InputStream</jtok>
<jtok eid="3" type="parameter_name" span="34:60:34:62">in</jtok>
<jtok eid="3" type="throws" span="34:71:34:82">IOException</jtok>
<jtok eid="1" type="block_comment" span="36:5:39:8">/**
     * Parse the entries in the source, and return a List of BibtexEntry
     * objects.
     */</jtok>
<jtok eid="4" type="class_or_interface_ref" span="40:21:40:25">List</jtok>
<jtok eid="4" type="class_or_interface_ref" span="40:26:40:37">BibtexEntry</jtok>
<jtok eid="4" type="method_name" span="40:39:40:52">importEntries</jtok>
<jtok eid="4" type="parameter_type" span="40:53:40:64">InputStream</jtok>
<jtok eid="4" type="parameter_name" span="40:65:40:67">in</jtok>
<jtok eid="4" type="throws" span="40:76:40:87">IOException</jtok>
<jtok eid="1" type="block_comment" span="43:5:49:8">/**
     * Name of this import format.
     * 
     * &lt;p&gt;The name must be unique.&lt;/p&gt;
     * 
     * @return format name, must be unique and not &lt;code&gt;null&lt;/code&gt;
     */</jtok>
<jtok eid="5" type="class_or_interface_ref" span="50:21:50:27">String</jtok>
<jtok eid="5" type="method_name" span="50:28:50:41">getFormatName</jtok>
<jtok eid="1" type="block_comment" span="52:5:56:8">/**
     * Extensions that this importer can read.
     * 
     * @return comma separated list of extensions or &lt;code&gt;null&lt;/code&gt; for the default
     */</jtok>
<jtok eid="6" type="class_or_interface_ref" span="57:12:57:18">String</jtok>
<jtok eid="6" type="method_name" span="57:19:57:32">getExtensions</jtok>
<jtok eid="1" type="block_comment" span="61:5:65:8">/**
     * Short, one token ID to identify the format from the command line.
     * 
     * @return command line ID
     */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="66:12:66:18">String</jtok>
<jtok eid="7" type="method_name" span="66:19:66:27">getCLIId</jtok>
<jtok eid="7" type="class_or_interface_ref" span="67:7:67:13">String</jtok>
<jtok eid="7" type="local_variable_name" span="67:14:67:16">id</jtok>
<jtok eid="7" type="method_call" span="67:19:67:32">getFormatName</jtok>
<jtok eid="7" type="class_or_interface_ref" span="68:7:68:19">StringBuffer</jtok>
<jtok eid="7" type="local_variable_name" span="68:20:68:26">result</jtok>
<jtok eid="7" type="constructor_call" span="68:33:68:45">StringBuffer</jtok>
<jtok eid="7" type="primary_name_ref" span="68:46:68:48">id</jtok>
<jtok eid="7" type="method_call" span="68:49:68:55">length</jtok>
<jtok eid="7" type="local_variable_name" span="69:16:69:17">i</jtok>
<jtok eid="7" type="primary_name_ref" span="69:23:69:24">i</jtok>
<jtok eid="7" type="primary_name_ref" span="69:27:69:29">id</jtok>
<jtok eid="7" type="method_call" span="69:30:69:36">length</jtok>
<jtok eid="7" type="primary_name_ref" span="69:40:69:41">i</jtok>
<jtok eid="7" type="local_variable_name" span="70:14:70:15">c</jtok>
<jtok eid="7" type="primary_name_ref" span="70:18:70:20">id</jtok>
<jtok eid="7" type="method_call" span="70:21:70:27">charAt</jtok>
<jtok eid="7" type="primary_name_ref" span="70:28:70:29">i</jtok>
<jtok eid="7" type="primary_name_ref" span="71:13:71:22">Character</jtok>
<jtok eid="7" type="method_call" span="71:23:71:38">isLetterOrDigit</jtok>
<jtok eid="7" type="primary_name_ref" span="71:39:71:40">c</jtok>
<jtok eid="7" type="primary_name_ref" span="72:11:72:17">result</jtok>
<jtok eid="7" type="method_call" span="72:18:72:24">append</jtok>
<jtok eid="7" type="primary_name_ref" span="72:25:72:34">Character</jtok>
<jtok eid="7" type="method_call" span="72:35:72:46">toLowerCase</jtok>
<jtok eid="7" type="primary_name_ref" span="72:47:72:48">c</jtok>
<jtok eid="7" type="primary_name_ref" span="75:14:75:20">result</jtok>
<jtok eid="7" type="method_call" span="75:21:75:29">toString</jtok>
<jtok eid="1" type="block_comment" span="78:5:89:8">/**
     * Description  of the ImportFormat.
     * 
     * &lt;p&gt;Implementors of ImportFormats should override this. Ideally, it should specify
     * &lt;ul&gt;&lt;li&gt;
     *   what kind of entries from what sources and based on what specification it is able to import
     * &lt;/li&gt;&lt;li&gt;
     *   by what criteria it {@link #isRecognizedFormat(InputStream) recognizes} an import format
     * &lt;/li&gt;&lt;/ul&gt;
     * 
     * @return description of the import format
     */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="90:12:90:18">String</jtok>
<jtok eid="8" type="method_name" span="90:19:90:33">getDescription</jtok>
<jtok eid="8" type="string_literal" span="91:14:91:45">"No description available for "</jtok>
<jtok eid="8" type="method_call" span="91:48:91:61">getFormatName</jtok>
<jtok eid="8" type="string_literal" span="91:66:91:69">"."</jtok>
<jtok eid="1" type="block_comment" span="94:5:101:8">/**
     * Sets if this is a custom importer.
     * 
     * &lt;p&gt;For custom importers added dynamically to JabRef, this will be
     * set automatically by JabRef.&lt;/p&gt;
     * 
     * @param isCustomImporter if this is a custom importer
     */</jtok>
<jtok eid="9" type="method_name" span="102:23:102:42">setIsCustomImporter</jtok>
<jtok eid="9" type="parameter_name" span="102:51:102:67">isCustomImporter</jtok>
<jtok eid="9" type="qualified_name_ref" span="103:12:103:28">isCustomImporter</jtok>
<jtok eid="9" type="primary_name_ref" span="103:31:103:47">isCustomImporter</jtok>
<jtok eid="1" type="block_comment" span="106:5:112:8">/**
     * Wether this importer is a custom importer.
     * 
     * &lt;p&gt;Custom importers will have precedence over built-in importers.&lt;/p&gt;
     * 
     * @return  wether this is a custom importer
     */</jtok>
<jtok eid="10" type="method_name" span="113:26:113:45">getIsCustomImporter</jtok>
<jtok eid="10" type="qualified_name_ref" span="114:19:114:35">isCustomImporter</jtok>
<jtok eid="1" type="block_comment" span="117:5:120:8">/*
     *  (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */</jtok>
<jtok eid="11" type="method_name" span="121:16:121:24">hashCode</jtok>
<jtok eid="11" type="method_call" span="122:14:122:27">getFormatName</jtok>
<jtok eid="11" type="method_call" span="122:30:122:38">hashCode</jtok>
<jtok eid="1" type="block_comment" span="125:5:128:8">/*
     *  (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */</jtok>
<jtok eid="12" type="method_name" span="129:20:129:26">equals</jtok>
<jtok eid="12" type="parameter_type" span="129:27:129:33">Object</jtok>
<jtok eid="12" type="parameter_name" span="129:34:129:35">o</jtok>
<jtok eid="12" type="primary_name_ref" span="130:14:130:15">o</jtok>
<jtok eid="12" type="primary_name_ref" span="131:14:131:15">o</jtok>
<jtok eid="12" type="class_or_interface_ref" span="131:27:131:39">ImportFormat</jtok>
<jtok eid="12" type="class_or_interface_ref" span="132:16:132:28">ImportFormat</jtok>
<jtok eid="12" type="primary_name_ref" span="132:29:132:30">o</jtok>
<jtok eid="12" type="method_call" span="132:32:132:51">getIsCustomImporter</jtok>
<jtok eid="12" type="method_call" span="132:57:132:76">getIsCustomImporter</jtok>
<jtok eid="12" type="class_or_interface_ref" span="133:16:133:28">ImportFormat</jtok>
<jtok eid="12" type="primary_name_ref" span="133:29:133:30">o</jtok>
<jtok eid="12" type="method_call" span="133:32:133:45">getFormatName</jtok>
<jtok eid="12" type="method_call" span="133:48:133:54">equals</jtok>
<jtok eid="12" type="method_call" span="133:55:133:68">getFormatName</jtok>
<jtok eid="1" type="block_comment" span="136:5:139:8">/*
     *  (non-Javadoc)
     * @see java.lang.Object#toString()
     */</jtok>
<jtok eid="13" type="class_or_interface_ref" span="140:12:140:18">String</jtok>
<jtok eid="13" type="method_name" span="140:19:140:27">toString</jtok>
<jtok eid="13" type="method_call" span="141:14:141:27">getFormatName</jtok>
<jtok eid="1" type="block_comment" span="144:5:147:8">/*
     *  (non-Javadoc)
     * @see java.lang.Comparable#compareTo(java.lang.Object)
     */</jtok>
<jtok eid="14" type="method_name" span="148:16:148:25">compareTo</jtok>
<jtok eid="14" type="parameter_type" span="148:26:148:38">ImportFormat</jtok>
<jtok eid="14" type="parameter_name" span="148:39:148:47">importer</jtok>
<jtok eid="14" type="local_variable_name" span="149:11:149:17">result</jtok>
<jtok eid="14" type="method_call" span="150:11:150:30">getIsCustomImporter</jtok>
<jtok eid="14" type="primary_name_ref" span="150:36:150:44">importer</jtok>
<jtok eid="14" type="method_call" span="150:45:150:64">getIsCustomImporter</jtok>
<jtok eid="14" type="primary_name_ref" span="151:9:151:15">result</jtok>
<jtok eid="14" type="method_call" span="151:18:151:31">getFormatName</jtok>
<jtok eid="14" type="method_call" span="151:34:151:43">compareTo</jtok>
<jtok eid="14" type="primary_name_ref" span="151:44:151:52">importer</jtok>
<jtok eid="14" type="method_call" span="151:53:151:66">getFormatName</jtok>
<jtok eid="14" type="primary_name_ref" span="153:9:153:15">result</jtok>
<jtok eid="14" type="method_call" span="153:18:153:37">getIsCustomImporter</jtok>
<jtok eid="14" type="primary_name_ref" span="155:14:155:20">result</jtok>
</jdoc>