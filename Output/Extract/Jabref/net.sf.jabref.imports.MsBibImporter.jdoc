<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.imports.MsBibImporter" jls="java5">
<jent id="0" type="file" span="0:0:80:1">Source/jabref/src/java/net/sf/jabref/imports/MsBibImporter.java</jent>
<jent id="1" pid="0" type="class" span="22:1:80:1">net.sf.jabref.imports.MsBibImporter</jent>
<jent id="2" pid="1" type="method" span="24:5:54:5">net.sf.jabref.imports.MsBibImporter.isRecognizedFormat(InputStream)</jent>
<jent id="3" pid="1" type="method" span="62:2:64:2">net.sf.jabref.imports.MsBibImporter.getCLIid()</jent>
<jent id="4" pid="1" type="method" span="66:5:73:5">net.sf.jabref.imports.MsBibImporter.importEntries(InputStream)</jent>
<jent id="5" pid="1" type="method" span="75:5:78:5">net.sf.jabref.imports.MsBibImporter.getFormatName()</jent>
<jtok eid="0" type="block_comment" span="16:1:21:4">/**
 * Importer for the MS Office 2007 XML bibliography format
 * By S. M. Mahbub Murshed
 *
 * ...
 */</jtok>
<jtok eid="1" type="class_name" span="22:14:22:27">MsBibImporter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="22:36:22:48">ImportFormat</jtok>
<jtok eid="2" type="method_name" span="24:20:24:38">isRecognizedFormat</jtok>
<jtok eid="2" type="parameter_type" span="24:39:24:50">InputStream</jtok>
<jtok eid="2" type="parameter_name" span="24:51:24:53">in</jtok>
<jtok eid="2" type="throws" span="24:62:24:73">IOException</jtok>
<jtok eid="2" type="block_comment" span="26:9:35:12">/*
            This method is available for checking if a file can be of the MSBib type.
            The effect of this method is primarily to avoid unnecessary processing of
            files when searching for a suitable import format. If this method returns
            false, the import routine will move on to the next import format.

            The correct behaviour is to return false if it is certain that the file is
            not of the MsBib type, and true otherwise. Returning true is the safe choice
            if not certain.
         */</jtok>
<jtok eid="2" type="class_or_interface_ref" span="36:6:36:14">Document</jtok>
<jtok eid="2" type="local_variable_name" span="36:15:36:20">docin</jtok>
<jtok eid="2" type="class_or_interface_ref" span="38:6:38:21">DocumentBuilder</jtok>
<jtok eid="2" type="local_variable_name" span="38:22:38:28">dbuild</jtok>
<jtok eid="2" type="primary_name_ref" span="38:31:38:53">DocumentBuilderFactory</jtok>
<jtok eid="2" type="method_call" span="39:13:39:24">newInstance</jtok>
<jtok eid="2" type="method_call" span="40:13:40:31">newDocumentBuilder</jtok>
<jtok eid="2" type="primary_name_ref" span="41:6:41:11">docin</jtok>
<jtok eid="2" type="primary_name_ref" span="41:14:41:20">dbuild</jtok>
<jtok eid="2" type="method_call" span="41:21:41:26">parse</jtok>
<jtok eid="2" type="primary_name_ref" span="41:27:41:29">in</jtok>
<jtok eid="2" type="class_or_interface_ref" span="42:15:42:24">Exception</jtok>
<jtok eid="2" type="local_variable_name" span="42:25:42:26">e</jtok>
<jtok eid="2" type="primary_name_ref" span="45:9:45:14">docin</jtok>
<jtok eid="2" type="primary_name_ref" span="45:25:45:30">docin</jtok>
<jtok eid="2" type="method_call" span="45:31:45:49">getDocumentElement</jtok>
<jtok eid="2" type="method_call" span="45:52:45:62">getTagName</jtok>
<jtok eid="2" type="method_call" span="45:65:45:73">contains</jtok>
<jtok eid="2" type="string_literal" span="45:74:45:83">"Sources"</jtok>
<jtok eid="2" type="line_comment" span="47:1:47:67">//   		NodeList rootLst = docin.getElementsByTagName("b:Sources");</jtok>
<jtok eid="2" type="line_comment" span="48:1:48:34">//   		if(rootLst.getLength()==0)</jtok>
<jtok eid="2" type="line_comment" span="49:1:49:57">//   			rootLst = docin.getElementsByTagName("Sources");</jtok>
<jtok eid="2" type="line_comment" span="50:1:50:34">//   		if(rootLst.getLength()==0)</jtok>
<jtok eid="2" type="line_comment" span="51:1:51:22">//   			return false;</jtok>
<jtok eid="2" type="line_comment" span="52:6:52:69">// System.out.println(docin.getDocumentElement().getTagName());</jtok>
<jtok eid="1" type="block_comment" span="56:5:61:5">/**
	 * String used to identify this import filter on the command line.
	 * 
	 * @override
	 * @return "msbib"
	 */</jtok>
<jtok eid="3" type="class_or_interface_ref" span="62:9:62:15">String</jtok>
<jtok eid="3" type="method_name" span="62:16:62:24">getCLIid</jtok>
<jtok eid="3" type="string_literal" span="63:10:63:17">"msbib"</jtok>
<jtok eid="4" type="class_or_interface_ref" span="66:12:66:16">List</jtok>
<jtok eid="4" type="class_or_interface_ref" span="66:17:66:28">BibtexEntry</jtok>
<jtok eid="4" type="method_name" span="66:30:66:43">importEntries</jtok>
<jtok eid="4" type="parameter_type" span="66:44:66:55">InputStream</jtok>
<jtok eid="4" type="parameter_name" span="66:56:66:58">in</jtok>
<jtok eid="4" type="throws" span="66:67:66:78">IOException</jtok>
<jtok eid="4" type="class_or_interface_ref" span="68:9:68:22">MSBibDatabase</jtok>
<jtok eid="4" type="local_variable_name" span="68:23:68:28">dbase</jtok>
<jtok eid="4" type="constructor_call" span="68:35:68:48">MSBibDatabase</jtok>
<jtok eid="4" type="class_or_interface_ref" span="70:9:70:13">List</jtok>
<jtok eid="4" type="class_or_interface_ref" span="70:14:70:25">BibtexEntry</jtok>
<jtok eid="4" type="local_variable_name" span="70:27:70:34">entries</jtok>
<jtok eid="4" type="primary_name_ref" span="70:37:70:42">dbase</jtok>
<jtok eid="4" type="method_call" span="70:43:70:56">importEntries</jtok>
<jtok eid="4" type="primary_name_ref" span="70:57:70:59">in</jtok>
<jtok eid="4" type="primary_name_ref" span="72:16:72:23">entries</jtok>
<jtok eid="5" type="class_or_interface_ref" span="75:12:75:18">String</jtok>
<jtok eid="5" type="method_name" span="75:19:75:32">getFormatName</jtok>
<jtok eid="5" type="line_comment" span="76:9:76:69">// This method should return the name of this import format.</jtok>
<jtok eid="5" type="string_literal" span="77:16:77:23">"MSBib"</jtok>
</jdoc>