<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sf.jabref.imports.PdfXmpImporter" jls="java5">
<jent id="0" type="file" span="0:0:51:1">Source/jabref/src/java/net/sf/jabref/imports/PdfXmpImporter.java</jent>
<jent id="1" pid="0" type="class" span="18:1:51:1">net.sf.jabref.imports.PdfXmpImporter</jent>
<jent id="2" pid="1" type="method" span="20:2:22:2">net.sf.jabref.imports.PdfXmpImporter.getFormatName()</jent>
<jent id="3" pid="1" type="method" span="27:2:29:2">net.sf.jabref.imports.PdfXmpImporter.importEntries(InputStream)</jent>
<jent id="4" pid="1" type="method" span="37:2:39:2">net.sf.jabref.imports.PdfXmpImporter.isRecognizedFormat(InputStream)</jent>
<jent id="5" pid="1" type="method" span="47:2:49:2">net.sf.jabref.imports.PdfXmpImporter.getCLIid()</jent>
<jtok eid="0" type="block_comment" span="11:1:17:4">/**
 * Wraps the XMPUtility function to be used as an ImportFormat.
 * 
 * @author $Author: coezbek $
 * @version $Revision: 2209 $ ($Date: 2007-08-01 20:23:38 +0200 (Wed, 01 Aug 2007) $)
 * 
 */</jtok>
<jtok eid="1" type="class_name" span="18:14:18:28">PdfXmpImporter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="18:37:18:49">ImportFormat</jtok>
<jtok eid="2" type="class_or_interface_ref" span="20:9:20:15">String</jtok>
<jtok eid="2" type="method_name" span="20:16:20:29">getFormatName</jtok>
<jtok eid="2" type="primary_name_ref" span="21:10:21:17">Globals</jtok>
<jtok eid="2" type="method_call" span="21:18:21:22">lang</jtok>
<jtok eid="2" type="string_literal" span="21:23:21:42">"XMP-annotated PDF"</jtok>
<jtok eid="1" type="block_comment" span="24:2:26:5">/**
	 * Returns a list of all BibtexEntries found in the inputstream.
	 */</jtok>
<jtok eid="3" type="class_or_interface_ref" span="27:9:27:13">List</jtok>
<jtok eid="3" type="class_or_interface_ref" span="27:14:27:25">BibtexEntry</jtok>
<jtok eid="3" type="method_name" span="27:27:27:40">importEntries</jtok>
<jtok eid="3" type="parameter_type" span="27:41:27:52">InputStream</jtok>
<jtok eid="3" type="parameter_name" span="27:53:27:55">in</jtok>
<jtok eid="3" type="throws" span="27:64:27:75">IOException</jtok>
<jtok eid="3" type="primary_name_ref" span="28:10:28:17">XMPUtil</jtok>
<jtok eid="3" type="method_call" span="28:18:28:25">readXMP</jtok>
<jtok eid="3" type="primary_name_ref" span="28:26:28:28">in</jtok>
<jtok eid="1" type="block_comment" span="31:2:36:5">/**
	 * Returns whether the given stream contains data that is a.) a pdf and b.)
	 * contains at least one BibtexEntry.
	 * 
	 * @override
	 */</jtok>
<jtok eid="4" type="method_name" span="37:17:37:35">isRecognizedFormat</jtok>
<jtok eid="4" type="parameter_type" span="37:36:37:47">InputStream</jtok>
<jtok eid="4" type="parameter_name" span="37:48:37:50">in</jtok>
<jtok eid="4" type="throws" span="37:59:37:70">IOException</jtok>
<jtok eid="4" type="primary_name_ref" span="38:10:38:17">XMPUtil</jtok>
<jtok eid="4" type="method_call" span="38:18:38:29">hasMetadata</jtok>
<jtok eid="4" type="primary_name_ref" span="38:30:38:32">in</jtok>
<jtok eid="1" type="block_comment" span="41:2:46:5">/**
	 * String used to identify this import filter on the command line.
	 * 
	 * @override
	 * @return "xmp"
	 */</jtok>
<jtok eid="5" type="class_or_interface_ref" span="47:9:47:15">String</jtok>
<jtok eid="5" type="method_name" span="47:16:47:24">getCLIid</jtok>
<jtok eid="5" type="string_literal" span="48:10:48:15">"xmp"</jtok>
</jdoc>