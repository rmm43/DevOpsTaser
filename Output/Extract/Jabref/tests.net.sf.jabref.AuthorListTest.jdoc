<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="tests.net.sf.jabref.AuthorListTest" jls="java5">
<jent id="0" type="file" span="0:0:547:1">Source/jabref/src/java/tests/net/sf/jabref/AuthorListTest.java</jent>
<jent id="1" pid="0" type="class" span="14:1:547:1">tests.net.sf.jabref.AuthorListTest</jent>
<jent id="2" pid="1" type="method" span="16:2:29:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_Natbib()</jent>
<jent id="3" pid="1" type="method" span="31:2:36:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorList()</jent>
<jent id="4" pid="1" type="method" span="38:2:105:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_firstNameFirstCommas()</jent>
<jent id="5" pid="1" type="method" span="107:2:125:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_firstNameFirst()</jent>
<jent id="6" pid="1" type="method" span="127:2:195:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameFirstCommas()</jent>
<jent id="7" pid="1" type="method" span="197:2:253:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameFirst()</jent>
<jent id="8" pid="1" type="method" span="255:2:285:2">tests.net.sf.jabref.AuthorListTest.testFixAuthor_lastNameOnlyCommas()</jent>
<jent id="9" pid="1" type="method" span="287:2:295:2">tests.net.sf.jabref.AuthorListTest.testFixAuthorForAlphabetization()</jent>
<jent id="10" pid="1" type="method" span="297:2:299:2">tests.net.sf.jabref.AuthorListTest.size(String)</jent>
<jent id="11" pid="1" type="method" span="301:2:321:2">tests.net.sf.jabref.AuthorListTest.testSize()</jent>
<jent id="12" pid="1" type="method" span="323:2:365:2">tests.net.sf.jabref.AuthorListTest.testGetAuthor()</jent>
<jent id="13" pid="1" type="method" span="367:2:385:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsNatbib()</jent>
<jent id="14" pid="1" type="method" span="387:2:407:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastOnly()</jent>
<jent id="15" pid="1" type="method" span="409:2:460:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastFirst()</jent>
<jent id="16" pid="1" type="method" span="462:2:482:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsLastFirstAnds()</jent>
<jent id="17" pid="1" type="method" span="484:2:521:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsFirstFirst()</jent>
<jent id="18" pid="1" type="method" span="523:2:533:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsFirstFirstAnds()</jent>
<jent id="19" pid="1" type="method" span="535:2:545:2">tests.net.sf.jabref.AuthorListTest.testGetAuthorsForAlphabetization()</jent>
<jtok eid="0" type="block_comment" span="6:1:13:4">/**
 * 
 * @see net.sf.jabref.AuthorList Class tested.
 * 
 * @author Christopher Oezbek &lt;oezi@oezi.de&gt;
 * 
 * @version 0.1 - Still fails for stuff in AuthorList that is ambiguous
 */</jtok>
<jtok eid="1" type="class_name" span="14:14:14:28">AuthorListTest</jtok>
<jtok eid="1" type="class_or_interface_ref" span="14:37:14:45">TestCase</jtok>
<jtok eid="2" type="method_name" span="16:14:16:34">testFixAuthor_Natbib</jtok>
<jtok eid="2" type="method_call" span="17:3:17:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="17:16:17:18">""</jtok>
<jtok eid="2" type="primary_name_ref" span="17:20:17:30">AuthorList</jtok>
<jtok eid="2" type="method_call" span="17:31:17:47">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="17:48:17:50">""</jtok>
<jtok eid="2" type="method_call" span="18:3:18:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="18:16:18:23">"Smith"</jtok>
<jtok eid="2" type="primary_name_ref" span="18:25:18:35">AuthorList</jtok>
<jtok eid="2" type="method_call" span="18:36:18:52">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="18:53:18:65">"John Smith"</jtok>
<jtok eid="2" type="method_call" span="19:3:19:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="19:16:19:39">"Smith and Black Brown"</jtok>
<jtok eid="2" type="primary_name_ref" span="19:41:19:51">AuthorList</jtok>
<jtok eid="2" type="method_call" span="20:5:20:21">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="20:22:20:57">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="2" type="method_call" span="21:3:21:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="21:16:21:36">"von Neumann et al."</jtok>
<jtok eid="2" type="primary_name_ref" span="21:38:21:48">AuthorList</jtok>
<jtok eid="2" type="method_call" span="22:5:22:21">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="22:22:22:78">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="2" type="line_comment" span="24:3:24:20">// Is not cached!</jtok>
<jtok eid="2" type="method_call" span="25:3:25:13">assertTrue</jtok>
<jtok eid="2" type="primary_name_ref" span="25:14:25:24">AuthorList</jtok>
<jtok eid="2" type="method_call" span="26:5:26:21">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="26:22:26:78">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="2" type="primary_name_ref" span="26:83:26:93">AuthorList</jtok>
<jtok eid="2" type="method_call" span="27:5:27:21">fixAuthor_Natbib</jtok>
<jtok eid="2" type="string_literal" span="27:22:27:40">"John von Neumann"</jtok>
<jtok eid="2" type="string_literal" span="27:53:27:55">""</jtok>
<jtok eid="2" type="string_literal" span="27:58:27:65">" and "</jtok>
<jtok eid="2" type="string_literal" span="28:7:28:42">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="3" type="method_name" span="31:14:31:31">testGetAuthorList</jtok>
<jtok eid="3" type="line_comment" span="32:3:32:34">// Test caching in authorCache.</jtok>
<jtok eid="3" type="class_or_interface_ref" span="33:3:33:13">AuthorList</jtok>
<jtok eid="3" type="local_variable_name" span="33:14:33:16">al</jtok>
<jtok eid="3" type="primary_name_ref" span="33:19:33:29">AuthorList</jtok>
<jtok eid="3" type="method_call" span="33:30:33:43">getAuthorList</jtok>
<jtok eid="3" type="string_literal" span="33:44:33:56">"John Smith"</jtok>
<jtok eid="3" type="method_call" span="34:3:34:13">assertTrue</jtok>
<jtok eid="3" type="primary_name_ref" span="34:14:34:16">al</jtok>
<jtok eid="3" type="primary_name_ref" span="34:20:34:30">AuthorList</jtok>
<jtok eid="3" type="method_call" span="34:31:34:44">getAuthorList</jtok>
<jtok eid="3" type="string_literal" span="34:45:34:57">"John Smith"</jtok>
<jtok eid="3" type="method_call" span="35:3:35:14">assertFalse</jtok>
<jtok eid="3" type="primary_name_ref" span="35:15:35:17">al</jtok>
<jtok eid="3" type="primary_name_ref" span="35:21:35:31">AuthorList</jtok>
<jtok eid="3" type="method_call" span="35:32:35:45">getAuthorList</jtok>
<jtok eid="3" type="string_literal" span="35:46:35:53">"Smith"</jtok>
<jtok eid="4" type="method_name" span="38:14:38:48">testFixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="line_comment" span="40:5:40:17">// No Commas</jtok>
<jtok eid="4" type="method_call" span="41:4:41:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="41:17:41:19">""</jtok>
<jtok eid="4" type="primary_name_ref" span="41:21:41:31">AuthorList</jtok>
<jtok eid="4" type="method_call" span="41:32:41:62">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="41:63:41:65">""</jtok>
<jtok eid="4" type="method_call" span="42:4:42:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="42:17:42:19">""</jtok>
<jtok eid="4" type="primary_name_ref" span="42:21:42:31">AuthorList</jtok>
<jtok eid="4" type="method_call" span="42:32:42:62">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="42:63:42:65">""</jtok>
<jtok eid="4" type="method_call" span="44:4:44:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="44:17:44:29">"John Smith"</jtok>
<jtok eid="4" type="primary_name_ref" span="44:31:44:41">AuthorList</jtok>
<jtok eid="4" type="method_call" span="44:42:44:72">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="44:73:44:85">"John Smith"</jtok>
<jtok eid="4" type="method_call" span="46:4:46:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="46:17:46:27">"J. Smith"</jtok>
<jtok eid="4" type="primary_name_ref" span="46:29:46:39">AuthorList</jtok>
<jtok eid="4" type="method_call" span="46:40:46:70">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="46:71:46:83">"John Smith"</jtok>
<jtok eid="4" type="line_comment" span="49:4:49:20">// Check caching</jtok>
<jtok eid="4" type="method_call" span="50:4:50:14">assertTrue</jtok>
<jtok eid="4" type="primary_name_ref" span="50:15:50:25">AuthorList</jtok>
<jtok eid="4" type="method_call" span="50:26:50:56">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="51:5:51:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="primary_name_ref" span="51:79:51:89">AuthorList</jtok>
<jtok eid="4" type="method_call" span="52:6:52:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="52:37:52:55">"John von Neumann"</jtok>
<jtok eid="4" type="string_literal" span="52:68:52:70">""</jtok>
<jtok eid="4" type="string_literal" span="52:73:52:80">" and "</jtok>
<jtok eid="4" type="string_literal" span="53:8:53:43">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="55:4:55:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="55:17:55:51">"John Smith and Peter Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="55:53:55:63">AuthorList</jtok>
<jtok eid="4" type="method_call" span="56:6:56:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="56:37:56:72">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="57:4:57:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="57:17:57:46">"J. Smith and P. Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="57:48:57:58">AuthorList</jtok>
<jtok eid="4" type="method_call" span="57:59:57:89">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="58:5:58:40">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="line_comment" span="60:4:60:68">// Method description is different than code -&gt; additional comma</jtok>
<jtok eid="4" type="line_comment" span="61:4:61:12">// there</jtok>
<jtok eid="4" type="method_call" span="62:4:62:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="62:17:62:69">"John von Neumann, John Smith and Peter Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="62:71:62:81">AuthorList</jtok>
<jtok eid="4" type="method_call" span="63:6:63:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="64:6:64:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="65:4:65:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="65:17:65:62">"J. von Neumann, J. Smith and P. Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="65:64:65:74">AuthorList</jtok>
<jtok eid="4" type="method_call" span="66:6:66:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="67:6:67:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="69:4:69:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="69:17:69:36">"J. P. von Neumann"</jtok>
<jtok eid="4" type="primary_name_ref" span="69:38:69:48">AuthorList</jtok>
<jtok eid="4" type="method_call" span="69:49:69:79">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="70:5:70:29">"John Peter von Neumann"</jtok>
<jtok eid="4" type="line_comment" span="72:5:72:21">// Oxford Commas</jtok>
<jtok eid="4" type="method_call" span="73:4:73:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="73:17:73:19">""</jtok>
<jtok eid="4" type="primary_name_ref" span="73:21:73:31">AuthorList</jtok>
<jtok eid="4" type="method_call" span="73:32:73:62">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="73:63:73:65">""</jtok>
<jtok eid="4" type="method_call" span="74:4:74:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="74:17:74:19">""</jtok>
<jtok eid="4" type="primary_name_ref" span="74:21:74:31">AuthorList</jtok>
<jtok eid="4" type="method_call" span="74:32:74:62">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="74:63:74:65">""</jtok>
<jtok eid="4" type="method_call" span="76:4:76:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="76:17:76:29">"John Smith"</jtok>
<jtok eid="4" type="primary_name_ref" span="76:31:76:41">AuthorList</jtok>
<jtok eid="4" type="method_call" span="76:42:76:72">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="76:73:76:85">"John Smith"</jtok>
<jtok eid="4" type="method_call" span="78:4:78:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="78:17:78:27">"J. Smith"</jtok>
<jtok eid="4" type="primary_name_ref" span="78:29:78:39">AuthorList</jtok>
<jtok eid="4" type="method_call" span="78:40:78:70">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="78:71:78:83">"John Smith"</jtok>
<jtok eid="4" type="line_comment" span="81:4:81:20">// Check caching</jtok>
<jtok eid="4" type="method_call" span="82:4:82:14">assertTrue</jtok>
<jtok eid="4" type="primary_name_ref" span="82:15:82:25">AuthorList</jtok>
<jtok eid="4" type="method_call" span="82:26:82:56">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="83:5:83:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="primary_name_ref" span="83:78:83:88">AuthorList</jtok>
<jtok eid="4" type="method_call" span="84:6:84:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="84:37:84:55">"John von Neumann"</jtok>
<jtok eid="4" type="string_literal" span="84:68:84:70">""</jtok>
<jtok eid="4" type="string_literal" span="84:73:84:80">" and "</jtok>
<jtok eid="4" type="string_literal" span="85:8:85:43">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="87:4:87:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="87:17:87:51">"John Smith and Peter Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="87:53:87:63">AuthorList</jtok>
<jtok eid="4" type="method_call" span="88:6:88:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="88:37:88:72">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="89:4:89:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="89:17:89:46">"J. Smith and P. Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="89:48:89:58">AuthorList</jtok>
<jtok eid="4" type="method_call" span="89:59:89:89">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="90:5:90:40">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="line_comment" span="92:4:92:68">// Method description is different than code -&gt; additional comma</jtok>
<jtok eid="4" type="line_comment" span="93:4:93:12">// there</jtok>
<jtok eid="4" type="method_call" span="94:4:94:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="94:17:94:70">"John von Neumann, John Smith, and Peter Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="94:72:94:82">AuthorList</jtok>
<jtok eid="4" type="method_call" span="95:6:95:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="96:6:96:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="97:4:97:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="97:17:97:63">"J. von Neumann, J. Smith, and P. Black Brown"</jtok>
<jtok eid="4" type="primary_name_ref" span="97:65:97:75">AuthorList</jtok>
<jtok eid="4" type="method_call" span="98:6:98:36">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="99:6:99:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="4" type="method_call" span="101:4:101:16">assertEquals</jtok>
<jtok eid="4" type="string_literal" span="101:17:101:36">"J. P. von Neumann"</jtok>
<jtok eid="4" type="primary_name_ref" span="101:38:101:48">AuthorList</jtok>
<jtok eid="4" type="method_call" span="101:49:101:79">fixAuthor_firstNameFirstCommas</jtok>
<jtok eid="4" type="string_literal" span="102:5:102:29">"John Peter von Neumann"</jtok>
<jtok eid="5" type="method_name" span="107:14:107:42">testFixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="method_call" span="108:3:108:15">assertEquals</jtok>
<jtok eid="5" type="string_literal" span="108:16:108:28">"John Smith"</jtok>
<jtok eid="5" type="primary_name_ref" span="108:30:108:40">AuthorList</jtok>
<jtok eid="5" type="method_call" span="108:41:108:65">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="108:66:108:78">"John Smith"</jtok>
<jtok eid="5" type="method_call" span="110:3:110:15">assertEquals</jtok>
<jtok eid="5" type="string_literal" span="110:16:110:50">"John Smith and Peter Black Brown"</jtok>
<jtok eid="5" type="primary_name_ref" span="110:52:110:62">AuthorList</jtok>
<jtok eid="5" type="method_call" span="111:5:111:29">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="111:30:111:65">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="5" type="method_call" span="113:3:113:15">assertEquals</jtok>
<jtok eid="5" type="string_literal" span="113:16:113:71">"John von Neumann and John Smith and Peter Black Brown"</jtok>
<jtok eid="5" type="primary_name_ref" span="113:73:113:83">AuthorList</jtok>
<jtok eid="5" type="method_call" span="114:5:114:29">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="114:30:114:86">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="5" type="method_call" span="116:3:116:15">assertEquals</jtok>
<jtok eid="5" type="string_literal" span="116:16:116:41">"First von Last, Jr. III"</jtok>
<jtok eid="5" type="primary_name_ref" span="116:43:116:53">AuthorList</jtok>
<jtok eid="5" type="method_call" span="117:5:117:29">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="117:30:117:56">"von Last, Jr. III, First"</jtok>
<jtok eid="5" type="line_comment" span="119:3:119:19">// Check caching</jtok>
<jtok eid="5" type="method_call" span="120:3:120:13">assertTrue</jtok>
<jtok eid="5" type="primary_name_ref" span="120:14:120:24">AuthorList</jtok>
<jtok eid="5" type="method_call" span="121:5:121:29">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="121:30:121:86">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="5" type="primary_name_ref" span="121:91:121:101">AuthorList</jtok>
<jtok eid="5" type="method_call" span="122:5:122:29">fixAuthor_firstNameFirst</jtok>
<jtok eid="5" type="string_literal" span="122:30:122:48">"John von Neumann"</jtok>
<jtok eid="5" type="string_literal" span="122:61:122:63">""</jtok>
<jtok eid="5" type="string_literal" span="122:66:122:73">" and "</jtok>
<jtok eid="5" type="string_literal" span="123:7:123:42">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_name" span="127:14:127:47">testFixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="line_comment" span="129:5:129:28">// No commas before and</jtok>
<jtok eid="6" type="method_call" span="130:4:130:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="130:17:130:19">""</jtok>
<jtok eid="6" type="primary_name_ref" span="130:21:130:31">AuthorList</jtok>
<jtok eid="6" type="method_call" span="130:32:130:61">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="130:62:130:64">""</jtok>
<jtok eid="6" type="method_call" span="131:4:131:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="131:17:131:19">""</jtok>
<jtok eid="6" type="primary_name_ref" span="131:21:131:31">AuthorList</jtok>
<jtok eid="6" type="method_call" span="131:32:131:61">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="131:62:131:64">""</jtok>
<jtok eid="6" type="method_call" span="133:4:133:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="133:17:133:30">"Smith, John"</jtok>
<jtok eid="6" type="primary_name_ref" span="133:32:133:42">AuthorList</jtok>
<jtok eid="6" type="method_call" span="133:43:133:72">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="133:73:133:85">"John Smith"</jtok>
<jtok eid="6" type="method_call" span="135:4:135:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="135:17:135:28">"Smith, J."</jtok>
<jtok eid="6" type="primary_name_ref" span="135:30:135:40">AuthorList</jtok>
<jtok eid="6" type="method_call" span="135:41:135:70">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="135:71:135:83">"John Smith"</jtok>
<jtok eid="6" type="class_or_interface_ref" span="138:4:138:10">String</jtok>
<jtok eid="6" type="local_variable_name" span="138:11:138:12">a</jtok>
<jtok eid="6" type="primary_name_ref" span="138:15:138:25">AuthorList</jtok>
<jtok eid="6" type="method_call" span="138:26:138:55">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="139:5:139:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="class_or_interface_ref" span="140:4:140:10">String</jtok>
<jtok eid="6" type="local_variable_name" span="140:11:140:12">b</jtok>
<jtok eid="6" type="primary_name_ref" span="140:15:140:25">AuthorList</jtok>
<jtok eid="6" type="method_call" span="140:26:140:55">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="140:56:140:74">"John von Neumann"</jtok>
<jtok eid="6" type="string_literal" span="141:17:141:19">""</jtok>
<jtok eid="6" type="string_literal" span="141:22:141:29">" and "</jtok>
<jtok eid="6" type="string_literal" span="141:33:141:68">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="line_comment" span="143:4:143:20">// Check caching</jtok>
<jtok eid="6" type="method_call" span="144:4:144:16">assertEquals</jtok>
<jtok eid="6" type="primary_name_ref" span="144:17:144:18">a</jtok>
<jtok eid="6" type="primary_name_ref" span="144:20:144:21">b</jtok>
<jtok eid="6" type="method_call" span="145:4:145:14">assertTrue</jtok>
<jtok eid="6" type="primary_name_ref" span="145:15:145:16">a</jtok>
<jtok eid="6" type="primary_name_ref" span="145:20:145:21">b</jtok>
<jtok eid="6" type="method_call" span="147:4:147:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="147:17:147:53">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="6" type="primary_name_ref" span="147:55:147:65">AuthorList</jtok>
<jtok eid="6" type="method_call" span="148:6:148:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="148:36:148:71">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="149:4:149:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="149:17:149:48">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="6" type="primary_name_ref" span="149:50:149:60">AuthorList</jtok>
<jtok eid="6" type="method_call" span="149:61:149:90">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="150:5:150:40">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="152:4:152:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="152:17:152:72">"von Neumann, John, Smith, John and Black Brown, Peter"</jtok>
<jtok eid="6" type="primary_name_ref" span="152:74:152:84">AuthorList</jtok>
<jtok eid="6" type="method_call" span="153:6:153:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="154:6:154:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="155:4:155:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="155:17:155:65">"von Neumann, J., Smith, J. and Black Brown, P."</jtok>
<jtok eid="6" type="primary_name_ref" span="155:67:155:77">AuthorList</jtok>
<jtok eid="6" type="method_call" span="156:6:156:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="157:6:157:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="159:4:159:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="159:17:159:37">"von Neumann, J. P."</jtok>
<jtok eid="6" type="primary_name_ref" span="159:39:159:49">AuthorList</jtok>
<jtok eid="6" type="method_call" span="159:50:159:79">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="160:5:160:29">"John Peter von Neumann"</jtok>
<jtok eid="6" type="line_comment" span="162:5:162:21">// Oxford Commas</jtok>
<jtok eid="6" type="method_call" span="163:4:163:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="163:17:163:19">""</jtok>
<jtok eid="6" type="primary_name_ref" span="163:21:163:31">AuthorList</jtok>
<jtok eid="6" type="method_call" span="163:32:163:61">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="163:62:163:64">""</jtok>
<jtok eid="6" type="method_call" span="164:4:164:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="164:17:164:19">""</jtok>
<jtok eid="6" type="primary_name_ref" span="164:21:164:31">AuthorList</jtok>
<jtok eid="6" type="method_call" span="164:32:164:61">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="164:62:164:64">""</jtok>
<jtok eid="6" type="method_call" span="166:4:166:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="166:17:166:30">"Smith, John"</jtok>
<jtok eid="6" type="primary_name_ref" span="166:32:166:42">AuthorList</jtok>
<jtok eid="6" type="method_call" span="166:43:166:72">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="166:73:166:85">"John Smith"</jtok>
<jtok eid="6" type="method_call" span="168:4:168:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="168:17:168:28">"Smith, J."</jtok>
<jtok eid="6" type="primary_name_ref" span="168:30:168:40">AuthorList</jtok>
<jtok eid="6" type="method_call" span="168:41:168:70">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="168:71:168:83">"John Smith"</jtok>
<jtok eid="6" type="class_or_interface_ref" span="171:4:171:10">String</jtok>
<jtok eid="6" type="local_variable_name" span="171:11:171:12">a</jtok>
<jtok eid="6" type="primary_name_ref" span="171:15:171:25">AuthorList</jtok>
<jtok eid="6" type="method_call" span="171:26:171:55">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="172:5:172:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="class_or_interface_ref" span="173:4:173:10">String</jtok>
<jtok eid="6" type="local_variable_name" span="173:11:173:12">b</jtok>
<jtok eid="6" type="primary_name_ref" span="173:15:173:25">AuthorList</jtok>
<jtok eid="6" type="method_call" span="173:26:173:55">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="173:56:173:74">"John von Neumann"</jtok>
<jtok eid="6" type="string_literal" span="174:17:174:19">""</jtok>
<jtok eid="6" type="string_literal" span="174:22:174:29">" and "</jtok>
<jtok eid="6" type="string_literal" span="174:33:174:68">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="line_comment" span="176:4:176:20">// Check caching</jtok>
<jtok eid="6" type="method_call" span="177:4:177:16">assertEquals</jtok>
<jtok eid="6" type="primary_name_ref" span="177:17:177:18">a</jtok>
<jtok eid="6" type="primary_name_ref" span="177:20:177:21">b</jtok>
<jtok eid="6" type="method_call" span="178:4:178:14">assertTrue</jtok>
<jtok eid="6" type="primary_name_ref" span="178:15:178:16">a</jtok>
<jtok eid="6" type="primary_name_ref" span="178:20:178:21">b</jtok>
<jtok eid="6" type="method_call" span="180:4:180:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="180:17:180:53">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="6" type="primary_name_ref" span="180:55:180:65">AuthorList</jtok>
<jtok eid="6" type="method_call" span="181:6:181:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="181:36:181:71">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="182:4:182:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="182:17:182:48">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="6" type="primary_name_ref" span="182:50:182:60">AuthorList</jtok>
<jtok eid="6" type="method_call" span="182:61:182:90">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="183:5:183:40">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="185:4:185:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="185:17:185:73">"von Neumann, John, Smith, John, and Black Brown, Peter"</jtok>
<jtok eid="6" type="primary_name_ref" span="185:75:185:85">AuthorList</jtok>
<jtok eid="6" type="method_call" span="186:6:186:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="187:6:187:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="188:4:188:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="188:17:188:66">"von Neumann, J., Smith, J., and Black Brown, P."</jtok>
<jtok eid="6" type="primary_name_ref" span="188:68:188:78">AuthorList</jtok>
<jtok eid="6" type="method_call" span="189:6:189:35">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="190:6:190:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="6" type="method_call" span="192:4:192:16">assertEquals</jtok>
<jtok eid="6" type="string_literal" span="192:17:192:37">"von Neumann, J. P."</jtok>
<jtok eid="6" type="primary_name_ref" span="192:39:192:49">AuthorList</jtok>
<jtok eid="6" type="method_call" span="192:50:192:79">fixAuthor_lastNameFirstCommas</jtok>
<jtok eid="6" type="string_literal" span="193:5:193:29">"John Peter von Neumann"</jtok>
<jtok eid="7" type="method_name" span="197:14:197:41">testFixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="line_comment" span="199:3:199:24">// Test helper method</jtok>
<jtok eid="7" type="method_call" span="201:3:201:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="201:16:201:29">"Smith, John"</jtok>
<jtok eid="7" type="primary_name_ref" span="201:31:201:41">AuthorList</jtok>
<jtok eid="7" type="method_call" span="201:42:201:65">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="201:66:201:78">"John Smith"</jtok>
<jtok eid="7" type="method_call" span="203:3:203:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="203:16:203:52">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="203:54:203:64">AuthorList</jtok>
<jtok eid="7" type="method_call" span="204:5:204:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="204:29:204:64">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="206:3:206:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="206:16:206:74">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="206:76:206:86">AuthorList</jtok>
<jtok eid="7" type="method_call" span="207:5:207:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="207:29:207:85">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="209:3:209:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="209:16:209:37">"von Last, Jr, First"</jtok>
<jtok eid="7" type="primary_name_ref" span="209:39:209:49">AuthorList</jtok>
<jtok eid="7" type="method_call" span="210:5:210:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="210:29:210:50">"von Last, Jr ,First"</jtok>
<jtok eid="7" type="method_call" span="212:3:212:13">assertTrue</jtok>
<jtok eid="7" type="primary_name_ref" span="212:14:212:24">AuthorList</jtok>
<jtok eid="7" type="method_call" span="213:5:213:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="213:29:213:85">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="213:90:213:100">AuthorList</jtok>
<jtok eid="7" type="method_call" span="214:5:214:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="214:29:214:47">"John von Neumann"</jtok>
<jtok eid="7" type="string_literal" span="214:60:214:62">""</jtok>
<jtok eid="7" type="string_literal" span="214:65:214:72">" and "</jtok>
<jtok eid="7" type="string_literal" span="215:7:215:42">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="line_comment" span="217:3:217:32">// Test Abbreviation == false</jtok>
<jtok eid="7" type="method_call" span="218:3:218:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="218:16:218:29">"Smith, John"</jtok>
<jtok eid="7" type="primary_name_ref" span="218:31:218:41">AuthorList</jtok>
<jtok eid="7" type="method_call" span="218:42:218:65">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="218:66:218:78">"John Smith"</jtok>
<jtok eid="7" type="method_call" span="220:3:220:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="220:16:220:52">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="220:54:220:64">AuthorList</jtok>
<jtok eid="7" type="method_call" span="220:65:220:88">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="221:4:221:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="223:3:223:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="223:16:223:74">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="223:76:223:86">AuthorList</jtok>
<jtok eid="7" type="method_call" span="224:5:224:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="224:29:224:85">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="227:3:227:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="227:16:227:37">"von Last, Jr, First"</jtok>
<jtok eid="7" type="primary_name_ref" span="227:39:227:49">AuthorList</jtok>
<jtok eid="7" type="method_call" span="227:50:227:73">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="228:4:228:25">"von Last, Jr ,First"</jtok>
<jtok eid="7" type="method_call" span="230:3:230:13">assertTrue</jtok>
<jtok eid="7" type="primary_name_ref" span="230:14:230:24">AuthorList</jtok>
<jtok eid="7" type="method_call" span="230:25:230:48">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="231:4:231:60">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="231:72:231:82">AuthorList</jtok>
<jtok eid="7" type="method_call" span="232:5:232:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="232:29:232:47">"John von Neumann"</jtok>
<jtok eid="7" type="string_literal" span="232:60:232:62">""</jtok>
<jtok eid="7" type="string_literal" span="232:65:232:72">" and "</jtok>
<jtok eid="7" type="string_literal" span="233:7:233:42">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="line_comment" span="235:3:235:29">// Test Abbreviate == true</jtok>
<jtok eid="7" type="method_call" span="236:3:236:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="236:16:236:27">"Smith, J."</jtok>
<jtok eid="7" type="primary_name_ref" span="236:29:236:39">AuthorList</jtok>
<jtok eid="7" type="method_call" span="236:40:236:63">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="236:64:236:76">"John Smith"</jtok>
<jtok eid="7" type="method_call" span="238:3:238:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="238:16:238:47">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="7" type="primary_name_ref" span="238:49:238:59">AuthorList</jtok>
<jtok eid="7" type="method_call" span="238:60:238:83">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="239:4:239:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="241:3:241:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="241:16:241:67">"von Neumann, J. and Smith, J. and Black Brown, P."</jtok>
<jtok eid="7" type="primary_name_ref" span="242:4:242:14">AuthorList</jtok>
<jtok eid="7" type="method_call" span="242:15:242:38">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="243:5:243:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="method_call" span="245:3:245:15">assertEquals</jtok>
<jtok eid="7" type="string_literal" span="245:16:245:34">"von Last, Jr, F."</jtok>
<jtok eid="7" type="primary_name_ref" span="245:36:245:46">AuthorList</jtok>
<jtok eid="7" type="method_call" span="245:47:245:70">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="245:71:245:92">"von Last, Jr ,First"</jtok>
<jtok eid="7" type="method_call" span="248:3:248:13">assertTrue</jtok>
<jtok eid="7" type="primary_name_ref" span="248:14:248:24">AuthorList</jtok>
<jtok eid="7" type="method_call" span="248:25:248:48">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="249:4:249:60">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="7" type="primary_name_ref" span="249:71:249:81">AuthorList</jtok>
<jtok eid="7" type="method_call" span="250:5:250:28">fixAuthor_lastNameFirst</jtok>
<jtok eid="7" type="string_literal" span="250:29:250:47">"John von Neumann"</jtok>
<jtok eid="7" type="string_literal" span="250:60:250:62">""</jtok>
<jtok eid="7" type="string_literal" span="250:65:250:72">" and "</jtok>
<jtok eid="7" type="string_literal" span="251:7:251:42">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="method_name" span="255:14:255:46">testFixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="line_comment" span="257:5:257:27">// No comma before and</jtok>
<jtok eid="8" type="method_call" span="258:4:258:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="258:17:258:19">""</jtok>
<jtok eid="8" type="primary_name_ref" span="258:21:258:31">AuthorList</jtok>
<jtok eid="8" type="method_call" span="258:32:258:60">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="258:61:258:63">""</jtok>
<jtok eid="8" type="method_call" span="259:4:259:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="259:17:259:24">"Smith"</jtok>
<jtok eid="8" type="primary_name_ref" span="259:26:259:36">AuthorList</jtok>
<jtok eid="8" type="method_call" span="259:37:259:65">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="259:66:259:78">"John Smith"</jtok>
<jtok eid="8" type="method_call" span="260:4:260:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="260:17:260:24">"Smith"</jtok>
<jtok eid="8" type="primary_name_ref" span="260:26:260:36">AuthorList</jtok>
<jtok eid="8" type="method_call" span="260:37:260:65">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="260:66:260:83">"Smith, Jr, John"</jtok>
<jtok eid="8" type="method_call" span="262:4:262:14">assertTrue</jtok>
<jtok eid="8" type="primary_name_ref" span="262:15:262:25">AuthorList</jtok>
<jtok eid="8" type="method_call" span="262:26:262:54">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="263:5:263:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="primary_name_ref" span="263:73:263:83">AuthorList</jtok>
<jtok eid="8" type="method_call" span="264:6:264:34">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="264:35:264:53">"John von Neumann"</jtok>
<jtok eid="8" type="string_literal" span="264:66:264:68">""</jtok>
<jtok eid="8" type="string_literal" span="264:71:264:78">" and "</jtok>
<jtok eid="8" type="string_literal" span="265:8:265:43">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="method_call" span="267:4:267:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="267:17:267:53">"von Neumann, Smith and Black Brown"</jtok>
<jtok eid="8" type="primary_name_ref" span="267:55:267:65">AuthorList</jtok>
<jtok eid="8" type="method_call" span="268:6:268:34">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="269:6:269:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="line_comment" span="271:5:271:20">// Oxford Comma</jtok>
<jtok eid="8" type="method_call" span="272:4:272:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="272:17:272:19">""</jtok>
<jtok eid="8" type="primary_name_ref" span="272:21:272:31">AuthorList</jtok>
<jtok eid="8" type="method_call" span="272:32:272:60">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="272:61:272:63">""</jtok>
<jtok eid="8" type="method_call" span="273:4:273:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="273:17:273:24">"Smith"</jtok>
<jtok eid="8" type="primary_name_ref" span="273:26:273:36">AuthorList</jtok>
<jtok eid="8" type="method_call" span="273:37:273:65">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="273:66:273:78">"John Smith"</jtok>
<jtok eid="8" type="method_call" span="274:4:274:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="274:17:274:24">"Smith"</jtok>
<jtok eid="8" type="primary_name_ref" span="274:26:274:36">AuthorList</jtok>
<jtok eid="8" type="method_call" span="274:37:274:65">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="274:66:274:83">"Smith, Jr, John"</jtok>
<jtok eid="8" type="method_call" span="276:4:276:14">assertTrue</jtok>
<jtok eid="8" type="primary_name_ref" span="276:15:276:25">AuthorList</jtok>
<jtok eid="8" type="method_call" span="276:26:276:54">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="277:5:277:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="primary_name_ref" span="277:72:277:82">AuthorList</jtok>
<jtok eid="8" type="method_call" span="278:6:278:34">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="278:35:278:53">"John von Neumann"</jtok>
<jtok eid="8" type="string_literal" span="278:66:278:68">""</jtok>
<jtok eid="8" type="string_literal" span="278:71:278:78">" and "</jtok>
<jtok eid="8" type="string_literal" span="279:8:279:43">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="8" type="method_call" span="281:4:281:16">assertEquals</jtok>
<jtok eid="8" type="string_literal" span="281:17:281:54">"von Neumann, Smith, and Black Brown"</jtok>
<jtok eid="8" type="primary_name_ref" span="281:56:281:66">AuthorList</jtok>
<jtok eid="8" type="method_call" span="282:6:282:34">fixAuthor_lastNameOnlyCommas</jtok>
<jtok eid="8" type="string_literal" span="283:6:283:62">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="9" type="method_name" span="287:14:287:45">testFixAuthorForAlphabetization</jtok>
<jtok eid="9" type="method_call" span="288:3:288:15">assertEquals</jtok>
<jtok eid="9" type="string_literal" span="288:16:288:27">"Smith, J."</jtok>
<jtok eid="9" type="primary_name_ref" span="288:29:288:39">AuthorList</jtok>
<jtok eid="9" type="method_call" span="288:40:288:67">fixAuthorForAlphabetization</jtok>
<jtok eid="9" type="string_literal" span="288:68:288:80">"John Smith"</jtok>
<jtok eid="9" type="method_call" span="289:3:289:15">assertEquals</jtok>
<jtok eid="9" type="string_literal" span="289:16:289:29">"Neumann, J."</jtok>
<jtok eid="9" type="primary_name_ref" span="289:31:289:41">AuthorList</jtok>
<jtok eid="9" type="method_call" span="289:42:289:69">fixAuthorForAlphabetization</jtok>
<jtok eid="9" type="string_literal" span="289:70:289:88">"John von Neumann"</jtok>
<jtok eid="9" type="method_call" span="290:3:290:15">assertEquals</jtok>
<jtok eid="9" type="string_literal" span="290:16:290:29">"Neumann, J."</jtok>
<jtok eid="9" type="primary_name_ref" span="290:31:290:41">AuthorList</jtok>
<jtok eid="9" type="method_call" span="290:42:290:69">fixAuthorForAlphabetization</jtok>
<jtok eid="9" type="string_literal" span="290:70:290:86">"J. von Neumann"</jtok>
<jtok eid="9" type="method_call" span="291:3:291:15">assertEquals</jtok>
<jtok eid="9" type="string_literal" span="292:4:292:56">"Neumann, J. and Smith, J. and Black Brown, Jr., P."</jtok>
<jtok eid="9" type="primary_name_ref" span="293:4:293:14">AuthorList</jtok>
<jtok eid="9" type="method_call" span="294:6:294:33">fixAuthorForAlphabetization</jtok>
<jtok eid="9" type="string_literal" span="294:34:294:98">"John von Neumann and John Smith and de Black Brown, Jr., Peter"</jtok>
<jtok eid="10" type="method_name" span="297:20:297:24">size</jtok>
<jtok eid="10" type="parameter_type" span="297:25:297:31">String</jtok>
<jtok eid="10" type="parameter_name" span="297:32:297:38">bibtex</jtok>
<jtok eid="10" type="primary_name_ref" span="298:11:298:21">AuthorList</jtok>
<jtok eid="10" type="method_call" span="298:22:298:35">getAuthorList</jtok>
<jtok eid="10" type="primary_name_ref" span="298:36:298:42">bibtex</jtok>
<jtok eid="10" type="method_call" span="298:45:298:49">size</jtok>
<jtok eid="11" type="method_name" span="301:14:301:22">testSize</jtok>
<jtok eid="11" type="method_call" span="303:3:303:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="303:19:303:23">size</jtok>
<jtok eid="11" type="string_literal" span="303:24:303:26">""</jtok>
<jtok eid="11" type="method_call" span="304:3:304:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="304:19:304:23">size</jtok>
<jtok eid="11" type="string_literal" span="304:24:304:29">"Bar"</jtok>
<jtok eid="11" type="method_call" span="305:3:305:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="305:19:305:23">size</jtok>
<jtok eid="11" type="string_literal" span="305:24:305:33">"Foo Bar"</jtok>
<jtok eid="11" type="method_call" span="306:3:306:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="306:19:306:23">size</jtok>
<jtok eid="11" type="string_literal" span="306:24:306:37">"Foo von Bar"</jtok>
<jtok eid="11" type="method_call" span="307:3:307:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="307:19:307:23">size</jtok>
<jtok eid="11" type="string_literal" span="307:24:307:38">"von Bar, Foo"</jtok>
<jtok eid="11" type="method_call" span="308:3:308:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="308:19:308:23">size</jtok>
<jtok eid="11" type="string_literal" span="308:24:308:34">"Bar, Foo"</jtok>
<jtok eid="11" type="method_call" span="309:3:309:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="309:19:309:23">size</jtok>
<jtok eid="11" type="string_literal" span="309:24:309:39">"Bar, Jr., Foo"</jtok>
<jtok eid="11" type="method_call" span="310:3:310:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="310:19:310:23">size</jtok>
<jtok eid="11" type="string_literal" span="310:24:310:34">"Bar, Foo"</jtok>
<jtok eid="11" type="method_call" span="311:3:311:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="311:19:311:23">size</jtok>
<jtok eid="11" type="string_literal" span="311:24:311:50">"John Neumann and Foo Bar"</jtok>
<jtok eid="11" type="method_call" span="312:3:312:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="312:19:312:23">size</jtok>
<jtok eid="11" type="string_literal" span="312:24:312:59">"John von Neumann and Bar, Jr, Foo"</jtok>
<jtok eid="11" type="method_call" span="314:3:314:15">assertEquals</jtok>
<jtok eid="11" type="method_call" span="314:19:314:23">size</jtok>
<jtok eid="11" type="string_literal" span="314:24:314:80">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="11" type="class_or_interface_ref" span="316:3:316:9">String</jtok>
<jtok eid="11" type="local_variable_name" span="316:10:316:11">s</jtok>
<jtok eid="11" type="string_literal" span="316:14:316:32">"John von Neumann"</jtok>
<jtok eid="11" type="local_variable_name" span="317:12:317:13">i</jtok>
<jtok eid="11" type="primary_name_ref" span="317:19:317:20">i</jtok>
<jtok eid="11" type="primary_name_ref" span="317:27:317:28">i</jtok>
<jtok eid="11" type="method_call" span="318:4:318:16">assertEquals</jtok>
<jtok eid="11" type="primary_name_ref" span="318:17:318:18">i</jtok>
<jtok eid="11" type="method_call" span="318:24:318:28">size</jtok>
<jtok eid="11" type="primary_name_ref" span="318:29:318:30">s</jtok>
<jtok eid="11" type="primary_name_ref" span="319:4:319:5">s</jtok>
<jtok eid="11" type="string_literal" span="319:9:319:31">" and Albert Einstein"</jtok>
<jtok eid="12" type="method_name" span="323:14:323:27">testGetAuthor</jtok>
<jtok eid="12" type="primary_name_ref" span="326:4:326:14">AuthorList</jtok>
<jtok eid="12" type="method_call" span="326:15:326:28">getAuthorList</jtok>
<jtok eid="12" type="string_literal" span="326:29:326:31">""</jtok>
<jtok eid="12" type="method_call" span="326:33:326:42">getAuthor</jtok>
<jtok eid="12" type="method_call" span="327:4:327:8">fail</jtok>
<jtok eid="12" type="class_or_interface_ref" span="328:12:328:21">Exception</jtok>
<jtok eid="12" type="local_variable_name" span="328:22:328:23">e</jtok>
<jtok eid="12" type="class_or_interface_ref" span="331:3:331:13">AuthorList</jtok>
<jtok eid="12" type="class_or_interface_ref" span="331:14:331:20">Author</jtok>
<jtok eid="12" type="local_variable_name" span="331:21:331:27">author</jtok>
<jtok eid="12" type="primary_name_ref" span="331:30:331:40">AuthorList</jtok>
<jtok eid="12" type="method_call" span="331:41:331:54">getAuthorList</jtok>
<jtok eid="12" type="string_literal" span="331:55:331:93">"John Smith and von Neumann, Jr, John"</jtok>
<jtok eid="12" type="method_call" span="332:5:332:14">getAuthor</jtok>
<jtok eid="12" type="method_call" span="333:3:333:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="333:16:333:22">"John"</jtok>
<jtok eid="12" type="primary_name_ref" span="333:24:333:30">author</jtok>
<jtok eid="12" type="method_call" span="333:31:333:39">getFirst</jtok>
<jtok eid="12" type="method_call" span="334:3:334:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="334:16:334:20">"J."</jtok>
<jtok eid="12" type="primary_name_ref" span="334:22:334:28">author</jtok>
<jtok eid="12" type="method_call" span="334:29:334:41">getFirstAbbr</jtok>
<jtok eid="12" type="method_call" span="335:3:335:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="335:16:335:28">"John Smith"</jtok>
<jtok eid="12" type="primary_name_ref" span="335:30:335:36">author</jtok>
<jtok eid="12" type="method_call" span="335:37:335:49">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="336:3:336:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="336:16:336:26">"J. Smith"</jtok>
<jtok eid="12" type="primary_name_ref" span="336:28:336:34">author</jtok>
<jtok eid="12" type="method_call" span="336:35:336:47">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="337:3:337:15">assertEquals</jtok>
<jtok eid="12" type="primary_name_ref" span="337:22:337:28">author</jtok>
<jtok eid="12" type="method_call" span="337:29:337:34">getJr</jtok>
<jtok eid="12" type="method_call" span="338:3:338:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="338:16:338:23">"Smith"</jtok>
<jtok eid="12" type="primary_name_ref" span="338:25:338:31">author</jtok>
<jtok eid="12" type="method_call" span="338:32:338:39">getLast</jtok>
<jtok eid="12" type="method_call" span="339:3:339:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="339:16:339:29">"Smith, John"</jtok>
<jtok eid="12" type="primary_name_ref" span="339:31:339:37">author</jtok>
<jtok eid="12" type="method_call" span="339:38:339:50">getLastFirst</jtok>
<jtok eid="12" type="method_call" span="340:3:340:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="340:16:340:27">"Smith, J."</jtok>
<jtok eid="12" type="primary_name_ref" span="340:29:340:35">author</jtok>
<jtok eid="12" type="method_call" span="340:36:340:48">getLastFirst</jtok>
<jtok eid="12" type="method_call" span="341:3:341:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="341:16:341:23">"Smith"</jtok>
<jtok eid="12" type="primary_name_ref" span="341:25:341:31">author</jtok>
<jtok eid="12" type="method_call" span="341:32:341:43">getLastOnly</jtok>
<jtok eid="12" type="method_call" span="342:3:342:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="342:16:342:27">"Smith, J."</jtok>
<jtok eid="12" type="primary_name_ref" span="342:29:342:35">author</jtok>
<jtok eid="12" type="method_call" span="342:36:342:61">getNameForAlphabetization</jtok>
<jtok eid="12" type="method_call" span="343:3:343:15">assertEquals</jtok>
<jtok eid="12" type="primary_name_ref" span="343:22:343:28">author</jtok>
<jtok eid="12" type="method_call" span="343:29:343:35">getVon</jtok>
<jtok eid="12" type="primary_name_ref" span="345:3:345:9">author</jtok>
<jtok eid="12" type="primary_name_ref" span="345:12:345:22">AuthorList</jtok>
<jtok eid="12" type="method_call" span="345:23:345:36">getAuthorList</jtok>
<jtok eid="12" type="string_literal" span="345:37:345:56">"Peter Black Brown"</jtok>
<jtok eid="12" type="method_call" span="345:58:345:67">getAuthor</jtok>
<jtok eid="12" type="method_call" span="346:3:346:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="346:16:346:29">"Peter Black"</jtok>
<jtok eid="12" type="primary_name_ref" span="346:31:346:37">author</jtok>
<jtok eid="12" type="method_call" span="346:38:346:46">getFirst</jtok>
<jtok eid="12" type="method_call" span="347:3:347:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="347:16:347:23">"P. B."</jtok>
<jtok eid="12" type="primary_name_ref" span="347:25:347:31">author</jtok>
<jtok eid="12" type="method_call" span="347:32:347:44">getFirstAbbr</jtok>
<jtok eid="12" type="method_call" span="348:3:348:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="348:16:348:35">"Peter Black Brown"</jtok>
<jtok eid="12" type="primary_name_ref" span="348:37:348:43">author</jtok>
<jtok eid="12" type="method_call" span="348:44:348:56">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="349:3:349:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="349:16:349:29">"P. B. Brown"</jtok>
<jtok eid="12" type="primary_name_ref" span="349:31:349:37">author</jtok>
<jtok eid="12" type="method_call" span="349:38:349:50">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="350:3:350:15">assertEquals</jtok>
<jtok eid="12" type="primary_name_ref" span="350:22:350:28">author</jtok>
<jtok eid="12" type="method_call" span="350:29:350:34">getJr</jtok>
<jtok eid="12" type="method_call" span="351:3:351:15">assertEquals</jtok>
<jtok eid="12" type="primary_name_ref" span="351:22:351:28">author</jtok>
<jtok eid="12" type="method_call" span="351:29:351:35">getVon</jtok>
<jtok eid="12" type="primary_name_ref" span="353:3:353:9">author</jtok>
<jtok eid="12" type="primary_name_ref" span="353:12:353:22">AuthorList</jtok>
<jtok eid="12" type="method_call" span="353:23:353:36">getAuthorList</jtok>
<jtok eid="12" type="string_literal" span="353:37:353:75">"John Smith and von Neumann, Jr, John"</jtok>
<jtok eid="12" type="method_call" span="353:77:353:86">getAuthor</jtok>
<jtok eid="12" type="method_call" span="354:3:354:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="354:16:354:22">"John"</jtok>
<jtok eid="12" type="primary_name_ref" span="354:24:354:30">author</jtok>
<jtok eid="12" type="method_call" span="354:31:354:39">getFirst</jtok>
<jtok eid="12" type="method_call" span="355:3:355:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="355:16:355:20">"J."</jtok>
<jtok eid="12" type="primary_name_ref" span="355:22:355:28">author</jtok>
<jtok eid="12" type="method_call" span="355:29:355:41">getFirstAbbr</jtok>
<jtok eid="12" type="method_call" span="356:3:356:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="356:16:356:38">"John von Neumann, Jr"</jtok>
<jtok eid="12" type="primary_name_ref" span="356:40:356:46">author</jtok>
<jtok eid="12" type="method_call" span="356:47:356:59">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="357:3:357:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="357:16:357:36">"J. von Neumann, Jr"</jtok>
<jtok eid="12" type="primary_name_ref" span="357:38:357:44">author</jtok>
<jtok eid="12" type="method_call" span="357:45:357:57">getFirstLast</jtok>
<jtok eid="12" type="method_call" span="358:3:358:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="358:16:358:20">"Jr"</jtok>
<jtok eid="12" type="primary_name_ref" span="358:22:358:28">author</jtok>
<jtok eid="12" type="method_call" span="358:29:358:34">getJr</jtok>
<jtok eid="12" type="method_call" span="359:3:359:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="359:16:359:25">"Neumann"</jtok>
<jtok eid="12" type="primary_name_ref" span="359:27:359:33">author</jtok>
<jtok eid="12" type="method_call" span="359:34:359:41">getLast</jtok>
<jtok eid="12" type="method_call" span="360:3:360:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="360:16:360:39">"von Neumann, Jr, John"</jtok>
<jtok eid="12" type="primary_name_ref" span="360:41:360:47">author</jtok>
<jtok eid="12" type="method_call" span="360:48:360:60">getLastFirst</jtok>
<jtok eid="12" type="method_call" span="361:3:361:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="361:16:361:37">"von Neumann, Jr, J."</jtok>
<jtok eid="12" type="primary_name_ref" span="361:39:361:45">author</jtok>
<jtok eid="12" type="method_call" span="361:46:361:58">getLastFirst</jtok>
<jtok eid="12" type="method_call" span="362:3:362:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="362:16:362:29">"von Neumann"</jtok>
<jtok eid="12" type="primary_name_ref" span="362:31:362:37">author</jtok>
<jtok eid="12" type="method_call" span="362:38:362:49">getLastOnly</jtok>
<jtok eid="12" type="method_call" span="363:3:363:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="363:16:363:33">"Neumann, Jr, J."</jtok>
<jtok eid="12" type="primary_name_ref" span="363:35:363:41">author</jtok>
<jtok eid="12" type="method_call" span="363:42:363:67">getNameForAlphabetization</jtok>
<jtok eid="12" type="method_call" span="364:3:364:15">assertEquals</jtok>
<jtok eid="12" type="string_literal" span="364:16:364:21">"von"</jtok>
<jtok eid="12" type="primary_name_ref" span="364:23:364:29">author</jtok>
<jtok eid="12" type="method_call" span="364:30:364:36">getVon</jtok>
<jtok eid="13" type="method_name" span="367:14:367:34">testGetAuthorsNatbib</jtok>
<jtok eid="13" type="method_call" span="368:3:368:15">assertEquals</jtok>
<jtok eid="13" type="string_literal" span="368:16:368:18">""</jtok>
<jtok eid="13" type="primary_name_ref" span="368:20:368:30">AuthorList</jtok>
<jtok eid="13" type="method_call" span="368:31:368:44">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="368:45:368:47">""</jtok>
<jtok eid="13" type="method_call" span="368:49:368:65">getAuthorsNatbib</jtok>
<jtok eid="13" type="method_call" span="369:3:369:15">assertEquals</jtok>
<jtok eid="13" type="string_literal" span="369:16:369:23">"Smith"</jtok>
<jtok eid="13" type="primary_name_ref" span="369:25:369:35">AuthorList</jtok>
<jtok eid="13" type="method_call" span="369:36:369:49">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="369:50:369:62">"John Smith"</jtok>
<jtok eid="13" type="method_call" span="369:64:369:80">getAuthorsNatbib</jtok>
<jtok eid="13" type="method_call" span="370:3:370:15">assertEquals</jtok>
<jtok eid="13" type="string_literal" span="370:16:370:39">"Smith and Black Brown"</jtok>
<jtok eid="13" type="primary_name_ref" span="370:41:370:51">AuthorList</jtok>
<jtok eid="13" type="method_call" span="370:52:370:65">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="371:4:371:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="13" type="method_call" span="371:41:371:57">getAuthorsNatbib</jtok>
<jtok eid="13" type="method_call" span="372:3:372:15">assertEquals</jtok>
<jtok eid="13" type="string_literal" span="372:16:372:36">"von Neumann et al."</jtok>
<jtok eid="13" type="primary_name_ref" span="372:38:372:48">AuthorList</jtok>
<jtok eid="13" type="method_call" span="372:49:372:62">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="373:4:373:60">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="13" type="method_call" span="373:62:373:78">getAuthorsNatbib</jtok>
<jtok eid="13" type="block_comment" span="375:3:377:6">/*
		 * [ 1465610 ] (Double-)Names containing hyphen (-) not handled correctly
		 */</jtok>
<jtok eid="13" type="method_call" span="378:3:378:15">assertEquals</jtok>
<jtok eid="13" type="string_literal" span="378:16:378:34">"Last-Name et al."</jtok>
<jtok eid="13" type="primary_name_ref" span="378:36:378:46">AuthorList</jtok>
<jtok eid="13" type="method_call" span="378:47:378:60">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="379:4:379:28">"First Second Last-Name"</jtok>
<jtok eid="13" type="string_literal" span="379:31:379:71">" and John Smith and Black Brown, Peter"</jtok>
<jtok eid="13" type="method_call" span="379:73:379:89">getAuthorsNatbib</jtok>
<jtok eid="13" type="line_comment" span="381:3:381:18">// Test caching</jtok>
<jtok eid="13" type="class_or_interface_ref" span="382:3:382:13">AuthorList</jtok>
<jtok eid="13" type="local_variable_name" span="382:14:382:16">al</jtok>
<jtok eid="13" type="primary_name_ref" span="382:19:382:29">AuthorList</jtok>
<jtok eid="13" type="method_call" span="383:5:383:18">getAuthorList</jtok>
<jtok eid="13" type="string_literal" span="383:19:383:75">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="13" type="method_call" span="384:3:384:13">assertTrue</jtok>
<jtok eid="13" type="primary_name_ref" span="384:14:384:16">al</jtok>
<jtok eid="13" type="method_call" span="384:17:384:33">getAuthorsNatbib</jtok>
<jtok eid="13" type="primary_name_ref" span="384:39:384:41">al</jtok>
<jtok eid="13" type="method_call" span="384:42:384:58">getAuthorsNatbib</jtok>
<jtok eid="14" type="method_name" span="387:14:387:36">testGetAuthorsLastOnly</jtok>
<jtok eid="14" type="line_comment" span="389:5:389:27">// No comma before and</jtok>
<jtok eid="14" type="method_call" span="390:4:390:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="390:17:390:19">""</jtok>
<jtok eid="14" type="primary_name_ref" span="390:21:390:31">AuthorList</jtok>
<jtok eid="14" type="method_call" span="390:32:390:45">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="390:46:390:48">""</jtok>
<jtok eid="14" type="method_call" span="390:50:390:68">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="391:4:391:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="391:17:391:24">"Smith"</jtok>
<jtok eid="14" type="primary_name_ref" span="391:26:391:36">AuthorList</jtok>
<jtok eid="14" type="method_call" span="391:37:391:50">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="391:51:391:63">"John Smith"</jtok>
<jtok eid="14" type="method_call" span="391:65:391:83">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="392:4:392:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="392:17:392:24">"Smith"</jtok>
<jtok eid="14" type="primary_name_ref" span="392:26:392:36">AuthorList</jtok>
<jtok eid="14" type="method_call" span="392:37:392:50">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="392:51:392:68">"Smith, Jr, John"</jtok>
<jtok eid="14" type="method_call" span="392:70:392:88">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="395:4:395:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="395:17:395:53">"von Neumann, Smith and Black Brown"</jtok>
<jtok eid="14" type="primary_name_ref" span="395:55:395:65">AuthorList</jtok>
<jtok eid="14" type="method_call" span="395:66:395:79">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="396:5:396:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="14" type="method_call" span="396:63:396:81">getAuthorsLastOnly</jtok>
<jtok eid="14" type="line_comment" span="398:5:398:20">// Oxford comma</jtok>
<jtok eid="14" type="method_call" span="399:4:399:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="399:17:399:19">""</jtok>
<jtok eid="14" type="primary_name_ref" span="399:21:399:31">AuthorList</jtok>
<jtok eid="14" type="method_call" span="399:32:399:45">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="399:46:399:48">""</jtok>
<jtok eid="14" type="method_call" span="399:50:399:68">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="400:4:400:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="400:17:400:24">"Smith"</jtok>
<jtok eid="14" type="primary_name_ref" span="400:26:400:36">AuthorList</jtok>
<jtok eid="14" type="method_call" span="400:37:400:50">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="400:51:400:63">"John Smith"</jtok>
<jtok eid="14" type="method_call" span="400:65:400:83">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="401:4:401:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="401:17:401:24">"Smith"</jtok>
<jtok eid="14" type="primary_name_ref" span="401:26:401:36">AuthorList</jtok>
<jtok eid="14" type="method_call" span="401:37:401:50">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="401:51:401:68">"Smith, Jr, John"</jtok>
<jtok eid="14" type="method_call" span="401:70:401:88">getAuthorsLastOnly</jtok>
<jtok eid="14" type="method_call" span="404:4:404:16">assertEquals</jtok>
<jtok eid="14" type="string_literal" span="404:17:404:54">"von Neumann, Smith, and Black Brown"</jtok>
<jtok eid="14" type="primary_name_ref" span="404:56:404:66">AuthorList</jtok>
<jtok eid="14" type="method_call" span="404:67:404:80">getAuthorList</jtok>
<jtok eid="14" type="string_literal" span="405:5:405:61">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="14" type="method_call" span="405:63:405:81">getAuthorsLastOnly</jtok>
<jtok eid="15" type="method_name" span="409:14:409:37">testGetAuthorsLastFirst</jtok>
<jtok eid="15" type="line_comment" span="410:5:410:28">// No commas before and</jtok>
<jtok eid="15" type="class_or_interface_ref" span="411:4:411:14">AuthorList</jtok>
<jtok eid="15" type="local_variable_name" span="411:15:411:17">al</jtok>
<jtok eid="15" type="primary_name_ref" span="413:4:413:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="413:9:413:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="413:20:413:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="413:34:413:36">""</jtok>
<jtok eid="15" type="method_call" span="414:4:414:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="414:17:414:19">""</jtok>
<jtok eid="15" type="primary_name_ref" span="414:21:414:23">al</jtok>
<jtok eid="15" type="method_call" span="414:24:414:43">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="415:4:415:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="415:17:415:19">""</jtok>
<jtok eid="15" type="primary_name_ref" span="415:21:415:23">al</jtok>
<jtok eid="15" type="method_call" span="415:24:415:43">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="417:4:417:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="417:9:417:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="417:20:417:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="417:34:417:46">"John Smith"</jtok>
<jtok eid="15" type="method_call" span="418:4:418:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="418:17:418:30">"Smith, John"</jtok>
<jtok eid="15" type="primary_name_ref" span="418:32:418:34">al</jtok>
<jtok eid="15" type="method_call" span="418:35:418:54">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="419:4:419:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="419:17:419:28">"Smith, J."</jtok>
<jtok eid="15" type="primary_name_ref" span="419:30:419:32">al</jtok>
<jtok eid="15" type="method_call" span="419:33:419:52">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="421:4:421:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="421:9:421:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="421:20:421:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="421:34:421:69">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="15" type="method_call" span="422:4:422:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="422:17:422:53">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="15" type="primary_name_ref" span="422:55:422:57">al</jtok>
<jtok eid="15" type="method_call" span="422:58:422:77">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="423:4:423:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="423:17:423:48">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="15" type="primary_name_ref" span="423:50:423:52">al</jtok>
<jtok eid="15" type="method_call" span="423:53:423:72">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="425:4:425:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="425:9:425:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="425:20:425:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="425:34:425:90">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="15" type="line_comment" span="426:4:426:68">// Method description is different than code -&gt; additional comma</jtok>
<jtok eid="15" type="line_comment" span="427:4:427:12">// there</jtok>
<jtok eid="15" type="method_call" span="428:4:428:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="428:17:428:72">"von Neumann, John, Smith, John and Black Brown, Peter"</jtok>
<jtok eid="15" type="primary_name_ref" span="428:74:428:76">al</jtok>
<jtok eid="15" type="method_call" span="429:6:429:25">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="430:4:430:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="430:17:430:65">"von Neumann, J., Smith, J. and Black Brown, P."</jtok>
<jtok eid="15" type="primary_name_ref" span="430:67:430:69">al</jtok>
<jtok eid="15" type="method_call" span="430:70:430:89">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="433:4:433:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="433:9:433:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="433:20:433:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="433:34:433:58">"John Peter von Neumann"</jtok>
<jtok eid="15" type="method_call" span="434:4:434:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="434:17:434:37">"von Neumann, J. P."</jtok>
<jtok eid="15" type="primary_name_ref" span="434:39:434:41">al</jtok>
<jtok eid="15" type="method_call" span="434:42:434:61">getAuthorsLastFirst</jtok>
<jtok eid="15" type="line_comment" span="436:5:436:20">// Oxford comma</jtok>
<jtok eid="15" type="class_or_interface_ref" span="437:4:437:14">AuthorList</jtok>
<jtok eid="15" type="local_variable_name" span="437:15:437:17">al</jtok>
<jtok eid="15" type="primary_name_ref" span="439:4:439:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="439:9:439:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="439:20:439:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="439:34:439:36">""</jtok>
<jtok eid="15" type="method_call" span="440:4:440:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="440:17:440:19">""</jtok>
<jtok eid="15" type="primary_name_ref" span="440:21:440:23">al</jtok>
<jtok eid="15" type="method_call" span="440:24:440:43">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="441:4:441:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="441:17:441:19">""</jtok>
<jtok eid="15" type="primary_name_ref" span="441:21:441:23">al</jtok>
<jtok eid="15" type="method_call" span="441:24:441:43">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="443:4:443:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="443:9:443:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="443:20:443:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="443:34:443:46">"John Smith"</jtok>
<jtok eid="15" type="method_call" span="444:4:444:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="444:17:444:30">"Smith, John"</jtok>
<jtok eid="15" type="primary_name_ref" span="444:32:444:34">al</jtok>
<jtok eid="15" type="method_call" span="444:35:444:54">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="445:4:445:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="445:17:445:28">"Smith, J."</jtok>
<jtok eid="15" type="primary_name_ref" span="445:30:445:32">al</jtok>
<jtok eid="15" type="method_call" span="445:33:445:52">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="447:4:447:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="447:9:447:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="447:20:447:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="447:34:447:69">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="15" type="method_call" span="448:4:448:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="448:17:448:53">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="15" type="primary_name_ref" span="448:55:448:57">al</jtok>
<jtok eid="15" type="method_call" span="448:58:448:77">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="449:4:449:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="449:17:449:48">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="15" type="primary_name_ref" span="449:50:449:52">al</jtok>
<jtok eid="15" type="method_call" span="449:53:449:72">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="451:4:451:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="451:9:451:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="451:20:451:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="451:34:451:90">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="15" type="method_call" span="452:4:452:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="452:17:452:73">"von Neumann, John, Smith, John, and Black Brown, Peter"</jtok>
<jtok eid="15" type="primary_name_ref" span="452:75:452:77">al</jtok>
<jtok eid="15" type="method_call" span="453:6:453:25">getAuthorsLastFirst</jtok>
<jtok eid="15" type="method_call" span="454:4:454:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="454:17:454:66">"von Neumann, J., Smith, J., and Black Brown, P."</jtok>
<jtok eid="15" type="primary_name_ref" span="454:68:454:70">al</jtok>
<jtok eid="15" type="method_call" span="454:71:454:90">getAuthorsLastFirst</jtok>
<jtok eid="15" type="primary_name_ref" span="457:4:457:6">al</jtok>
<jtok eid="15" type="primary_name_ref" span="457:9:457:19">AuthorList</jtok>
<jtok eid="15" type="method_call" span="457:20:457:33">getAuthorList</jtok>
<jtok eid="15" type="string_literal" span="457:34:457:58">"John Peter von Neumann"</jtok>
<jtok eid="15" type="method_call" span="458:4:458:16">assertEquals</jtok>
<jtok eid="15" type="string_literal" span="458:17:458:37">"von Neumann, J. P."</jtok>
<jtok eid="15" type="primary_name_ref" span="458:39:458:41">al</jtok>
<jtok eid="15" type="method_call" span="458:42:458:61">getAuthorsLastFirst</jtok>
<jtok eid="16" type="method_name" span="462:14:462:41">testGetAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="463:3:463:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="463:16:463:29">"Smith, John"</jtok>
<jtok eid="16" type="primary_name_ref" span="463:31:463:41">AuthorList</jtok>
<jtok eid="16" type="method_call" span="463:42:463:55">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="463:56:463:68">"John Smith"</jtok>
<jtok eid="16" type="method_call" span="463:70:463:93">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="465:3:465:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="465:16:465:52">"Smith, John and Black Brown, Peter"</jtok>
<jtok eid="16" type="primary_name_ref" span="465:54:465:64">AuthorList</jtok>
<jtok eid="16" type="method_call" span="465:65:465:78">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="466:4:466:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="16" type="method_call" span="466:41:466:64">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="467:3:467:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="467:16:467:74">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="16" type="primary_name_ref" span="467:76:467:86">AuthorList</jtok>
<jtok eid="16" type="method_call" span="468:5:468:18">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="468:19:468:75">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="16" type="method_call" span="469:5:469:28">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="470:3:470:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="470:16:470:37">"von Last, Jr, First"</jtok>
<jtok eid="16" type="primary_name_ref" span="470:39:470:49">AuthorList</jtok>
<jtok eid="16" type="method_call" span="470:50:470:63">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="470:64:470:85">"von Last, Jr ,First"</jtok>
<jtok eid="16" type="method_call" span="471:5:471:28">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="473:3:473:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="473:16:473:27">"Smith, J."</jtok>
<jtok eid="16" type="primary_name_ref" span="473:29:473:39">AuthorList</jtok>
<jtok eid="16" type="method_call" span="473:40:473:53">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="473:54:473:66">"John Smith"</jtok>
<jtok eid="16" type="method_call" span="473:68:473:91">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="475:3:475:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="475:16:475:47">"Smith, J. and Black Brown, P."</jtok>
<jtok eid="16" type="primary_name_ref" span="475:49:475:59">AuthorList</jtok>
<jtok eid="16" type="method_call" span="475:60:475:73">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="476:4:476:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="16" type="method_call" span="476:41:476:64">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="477:3:477:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="477:16:477:67">"von Neumann, J. and Smith, J. and Black Brown, P."</jtok>
<jtok eid="16" type="primary_name_ref" span="477:69:477:79">AuthorList</jtok>
<jtok eid="16" type="method_call" span="477:80:477:93">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="478:4:478:60">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="16" type="method_call" span="478:62:478:85">getAuthorsLastFirstAnds</jtok>
<jtok eid="16" type="method_call" span="479:3:479:15">assertEquals</jtok>
<jtok eid="16" type="string_literal" span="479:16:479:34">"von Last, Jr, F."</jtok>
<jtok eid="16" type="primary_name_ref" span="479:36:479:46">AuthorList</jtok>
<jtok eid="16" type="method_call" span="479:47:479:60">getAuthorList</jtok>
<jtok eid="16" type="string_literal" span="479:61:479:82">"von Last, Jr ,First"</jtok>
<jtok eid="16" type="method_call" span="480:5:480:28">getAuthorsLastFirstAnds</jtok>
<jtok eid="17" type="method_name" span="484:14:484:38">testGetAuthorsFirstFirst</jtok>
<jtok eid="17" type="class_or_interface_ref" span="486:3:486:13">AuthorList</jtok>
<jtok eid="17" type="local_variable_name" span="486:14:486:16">al</jtok>
<jtok eid="17" type="primary_name_ref" span="488:3:488:5">al</jtok>
<jtok eid="17" type="primary_name_ref" span="488:8:488:18">AuthorList</jtok>
<jtok eid="17" type="method_call" span="488:19:488:32">getAuthorList</jtok>
<jtok eid="17" type="string_literal" span="488:33:488:35">""</jtok>
<jtok eid="17" type="method_call" span="489:3:489:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="489:16:489:18">""</jtok>
<jtok eid="17" type="primary_name_ref" span="489:20:489:22">al</jtok>
<jtok eid="17" type="method_call" span="489:23:489:43">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="490:3:490:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="490:16:490:18">""</jtok>
<jtok eid="17" type="primary_name_ref" span="490:20:490:22">al</jtok>
<jtok eid="17" type="method_call" span="490:23:490:43">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="491:3:491:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="491:16:491:18">""</jtok>
<jtok eid="17" type="primary_name_ref" span="491:20:491:22">al</jtok>
<jtok eid="17" type="method_call" span="491:23:491:43">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="492:3:492:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="492:16:492:18">""</jtok>
<jtok eid="17" type="primary_name_ref" span="492:20:492:22">al</jtok>
<jtok eid="17" type="method_call" span="492:23:492:43">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="primary_name_ref" span="494:3:494:5">al</jtok>
<jtok eid="17" type="primary_name_ref" span="494:8:494:18">AuthorList</jtok>
<jtok eid="17" type="method_call" span="494:19:494:32">getAuthorList</jtok>
<jtok eid="17" type="string_literal" span="494:33:494:45">"John Smith"</jtok>
<jtok eid="17" type="method_call" span="495:3:495:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="495:16:495:28">"John Smith"</jtok>
<jtok eid="17" type="primary_name_ref" span="495:30:495:32">al</jtok>
<jtok eid="17" type="method_call" span="495:33:495:53">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="496:3:496:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="496:16:496:26">"J. Smith"</jtok>
<jtok eid="17" type="primary_name_ref" span="496:28:496:30">al</jtok>
<jtok eid="17" type="method_call" span="496:31:496:51">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="497:3:497:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="497:16:497:28">"John Smith"</jtok>
<jtok eid="17" type="primary_name_ref" span="497:30:497:32">al</jtok>
<jtok eid="17" type="method_call" span="497:33:497:53">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="498:3:498:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="498:16:498:26">"J. Smith"</jtok>
<jtok eid="17" type="primary_name_ref" span="498:28:498:30">al</jtok>
<jtok eid="17" type="method_call" span="498:31:498:51">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="primary_name_ref" span="500:3:500:5">al</jtok>
<jtok eid="17" type="primary_name_ref" span="500:8:500:18">AuthorList</jtok>
<jtok eid="17" type="method_call" span="500:19:500:32">getAuthorList</jtok>
<jtok eid="17" type="string_literal" span="500:33:500:68">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="17" type="method_call" span="501:3:501:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="501:16:501:50">"John Smith and Peter Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="501:52:501:54">al</jtok>
<jtok eid="17" type="method_call" span="501:55:501:75">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="502:3:502:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="502:16:502:45">"J. Smith and P. Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="502:47:502:49">al</jtok>
<jtok eid="17" type="method_call" span="502:50:502:70">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="503:3:503:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="503:16:503:50">"John Smith and Peter Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="503:52:503:54">al</jtok>
<jtok eid="17" type="method_call" span="503:55:503:75">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="504:3:504:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="504:16:504:45">"J. Smith and P. Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="504:47:504:49">al</jtok>
<jtok eid="17" type="method_call" span="504:50:504:70">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="primary_name_ref" span="506:3:506:5">al</jtok>
<jtok eid="17" type="primary_name_ref" span="506:8:506:18">AuthorList</jtok>
<jtok eid="17" type="method_call" span="506:19:506:32">getAuthorList</jtok>
<jtok eid="17" type="string_literal" span="506:33:506:89">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="17" type="method_call" span="507:3:507:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="507:16:507:68">"John von Neumann, John Smith and Peter Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="507:70:507:72">al</jtok>
<jtok eid="17" type="method_call" span="507:73:507:93">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="509:3:509:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="509:16:509:61">"J. von Neumann, J. Smith and P. Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="509:63:509:65">al</jtok>
<jtok eid="17" type="method_call" span="509:66:509:86">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="511:3:511:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="511:16:511:69">"John von Neumann, John Smith, and Peter Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="511:71:511:73">al</jtok>
<jtok eid="17" type="method_call" span="512:5:512:25">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="513:3:513:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="513:16:513:62">"J. von Neumann, J. Smith, and P. Black Brown"</jtok>
<jtok eid="17" type="primary_name_ref" span="513:64:513:66">al</jtok>
<jtok eid="17" type="method_call" span="513:67:513:87">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="primary_name_ref" span="516:3:516:5">al</jtok>
<jtok eid="17" type="primary_name_ref" span="516:8:516:18">AuthorList</jtok>
<jtok eid="17" type="method_call" span="516:19:516:32">getAuthorList</jtok>
<jtok eid="17" type="string_literal" span="516:33:516:57">"John Peter von Neumann"</jtok>
<jtok eid="17" type="method_call" span="517:3:517:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="517:16:517:40">"John Peter von Neumann"</jtok>
<jtok eid="17" type="primary_name_ref" span="517:42:517:44">al</jtok>
<jtok eid="17" type="method_call" span="517:45:517:65">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="518:3:518:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="518:16:518:40">"John Peter von Neumann"</jtok>
<jtok eid="17" type="primary_name_ref" span="518:42:518:44">al</jtok>
<jtok eid="17" type="method_call" span="518:45:518:65">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="519:3:519:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="519:16:519:35">"J. P. von Neumann"</jtok>
<jtok eid="17" type="primary_name_ref" span="519:37:519:39">al</jtok>
<jtok eid="17" type="method_call" span="519:40:519:60">getAuthorsFirstFirst</jtok>
<jtok eid="17" type="method_call" span="520:3:520:15">assertEquals</jtok>
<jtok eid="17" type="string_literal" span="520:16:520:35">"J. P. von Neumann"</jtok>
<jtok eid="17" type="primary_name_ref" span="520:37:520:39">al</jtok>
<jtok eid="17" type="method_call" span="520:40:520:60">getAuthorsFirstFirst</jtok>
<jtok eid="18" type="method_name" span="523:14:523:42">testGetAuthorsFirstFirstAnds</jtok>
<jtok eid="18" type="method_call" span="524:3:524:15">assertEquals</jtok>
<jtok eid="18" type="string_literal" span="524:16:524:28">"John Smith"</jtok>
<jtok eid="18" type="primary_name_ref" span="524:30:524:40">AuthorList</jtok>
<jtok eid="18" type="method_call" span="524:41:524:54">getAuthorList</jtok>
<jtok eid="18" type="string_literal" span="524:55:524:67">"John Smith"</jtok>
<jtok eid="18" type="method_call" span="525:5:525:29">getAuthorsFirstFirstAnds</jtok>
<jtok eid="18" type="method_call" span="526:3:526:15">assertEquals</jtok>
<jtok eid="18" type="string_literal" span="526:16:526:50">"John Smith and Peter Black Brown"</jtok>
<jtok eid="18" type="primary_name_ref" span="526:52:526:62">AuthorList</jtok>
<jtok eid="18" type="method_call" span="526:63:526:76">getAuthorList</jtok>
<jtok eid="18" type="string_literal" span="527:4:527:39">"John Smith and Black Brown, Peter"</jtok>
<jtok eid="18" type="method_call" span="527:41:527:65">getAuthorsFirstFirstAnds</jtok>
<jtok eid="18" type="method_call" span="528:3:528:15">assertEquals</jtok>
<jtok eid="18" type="string_literal" span="528:16:528:71">"John von Neumann and John Smith and Peter Black Brown"</jtok>
<jtok eid="18" type="primary_name_ref" span="528:73:528:83">AuthorList</jtok>
<jtok eid="18" type="method_call" span="529:5:529:18">getAuthorList</jtok>
<jtok eid="18" type="string_literal" span="529:19:529:75">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
<jtok eid="18" type="method_call" span="530:5:530:29">getAuthorsFirstFirstAnds</jtok>
<jtok eid="18" type="method_call" span="531:3:531:15">assertEquals</jtok>
<jtok eid="18" type="string_literal" span="531:16:531:41">"First von Last, Jr. III"</jtok>
<jtok eid="18" type="primary_name_ref" span="531:43:531:53">AuthorList</jtok>
<jtok eid="18" type="method_call" span="532:5:532:18">getAuthorList</jtok>
<jtok eid="18" type="string_literal" span="532:19:532:45">"von Last, Jr. III, First"</jtok>
<jtok eid="18" type="method_call" span="532:47:532:71">getAuthorsFirstFirstAnds</jtok>
<jtok eid="19" type="method_name" span="535:14:535:46">testGetAuthorsForAlphabetization</jtok>
<jtok eid="19" type="method_call" span="536:3:536:15">assertEquals</jtok>
<jtok eid="19" type="string_literal" span="536:16:536:27">"Smith, J."</jtok>
<jtok eid="19" type="primary_name_ref" span="536:29:536:39">AuthorList</jtok>
<jtok eid="19" type="method_call" span="536:40:536:53">getAuthorList</jtok>
<jtok eid="19" type="string_literal" span="536:54:536:66">"John Smith"</jtok>
<jtok eid="19" type="method_call" span="537:5:537:33">getAuthorsForAlphabetization</jtok>
<jtok eid="19" type="method_call" span="538:3:538:15">assertEquals</jtok>
<jtok eid="19" type="string_literal" span="538:16:538:29">"Neumann, J."</jtok>
<jtok eid="19" type="primary_name_ref" span="538:31:538:41">AuthorList</jtok>
<jtok eid="19" type="method_call" span="538:42:538:55">getAuthorList</jtok>
<jtok eid="19" type="string_literal" span="538:56:538:74">"John von Neumann"</jtok>
<jtok eid="19" type="method_call" span="539:5:539:33">getAuthorsForAlphabetization</jtok>
<jtok eid="19" type="method_call" span="540:3:540:15">assertEquals</jtok>
<jtok eid="19" type="string_literal" span="540:16:540:29">"Neumann, J."</jtok>
<jtok eid="19" type="primary_name_ref" span="540:31:540:41">AuthorList</jtok>
<jtok eid="19" type="method_call" span="540:42:540:55">getAuthorList</jtok>
<jtok eid="19" type="string_literal" span="540:56:540:72">"J. von Neumann"</jtok>
<jtok eid="19" type="method_call" span="541:5:541:33">getAuthorsForAlphabetization</jtok>
<jtok eid="19" type="method_call" span="542:3:542:15">assertEquals</jtok>
<jtok eid="19" type="string_literal" span="542:16:542:68">"Neumann, J. and Smith, J. and Black Brown, Jr., P."</jtok>
<jtok eid="19" type="primary_name_ref" span="542:70:542:80">AuthorList</jtok>
<jtok eid="19" type="method_call" span="543:5:543:18">getAuthorList</jtok>
<jtok eid="19" type="string_literal" span="543:19:543:83">"John von Neumann and John Smith and de Black Brown, Jr., Peter"</jtok>
<jtok eid="19" type="method_call" span="544:5:544:33">getAuthorsForAlphabetization</jtok>
</jdoc>