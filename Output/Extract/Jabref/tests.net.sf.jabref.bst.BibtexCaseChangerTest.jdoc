<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="tests.net.sf.jabref.bst.BibtexCaseChangerTest" jls="java5">
<jent id="0" type="file" span="0:0:125:1">Source/jabref/src/java/tests/net/sf/jabref/bst/BibtexCaseChangerTest.java</jent>
<jent id="1" pid="0" type="class" span="7:1:125:1">tests.net.sf.jabref.bst.BibtexCaseChangerTest</jent>
<jent id="2" pid="1" type="method" span="9:2:78:2">tests.net.sf.jabref.bst.BibtexCaseChangerTest.testChangeCase()</jent>
<jent id="3" pid="1" type="method" span="80:2:89:2">tests.net.sf.jabref.bst.BibtexCaseChangerTest.testColon()</jent>
<jent id="4" pid="1" type="method" span="91:2:101:2">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerT(String,String)</jent>
<jent id="5" pid="4" type="class" span="92:78:99:3">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerT(String,String).$1</jent>
<jent id="6" pid="5" type="method" span="94:4:98:4">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerT(String,String).$1.warn(String)</jent>
<jent id="7" pid="1" type="method" span="103:2:113:2">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerL(String,String)</jent>
<jent id="8" pid="7" type="class" span="104:78:111:3">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerL(String,String).$2</jent>
<jent id="9" pid="8" type="method" span="106:4:110:4">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerL(String,String).$2.warn(String)</jent>
<jent id="10" pid="1" type="method" span="115:2:124:2">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerU(String,String)</jent>
<jent id="11" pid="10" type="class" span="116:78:122:3">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerU(String,String).$3</jent>
<jent id="12" pid="11" type="method" span="117:4:121:4">tests.net.sf.jabref.bst.BibtexCaseChangerTest.assertCaseChangerU(String,String).$3.warn(String)</jent>
<jtok eid="1" type="class_name" span="7:14:7:35">BibtexCaseChangerTest</jtok>
<jtok eid="1" type="class_or_interface_ref" span="7:44:7:52">TestCase</jtok>
<jtok eid="2" type="method_name" span="9:14:9:28">testChangeCase</jtok>
<jtok eid="2" type="method_call" span="11:3:11:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="11:22:11:25">"i"</jtok>
<jtok eid="2" type="string_literal" span="11:27:11:30">"i"</jtok>
<jtok eid="2" type="method_call" span="12:3:12:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="12:22:12:25">"i"</jtok>
<jtok eid="2" type="string_literal" span="12:27:12:30">"i"</jtok>
<jtok eid="2" type="method_call" span="13:3:13:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="13:22:13:25">"I"</jtok>
<jtok eid="2" type="string_literal" span="13:27:13:30">"i"</jtok>
<jtok eid="2" type="method_call" span="14:3:14:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="14:22:14:28">"0i~ "</jtok>
<jtok eid="2" type="string_literal" span="14:30:14:36">"0I~ "</jtok>
<jtok eid="2" type="method_call" span="15:3:15:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="15:22:15:28">"0i~ "</jtok>
<jtok eid="2" type="string_literal" span="15:30:15:36">"0I~ "</jtok>
<jtok eid="2" type="method_call" span="16:3:16:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="16:22:16:28">"0I~ "</jtok>
<jtok eid="2" type="string_literal" span="16:30:16:36">"0I~ "</jtok>
<jtok eid="2" type="method_call" span="17:3:17:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="17:22:17:30">"Hi hi "</jtok>
<jtok eid="2" type="string_literal" span="17:32:17:40">"Hi Hi "</jtok>
<jtok eid="2" type="method_call" span="18:3:18:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="18:22:18:30">"hi hi "</jtok>
<jtok eid="2" type="string_literal" span="18:32:18:40">"Hi Hi "</jtok>
<jtok eid="2" type="method_call" span="19:3:19:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="19:22:19:30">"HI HI "</jtok>
<jtok eid="2" type="string_literal" span="19:32:19:40">"Hi Hi "</jtok>
<jtok eid="2" type="method_call" span="20:3:20:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="20:22:20:30">"{\\oe}"</jtok>
<jtok eid="2" type="string_literal" span="20:32:20:40">"{\\oe}"</jtok>
<jtok eid="2" type="method_call" span="21:3:21:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="21:22:21:30">"{\\oe}"</jtok>
<jtok eid="2" type="string_literal" span="21:32:21:40">"{\\oe}"</jtok>
<jtok eid="2" type="method_call" span="22:3:22:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="22:22:22:30">"{\\OE}"</jtok>
<jtok eid="2" type="string_literal" span="22:32:22:40">"{\\oe}"</jtok>
<jtok eid="2" type="method_call" span="23:3:23:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="23:22:23:39">"Hi {\\oe   }hi "</jtok>
<jtok eid="2" type="string_literal" span="23:41:23:58">"Hi {\\oe   }Hi "</jtok>
<jtok eid="2" type="method_call" span="24:3:24:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="24:22:24:39">"hi {\\oe   }hi "</jtok>
<jtok eid="2" type="string_literal" span="24:41:24:58">"Hi {\\oe   }Hi "</jtok>
<jtok eid="2" type="method_call" span="25:3:25:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="25:22:25:39">"HI {\\OE   }HI "</jtok>
<jtok eid="2" type="string_literal" span="25:41:25:58">"Hi {\\oe   }Hi "</jtok>
<jtok eid="2" type="method_call" span="26:3:26:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="27:4:27:78">"Jonathan meyer and charles louis xavier joseph de la vall{\\'e}e poussin"</jtok>
<jtok eid="2" type="string_literal" span="28:4:28:78">"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin"</jtok>
<jtok eid="2" type="method_call" span="29:3:29:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="30:4:30:78">"jonathan meyer and charles louis xavier joseph de la vall{\\'e}e poussin"</jtok>
<jtok eid="2" type="string_literal" span="31:4:31:78">"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin"</jtok>
<jtok eid="2" type="method_call" span="32:3:32:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="33:4:33:78">"JONATHAN MEYER AND CHARLES LOUIS XAVIER JOSEPH DE LA VALL{\\'E}E POUSSIN"</jtok>
<jtok eid="2" type="string_literal" span="34:4:34:78">"Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin"</jtok>
<jtok eid="2" type="method_call" span="35:3:35:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="35:22:35:30">"{\\'e}"</jtok>
<jtok eid="2" type="string_literal" span="35:32:35:40">"{\\'e}"</jtok>
<jtok eid="2" type="method_call" span="36:3:36:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="36:22:36:30">"{\\'e}"</jtok>
<jtok eid="2" type="string_literal" span="36:32:36:40">"{\\'e}"</jtok>
<jtok eid="2" type="method_call" span="37:3:37:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="37:22:37:30">"{\\'E}"</jtok>
<jtok eid="2" type="string_literal" span="37:32:37:40">"{\\'e}"</jtok>
<jtok eid="2" type="method_call" span="38:3:38:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="38:22:38:47">"{\\'{E}}douard masterly"</jtok>
<jtok eid="2" type="string_literal" span="38:49:38:74">"{\\'{E}}douard Masterly"</jtok>
<jtok eid="2" type="method_call" span="39:3:39:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="39:22:39:47">"{\\'{e}}douard masterly"</jtok>
<jtok eid="2" type="string_literal" span="39:49:39:74">"{\\'{E}}douard Masterly"</jtok>
<jtok eid="2" type="method_call" span="40:3:40:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="40:22:40:47">"{\\'{E}}DOUARD MASTERLY"</jtok>
<jtok eid="2" type="string_literal" span="40:49:40:74">"{\\'{E}}douard Masterly"</jtok>
<jtok eid="2" type="method_call" span="41:3:41:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="41:22:41:85">"Ulrich {\\\"{u}}nderwood and ned {\\~n}et and paul {\\={p}}ot"</jtok>
<jtok eid="2" type="string_literal" span="42:4:42:67">"Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot"</jtok>
<jtok eid="2" type="method_call" span="43:3:43:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="43:22:43:85">"ulrich {\\\"{u}}nderwood and ned {\\~n}et and paul {\\={p}}ot"</jtok>
<jtok eid="2" type="string_literal" span="44:4:44:67">"Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot"</jtok>
<jtok eid="2" type="method_call" span="45:3:45:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="45:22:45:85">"ULRICH {\\\"{U}}NDERWOOD AND NED {\\~N}ET AND PAUL {\\={P}}OT"</jtok>
<jtok eid="2" type="string_literal" span="46:4:46:67">"Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot"</jtok>
<jtok eid="2" type="method_call" span="47:3:47:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="47:22:47:80">"An {$O(n \\log n / \\! \\log\\log n)$} sorting algorithm"</jtok>
<jtok eid="2" type="string_literal" span="48:4:48:62">"An {$O(n \\log n / \\! \\log\\log n)$} Sorting Algorithm"</jtok>
<jtok eid="2" type="method_call" span="49:3:49:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="49:22:49:80">"an {$O(n \\log n / \\! \\log\\log n)$} sorting algorithm"</jtok>
<jtok eid="2" type="string_literal" span="50:4:50:62">"An {$O(n \\log n / \\! \\log\\log n)$} Sorting Algorithm"</jtok>
<jtok eid="2" type="method_call" span="51:3:51:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="51:22:51:80">"AN {$O(n \\log n / \\! \\log\\log n)$} SORTING ALGORITHM"</jtok>
<jtok eid="2" type="string_literal" span="52:4:52:62">"An {$O(n \\log n / \\! \\log\\log n)$} Sorting Algorithm"</jtok>
<jtok eid="2" type="method_call" span="54:3:54:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="54:22:54:29">"hallo"</jtok>
<jtok eid="2" type="string_literal" span="54:31:54:38">"hallo"</jtok>
<jtok eid="2" type="method_call" span="55:3:55:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="55:22:55:29">"Hallo"</jtok>
<jtok eid="2" type="string_literal" span="55:31:55:38">"HAllo"</jtok>
<jtok eid="2" type="method_call" span="56:3:56:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="56:22:56:35">"Hallo world"</jtok>
<jtok eid="2" type="string_literal" span="56:37:56:50">"HAllo World"</jtok>
<jtok eid="2" type="method_call" span="57:3:57:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="57:22:57:40">"Hallo world. how"</jtok>
<jtok eid="2" type="string_literal" span="57:42:57:60">"HAllo WORLD. HOW"</jtok>
<jtok eid="2" type="method_call" span="58:3:58:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="58:22:58:42">"Hallo {WORLD}. how"</jtok>
<jtok eid="2" type="string_literal" span="58:44:58:64">"HAllo {WORLD}. HOW"</jtok>
<jtok eid="2" type="method_call" span="59:3:59:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="59:22:59:44">"Hallo {\\world}. how"</jtok>
<jtok eid="2" type="string_literal" span="59:46:59:68">"HAllo {\\WORLD}. HOW"</jtok>
<jtok eid="2" type="method_call" span="61:3:61:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="61:22:61:29">"hallo"</jtok>
<jtok eid="2" type="string_literal" span="61:31:61:38">"hallo"</jtok>
<jtok eid="2" type="method_call" span="62:3:62:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="62:22:62:29">"hallo"</jtok>
<jtok eid="2" type="string_literal" span="62:31:62:38">"HAllo"</jtok>
<jtok eid="2" type="method_call" span="63:3:63:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="63:22:63:35">"hallo world"</jtok>
<jtok eid="2" type="string_literal" span="63:37:63:50">"HAllo World"</jtok>
<jtok eid="2" type="method_call" span="64:3:64:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="64:22:64:40">"hallo world. how"</jtok>
<jtok eid="2" type="string_literal" span="64:42:64:60">"HAllo WORLD. HOW"</jtok>
<jtok eid="2" type="method_call" span="65:3:65:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="65:22:65:42">"hallo {worLD}. how"</jtok>
<jtok eid="2" type="string_literal" span="65:44:65:64">"HAllo {worLD}. HOW"</jtok>
<jtok eid="2" type="method_call" span="66:3:66:21">assertCaseChangerL</jtok>
<jtok eid="2" type="string_literal" span="66:22:66:44">"hallo {\\world}. how"</jtok>
<jtok eid="2" type="string_literal" span="66:46:66:68">"HAllo {\\WORLD}. HOW"</jtok>
<jtok eid="2" type="method_call" span="68:3:68:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="68:22:68:29">"HALLO"</jtok>
<jtok eid="2" type="string_literal" span="68:31:68:38">"hallo"</jtok>
<jtok eid="2" type="method_call" span="69:3:69:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="69:22:69:29">"HALLO"</jtok>
<jtok eid="2" type="string_literal" span="69:31:69:38">"HAllo"</jtok>
<jtok eid="2" type="method_call" span="70:3:70:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="70:22:70:35">"HALLO WORLD"</jtok>
<jtok eid="2" type="string_literal" span="70:37:70:50">"HAllo World"</jtok>
<jtok eid="2" type="method_call" span="71:3:71:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="71:22:71:40">"HALLO WORLD. HOW"</jtok>
<jtok eid="2" type="string_literal" span="71:42:71:60">"HAllo World. How"</jtok>
<jtok eid="2" type="method_call" span="72:3:72:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="72:22:72:42">"HALLO {worLD}. HOW"</jtok>
<jtok eid="2" type="string_literal" span="72:44:72:64">"HAllo {worLD}. how"</jtok>
<jtok eid="2" type="method_call" span="73:3:73:21">assertCaseChangerU</jtok>
<jtok eid="2" type="string_literal" span="73:22:73:44">"HALLO {\\WORLD}. HOW"</jtok>
<jtok eid="2" type="string_literal" span="73:46:73:68">"HAllo {\\woRld}. hoW"</jtok>
<jtok eid="2" type="method_call" span="75:3:75:21">assertCaseChangerT</jtok>
<jtok eid="2" type="string_literal" span="75:22:75:77">"On notions of information transfer in {VLSI} circuits"</jtok>
<jtok eid="2" type="string_literal" span="76:4:76:59">"On Notions of Information Transfer in {VLSI} Circuits"</jtok>
<jtok eid="3" type="method_name" span="80:14:80:23">testColon</jtok>
<jtok eid="3" type="method_call" span="82:3:82:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="82:22:82:40">"Hallo world: How"</jtok>
<jtok eid="3" type="string_literal" span="82:42:82:60">"HAllo WORLD: HOW"</jtok>
<jtok eid="3" type="method_call" span="83:3:83:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="83:22:83:40">"Hallo world! how"</jtok>
<jtok eid="3" type="string_literal" span="83:42:83:60">"HAllo WORLD! HOW"</jtok>
<jtok eid="3" type="method_call" span="84:3:84:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="84:22:84:40">"Hallo world? how"</jtok>
<jtok eid="3" type="string_literal" span="84:42:84:60">"HAllo WORLD? HOW"</jtok>
<jtok eid="3" type="method_call" span="85:3:85:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="85:22:85:40">"Hallo world. how"</jtok>
<jtok eid="3" type="string_literal" span="85:42:85:60">"HAllo WORLD. HOW"</jtok>
<jtok eid="3" type="method_call" span="86:3:86:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="86:22:86:40">"Hallo world, how"</jtok>
<jtok eid="3" type="string_literal" span="86:42:86:60">"HAllo WORLD, HOW"</jtok>
<jtok eid="3" type="method_call" span="87:3:87:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="87:22:87:40">"Hallo world; how"</jtok>
<jtok eid="3" type="string_literal" span="87:42:87:60">"HAllo WORLD; HOW"</jtok>
<jtok eid="3" type="method_call" span="88:3:88:21">assertCaseChangerT</jtok>
<jtok eid="3" type="string_literal" span="88:22:88:40">"Hallo world- how"</jtok>
<jtok eid="3" type="string_literal" span="88:42:88:60">"HAllo WORLD- HOW"</jtok>
<jtok eid="4" type="method_name" span="91:15:91:33">assertCaseChangerT</jtok>
<jtok eid="4" type="parameter_type" span="91:40:91:46">String</jtok>
<jtok eid="4" type="parameter_name" span="91:47:91:53">string</jtok>
<jtok eid="4" type="parameter_type" span="91:61:91:67">String</jtok>
<jtok eid="4" type="parameter_name" span="91:68:91:75">string2</jtok>
<jtok eid="4" type="method_call" span="92:3:92:15">assertEquals</jtok>
<jtok eid="4" type="primary_name_ref" span="92:16:92:22">string</jtok>
<jtok eid="4" type="primary_name_ref" span="92:24:92:41">BibtexCaseChanger</jtok>
<jtok eid="4" type="method_call" span="92:42:92:52">changeCase</jtok>
<jtok eid="4" type="primary_name_ref" span="92:53:92:60">string2</jtok>
<jtok eid="4" type="constructor_call" span="92:71:92:75">Warn</jtok>
<jtok eid="6" type="method_name" span="94:16:94:20">warn</jtok>
<jtok eid="6" type="parameter_type" span="94:21:94:27">String</jtok>
<jtok eid="6" type="parameter_name" span="94:28:94:29">s</jtok>
<jtok eid="6" type="method_call" span="95:5:95:9">fail</jtok>
<jtok eid="6" type="string_literal" span="95:10:95:29">"Should not Warn ("</jtok>
<jtok eid="6" type="primary_name_ref" span="95:32:95:33">s</jtok>
<jtok eid="6" type="string_literal" span="95:36:95:67">")! changeCase('t') should be "</jtok>
<jtok eid="6" type="primary_name_ref" span="95:70:95:76">string</jtok>
<jtok eid="6" type="string_literal" span="95:79:95:86">" for "</jtok>
<jtok eid="6" type="primary_name_ref" span="96:8:96:15">string2</jtok>
<jtok eid="7" type="method_name" span="103:15:103:33">assertCaseChangerL</jtok>
<jtok eid="7" type="parameter_type" span="103:40:103:46">String</jtok>
<jtok eid="7" type="parameter_name" span="103:47:103:53">string</jtok>
<jtok eid="7" type="parameter_type" span="103:61:103:67">String</jtok>
<jtok eid="7" type="parameter_name" span="103:68:103:75">string2</jtok>
<jtok eid="7" type="method_call" span="104:3:104:15">assertEquals</jtok>
<jtok eid="7" type="primary_name_ref" span="104:16:104:22">string</jtok>
<jtok eid="7" type="primary_name_ref" span="104:24:104:41">BibtexCaseChanger</jtok>
<jtok eid="7" type="method_call" span="104:42:104:52">changeCase</jtok>
<jtok eid="7" type="primary_name_ref" span="104:53:104:60">string2</jtok>
<jtok eid="7" type="constructor_call" span="104:71:104:75">Warn</jtok>
<jtok eid="9" type="method_name" span="106:16:106:20">warn</jtok>
<jtok eid="9" type="parameter_type" span="106:21:106:27">String</jtok>
<jtok eid="9" type="parameter_name" span="106:28:106:29">s</jtok>
<jtok eid="9" type="method_call" span="107:5:107:9">fail</jtok>
<jtok eid="9" type="string_literal" span="107:10:107:29">"Should not Warn ("</jtok>
<jtok eid="9" type="primary_name_ref" span="107:32:107:33">s</jtok>
<jtok eid="9" type="string_literal" span="107:36:107:67">")! changeCase('l') should be "</jtok>
<jtok eid="9" type="primary_name_ref" span="107:70:107:76">string</jtok>
<jtok eid="9" type="string_literal" span="107:79:107:86">" for "</jtok>
<jtok eid="9" type="primary_name_ref" span="108:8:108:15">string2</jtok>
<jtok eid="10" type="method_name" span="115:15:115:33">assertCaseChangerU</jtok>
<jtok eid="10" type="parameter_type" span="115:40:115:46">String</jtok>
<jtok eid="10" type="parameter_name" span="115:47:115:53">string</jtok>
<jtok eid="10" type="parameter_type" span="115:61:115:67">String</jtok>
<jtok eid="10" type="parameter_name" span="115:68:115:75">string2</jtok>
<jtok eid="10" type="method_call" span="116:3:116:15">assertEquals</jtok>
<jtok eid="10" type="primary_name_ref" span="116:16:116:22">string</jtok>
<jtok eid="10" type="primary_name_ref" span="116:24:116:41">BibtexCaseChanger</jtok>
<jtok eid="10" type="method_call" span="116:42:116:52">changeCase</jtok>
<jtok eid="10" type="primary_name_ref" span="116:53:116:60">string2</jtok>
<jtok eid="10" type="constructor_call" span="116:71:116:75">Warn</jtok>
<jtok eid="12" type="method_name" span="117:16:117:20">warn</jtok>
<jtok eid="12" type="parameter_type" span="117:21:117:27">String</jtok>
<jtok eid="12" type="parameter_name" span="117:28:117:29">s</jtok>
<jtok eid="12" type="method_call" span="118:5:118:9">fail</jtok>
<jtok eid="12" type="string_literal" span="118:10:118:29">"Should not Warn ("</jtok>
<jtok eid="12" type="primary_name_ref" span="118:32:118:33">s</jtok>
<jtok eid="12" type="string_literal" span="118:36:118:67">")! changeCase('u') should be "</jtok>
<jtok eid="12" type="primary_name_ref" span="118:70:118:76">string</jtok>
<jtok eid="12" type="string_literal" span="118:79:118:86">" for "</jtok>
<jtok eid="12" type="primary_name_ref" span="119:8:119:15">string2</jtok>
</jdoc>