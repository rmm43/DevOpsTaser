<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="tests.net.sf.jabref.export.layout.format.AuthorLastFirstTest" jls="java5">
<jent id="0" type="file" span="0:0:30:1">Source/jabref/src/java/tests/net/sf/jabref/export/layout/format/AuthorLastFirstTest.java</jent>
<jent id="1" pid="0" type="class" span="7:1:30:1">tests.net.sf.jabref.export.layout.format.AuthorLastFirstTest</jent>
<jent id="2" pid="1" type="method" span="9:2:28:2">tests.net.sf.jabref.export.layout.format.AuthorLastFirstTest.testFormat()</jent>
<jtok eid="1" type="class_name" span="7:14:7:33">AuthorLastFirstTest</jtok>
<jtok eid="1" type="class_or_interface_ref" span="7:42:7:50">TestCase</jtok>
<jtok eid="2" type="method_name" span="9:14:9:24">testFormat</jtok>
<jtok eid="2" type="class_or_interface_ref" span="10:3:10:18">LayoutFormatter</jtok>
<jtok eid="2" type="local_variable_name" span="10:19:10:20">a</jtok>
<jtok eid="2" type="constructor_call" span="10:27:10:42">AuthorLastFirst</jtok>
<jtok eid="2" type="line_comment" span="12:3:12:16">// Empty case</jtok>
<jtok eid="2" type="method_call" span="13:3:13:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="13:16:13:18">""</jtok>
<jtok eid="2" type="primary_name_ref" span="13:20:13:21">a</jtok>
<jtok eid="2" type="method_call" span="13:22:13:28">format</jtok>
<jtok eid="2" type="string_literal" span="13:29:13:31">""</jtok>
<jtok eid="2" type="line_comment" span="15:3:15:18">// Single Names</jtok>
<jtok eid="2" type="method_call" span="16:3:16:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="16:16:16:40">"Someone, Van Something"</jtok>
<jtok eid="2" type="primary_name_ref" span="16:42:16:43">a</jtok>
<jtok eid="2" type="method_call" span="16:44:16:50">format</jtok>
<jtok eid="2" type="string_literal" span="16:51:16:74">"Van Something Someone"</jtok>
<jtok eid="2" type="line_comment" span="18:3:18:15">// Two names</jtok>
<jtok eid="2" type="method_call" span="19:3:19:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="19:16:19:58">"von Neumann, John and Black Brown, Peter"</jtok>
<jtok eid="2" type="primary_name_ref" span="19:60:19:61">a</jtok>
<jtok eid="2" type="method_call" span="20:5:20:11">format</jtok>
<jtok eid="2" type="string_literal" span="20:12:20:53">"John von Neumann and Black Brown, Peter"</jtok>
<jtok eid="2" type="line_comment" span="22:3:22:17">// Three names</jtok>
<jtok eid="2" type="method_call" span="23:3:23:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="23:16:23:74">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="2" type="primary_name_ref" span="23:76:23:77">a</jtok>
<jtok eid="2" type="method_call" span="24:5:24:11">format</jtok>
<jtok eid="2" type="string_literal" span="24:12:24:70">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="2" type="method_call" span="26:3:26:15">assertEquals</jtok>
<jtok eid="2" type="string_literal" span="26:16:26:74">"von Neumann, John and Smith, John and Black Brown, Peter"</jtok>
<jtok eid="2" type="primary_name_ref" span="26:76:26:77">a</jtok>
<jtok eid="2" type="method_call" span="27:5:27:11">format</jtok>
<jtok eid="2" type="string_literal" span="27:12:27:68">"John von Neumann and John Smith and Black Brown, Peter"</jtok>
</jdoc>