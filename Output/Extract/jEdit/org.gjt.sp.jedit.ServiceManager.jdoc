<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.ServiceManager" jls="java5">
<jent id="0" type="file" span="0:0:365:2">Source/jEdit/org/gjt/sp/jedit/ServiceManager.java</jent>
<jent id="1" pid="0" type="class" span="90:1:365:1">org.gjt.sp.jedit.ServiceManager</jent>
<jent id="2" pid="1" type="method" span="97:2:113:2">org.gjt.sp.jedit.ServiceManager.loadServices(PluginJAR,URL,PluginJAR.PluginCacheEntry)</jent>
<jent id="3" pid="1" type="method" span="121:2:130:2">org.gjt.sp.jedit.ServiceManager.unloadServices(PluginJAR)</jent>
<jent id="4" pid="1" type="method" span="144:2:149:2">org.gjt.sp.jedit.ServiceManager.registerService(String,String,String,PluginJAR)</jent>
<jent id="5" pid="1" type="method" span="160:2:164:2">org.gjt.sp.jedit.ServiceManager.unregisterService(String,String)</jent>
<jent id="6" pid="1" type="method" span="172:2:182:2">org.gjt.sp.jedit.ServiceManager.getServiceTypes()</jent>
<jent id="7" pid="1" type="method" span="194:2:206:2">org.gjt.sp.jedit.ServiceManager.getServiceNames(String)</jent>
<jent id="8" pid="1" type="method" span="219:2:240:2">org.gjt.sp.jedit.ServiceManager.getService(String,String)</jent>
<jent id="9" pid="1" type="method" span="250:2:253:2">org.gjt.sp.jedit.ServiceManager.registerService(Descriptor)</jent>
<jent id="10" pid="1" type="class" span="262:2:324:2">org.gjt.sp.jedit.ServiceManager.Descriptor</jent>
<jent id="11" pid="10" type="method" span="272:3:276:3">org.gjt.sp.jedit.ServiceManager.Descriptor.Descriptor(String,String)</jent>
<jent id="12" pid="10" type="method" span="279:3:286:3">org.gjt.sp.jedit.ServiceManager.Descriptor.Descriptor(String,String,String,PluginJAR)</jent>
<jent id="13" pid="10" type="method" span="288:3:307:3">org.gjt.sp.jedit.ServiceManager.Descriptor.getInstance()</jent>
<jent id="14" pid="10" type="method" span="308:3:311:3">org.gjt.sp.jedit.ServiceManager.Descriptor.hashCode()</jent>
<jent id="15" pid="10" type="method" span="313:3:323:3">org.gjt.sp.jedit.ServiceManager.Descriptor.equals(Object)</jent>
<jent id="16" pid="1" type="class" span="331:2:364:2">org.gjt.sp.jedit.ServiceManager.ServiceFoldHandlerProvider</jent>
<jent id="17" pid="16" type="method" span="346:3:350:3">org.gjt.sp.jedit.ServiceManager.ServiceFoldHandlerProvider.getFoldHandler(String)</jent>
<jent id="18" pid="16" type="method" span="358:3:363:3">org.gjt.sp.jedit.ServiceManager.ServiceFoldHandlerProvider.getFoldModes()</jent>
<jtok eid="0" type="block_comment" span="1:1:21:4">/*
 * ServiceManager.java - Handles services.xml files in plugins
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2003 Slava Pestov
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="34:1:89:4">/**
 * A generic way for plugins to provide various API extensions.&lt;p&gt;
 *
 * Services are loaded from files named &lt;code&gt;services.xml&lt;/code&gt; inside the
 * plugin JAR. A service definition file has the following form:
 *
 * &lt;pre&gt;&amp;lt;?xml version="1.0"?&amp;gt;
 *&amp;lt;!DOCTYPE SERVICES SYSTEM "services.dtd"&amp;gt;
 *&amp;lt;SERVICES&amp;gt;
 *    &amp;lt;SERVICE NAME="service name" CLASS="fully qualified class name"&amp;gt;
 *        // BeanShell code evaluated when the sevice is first activated
 *    &amp;lt;/SERVICE&amp;gt;
 *&amp;lt;/SERVICES&amp;gt;&lt;/pre&gt;
 *
 * The following elements are valid:
 *
 * &lt;ul&gt;
 * &lt;li&gt;
 * &lt;code&gt;SERVICES&lt;/code&gt; is the top-level element and refers
 * to the set of services offered by the plugin.
 * &lt;/li&gt;
 * &lt;li&gt;
 * A &lt;code&gt;SERVICE&lt;/code&gt; contains the data for a particular service
 * activation.
 * It has two attributes, both required: &lt;code&gt;NAME&lt;/code&gt; and
 * &lt;code&gt;CLASS&lt;/code&gt;. The &lt;code&gt;CLASS&lt;/code&gt; attribute must be the name of
 * a known sevice type; see below.
 * &lt;/li&gt;
 * &lt;li&gt;
 * A &lt;code&gt;SERVICE&lt;/code&gt; element should the BeanShell code that returns a
 * new instance of the named class. Note that this code can return
 * &lt;code&gt;null&lt;/code&gt;.
 * &lt;/li&gt;
 * &lt;/ul&gt;
 *
 * The jEdit core defines the following service types:
 * &lt;ul&gt;
 * &lt;li&gt;{@link org.gjt.sp.jedit.buffer.FoldHandler}&lt;/li&gt;
 * &lt;li&gt;{@link org.gjt.sp.jedit.io.VFS}&lt;/li&gt;
 * &lt;li&gt;{@link org.gjt.sp.jedit.io.Encoding}&lt;/li&gt;
 * &lt;li&gt;{@link org.gjt.sp.jedit.io.EncodingDetector}&lt;/li&gt;
 * &lt;/ul&gt;
 *
 * Plugins may provide more.&lt;p&gt;
 *
 * To have your plugin accept services, no extra steps are needed other than
 * a piece of code somewhere that calls {@link #getServiceNames(String)} and
 * {@link #getService(String,String)}.
 *
 * @see BeanShell
 * @see PluginJAR
 *
 * @since jEdit 4.2pre1
 * @author Slava Pestov
 * @version $Id: ServiceManager.java 14125 2008-12-01 10:06:24Z kpouer $
 */</jtok>
<jtok eid="1" type="class_name" span="90:14:90:28">ServiceManager</jtok>
<jtok eid="1" type="line_comment" span="92:2:92:29">//{{{ loadServices() method</jtok>
<jtok eid="1" type="block_comment" span="93:2:96:5">/**
	 * Loads a &lt;code&gt;services.xml&lt;/code&gt; file.
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="2" type="method_name" span="97:21:97:33">loadServices</jtok>
<jtok eid="2" type="parameter_type" span="97:34:97:43">PluginJAR</jtok>
<jtok eid="2" type="parameter_name" span="97:44:97:50">plugin</jtok>
<jtok eid="2" type="parameter_type" span="97:52:97:55">URL</jtok>
<jtok eid="2" type="parameter_name" span="97:56:97:59">uri</jtok>
<jtok eid="2" type="parameter_type" span="98:3:98:12">PluginJAR</jtok>
<jtok eid="2" type="parameter_type" span="98:13:98:29">PluginCacheEntry</jtok>
<jtok eid="2" type="parameter_name" span="98:30:98:35">cache</jtok>
<jtok eid="2" type="class_or_interface_ref" span="100:3:100:21">ServiceListHandler</jtok>
<jtok eid="2" type="local_variable_name" span="100:22:100:24">dh</jtok>
<jtok eid="2" type="constructor_call" span="100:31:100:49">ServiceListHandler</jtok>
<jtok eid="2" type="primary_name_ref" span="100:50:100:56">plugin</jtok>
<jtok eid="2" type="primary_name_ref" span="100:57:100:60">uri</jtok>
<jtok eid="2" type="primary_name_ref" span="103:9:103:21">XMLUtilities</jtok>
<jtok eid="2" type="method_call" span="103:22:103:30">parseXML</jtok>
<jtok eid="2" type="primary_name_ref" span="103:31:103:34">uri</jtok>
<jtok eid="2" type="method_call" span="103:35:103:45">openStream</jtok>
<jtok eid="2" type="primary_name_ref" span="103:49:103:51">dh</jtok>
<jtok eid="2" type="primary_name_ref" span="104:8:104:13">cache</jtok>
<jtok eid="2" type="primary_name_ref" span="106:5:106:10">cache</jtok>
<jtok eid="2" type="qualified_name_ref" span="106:11:106:25">cachedServices</jtok>
<jtok eid="2" type="primary_name_ref" span="106:28:106:30">dh</jtok>
<jtok eid="2" type="method_call" span="106:31:106:48">getCachedServices</jtok>
<jtok eid="2" type="class_or_interface_ref" span="109:10:109:21">IOException</jtok>
<jtok eid="2" type="local_variable_name" span="109:22:109:25">ioe</jtok>
<jtok eid="2" type="primary_name_ref" span="111:4:111:7">Log</jtok>
<jtok eid="2" type="method_call" span="111:8:111:11">log</jtok>
<jtok eid="2" type="primary_name_ref" span="111:12:111:15">Log</jtok>
<jtok eid="2" type="qualified_name_ref" span="111:16:111:21">ERROR</jtok>
<jtok eid="2" type="primary_name_ref" span="111:23:111:37">ServiceManager</jtok>
<jtok eid="2" type="primary_name_ref" span="111:45:111:48">ioe</jtok>
<jtok eid="1" type="line_comment" span="113:4:113:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="115:2:115:31">//{{{ unloadServices() method</jtok>
<jtok eid="1" type="block_comment" span="116:2:120:5">/**
	 * Removes all services belonging to the specified plugin.
	 * @param plugin The plugin
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="3" type="method_name" span="121:21:121:35">unloadServices</jtok>
<jtok eid="3" type="parameter_type" span="121:36:121:45">PluginJAR</jtok>
<jtok eid="3" type="parameter_name" span="121:46:121:52">plugin</jtok>
<jtok eid="3" type="class_or_interface_ref" span="123:3:123:11">Iterator</jtok>
<jtok eid="3" type="class_or_interface_ref" span="123:12:123:22">Descriptor</jtok>
<jtok eid="3" type="local_variable_name" span="123:24:123:35">descriptors</jtok>
<jtok eid="3" type="primary_name_ref" span="123:38:123:48">serviceMap</jtok>
<jtok eid="3" type="method_call" span="123:49:123:55">keySet</jtok>
<jtok eid="3" type="method_call" span="123:58:123:66">iterator</jtok>
<jtok eid="3" type="primary_name_ref" span="124:9:124:20">descriptors</jtok>
<jtok eid="3" type="method_call" span="124:21:124:28">hasNext</jtok>
<jtok eid="3" type="class_or_interface_ref" span="126:4:126:14">Descriptor</jtok>
<jtok eid="3" type="local_variable_name" span="126:15:126:16">d</jtok>
<jtok eid="3" type="primary_name_ref" span="126:19:126:30">descriptors</jtok>
<jtok eid="3" type="method_call" span="126:31:126:35">next</jtok>
<jtok eid="3" type="primary_name_ref" span="127:7:127:8">d</jtok>
<jtok eid="3" type="qualified_name_ref" span="127:9:127:15">plugin</jtok>
<jtok eid="3" type="primary_name_ref" span="127:19:127:25">plugin</jtok>
<jtok eid="3" type="primary_name_ref" span="128:5:128:16">descriptors</jtok>
<jtok eid="3" type="method_call" span="128:17:128:23">remove</jtok>
<jtok eid="1" type="line_comment" span="130:4:130:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="132:2:132:32">//{{{ registerService() method</jtok>
<jtok eid="1" type="block_comment" span="133:2:143:5">/**
	 * Registers a service. Plugins should provide a
	 * &lt;code&gt;services.xml&lt;/code&gt; file instead of calling this directly.
	 *
	 * @param clazz The service class
	 * @param name The service name
	 * @param code BeanShell code to create an instance of this
	 * @param plugin The plugin JAR, or null if this is a built-in service
	 *
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="4" type="method_name" span="144:21:144:36">registerService</jtok>
<jtok eid="4" type="parameter_type" span="144:37:144:43">String</jtok>
<jtok eid="4" type="parameter_name" span="144:44:144:49">clazz</jtok>
<jtok eid="4" type="parameter_type" span="144:51:144:57">String</jtok>
<jtok eid="4" type="parameter_name" span="144:58:144:62">name</jtok>
<jtok eid="4" type="parameter_type" span="145:3:145:9">String</jtok>
<jtok eid="4" type="parameter_name" span="145:10:145:14">code</jtok>
<jtok eid="4" type="parameter_type" span="145:16:145:25">PluginJAR</jtok>
<jtok eid="4" type="parameter_name" span="145:26:145:32">plugin</jtok>
<jtok eid="4" type="class_or_interface_ref" span="147:3:147:13">Descriptor</jtok>
<jtok eid="4" type="local_variable_name" span="147:14:147:15">d</jtok>
<jtok eid="4" type="constructor_call" span="147:22:147:32">Descriptor</jtok>
<jtok eid="4" type="primary_name_ref" span="147:33:147:38">clazz</jtok>
<jtok eid="4" type="primary_name_ref" span="147:39:147:43">name</jtok>
<jtok eid="4" type="primary_name_ref" span="147:44:147:48">code</jtok>
<jtok eid="4" type="primary_name_ref" span="147:49:147:55">plugin</jtok>
<jtok eid="4" type="primary_name_ref" span="148:3:148:13">serviceMap</jtok>
<jtok eid="4" type="method_call" span="148:14:148:17">put</jtok>
<jtok eid="4" type="primary_name_ref" span="148:18:148:19">d</jtok>
<jtok eid="4" type="primary_name_ref" span="148:20:148:21">d</jtok>
<jtok eid="1" type="line_comment" span="149:4:149:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="151:2:151:34">//{{{ unregisterService() method</jtok>
<jtok eid="1" type="block_comment" span="152:2:159:5">/**
	 * Unregisters a service.
	 *
	 * @param clazz The service class
	 * @param name The service name
	 *
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="5" type="method_name" span="160:21:160:38">unregisterService</jtok>
<jtok eid="5" type="parameter_type" span="160:39:160:45">String</jtok>
<jtok eid="5" type="parameter_name" span="160:46:160:51">clazz</jtok>
<jtok eid="5" type="parameter_type" span="160:53:160:59">String</jtok>
<jtok eid="5" type="parameter_name" span="160:60:160:64">name</jtok>
<jtok eid="5" type="class_or_interface_ref" span="162:3:162:13">Descriptor</jtok>
<jtok eid="5" type="local_variable_name" span="162:14:162:15">d</jtok>
<jtok eid="5" type="constructor_call" span="162:22:162:32">Descriptor</jtok>
<jtok eid="5" type="primary_name_ref" span="162:33:162:38">clazz</jtok>
<jtok eid="5" type="primary_name_ref" span="162:39:162:43">name</jtok>
<jtok eid="5" type="primary_name_ref" span="163:3:163:13">serviceMap</jtok>
<jtok eid="5" type="method_call" span="163:14:163:20">remove</jtok>
<jtok eid="5" type="primary_name_ref" span="163:21:163:22">d</jtok>
<jtok eid="1" type="line_comment" span="164:4:164:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="166:2:166:32">//{{{ getServiceTypes() method</jtok>
<jtok eid="1" type="block_comment" span="167:2:171:5">/**
	 * Returns all known service class types.
	 *
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="6" type="class_or_interface_ref" span="172:16:172:22">String</jtok>
<jtok eid="6" type="method_name" span="172:25:172:40">getServiceTypes</jtok>
<jtok eid="6" type="class_or_interface_ref" span="174:3:174:6">Set</jtok>
<jtok eid="6" type="class_or_interface_ref" span="174:7:174:13">String</jtok>
<jtok eid="6" type="local_variable_name" span="174:15:174:26">returnValue</jtok>
<jtok eid="6" type="constructor_call" span="174:33:174:40">HashSet</jtok>
<jtok eid="6" type="constructor_call" span="174:41:174:47">String</jtok>
<jtok eid="6" type="class_or_interface_ref" span="176:3:176:6">Set</jtok>
<jtok eid="6" type="class_or_interface_ref" span="176:7:176:17">Descriptor</jtok>
<jtok eid="6" type="local_variable_name" span="176:19:176:25">keySet</jtok>
<jtok eid="6" type="primary_name_ref" span="176:28:176:38">serviceMap</jtok>
<jtok eid="6" type="method_call" span="176:39:176:45">keySet</jtok>
<jtok eid="6" type="class_or_interface_ref" span="177:8:177:18">Descriptor</jtok>
<jtok eid="6" type="local_variable_name" span="177:19:177:20">d</jtok>
<jtok eid="6" type="primary_name_ref" span="177:23:177:29">keySet</jtok>
<jtok eid="6" type="primary_name_ref" span="178:4:178:15">returnValue</jtok>
<jtok eid="6" type="method_call" span="178:16:178:19">add</jtok>
<jtok eid="6" type="primary_name_ref" span="178:20:178:21">d</jtok>
<jtok eid="6" type="qualified_name_ref" span="178:22:178:27">clazz</jtok>
<jtok eid="6" type="primary_name_ref" span="180:10:180:21">returnValue</jtok>
<jtok eid="6" type="method_call" span="180:22:180:29">toArray</jtok>
<jtok eid="6" type="constructor_call" span="181:8:181:14">String</jtok>
<jtok eid="6" type="primary_name_ref" span="181:15:181:26">returnValue</jtok>
<jtok eid="6" type="method_call" span="181:27:181:31">size</jtok>
<jtok eid="1" type="line_comment" span="182:4:182:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="184:2:184:32">//{{{ getServiceNames() method</jtok>
<jtok eid="1" type="block_comment" span="185:2:193:5">/**
	 * Returns the names of all registered services with the given
	 * class. For example, calling this with a parameter of
	 * "org.gjt.sp.jedit.io.VFS" returns all known virtual file
	 * systems.
	 *
	 * @param clazz The class name
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="194:16:194:22">String</jtok>
<jtok eid="7" type="method_name" span="194:25:194:40">getServiceNames</jtok>
<jtok eid="7" type="parameter_type" span="194:41:194:47">String</jtok>
<jtok eid="7" type="parameter_name" span="194:48:194:53">clazz</jtok>
<jtok eid="7" type="class_or_interface_ref" span="196:3:196:7">List</jtok>
<jtok eid="7" type="class_or_interface_ref" span="196:8:196:14">String</jtok>
<jtok eid="7" type="local_variable_name" span="196:16:196:27">returnValue</jtok>
<jtok eid="7" type="constructor_call" span="196:34:196:43">ArrayList</jtok>
<jtok eid="7" type="constructor_call" span="196:44:196:50">String</jtok>
<jtok eid="7" type="class_or_interface_ref" span="198:3:198:6">Set</jtok>
<jtok eid="7" type="class_or_interface_ref" span="198:7:198:17">Descriptor</jtok>
<jtok eid="7" type="local_variable_name" span="198:19:198:25">keySet</jtok>
<jtok eid="7" type="primary_name_ref" span="198:28:198:38">serviceMap</jtok>
<jtok eid="7" type="method_call" span="198:39:198:45">keySet</jtok>
<jtok eid="7" type="class_or_interface_ref" span="199:8:199:18">Descriptor</jtok>
<jtok eid="7" type="local_variable_name" span="199:19:199:20">d</jtok>
<jtok eid="7" type="primary_name_ref" span="199:23:199:29">keySet</jtok>
<jtok eid="7" type="primary_name_ref" span="200:7:200:8">d</jtok>
<jtok eid="7" type="qualified_name_ref" span="200:9:200:14">clazz</jtok>
<jtok eid="7" type="method_call" span="200:15:200:21">equals</jtok>
<jtok eid="7" type="primary_name_ref" span="200:22:200:27">clazz</jtok>
<jtok eid="7" type="primary_name_ref" span="201:5:201:16">returnValue</jtok>
<jtok eid="7" type="method_call" span="201:17:201:20">add</jtok>
<jtok eid="7" type="primary_name_ref" span="201:21:201:22">d</jtok>
<jtok eid="7" type="qualified_name_ref" span="201:23:201:27">name</jtok>
<jtok eid="7" type="primary_name_ref" span="204:10:204:21">returnValue</jtok>
<jtok eid="7" type="method_call" span="204:22:204:29">toArray</jtok>
<jtok eid="7" type="constructor_call" span="205:8:205:14">String</jtok>
<jtok eid="7" type="primary_name_ref" span="205:15:205:26">returnValue</jtok>
<jtok eid="7" type="method_call" span="205:27:205:31">size</jtok>
<jtok eid="1" type="line_comment" span="206:4:206:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="208:2:208:27">//{{{ getService() method</jtok>
<jtok eid="1" type="block_comment" span="209:2:218:5">/**
	 * Returns an instance of the given service. The first time this is
	 * called for a given service, the BeanShell code is evaluated. The
	 * result is cached for future invocations, so in effect services are
	 * singletons.
	 *
	 * @param clazz The service class
	 * @param name The service name
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="219:16:219:22">Object</jtok>
<jtok eid="8" type="method_name" span="219:23:219:33">getService</jtok>
<jtok eid="8" type="parameter_type" span="219:34:219:40">String</jtok>
<jtok eid="8" type="parameter_name" span="219:41:219:46">clazz</jtok>
<jtok eid="8" type="parameter_type" span="219:48:219:54">String</jtok>
<jtok eid="8" type="parameter_name" span="219:55:219:59">name</jtok>
<jtok eid="8" type="line_comment" span="221:3:221:62">// they never taught you this in undergrad computer science</jtok>
<jtok eid="8" type="class_or_interface_ref" span="222:3:222:13">Descriptor</jtok>
<jtok eid="8" type="local_variable_name" span="222:14:222:17">key</jtok>
<jtok eid="8" type="constructor_call" span="222:24:222:34">Descriptor</jtok>
<jtok eid="8" type="primary_name_ref" span="222:35:222:40">clazz</jtok>
<jtok eid="8" type="primary_name_ref" span="222:41:222:45">name</jtok>
<jtok eid="8" type="class_or_interface_ref" span="223:3:223:13">Descriptor</jtok>
<jtok eid="8" type="local_variable_name" span="223:14:223:19">value</jtok>
<jtok eid="8" type="primary_name_ref" span="223:22:223:32">serviceMap</jtok>
<jtok eid="8" type="method_call" span="223:33:223:36">get</jtok>
<jtok eid="8" type="primary_name_ref" span="223:37:223:40">key</jtok>
<jtok eid="8" type="primary_name_ref" span="224:6:224:11">value</jtok>
<jtok eid="8" type="line_comment" span="226:4:226:50">// unknown service - &lt;clazz,name&gt; not in table</jtok>
<jtok eid="8" type="primary_name_ref" span="231:7:231:12">value</jtok>
<jtok eid="8" type="qualified_name_ref" span="231:13:231:17">code</jtok>
<jtok eid="8" type="method_call" span="233:5:233:17">loadServices</jtok>
<jtok eid="8" type="primary_name_ref" span="233:18:233:23">value</jtok>
<jtok eid="8" type="qualified_name_ref" span="233:24:233:30">plugin</jtok>
<jtok eid="8" type="primary_name_ref" span="234:6:234:11">value</jtok>
<jtok eid="8" type="qualified_name_ref" span="234:12:234:18">plugin</jtok>
<jtok eid="8" type="method_call" span="234:19:234:33">getServicesURI</jtok>
<jtok eid="8" type="primary_name_ref" span="236:5:236:10">value</jtok>
<jtok eid="8" type="primary_name_ref" span="236:13:236:23">serviceMap</jtok>
<jtok eid="8" type="method_call" span="236:24:236:27">get</jtok>
<jtok eid="8" type="primary_name_ref" span="236:28:236:31">key</jtok>
<jtok eid="8" type="primary_name_ref" span="238:11:238:16">value</jtok>
<jtok eid="8" type="method_call" span="238:17:238:28">getInstance</jtok>
<jtok eid="1" type="line_comment" span="240:4:240:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="242:2:242:31">//{{{ Package-private members</jtok>
<jtok eid="1" type="line_comment" span="244:2:244:32">//{{{ registerService() method</jtok>
<jtok eid="1" type="block_comment" span="245:2:249:5">/**
	 * Registers a service.
	 *
	 * @since jEdit 4.2pre1
	 */</jtok>
<jtok eid="9" type="method_name" span="250:14:250:29">registerService</jtok>
<jtok eid="9" type="parameter_type" span="250:30:250:40">Descriptor</jtok>
<jtok eid="9" type="parameter_name" span="250:41:250:42">d</jtok>
<jtok eid="9" type="primary_name_ref" span="252:3:252:13">serviceMap</jtok>
<jtok eid="9" type="method_call" span="252:14:252:17">put</jtok>
<jtok eid="9" type="primary_name_ref" span="252:18:252:19">d</jtok>
<jtok eid="9" type="primary_name_ref" span="252:20:252:21">d</jtok>
<jtok eid="1" type="line_comment" span="253:4:253:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="255:2:255:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="257:2:257:23">//{{{ Private members</jtok>
<jtok eid="1" type="class_or_interface_ref" span="258:23:258:26">Map</jtok>
<jtok eid="1" type="class_or_interface_ref" span="258:27:258:37">Descriptor</jtok>
<jtok eid="1" type="class_or_interface_ref" span="258:39:258:49">Descriptor</jtok>
<jtok eid="1" type="field_name" span="258:51:258:61">serviceMap</jtok>
<jtok eid="1" type="constructor_call" span="258:68:258:75">HashMap</jtok>
<jtok eid="1" type="constructor_call" span="258:76:258:86">Descriptor</jtok>
<jtok eid="1" type="constructor_call" span="258:88:258:98">Descriptor</jtok>
<jtok eid="1" type="line_comment" span="259:2:259:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="261:2:261:24">//{{{ Descriptor class</jtok>
<jtok eid="10" type="class_name" span="262:15:262:25">Descriptor</jtok>
<jtok eid="10" type="class_or_interface_ref" span="264:9:264:15">String</jtok>
<jtok eid="10" type="field_name" span="264:16:264:21">clazz</jtok>
<jtok eid="10" type="class_or_interface_ref" span="265:9:265:15">String</jtok>
<jtok eid="10" type="field_name" span="265:16:265:20">name</jtok>
<jtok eid="10" type="class_or_interface_ref" span="266:3:266:9">String</jtok>
<jtok eid="10" type="field_name" span="266:10:266:14">code</jtok>
<jtok eid="10" type="class_or_interface_ref" span="267:3:267:12">PluginJAR</jtok>
<jtok eid="10" type="field_name" span="267:13:267:19">plugin</jtok>
<jtok eid="10" type="class_or_interface_ref" span="268:3:268:9">Object</jtok>
<jtok eid="10" type="field_name" span="268:10:268:18">instance</jtok>
<jtok eid="10" type="field_name" span="269:11:269:25">instanceIsNull</jtok>
<jtok eid="10" type="line_comment" span="271:3:271:42">// this constructor keys the hash table</jtok>
<jtok eid="11" type="method_name" span="272:3:272:13">Descriptor</jtok>
<jtok eid="11" type="parameter_type" span="272:14:272:20">String</jtok>
<jtok eid="11" type="parameter_name" span="272:21:272:26">clazz</jtok>
<jtok eid="11" type="parameter_type" span="272:28:272:34">String</jtok>
<jtok eid="11" type="parameter_name" span="272:35:272:39">name</jtok>
<jtok eid="11" type="qualified_name_ref" span="274:9:274:14">clazz</jtok>
<jtok eid="11" type="primary_name_ref" span="274:17:274:22">clazz</jtok>
<jtok eid="11" type="qualified_name_ref" span="275:9:275:13">name</jtok>
<jtok eid="11" type="primary_name_ref" span="275:17:275:21">name</jtok>
<jtok eid="10" type="line_comment" span="278:3:278:53">// this constructor is the value of the hash table</jtok>
<jtok eid="12" type="method_name" span="279:3:279:13">Descriptor</jtok>
<jtok eid="12" type="parameter_type" span="279:14:279:20">String</jtok>
<jtok eid="12" type="parameter_name" span="279:21:279:26">clazz</jtok>
<jtok eid="12" type="parameter_type" span="279:28:279:34">String</jtok>
<jtok eid="12" type="parameter_name" span="279:35:279:39">name</jtok>
<jtok eid="12" type="parameter_type" span="279:41:279:47">String</jtok>
<jtok eid="12" type="parameter_name" span="279:48:279:52">code</jtok>
<jtok eid="12" type="parameter_type" span="280:4:280:13">PluginJAR</jtok>
<jtok eid="12" type="parameter_name" span="280:14:280:20">plugin</jtok>
<jtok eid="12" type="qualified_name_ref" span="282:9:282:14">clazz</jtok>
<jtok eid="12" type="primary_name_ref" span="282:18:282:23">clazz</jtok>
<jtok eid="12" type="qualified_name_ref" span="283:9:283:13">name</jtok>
<jtok eid="12" type="primary_name_ref" span="283:18:283:22">name</jtok>
<jtok eid="12" type="qualified_name_ref" span="284:9:284:13">code</jtok>
<jtok eid="12" type="primary_name_ref" span="284:18:284:22">code</jtok>
<jtok eid="12" type="qualified_name_ref" span="285:9:285:15">plugin</jtok>
<jtok eid="12" type="primary_name_ref" span="285:18:285:24">plugin</jtok>
<jtok eid="13" type="class_or_interface_ref" span="288:3:288:9">Object</jtok>
<jtok eid="13" type="method_name" span="288:10:288:21">getInstance</jtok>
<jtok eid="13" type="primary_name_ref" span="290:7:290:21">instanceIsNull</jtok>
<jtok eid="13" type="primary_name_ref" span="292:12:292:20">instance</jtok>
<jtok eid="13" type="line_comment" span="294:5:294:26">// lazy instantiation</jtok>
<jtok eid="13" type="primary_name_ref" span="295:5:295:13">instance</jtok>
<jtok eid="13" type="primary_name_ref" span="295:16:295:25">BeanShell</jtok>
<jtok eid="13" type="method_call" span="295:26:295:30">eval</jtok>
<jtok eid="13" type="primary_name_ref" span="296:6:296:15">BeanShell</jtok>
<jtok eid="13" type="method_call" span="296:16:296:28">getNameSpace</jtok>
<jtok eid="13" type="primary_name_ref" span="297:6:297:10">code</jtok>
<jtok eid="13" type="primary_name_ref" span="298:8:298:16">instance</jtok>
<jtok eid="13" type="line_comment" span="300:6:300:44">// avoid re-running script if it gives</jtok>
<jtok eid="13" type="line_comment" span="301:6:301:16">// us null</jtok>
<jtok eid="13" type="primary_name_ref" span="302:6:302:20">instanceIsNull</jtok>
<jtok eid="13" type="primary_name_ref" span="306:11:306:19">instance</jtok>
<jtok eid="14" type="method_name" span="308:14:308:22">hashCode</jtok>
<jtok eid="14" type="primary_name_ref" span="310:11:310:15">name</jtok>
<jtok eid="14" type="method_call" span="310:16:310:24">hashCode</jtok>
<jtok eid="15" type="method_name" span="313:18:313:24">equals</jtok>
<jtok eid="15" type="parameter_type" span="313:25:313:31">Object</jtok>
<jtok eid="15" type="parameter_name" span="313:32:313:33">o</jtok>
<jtok eid="15" type="primary_name_ref" span="315:7:315:8">o</jtok>
<jtok eid="15" type="class_or_interface_ref" span="315:20:315:30">Descriptor</jtok>
<jtok eid="15" type="class_or_interface_ref" span="317:5:317:15">Descriptor</jtok>
<jtok eid="15" type="local_variable_name" span="317:16:317:17">d</jtok>
<jtok eid="15" type="class_or_interface_ref" span="317:21:317:31">Descriptor</jtok>
<jtok eid="15" type="primary_name_ref" span="317:32:317:33">o</jtok>
<jtok eid="15" type="primary_name_ref" span="318:12:318:13">d</jtok>
<jtok eid="15" type="qualified_name_ref" span="318:14:318:19">clazz</jtok>
<jtok eid="15" type="method_call" span="318:20:318:26">equals</jtok>
<jtok eid="15" type="primary_name_ref" span="318:27:318:32">clazz</jtok>
<jtok eid="15" type="primary_name_ref" span="319:9:319:10">d</jtok>
<jtok eid="15" type="qualified_name_ref" span="319:11:319:15">name</jtok>
<jtok eid="15" type="method_call" span="319:16:319:22">equals</jtok>
<jtok eid="15" type="primary_name_ref" span="319:23:319:27">name</jtok>
<jtok eid="1" type="line_comment" span="324:4:324:9">//}}}</jtok>
<jtok eid="1" type="block_comment" span="326:2:330:5">/**
	 * A FoldHandler based on the ServiceManager
	 * @author Matthieu Casanova
	 * @since jEdit 4.3pre10
	 */</jtok>
<jtok eid="16" type="class_name" span="331:22:331:48">ServiceFoldHandlerProvider</jtok>
<jtok eid="16" type="class_or_interface_ref" span="331:60:331:79">FoldHandlerProvider</jtok>
<jtok eid="16" type="block_comment" span="333:3:336:6">/**
		 * The service type. See {@link org.gjt.sp.jedit.ServiceManager}.
		 * @since jEdit 4.3pre10
		 */</jtok>
<jtok eid="16" type="class_or_interface_ref" span="337:23:337:29">String</jtok>
<jtok eid="16" type="field_name" span="337:30:337:37">SERVICE</jtok>
<jtok eid="16" type="string_literal" span="337:40:337:77">"org.gjt.sp.jedit.buffer.FoldHandler"</jtok>
<jtok eid="16" type="block_comment" span="339:3:345:6">/**
		 * Returns the fold handler with the specified name, or null if
		 * there is no registered handler with that name.
		 * @param name The name of the desired fold handler
		 * @return the FoldHandler or null if it doesn't exist
		 * @since jEdit 4.3pre10
		 */</jtok>
<jtok eid="17" type="class_or_interface_ref" span="346:10:346:21">FoldHandler</jtok>
<jtok eid="17" type="method_name" span="346:22:346:36">getFoldHandler</jtok>
<jtok eid="17" type="parameter_type" span="346:37:346:43">String</jtok>
<jtok eid="17" type="parameter_name" span="346:44:346:48">name</jtok>
<jtok eid="17" type="class_or_interface_ref" span="348:4:348:15">FoldHandler</jtok>
<jtok eid="17" type="local_variable_name" span="348:16:348:23">handler</jtok>
<jtok eid="17" type="class_or_interface_ref" span="348:27:348:38">FoldHandler</jtok>
<jtok eid="17" type="method_call" span="348:40:348:50">getService</jtok>
<jtok eid="17" type="primary_name_ref" span="348:51:348:58">SERVICE</jtok>
<jtok eid="17" type="primary_name_ref" span="348:59:348:63">name</jtok>
<jtok eid="17" type="primary_name_ref" span="349:11:349:18">handler</jtok>
<jtok eid="16" type="block_comment" span="352:3:357:6">/**
		 * Returns an array containing the names of all registered fold
		 * handlers.
		 *
		 * @since jEdit 4.3pre10
		 */</jtok>
<jtok eid="18" type="class_or_interface_ref" span="358:10:358:16">String</jtok>
<jtok eid="18" type="method_name" span="358:19:358:31">getFoldModes</jtok>
<jtok eid="18" type="class_or_interface_ref" span="360:4:360:10">String</jtok>
<jtok eid="18" type="local_variable_name" span="360:13:360:21">handlers</jtok>
<jtok eid="18" type="method_call" span="360:24:360:39">getServiceNames</jtok>
<jtok eid="18" type="primary_name_ref" span="360:40:360:47">SERVICE</jtok>
<jtok eid="18" type="primary_name_ref" span="361:4:361:10">Arrays</jtok>
<jtok eid="18" type="method_call" span="361:11:361:15">sort</jtok>
<jtok eid="18" type="primary_name_ref" span="361:16:361:24">handlers</jtok>
<jtok eid="18" type="constructor_call" span="361:29:361:46">StandardUtilities</jtok>
<jtok eid="18" type="constructor_call" span="361:47:361:60">StringCompare</jtok>
<jtok eid="18" type="constructor_call" span="361:61:361:67">String</jtok>
<jtok eid="18" type="primary_name_ref" span="362:11:362:19">handlers</jtok>
</jdoc>