<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.SettingsXML" jls="java5">
<jent id="0" type="file" span="0:0:193:2">Source/jEdit/org/gjt/sp/jedit/SettingsXML.java</jent>
<jent id="1" pid="0" type="class" span="46:1:193:1">org.gjt.sp.jedit.SettingsXML</jent>
<jent id="2" pid="1" type="class" span="55:2:116:2">org.gjt.sp.jedit.SettingsXML.Saver</jent>
<jent id="3" pid="2" type="method" span="62:3:65:3">org.gjt.sp.jedit.SettingsXML.Saver.writeXMLDeclaration()</jent>
<jent id="4" pid="2" type="method" span="72:3:80:3">org.gjt.sp.jedit.SettingsXML.Saver.writeXMLDeclaration(String)</jent>
<jent id="5" pid="2" type="method" span="86:3:93:3">org.gjt.sp.jedit.SettingsXML.Saver.finish()</jent>
<jent id="6" pid="2" type="method" span="100:3:104:3">org.gjt.sp.jedit.SettingsXML.Saver.Saver()</jent>
<jent id="7" pid="2" type="method" span="107:3:113:3">org.gjt.sp.jedit.SettingsXML.Saver.Saver(File)</jent>
<jent id="8" pid="1" type="method" span="126:2:131:2">org.gjt.sp.jedit.SettingsXML.SettingsXML(String,String)</jent>
<jent id="9" pid="1" type="method" span="133:2:136:2">org.gjt.sp.jedit.SettingsXML.SettingsXML(File)</jent>
<jent id="10" pid="1" type="method" span="142:2:145:2">org.gjt.sp.jedit.SettingsXML.fileExists()</jent>
<jent id="11" pid="1" type="method" span="153:2:157:2">org.gjt.sp.jedit.SettingsXML.load(DefaultHandler)</jent>
<jent id="12" pid="1" type="method" span="163:2:166:2">org.gjt.sp.jedit.SettingsXML.openSaver()</jent>
<jent id="13" pid="1" type="method" span="174:2:178:2">org.gjt.sp.jedit.SettingsXML.hasChangedOnDisk()</jent>
<jent id="14" pid="1" type="method" span="184:2:187:2">org.gjt.sp.jedit.SettingsXML.toString()</jent>
<jtok eid="0" type="block_comment" span="1:1:20:4">/*
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2007 Kazutoshi Satoda
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="line_comment" span="24:1:24:14">//{{{ Imports</jtok>
<jtok eid="0" type="line_comment" span="35:1:35:6">//}}}</jtok>
<jtok eid="0" type="block_comment" span="37:1:45:4">/**
 * A XML file in the settings directory.
 * This class provides some common operations to load/save settings
 * from/into a XML file.
 *   - Proper encoding and XML declaration.
 *   - Two stage save.
 *   - Making backup on each save.
 *   - Detection of change on disk.
 */</jtok>
<jtok eid="1" type="class_name" span="46:14:46:25">SettingsXML</jtok>
<jtok eid="1" type="line_comment" span="48:2:48:19">//{{{ Saver class</jtok>
<jtok eid="1" type="block_comment" span="49:2:54:5">/**
	 * A Writer to write XML for saving.
	 * The real settings file is not changed until the finish()
	 * method succeeds, in which case the previous settings file is
	 * backuped.
	 */</jtok>
<jtok eid="2" type="class_name" span="55:15:55:20">Saver</jtok>
<jtok eid="2" type="class_or_interface_ref" span="55:29:55:43">BufferedWriter</jtok>
<jtok eid="2" type="line_comment" span="57:3:57:37">//{{{ writeXMLDeclaration() method</jtok>
<jtok eid="2" type="block_comment" span="58:3:61:6">/**
		 * Write the XML 1.0 declaration.
		 * This should be the first output.
		 */</jtok>
<jtok eid="3" type="method_name" span="62:15:62:34">writeXMLDeclaration</jtok>
<jtok eid="3" type="throws" span="62:44:62:55">IOException</jtok>
<jtok eid="3" type="method_call" span="64:4:64:23">writeXMLDeclaration</jtok>
<jtok eid="3" type="string_literal" span="64:24:64:29">"1.0"</jtok>
<jtok eid="2" type="line_comment" span="65:5:65:10">//}}}</jtok>
<jtok eid="2" type="line_comment" span="67:3:67:37">//{{{ writeXMLDeclaration() method</jtok>
<jtok eid="2" type="block_comment" span="68:3:71:6">/**
		 * Write the XML declaration of a specific version.
		 * This should be the first output.
		 */</jtok>
<jtok eid="4" type="method_name" span="72:15:72:34">writeXMLDeclaration</jtok>
<jtok eid="4" type="parameter_type" span="72:35:72:41">String</jtok>
<jtok eid="4" type="parameter_name" span="72:42:72:49">version</jtok>
<jtok eid="4" type="throws" span="73:11:73:22">IOException</jtok>
<jtok eid="4" type="method_call" span="75:4:75:9">write</jtok>
<jtok eid="4" type="string_literal" span="75:10:75:17">"&lt;?xml"</jtok>
<jtok eid="4" type="string_literal" span="76:7:76:20">" version=\""</jtok>
<jtok eid="4" type="primary_name_ref" span="76:23:76:30">version</jtok>
<jtok eid="4" type="string_literal" span="76:33:76:37">"\""</jtok>
<jtok eid="4" type="string_literal" span="77:7:77:21">" encoding=\""</jtok>
<jtok eid="4" type="primary_name_ref" span="77:24:77:32">encoding</jtok>
<jtok eid="4" type="string_literal" span="77:35:77:39">"\""</jtok>
<jtok eid="4" type="string_literal" span="78:7:78:12">" ?&gt;"</jtok>
<jtok eid="4" type="method_call" span="79:4:79:11">newLine</jtok>
<jtok eid="2" type="line_comment" span="80:5:80:10">//}}}</jtok>
<jtok eid="2" type="line_comment" span="82:3:82:24">//{{{ finish() method</jtok>
<jtok eid="2" type="block_comment" span="83:3:85:6">/**
		 * Perform the final step of saving.
		 */</jtok>
<jtok eid="5" type="method_name" span="86:15:86:21">finish</jtok>
<jtok eid="5" type="throws" span="86:31:86:42">IOException</jtok>
<jtok eid="5" type="method_call" span="88:4:88:9">close</jtok>
<jtok eid="5" type="primary_name_ref" span="89:4:89:9">jEdit</jtok>
<jtok eid="5" type="method_call" span="89:10:89:28">backupSettingsFile</jtok>
<jtok eid="5" type="primary_name_ref" span="89:29:89:33">file</jtok>
<jtok eid="5" type="primary_name_ref" span="90:4:90:8">file</jtok>
<jtok eid="5" type="method_call" span="90:9:90:15">delete</jtok>
<jtok eid="5" type="primary_name_ref" span="91:4:91:20">twoStageSaveFile</jtok>
<jtok eid="5" type="method_call" span="91:21:91:29">renameTo</jtok>
<jtok eid="5" type="primary_name_ref" span="91:30:91:34">file</jtok>
<jtok eid="5" type="primary_name_ref" span="92:4:92:21">knownLastModified</jtok>
<jtok eid="5" type="primary_name_ref" span="92:24:92:28">file</jtok>
<jtok eid="5" type="method_call" span="92:29:92:41">lastModified</jtok>
<jtok eid="2" type="line_comment" span="93:5:93:10">//}}}</jtok>
<jtok eid="2" type="line_comment" span="95:3:95:24">//{{{ Private members</jtok>
<jtok eid="2" type="class_or_interface_ref" span="96:11:96:15">File</jtok>
<jtok eid="2" type="field_name" span="96:16:96:32">twoStageSaveFile</jtok>
<jtok eid="2" type="class_or_interface_ref" span="97:24:97:30">String</jtok>
<jtok eid="2" type="field_name" span="97:31:97:39">encoding</jtok>
<jtok eid="2" type="string_literal" span="97:42:97:49">"UTF-8"</jtok>
<jtok eid="2" type="line_comment" span="99:3:99:43">// Only used by SettingsXML#opneSaver().</jtok>
<jtok eid="6" type="method_name" span="100:3:100:8">Saver</jtok>
<jtok eid="6" type="method_call" span="100:18:100:29">IOException</jtok>
<jtok eid="6" type="constructor_call" span="102:13:102:17">File</jtok>
<jtok eid="6" type="primary_name_ref" span="102:18:102:22">file</jtok>
<jtok eid="6" type="method_call" span="102:23:102:36">getParentFile</jtok>
<jtok eid="6" type="string_literal" span="103:5:103:8">"#"</jtok>
<jtok eid="6" type="primary_name_ref" span="103:11:103:15">file</jtok>
<jtok eid="6" type="method_call" span="103:16:103:23">getName</jtok>
<jtok eid="6" type="string_literal" span="103:28:103:36">"#save#"</jtok>
<jtok eid="2" type="line_comment" span="106:3:106:48">// A workaround for a restriction of super().</jtok>
<jtok eid="7" type="method_name" span="107:11:107:16">Saver</jtok>
<jtok eid="7" type="parameter_type" span="107:17:107:21">File</jtok>
<jtok eid="7" type="parameter_name" span="107:22:107:38">twoStageSaveFile</jtok>
<jtok eid="7" type="method_call" span="107:47:107:58">IOException</jtok>
<jtok eid="7" type="constructor_call" span="109:14:109:32">OutputStreamWriter</jtok>
<jtok eid="7" type="constructor_call" span="110:9:110:25">FileOutputStream</jtok>
<jtok eid="7" type="primary_name_ref" span="110:26:110:42">twoStageSaveFile</jtok>
<jtok eid="7" type="primary_name_ref" span="111:7:111:15">encoding</jtok>
<jtok eid="7" type="qualified_name_ref" span="112:9:112:25">twoStageSaveFile</jtok>
<jtok eid="7" type="primary_name_ref" span="112:28:112:44">twoStageSaveFile</jtok>
<jtok eid="2" type="line_comment" span="115:3:115:8">//}}}</jtok>
<jtok eid="1" type="line_comment" span="116:4:116:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="118:2:118:19">//{{{ Constructor</jtok>
<jtok eid="1" type="block_comment" span="119:2:125:5">/**
	 * Construct a SettingsXML with specific location and name.
	 * @param settingsDirectory
	 * 	The settings directory of jedit
	 * @param name
	 * 	The file name will be (name + ".xml")
	 */</jtok>
<jtok eid="8" type="method_name" span="126:9:126:20">SettingsXML</jtok>
<jtok eid="8" type="parameter_type" span="126:21:126:27">String</jtok>
<jtok eid="8" type="parameter_name" span="126:28:126:45">settingsDirectory</jtok>
<jtok eid="8" type="parameter_type" span="126:47:126:53">String</jtok>
<jtok eid="8" type="parameter_name" span="126:54:126:58">name</jtok>
<jtok eid="8" type="class_or_interface_ref" span="128:3:128:9">String</jtok>
<jtok eid="8" type="local_variable_name" span="128:10:128:18">filename</jtok>
<jtok eid="8" type="primary_name_ref" span="128:21:128:25">name</jtok>
<jtok eid="8" type="string_literal" span="128:28:128:34">".xml"</jtok>
<jtok eid="8" type="primary_name_ref" span="129:3:129:7">file</jtok>
<jtok eid="8" type="constructor_call" span="129:14:129:18">File</jtok>
<jtok eid="8" type="primary_name_ref" span="129:19:129:32">MiscUtilities</jtok>
<jtok eid="8" type="method_call" span="129:33:129:46">constructPath</jtok>
<jtok eid="8" type="primary_name_ref" span="130:4:130:21">settingsDirectory</jtok>
<jtok eid="8" type="primary_name_ref" span="130:23:130:31">filename</jtok>
<jtok eid="1" type="line_comment" span="131:4:131:9">//}}}</jtok>
<jtok eid="9" type="method_name" span="133:9:133:20">SettingsXML</jtok>
<jtok eid="9" type="parameter_type" span="133:21:133:25">File</jtok>
<jtok eid="9" type="parameter_name" span="133:26:133:27">f</jtok>
<jtok eid="9" type="primary_name_ref" span="135:3:135:7">file</jtok>
<jtok eid="9" type="primary_name_ref" span="135:10:135:11">f</jtok>
<jtok eid="1" type="line_comment" span="138:2:138:26">//{{{ fileExits() method</jtok>
<jtok eid="1" type="block_comment" span="139:2:141:5">/**
	 * Returns true if the file exists.
	 */</jtok>
<jtok eid="10" type="method_name" span="142:17:142:27">fileExists</jtok>
<jtok eid="10" type="primary_name_ref" span="144:10:144:14">file</jtok>
<jtok eid="10" type="method_call" span="144:15:144:21">exists</jtok>
<jtok eid="1" type="line_comment" span="145:4:145:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="147:2:147:21">//{{{ load() method</jtok>
<jtok eid="1" type="block_comment" span="148:2:152:5">/**
	 * Parse the XML file to load.
	 * @param handler
	 * 	The handler to receive SAX notifications.
	 */</jtok>
<jtok eid="11" type="method_name" span="153:14:153:18">load</jtok>
<jtok eid="11" type="parameter_type" span="153:19:153:33">DefaultHandler</jtok>
<jtok eid="11" type="parameter_name" span="153:34:153:41">handler</jtok>
<jtok eid="11" type="throws" span="153:50:153:61">IOException</jtok>
<jtok eid="11" type="primary_name_ref" span="155:3:155:15">XMLUtilities</jtok>
<jtok eid="11" type="method_call" span="155:16:155:24">parseXML</jtok>
<jtok eid="11" type="constructor_call" span="155:29:155:44">FileInputStream</jtok>
<jtok eid="11" type="primary_name_ref" span="155:45:155:49">file</jtok>
<jtok eid="11" type="primary_name_ref" span="155:52:155:59">handler</jtok>
<jtok eid="11" type="primary_name_ref" span="156:3:156:20">knownLastModified</jtok>
<jtok eid="11" type="primary_name_ref" span="156:23:156:27">file</jtok>
<jtok eid="11" type="method_call" span="156:28:156:40">lastModified</jtok>
<jtok eid="1" type="line_comment" span="157:4:157:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="159:2:159:26">//{{{ openSaver() method</jtok>
<jtok eid="1" type="block_comment" span="160:2:162:5">/**
	 * Open the file to save in XML.
	 */</jtok>
<jtok eid="12" type="class_or_interface_ref" span="163:9:163:14">Saver</jtok>
<jtok eid="12" type="method_name" span="163:15:163:24">openSaver</jtok>
<jtok eid="12" type="throws" span="163:34:163:45">IOException</jtok>
<jtok eid="12" type="constructor_call" span="165:14:165:19">Saver</jtok>
<jtok eid="1" type="line_comment" span="166:4:166:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="168:2:168:33">//{{{ hasChangedOnDisk() method</jtok>
<jtok eid="1" type="block_comment" span="169:2:173:5">/**
	 * Returns true if the file has been changed on disk.
	 * This is based on the last modified time at the last saving
	 * or loading.
	 */</jtok>
<jtok eid="13" type="method_name" span="174:17:174:33">hasChangedOnDisk</jtok>
<jtok eid="13" type="primary_name_ref" span="176:10:176:14">file</jtok>
<jtok eid="13" type="method_call" span="176:15:176:21">exists</jtok>
<jtok eid="13" type="primary_name_ref" span="177:8:177:12">file</jtok>
<jtok eid="13" type="method_call" span="177:13:177:25">lastModified</jtok>
<jtok eid="13" type="primary_name_ref" span="177:31:177:48">knownLastModified</jtok>
<jtok eid="1" type="line_comment" span="178:4:178:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="180:2:180:25">//{{{ toString() method</jtok>
<jtok eid="1" type="block_comment" span="181:2:183:5">/**
	 * Returns the file's path.
	 */</jtok>
<jtok eid="14" type="class_or_interface_ref" span="184:9:184:15">String</jtok>
<jtok eid="14" type="method_name" span="184:16:184:24">toString</jtok>
<jtok eid="14" type="primary_name_ref" span="186:10:186:14">file</jtok>
<jtok eid="14" type="method_call" span="186:15:186:23">toString</jtok>
<jtok eid="1" type="line_comment" span="187:4:187:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="189:2:189:23">//{{{ Private members</jtok>
<jtok eid="1" type="class_or_interface_ref" span="190:10:190:14">File</jtok>
<jtok eid="1" type="field_name" span="190:15:190:19">file</jtok>
<jtok eid="1" type="field_name" span="191:15:191:32">knownLastModified</jtok>
<jtok eid="1" type="line_comment" span="192:2:192:7">//}}}</jtok>
</jdoc>