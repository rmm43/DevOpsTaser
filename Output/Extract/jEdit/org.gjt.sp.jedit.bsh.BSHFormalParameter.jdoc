<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHFormalParameter" jls="java5">
<jent id="0" type="file" span="0:0:74:1">Source/jEdit/org/gjt/sp/jedit/bsh/BSHFormalParameter.java</jent>
<jent id="1" pid="0" type="class" span="40:1:73:1">org.gjt.sp.jedit.bsh.BSHFormalParameter</jent>
<jent id="2" pid="1" type="method" span="47:2:47:42">org.gjt.sp.jedit.bsh.BSHFormalParameter.BSHFormalParameter(int)</jent>
<jent id="3" pid="1" type="method" span="49:2:58:2">org.gjt.sp.jedit.bsh.BSHFormalParameter.getTypeDescriptor(CallStack,Interpreter,String)</jent>
<jent id="4" pid="1" type="method" span="63:2:72:2">org.gjt.sp.jedit.bsh.BSHFormalParameter.eval(CallStack,Interpreter)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="0" type="block_comment" span="36:1:39:3">/**
	A formal parameter declaration.
	For loose variable declaration type is null.
*/</jtok>
<jtok eid="1" type="class_name" span="40:7:40:25">BSHFormalParameter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="40:34:40:44">SimpleNode</jtok>
<jtok eid="1" type="class_or_interface_ref" span="42:22:42:27">Class</jtok>
<jtok eid="1" type="field_name" span="42:28:42:35">UNTYPED</jtok>
<jtok eid="1" type="class_or_interface_ref" span="43:9:43:15">String</jtok>
<jtok eid="1" type="field_name" span="43:16:43:20">name</jtok>
<jtok eid="1" type="line_comment" span="44:2:44:32">// unsafe caching of type here</jtok>
<jtok eid="1" type="class_or_interface_ref" span="45:9:45:14">Class</jtok>
<jtok eid="1" type="field_name" span="45:15:45:19">type</jtok>
<jtok eid="2" type="method_name" span="47:2:47:20">BSHFormalParameter</jtok>
<jtok eid="2" type="parameter_name" span="47:25:47:27">id</jtok>
<jtok eid="2" type="primary_name_ref" span="47:37:47:39">id</jtok>
<jtok eid="3" type="class_or_interface_ref" span="49:9:49:15">String</jtok>
<jtok eid="3" type="method_name" span="49:16:49:33">getTypeDescriptor</jtok>
<jtok eid="3" type="parameter_type" span="50:3:50:12">CallStack</jtok>
<jtok eid="3" type="parameter_name" span="50:13:50:22">callstack</jtok>
<jtok eid="3" type="parameter_type" span="50:24:50:35">Interpreter</jtok>
<jtok eid="3" type="parameter_name" span="50:36:50:47">interpreter</jtok>
<jtok eid="3" type="parameter_type" span="50:49:50:55">String</jtok>
<jtok eid="3" type="parameter_name" span="50:56:50:70">defaultPackage</jtok>
<jtok eid="3" type="method_call" span="52:8:52:25">jjtGetNumChildren</jtok>
<jtok eid="3" type="class_or_interface_ref" span="53:13:53:20">BSHType</jtok>
<jtok eid="3" type="method_call" span="53:21:53:32">jjtGetChild</jtok>
<jtok eid="3" type="method_call" span="53:37:53:54">getTypeDescriptor</jtok>
<jtok eid="3" type="primary_name_ref" span="54:5:54:14">callstack</jtok>
<jtok eid="3" type="primary_name_ref" span="54:16:54:27">interpreter</jtok>
<jtok eid="3" type="primary_name_ref" span="54:29:54:43">defaultPackage</jtok>
<jtok eid="3" type="line_comment" span="56:4:56:38">// this will probably not get used</jtok>
<jtok eid="3" type="string_literal" span="57:11:57:31">"Ljava/lang/Object;"</jtok>
<jtok eid="3" type="line_comment" span="57:34:57:48">// Object type</jtok>
<jtok eid="1" type="block_comment" span="60:2:62:4">/**
		Evaluate the type.
	*/</jtok>
<jtok eid="4" type="class_or_interface_ref" span="63:9:63:15">Object</jtok>
<jtok eid="4" type="method_name" span="63:16:63:20">eval</jtok>
<jtok eid="4" type="parameter_type" span="63:22:63:31">CallStack</jtok>
<jtok eid="4" type="parameter_name" span="63:32:63:41">callstack</jtok>
<jtok eid="4" type="parameter_type" span="63:43:63:54">Interpreter</jtok>
<jtok eid="4" type="parameter_name" span="63:55:63:66">interpreter</jtok>
<jtok eid="4" type="throws" span="64:10:64:19">EvalError</jtok>
<jtok eid="4" type="method_call" span="66:8:66:25">jjtGetNumChildren</jtok>
<jtok eid="4" type="primary_name_ref" span="67:4:67:8">type</jtok>
<jtok eid="4" type="class_or_interface_ref" span="67:13:67:20">BSHType</jtok>
<jtok eid="4" type="method_call" span="67:21:67:32">jjtGetChild</jtok>
<jtok eid="4" type="method_call" span="67:37:67:44">getType</jtok>
<jtok eid="4" type="primary_name_ref" span="67:46:67:55">callstack</jtok>
<jtok eid="4" type="primary_name_ref" span="67:57:67:68">interpreter</jtok>
<jtok eid="4" type="primary_name_ref" span="69:4:69:8">type</jtok>
<jtok eid="4" type="primary_name_ref" span="69:11:69:18">UNTYPED</jtok>
<jtok eid="4" type="primary_name_ref" span="71:10:71:14">type</jtok>
</jdoc>