<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHFormalParameters" jls="java5">
<jent id="0" type="file" span="0:0:115:1">Source/jEdit/org/gjt/sp/jedit/bsh/BSHFormalParameters.java</jent>
<jent id="1" pid="0" type="class" span="36:1:114:1">org.gjt.sp.jedit.bsh.BSHFormalParameters</jent>
<jent id="2" pid="1" type="method" span="47:2:47:43">org.gjt.sp.jedit.bsh.BSHFormalParameters.BSHFormalParameters(int)</jent>
<jent id="3" pid="1" type="method" span="49:2:64:2">org.gjt.sp.jedit.bsh.BSHFormalParameters.insureParsed()</jent>
<jent id="4" pid="1" type="method" span="66:2:69:2">org.gjt.sp.jedit.bsh.BSHFormalParameters.getParamNames()</jent>
<jent id="5" pid="1" type="method" span="71:2:89:2">org.gjt.sp.jedit.bsh.BSHFormalParameters.getTypeDescriptors(CallStack,Interpreter,String)</jent>
<jent id="6" pid="1" type="method" span="95:2:113:2">org.gjt.sp.jedit.bsh.BSHFormalParameters.eval(CallStack,Interpreter)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="1" type="class_name" span="36:7:36:26">BSHFormalParameters</jtok>
<jtok eid="1" type="class_or_interface_ref" span="36:35:36:45">SimpleNode</jtok>
<jtok eid="1" type="class_or_interface_ref" span="38:10:38:16">String</jtok>
<jtok eid="1" type="field_name" span="38:20:38:30">paramNames</jtok>
<jtok eid="1" type="block_comment" span="39:2:41:4">/**
		For loose type parameters the paramTypes are null.
	*/</jtok>
<jtok eid="1" type="line_comment" span="42:2:42:28">// unsafe caching of types</jtok>
<jtok eid="1" type="class_or_interface_ref" span="43:2:43:7">Class</jtok>
<jtok eid="1" type="field_name" span="43:11:43:21">paramTypes</jtok>
<jtok eid="1" type="field_name" span="44:6:44:13">numArgs</jtok>
<jtok eid="1" type="class_or_interface_ref" span="45:2:45:8">String</jtok>
<jtok eid="1" type="field_name" span="45:12:45:27">typeDescriptors</jtok>
<jtok eid="2" type="method_name" span="47:2:47:21">BSHFormalParameters</jtok>
<jtok eid="2" type="parameter_name" span="47:26:47:28">id</jtok>
<jtok eid="2" type="primary_name_ref" span="47:38:47:40">id</jtok>
<jtok eid="3" type="method_name" span="49:7:49:19">insureParsed</jtok>
<jtok eid="3" type="primary_name_ref" span="51:8:51:18">paramNames</jtok>
<jtok eid="3" type="qualified_name_ref" span="54:8:54:15">numArgs</jtok>
<jtok eid="3" type="method_call" span="54:18:54:35">jjtGetNumChildren</jtok>
<jtok eid="3" type="class_or_interface_ref" span="55:3:55:9">String</jtok>
<jtok eid="3" type="local_variable_name" span="55:13:55:23">paramNames</jtok>
<jtok eid="3" type="constructor_call" span="55:30:55:36">String</jtok>
<jtok eid="3" type="primary_name_ref" span="55:37:55:44">numArgs</jtok>
<jtok eid="3" type="local_variable_name" span="57:11:57:12">i</jtok>
<jtok eid="3" type="primary_name_ref" span="57:16:57:17">i</jtok>
<jtok eid="3" type="primary_name_ref" span="57:18:57:25">numArgs</jtok>
<jtok eid="3" type="primary_name_ref" span="57:27:57:28">i</jtok>
<jtok eid="3" type="class_or_interface_ref" span="59:4:59:22">BSHFormalParameter</jtok>
<jtok eid="3" type="local_variable_name" span="59:23:59:28">param</jtok>
<jtok eid="3" type="class_or_interface_ref" span="59:32:59:50">BSHFormalParameter</jtok>
<jtok eid="3" type="method_call" span="59:51:59:62">jjtGetChild</jtok>
<jtok eid="3" type="primary_name_ref" span="59:63:59:64">i</jtok>
<jtok eid="3" type="primary_name_ref" span="60:4:60:14">paramNames</jtok>
<jtok eid="3" type="primary_name_ref" span="60:15:60:16">i</jtok>
<jtok eid="3" type="primary_name_ref" span="60:20:60:25">param</jtok>
<jtok eid="3" type="qualified_name_ref" span="60:26:60:30">name</jtok>
<jtok eid="3" type="qualified_name_ref" span="63:8:63:18">paramNames</jtok>
<jtok eid="3" type="primary_name_ref" span="63:21:63:31">paramNames</jtok>
<jtok eid="4" type="class_or_interface_ref" span="66:9:66:15">String</jtok>
<jtok eid="4" type="method_name" span="66:19:66:32">getParamNames</jtok>
<jtok eid="4" type="method_call" span="67:3:67:15">insureParsed</jtok>
<jtok eid="4" type="primary_name_ref" span="68:10:68:20">paramNames</jtok>
<jtok eid="5" type="class_or_interface_ref" span="71:9:71:15">String</jtok>
<jtok eid="5" type="method_name" span="71:19:71:37">getTypeDescriptors</jtok>
<jtok eid="5" type="parameter_type" span="72:3:72:12">CallStack</jtok>
<jtok eid="5" type="parameter_name" span="72:13:72:22">callstack</jtok>
<jtok eid="5" type="parameter_type" span="72:24:72:35">Interpreter</jtok>
<jtok eid="5" type="parameter_name" span="72:36:72:47">interpreter</jtok>
<jtok eid="5" type="parameter_type" span="72:49:72:55">String</jtok>
<jtok eid="5" type="parameter_name" span="72:56:72:70">defaultPackage</jtok>
<jtok eid="5" type="primary_name_ref" span="74:8:74:23">typeDescriptors</jtok>
<jtok eid="5" type="primary_name_ref" span="75:11:75:26">typeDescriptors</jtok>
<jtok eid="5" type="method_call" span="77:3:77:15">insureParsed</jtok>
<jtok eid="5" type="class_or_interface_ref" span="78:3:78:9">String</jtok>
<jtok eid="5" type="local_variable_name" span="78:13:78:21">typeDesc</jtok>
<jtok eid="5" type="constructor_call" span="78:28:78:34">String</jtok>
<jtok eid="5" type="primary_name_ref" span="78:35:78:42">numArgs</jtok>
<jtok eid="5" type="local_variable_name" span="80:11:80:12">i</jtok>
<jtok eid="5" type="primary_name_ref" span="80:16:80:17">i</jtok>
<jtok eid="5" type="primary_name_ref" span="80:18:80:25">numArgs</jtok>
<jtok eid="5" type="primary_name_ref" span="80:27:80:28">i</jtok>
<jtok eid="5" type="class_or_interface_ref" span="82:4:82:22">BSHFormalParameter</jtok>
<jtok eid="5" type="local_variable_name" span="82:23:82:28">param</jtok>
<jtok eid="5" type="class_or_interface_ref" span="82:32:82:50">BSHFormalParameter</jtok>
<jtok eid="5" type="method_call" span="82:51:82:62">jjtGetChild</jtok>
<jtok eid="5" type="primary_name_ref" span="82:63:82:64">i</jtok>
<jtok eid="5" type="primary_name_ref" span="83:4:83:12">typeDesc</jtok>
<jtok eid="5" type="primary_name_ref" span="83:13:83:14">i</jtok>
<jtok eid="5" type="primary_name_ref" span="83:18:83:23">param</jtok>
<jtok eid="5" type="method_call" span="83:24:83:41">getTypeDescriptor</jtok>
<jtok eid="5" type="primary_name_ref" span="84:5:84:14">callstack</jtok>
<jtok eid="5" type="primary_name_ref" span="84:16:84:27">interpreter</jtok>
<jtok eid="5" type="primary_name_ref" span="84:29:84:43">defaultPackage</jtok>
<jtok eid="5" type="qualified_name_ref" span="87:8:87:23">typeDescriptors</jtok>
<jtok eid="5" type="primary_name_ref" span="87:26:87:34">typeDesc</jtok>
<jtok eid="5" type="primary_name_ref" span="88:10:88:18">typeDesc</jtok>
<jtok eid="1" type="block_comment" span="91:2:94:4">/**
		Evaluate the types.  
		Note that type resolution does not require the interpreter instance.
	*/</jtok>
<jtok eid="6" type="class_or_interface_ref" span="95:9:95:15">Object</jtok>
<jtok eid="6" type="method_name" span="95:16:95:20">eval</jtok>
<jtok eid="6" type="parameter_type" span="95:22:95:31">CallStack</jtok>
<jtok eid="6" type="parameter_name" span="95:32:95:41">callstack</jtok>
<jtok eid="6" type="parameter_type" span="95:43:95:54">Interpreter</jtok>
<jtok eid="6" type="parameter_name" span="95:55:95:66">interpreter</jtok>
<jtok eid="6" type="throws" span="96:10:96:19">EvalError</jtok>
<jtok eid="6" type="primary_name_ref" span="98:8:98:18">paramTypes</jtok>
<jtok eid="6" type="primary_name_ref" span="99:11:99:21">paramTypes</jtok>
<jtok eid="6" type="method_call" span="101:3:101:15">insureParsed</jtok>
<jtok eid="6" type="class_or_interface_ref" span="102:3:102:8">Class</jtok>
<jtok eid="6" type="local_variable_name" span="102:12:102:22">paramTypes</jtok>
<jtok eid="6" type="constructor_call" span="102:29:102:34">Class</jtok>
<jtok eid="6" type="primary_name_ref" span="102:35:102:42">numArgs</jtok>
<jtok eid="6" type="local_variable_name" span="104:11:104:12">i</jtok>
<jtok eid="6" type="primary_name_ref" span="104:16:104:17">i</jtok>
<jtok eid="6" type="primary_name_ref" span="104:18:104:25">numArgs</jtok>
<jtok eid="6" type="primary_name_ref" span="104:27:104:28">i</jtok>
<jtok eid="6" type="class_or_interface_ref" span="106:4:106:22">BSHFormalParameter</jtok>
<jtok eid="6" type="local_variable_name" span="106:23:106:28">param</jtok>
<jtok eid="6" type="class_or_interface_ref" span="106:32:106:50">BSHFormalParameter</jtok>
<jtok eid="6" type="method_call" span="106:51:106:62">jjtGetChild</jtok>
<jtok eid="6" type="primary_name_ref" span="106:63:106:64">i</jtok>
<jtok eid="6" type="primary_name_ref" span="107:4:107:14">paramTypes</jtok>
<jtok eid="6" type="primary_name_ref" span="107:15:107:16">i</jtok>
<jtok eid="6" type="class_or_interface_ref" span="107:21:107:26">Class</jtok>
<jtok eid="6" type="primary_name_ref" span="107:27:107:32">param</jtok>
<jtok eid="6" type="method_call" span="107:33:107:37">eval</jtok>
<jtok eid="6" type="primary_name_ref" span="107:39:107:48">callstack</jtok>
<jtok eid="6" type="primary_name_ref" span="107:50:107:61">interpreter</jtok>
<jtok eid="6" type="qualified_name_ref" span="110:8:110:18">paramTypes</jtok>
<jtok eid="6" type="primary_name_ref" span="110:21:110:31">paramTypes</jtok>
<jtok eid="6" type="primary_name_ref" span="112:10:112:20">paramTypes</jtok>
</jdoc>