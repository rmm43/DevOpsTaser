<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHLiteral" jls="java5">
<jent id="0" type="file" span="0:0:139:2">Source/jEdit/org/gjt/sp/jedit/bsh/BSHLiteral.java</jent>
<jent id="1" pid="0" type="class" span="37:1:139:1">org.gjt.sp.jedit.bsh.BSHLiteral</jent>
<jent id="2" pid="1" type="method" span="41:5:41:37">org.gjt.sp.jedit.bsh.BSHLiteral.BSHLiteral(int)</jent>
<jent id="3" pid="1" type="method" span="43:5:50:5">org.gjt.sp.jedit.bsh.BSHLiteral.eval(CallStack,Interpreter)</jent>
<jent id="4" pid="1" type="method" span="52:5:84:5">org.gjt.sp.jedit.bsh.BSHLiteral.getEscapeChar(char)</jent>
<jent id="5" pid="1" type="method" span="86:5:101:5">org.gjt.sp.jedit.bsh.BSHLiteral.charSetup(String)</jent>
<jent id="6" pid="1" type="method" span="103:5:138:5">org.gjt.sp.jedit.bsh.BSHLiteral.stringSetup(String)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="1" type="class_name" span="37:7:37:17">BSHLiteral</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:26:37:36">SimpleNode</jtok>
<jtok eid="1" type="class_or_interface_ref" span="39:12:39:18">Object</jtok>
<jtok eid="1" type="field_name" span="39:19:39:24">value</jtok>
<jtok eid="2" type="method_name" span="41:5:41:15">BSHLiteral</jtok>
<jtok eid="2" type="parameter_name" span="41:20:41:22">id</jtok>
<jtok eid="2" type="primary_name_ref" span="41:32:41:34">id</jtok>
<jtok eid="3" type="class_or_interface_ref" span="43:12:43:18">Object</jtok>
<jtok eid="3" type="method_name" span="43:19:43:23">eval</jtok>
<jtok eid="3" type="parameter_type" span="43:25:43:34">CallStack</jtok>
<jtok eid="3" type="parameter_name" span="43:35:43:44">callstack</jtok>
<jtok eid="3" type="parameter_type" span="43:46:43:57">Interpreter</jtok>
<jtok eid="3" type="parameter_name" span="43:58:43:69">interpreter</jtok>
<jtok eid="3" type="throws" span="44:10:44:19">EvalError</jtok>
<jtok eid="3" type="primary_name_ref" span="46:8:46:13">value</jtok>
<jtok eid="3" type="constructor_call" span="47:14:47:30">InterpreterError</jtok>
<jtok eid="3" type="string_literal" span="47:31:47:54">"Null in bsh literal: "</jtok>
<jtok eid="3" type="primary_name_ref" span="47:55:47:60">value</jtok>
<jtok eid="3" type="primary_name_ref" span="49:16:49:21">value</jtok>
<jtok eid="4" type="method_name" span="52:18:52:31">getEscapeChar</jtok>
<jtok eid="4" type="parameter_name" span="52:37:52:39">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="54:16:54:18">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="57:17:57:19">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="61:17:61:19">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="65:17:65:19">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="69:17:69:19">ch</jtok>
<jtok eid="4" type="primary_name_ref" span="73:17:73:19">ch</jtok>
<jtok eid="4" type="line_comment" span="76:13:76:66">// do nothing - ch already contains correct character</jtok>
<jtok eid="4" type="primary_name_ref" span="83:16:83:18">ch</jtok>
<jtok eid="5" type="method_name" span="86:17:86:26">charSetup</jtok>
<jtok eid="5" type="parameter_type" span="86:27:86:33">String</jtok>
<jtok eid="5" type="parameter_name" span="86:34:86:37">str</jtok>
<jtok eid="5" type="local_variable_name" span="88:14:88:16">ch</jtok>
<jtok eid="5" type="primary_name_ref" span="88:19:88:22">str</jtok>
<jtok eid="5" type="method_call" span="88:23:88:29">charAt</jtok>
<jtok eid="5" type="primary_name_ref" span="89:12:89:14">ch</jtok>
<jtok eid="5" type="line_comment" span="91:13:91:34">// get next character</jtok>
<jtok eid="5" type="primary_name_ref" span="92:13:92:15">ch</jtok>
<jtok eid="5" type="primary_name_ref" span="92:18:92:21">str</jtok>
<jtok eid="5" type="method_call" span="92:22:92:28">charAt</jtok>
<jtok eid="5" type="primary_name_ref" span="94:16:94:25">Character</jtok>
<jtok eid="5" type="method_call" span="94:26:94:33">isDigit</jtok>
<jtok eid="5" type="primary_name_ref" span="94:34:94:36">ch</jtok>
<jtok eid="5" type="primary_name_ref" span="95:17:95:19">ch</jtok>
<jtok eid="5" type="primary_name_ref" span="95:28:95:35">Integer</jtok>
<jtok eid="5" type="method_call" span="95:36:95:44">parseInt</jtok>
<jtok eid="5" type="primary_name_ref" span="95:45:95:48">str</jtok>
<jtok eid="5" type="method_call" span="95:49:95:58">substring</jtok>
<jtok eid="5" type="primary_name_ref" span="97:17:97:19">ch</jtok>
<jtok eid="5" type="method_call" span="97:22:97:35">getEscapeChar</jtok>
<jtok eid="5" type="primary_name_ref" span="97:36:97:38">ch</jtok>
<jtok eid="5" type="primary_name_ref" span="100:9:100:14">value</jtok>
<jtok eid="5" type="constructor_call" span="100:21:100:30">Primitive</jtok>
<jtok eid="5" type="constructor_call" span="100:35:100:44">Character</jtok>
<jtok eid="5" type="primary_name_ref" span="100:45:100:47">ch</jtok>
<jtok eid="5" type="method_call" span="100:49:100:58">charValue</jtok>
<jtok eid="6" type="method_name" span="103:10:103:21">stringSetup</jtok>
<jtok eid="6" type="parameter_type" span="103:22:103:28">String</jtok>
<jtok eid="6" type="parameter_name" span="103:29:103:32">str</jtok>
<jtok eid="6" type="class_or_interface_ref" span="105:9:105:22">StringBuilder</jtok>
<jtok eid="6" type="local_variable_name" span="105:23:105:29">buffer</jtok>
<jtok eid="6" type="constructor_call" span="105:36:105:49">StringBuilder</jtok>
<jtok eid="6" type="local_variable_name" span="106:17:106:18">i</jtok>
<jtok eid="6" type="primary_name_ref" span="106:24:106:25">i</jtok>
<jtok eid="6" type="primary_name_ref" span="106:28:106:31">str</jtok>
<jtok eid="6" type="method_call" span="106:32:106:38">length</jtok>
<jtok eid="6" type="primary_name_ref" span="106:42:106:43">i</jtok>
<jtok eid="6" type="local_variable_name" span="108:18:108:20">ch</jtok>
<jtok eid="6" type="primary_name_ref" span="108:23:108:26">str</jtok>
<jtok eid="6" type="method_call" span="108:27:108:33">charAt</jtok>
<jtok eid="6" type="primary_name_ref" span="108:34:108:35">i</jtok>
<jtok eid="6" type="primary_name_ref" span="109:16:109:18">ch</jtok>
<jtok eid="6" type="line_comment" span="111:17:111:38">// get next character</jtok>
<jtok eid="6" type="primary_name_ref" span="112:17:112:19">ch</jtok>
<jtok eid="6" type="primary_name_ref" span="112:22:112:25">str</jtok>
<jtok eid="6" type="method_call" span="112:26:112:32">charAt</jtok>
<jtok eid="6" type="primary_name_ref" span="112:35:112:36">i</jtok>
<jtok eid="6" type="primary_name_ref" span="114:20:114:29">Character</jtok>
<jtok eid="6" type="method_call" span="114:30:114:37">isDigit</jtok>
<jtok eid="6" type="primary_name_ref" span="114:38:114:40">ch</jtok>
<jtok eid="6" type="local_variable_name" span="116:25:116:31">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="116:34:116:35">i</jtok>
<jtok eid="6" type="line_comment" span="118:21:118:53">// check the next two characters</jtok>
<jtok eid="6" type="primary_name_ref" span="119:27:119:33">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="119:36:119:37">i</jtok>
<jtok eid="6" type="primary_name_ref" span="121:28:121:37">Character</jtok>
<jtok eid="6" type="method_call" span="121:38:121:45">isDigit</jtok>
<jtok eid="6" type="primary_name_ref" span="121:46:121:49">str</jtok>
<jtok eid="6" type="method_call" span="121:50:121:56">charAt</jtok>
<jtok eid="6" type="primary_name_ref" span="121:57:121:63">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="122:29:122:35">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="127:21:127:23">ch</jtok>
<jtok eid="6" type="primary_name_ref" span="127:32:127:39">Integer</jtok>
<jtok eid="6" type="method_call" span="127:40:127:48">parseInt</jtok>
<jtok eid="6" type="primary_name_ref" span="127:49:127:52">str</jtok>
<jtok eid="6" type="method_call" span="127:53:127:62">substring</jtok>
<jtok eid="6" type="primary_name_ref" span="127:63:127:64">i</jtok>
<jtok eid="6" type="primary_name_ref" span="127:66:127:72">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="128:21:128:22">i</jtok>
<jtok eid="6" type="primary_name_ref" span="128:25:128:31">endPos</jtok>
<jtok eid="6" type="primary_name_ref" span="131:21:131:23">ch</jtok>
<jtok eid="6" type="method_call" span="131:26:131:39">getEscapeChar</jtok>
<jtok eid="6" type="primary_name_ref" span="131:40:131:42">ch</jtok>
<jtok eid="6" type="primary_name_ref" span="134:13:134:19">buffer</jtok>
<jtok eid="6" type="method_call" span="134:20:134:26">append</jtok>
<jtok eid="6" type="primary_name_ref" span="134:27:134:29">ch</jtok>
<jtok eid="6" type="primary_name_ref" span="137:9:137:14">value</jtok>
<jtok eid="6" type="primary_name_ref" span="137:17:137:23">buffer</jtok>
<jtok eid="6" type="method_call" span="137:24:137:32">toString</jtok>
<jtok eid="6" type="method_call" span="137:35:137:41">intern</jtok>
</jdoc>