<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHReturnType" jls="java5">
<jent id="0" type="file" span="0:0:66:1">Source/jEdit/org/gjt/sp/jedit/bsh/BSHReturnType.java</jent>
<jent id="1" pid="0" type="class" span="37:1:65:1">org.gjt.sp.jedit.bsh.BSHReturnType</jent>
<jent id="2" pid="1" type="method" span="41:2:41:37">org.gjt.sp.jedit.bsh.BSHReturnType.BSHReturnType(int)</jent>
<jent id="3" pid="1" type="method" span="43:2:45:2">org.gjt.sp.jedit.bsh.BSHReturnType.getTypeNode()</jent>
<jent id="4" pid="1" type="method" span="47:2:55:2">org.gjt.sp.jedit.bsh.BSHReturnType.getTypeDescriptor(CallStack,Interpreter,String)</jent>
<jent id="5" pid="1" type="method" span="57:2:64:2">org.gjt.sp.jedit.bsh.BSHReturnType.evalReturnType(CallStack,Interpreter)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="1" type="class_name" span="37:7:37:20">BSHReturnType</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:29:37:39">SimpleNode</jtok>
<jtok eid="1" type="field_name" span="39:17:39:23">isVoid</jtok>
<jtok eid="2" type="method_name" span="41:2:41:15">BSHReturnType</jtok>
<jtok eid="2" type="parameter_name" span="41:20:41:22">id</jtok>
<jtok eid="2" type="primary_name_ref" span="41:32:41:34">id</jtok>
<jtok eid="3" type="class_or_interface_ref" span="43:2:43:9">BSHType</jtok>
<jtok eid="3" type="method_name" span="43:10:43:21">getTypeNode</jtok>
<jtok eid="3" type="class_or_interface_ref" span="44:11:44:18">BSHType</jtok>
<jtok eid="3" type="method_call" span="44:19:44:30">jjtGetChild</jtok>
<jtok eid="4" type="class_or_interface_ref" span="47:9:47:15">String</jtok>
<jtok eid="4" type="method_name" span="47:16:47:33">getTypeDescriptor</jtok>
<jtok eid="4" type="parameter_type" span="48:3:48:12">CallStack</jtok>
<jtok eid="4" type="parameter_name" span="48:13:48:22">callstack</jtok>
<jtok eid="4" type="parameter_type" span="48:24:48:35">Interpreter</jtok>
<jtok eid="4" type="parameter_name" span="48:36:48:47">interpreter</jtok>
<jtok eid="4" type="parameter_type" span="48:49:48:55">String</jtok>
<jtok eid="4" type="parameter_name" span="48:56:48:70">defaultPackage</jtok>
<jtok eid="4" type="primary_name_ref" span="50:8:50:14">isVoid</jtok>
<jtok eid="4" type="string_literal" span="51:11:51:14">"V"</jtok>
<jtok eid="4" type="method_call" span="53:11:53:22">getTypeNode</jtok>
<jtok eid="4" type="method_call" span="53:25:53:42">getTypeDescriptor</jtok>
<jtok eid="4" type="primary_name_ref" span="54:5:54:14">callstack</jtok>
<jtok eid="4" type="primary_name_ref" span="54:16:54:27">interpreter</jtok>
<jtok eid="4" type="primary_name_ref" span="54:29:54:43">defaultPackage</jtok>
<jtok eid="5" type="class_or_interface_ref" span="57:9:57:14">Class</jtok>
<jtok eid="5" type="method_name" span="57:15:57:29">evalReturnType</jtok>
<jtok eid="5" type="parameter_type" span="58:3:58:12">CallStack</jtok>
<jtok eid="5" type="parameter_name" span="58:13:58:22">callstack</jtok>
<jtok eid="5" type="parameter_type" span="58:24:58:35">Interpreter</jtok>
<jtok eid="5" type="parameter_name" span="58:36:58:47">interpreter</jtok>
<jtok eid="5" type="throws" span="58:57:58:66">EvalError</jtok>
<jtok eid="5" type="primary_name_ref" span="60:8:60:14">isVoid</jtok>
<jtok eid="5" type="primary_name_ref" span="61:11:61:15">Void</jtok>
<jtok eid="5" type="qualified_name_ref" span="61:16:61:20">TYPE</jtok>
<jtok eid="5" type="method_call" span="63:11:63:22">getTypeNode</jtok>
<jtok eid="5" type="method_call" span="63:25:63:32">getType</jtok>
<jtok eid="5" type="primary_name_ref" span="63:34:63:43">callstack</jtok>
<jtok eid="5" type="primary_name_ref" span="63:45:63:56">interpreter</jtok>
</jdoc>