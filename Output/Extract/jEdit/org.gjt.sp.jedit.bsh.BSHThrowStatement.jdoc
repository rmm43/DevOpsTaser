<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHThrowStatement" jls="java5">
<jent id="0" type="file" span="0:0:56:1">Source/jEdit/org/gjt/sp/jedit/bsh/BSHThrowStatement.java</jent>
<jent id="1" pid="0" type="class" span="37:1:55:1">org.gjt.sp.jedit.bsh.BSHThrowStatement</jent>
<jent id="2" pid="1" type="method" span="39:2:39:41">org.gjt.sp.jedit.bsh.BSHThrowStatement.BSHThrowStatement(int)</jent>
<jent id="3" pid="1" type="method" span="41:2:54:2">org.gjt.sp.jedit.bsh.BSHThrowStatement.eval(CallStack,Interpreter)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="1" type="class_name" span="37:7:37:24">BSHThrowStatement</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:33:37:43">SimpleNode</jtok>
<jtok eid="2" type="method_name" span="39:2:39:19">BSHThrowStatement</jtok>
<jtok eid="2" type="parameter_name" span="39:24:39:26">id</jtok>
<jtok eid="2" type="primary_name_ref" span="39:36:39:38">id</jtok>
<jtok eid="3" type="class_or_interface_ref" span="41:9:41:15">Object</jtok>
<jtok eid="3" type="method_name" span="41:16:41:20">eval</jtok>
<jtok eid="3" type="parameter_type" span="41:22:41:31">CallStack</jtok>
<jtok eid="3" type="parameter_name" span="41:32:41:41">callstack</jtok>
<jtok eid="3" type="parameter_type" span="41:43:41:54">Interpreter</jtok>
<jtok eid="3" type="parameter_name" span="41:55:41:66">interpreter</jtok>
<jtok eid="3" type="throws" span="42:10:42:19">EvalError</jtok>
<jtok eid="3" type="class_or_interface_ref" span="44:3:44:9">Object</jtok>
<jtok eid="3" type="local_variable_name" span="44:10:44:13">obj</jtok>
<jtok eid="3" type="class_or_interface_ref" span="44:18:44:28">SimpleNode</jtok>
<jtok eid="3" type="method_call" span="44:29:44:40">jjtGetChild</jtok>
<jtok eid="3" type="method_call" span="44:45:44:49">eval</jtok>
<jtok eid="3" type="primary_name_ref" span="44:50:44:59">callstack</jtok>
<jtok eid="3" type="primary_name_ref" span="44:61:44:72">interpreter</jtok>
<jtok eid="3" type="line_comment" span="46:3:46:66">// need to loosen this to any throwable... do we need to handle</jtok>
<jtok eid="3" type="line_comment" span="47:3:47:52">// that in interpreter somewhere?  check first...</jtok>
<jtok eid="3" type="primary_name_ref" span="48:8:48:11">obj</jtok>
<jtok eid="3" type="class_or_interface_ref" span="48:23:48:32">Exception</jtok>
<jtok eid="3" type="constructor_call" span="49:14:49:23">EvalError</jtok>
<jtok eid="3" type="string_literal" span="49:24:49:70">"Expression in 'throw' must be Exception type"</jtok>
<jtok eid="3" type="primary_name_ref" span="50:11:50:20">callstack</jtok>
<jtok eid="3" type="line_comment" span="52:3:52:64">// wrap the exception in a TargetException to propogate it up</jtok>
<jtok eid="3" type="constructor_call" span="53:13:53:24">TargetError</jtok>
<jtok eid="3" type="class_or_interface_ref" span="53:27:53:36">Exception</jtok>
<jtok eid="3" type="primary_name_ref" span="53:37:53:40">obj</jtok>
<jtok eid="3" type="primary_name_ref" span="53:48:53:57">callstack</jtok>
</jdoc>