<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader" jls="java5">
<jent id="0" type="file" span="0:0:91:2">Source/jEdit/org/gjt/sp/jedit/bsh/classpath/DiscreteFilesClassLoader.java</jent>
<jent id="1" pid="0" type="class" span="46:1:91:1">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader</jent>
<jent id="2" pid="1" type="class" span="53:2:61:2">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.ClassSourceMap</jent>
<jent id="3" pid="2" type="method" span="55:3:57:3">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.ClassSourceMap.put(String,ClassSource)</jent>
<jent id="4" pid="2" type="method" span="58:3:60:3">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.ClassSourceMap.get(String)</jent>
<jent id="5" pid="1" type="method" span="63:2:68:2">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.DiscreteFilesClassLoader(BshClassManager,ClassSourceMap)</jent>
<jent id="6" pid="1" type="method" span="72:2:85:2">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.findClass(String)</jent>
<jent id="7" pid="1" type="method" span="87:2:89:2">org.gjt.sp.jedit.bsh.classpath.DiscreteFilesClassLoader.toString()</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="0" type="block_comment" span="41:1:45:3">/**
	A classloader which can load one or more classes from specified sources.
	Because the classes are loaded via a single classloader they change as a
	group and any versioning cross dependencies can be managed.
*/</jtok>
<jtok eid="1" type="class_name" span="46:14:46:38">DiscreteFilesClassLoader</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:47:46:61">BshClassLoader</jtok>
<jtok eid="1" type="block_comment" span="48:2:50:4">/**
		Map of class sources which also implies our coverage space.
	*/</jtok>
<jtok eid="1" type="class_or_interface_ref" span="51:2:51:16">ClassSourceMap</jtok>
<jtok eid="1" type="field_name" span="51:17:51:20">map</jtok>
<jtok eid="2" type="class_name" span="53:22:53:36">ClassSourceMap</jtok>
<jtok eid="2" type="class_or_interface_ref" span="53:45:53:52">HashMap</jtok>
<jtok eid="3" type="method_name" span="55:15:55:18">put</jtok>
<jtok eid="3" type="parameter_type" span="55:20:55:26">String</jtok>
<jtok eid="3" type="parameter_name" span="55:27:55:31">name</jtok>
<jtok eid="3" type="parameter_type" span="55:33:55:44">ClassSource</jtok>
<jtok eid="3" type="parameter_name" span="55:45:55:51">source</jtok>
<jtok eid="3" type="method_call" span="56:10:56:13">put</jtok>
<jtok eid="3" type="primary_name_ref" span="56:15:56:19">name</jtok>
<jtok eid="3" type="primary_name_ref" span="56:21:56:27">source</jtok>
<jtok eid="4" type="class_or_interface_ref" span="58:10:58:21">ClassSource</jtok>
<jtok eid="4" type="method_name" span="58:22:58:25">get</jtok>
<jtok eid="4" type="parameter_type" span="58:27:58:33">String</jtok>
<jtok eid="4" type="parameter_name" span="58:34:58:38">name</jtok>
<jtok eid="4" type="class_or_interface_ref" span="59:12:59:23">ClassSource</jtok>
<jtok eid="4" type="method_call" span="59:30:59:33">get</jtok>
<jtok eid="4" type="primary_name_ref" span="59:35:59:39">name</jtok>
<jtok eid="5" type="method_name" span="63:9:63:33">DiscreteFilesClassLoader</jtok>
<jtok eid="5" type="parameter_type" span="64:3:64:18">BshClassManager</jtok>
<jtok eid="5" type="parameter_name" span="64:19:64:31">classManager</jtok>
<jtok eid="5" type="parameter_type" span="64:33:64:47">ClassSourceMap</jtok>
<jtok eid="5" type="parameter_name" span="64:48:64:51">map</jtok>
<jtok eid="5" type="primary_name_ref" span="66:10:66:22">classManager</jtok>
<jtok eid="5" type="qualified_name_ref" span="67:8:67:11">map</jtok>
<jtok eid="5" type="primary_name_ref" span="67:14:67:17">map</jtok>
<jtok eid="1" type="block_comment" span="70:2:71:4">/**
	*/</jtok>
<jtok eid="6" type="class_or_interface_ref" span="72:9:72:14">Class</jtok>
<jtok eid="6" type="method_name" span="72:15:72:24">findClass</jtok>
<jtok eid="6" type="parameter_type" span="72:26:72:32">String</jtok>
<jtok eid="6" type="parameter_name" span="72:33:72:37">name</jtok>
<jtok eid="6" type="throws" span="72:47:72:69">ClassNotFoundException</jtok>
<jtok eid="6" type="line_comment" span="74:3:74:40">// Load it if it's one of our classes</jtok>
<jtok eid="6" type="class_or_interface_ref" span="75:3:75:14">ClassSource</jtok>
<jtok eid="6" type="local_variable_name" span="75:15:75:21">source</jtok>
<jtok eid="6" type="primary_name_ref" span="75:24:75:27">map</jtok>
<jtok eid="6" type="method_call" span="75:28:75:31">get</jtok>
<jtok eid="6" type="primary_name_ref" span="75:33:75:37">name</jtok>
<jtok eid="6" type="primary_name_ref" span="77:8:77:14">source</jtok>
<jtok eid="6" type="local_variable_name" span="79:12:79:16">code</jtok>
<jtok eid="6" type="primary_name_ref" span="79:19:79:25">source</jtok>
<jtok eid="6" type="method_call" span="79:26:79:33">getCode</jtok>
<jtok eid="6" type="primary_name_ref" span="79:35:79:39">name</jtok>
<jtok eid="6" type="method_call" span="80:11:80:22">defineClass</jtok>
<jtok eid="6" type="primary_name_ref" span="80:24:80:28">name</jtok>
<jtok eid="6" type="primary_name_ref" span="80:30:80:34">code</jtok>
<jtok eid="6" type="primary_name_ref" span="80:39:80:43">code</jtok>
<jtok eid="6" type="qualified_name_ref" span="80:44:80:50">length</jtok>
<jtok eid="6" type="line_comment" span="82:4:82:67">// Let superclass BshClassLoader (URLClassLoader) findClass try</jtok>
<jtok eid="6" type="line_comment" span="83:4:83:27">// to find the class...</jtok>
<jtok eid="6" type="method_call" span="84:17:84:26">findClass</jtok>
<jtok eid="6" type="primary_name_ref" span="84:28:84:32">name</jtok>
<jtok eid="7" type="class_or_interface_ref" span="87:9:87:15">String</jtok>
<jtok eid="7" type="method_name" span="87:16:87:24">toString</jtok>
<jtok eid="7" type="method_call" span="88:16:88:24">toString</jtok>
<jtok eid="7" type="string_literal" span="88:29:88:42">"for files: "</jtok>
<jtok eid="7" type="primary_name_ref" span="88:43:88:46">map</jtok>
</jdoc>