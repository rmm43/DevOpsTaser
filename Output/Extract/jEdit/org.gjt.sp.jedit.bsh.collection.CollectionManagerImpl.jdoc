<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl" jls="java5">
<jent id="0" type="file" span="0:0:75:2">Source/jEdit/org/gjt/sp/jedit/bsh/collection/CollectionManagerImpl.java</jent>
<jent id="1" pid="0" type="class" span="46:1:75:1">org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl</jent>
<jent id="2" pid="1" type="method" span="48:2:55:2">org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl.getBshIterator(Object)</jent>
<jent id="3" pid="1" type="method" span="57:2:63:2">org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl.isMap(Object)</jent>
<jent id="4" pid="1" type="method" span="65:2:69:2">org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl.getFromMap(Object,Object)</jent>
<jent id="5" pid="1" type="method" span="70:2:74:2">org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl.putInMap(Object,Object,Object)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="0" type="block_comment" span="42:1:45:4">/**
	Dynamically loaded extension supporting post 1.1 collections iterator.
 	@author Pat Niemeyer
 */</jtok>
<jtok eid="1" type="class_name" span="46:14:46:35">CollectionManagerImpl</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:44:46:47">org</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:48:46:51">gjt</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:52:46:54">sp</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:55:46:60">jedit</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:61:46:64">bsh</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:65:46:82">CollectionManager</jtok>
<jtok eid="2" type="class_or_interface_ref" span="48:9:48:20">BshIterator</jtok>
<jtok eid="2" type="method_name" span="48:21:48:35">getBshIterator</jtok>
<jtok eid="2" type="parameter_type" span="48:37:48:43">Object</jtok>
<jtok eid="2" type="parameter_name" span="48:44:48:47">obj</jtok>
<jtok eid="2" type="throws" span="49:10:49:34">IllegalArgumentException</jtok>
<jtok eid="2" type="primary_name_ref" span="51:8:51:11">obj</jtok>
<jtok eid="2" type="class_or_interface_ref" span="51:23:51:33">Collection</jtok>
<jtok eid="2" type="primary_name_ref" span="51:37:51:40">obj</jtok>
<jtok eid="2" type="class_or_interface_ref" span="51:52:51:60">Iterator</jtok>
<jtok eid="2" type="constructor_call" span="52:15:52:33">CollectionIterator</jtok>
<jtok eid="2" type="primary_name_ref" span="52:35:52:38">obj</jtok>
<jtok eid="2" type="constructor_call" span="54:15:54:18">org</jtok>
<jtok eid="2" type="constructor_call" span="54:19:54:22">gjt</jtok>
<jtok eid="2" type="constructor_call" span="54:23:54:25">sp</jtok>
<jtok eid="2" type="constructor_call" span="54:26:54:31">jedit</jtok>
<jtok eid="2" type="constructor_call" span="54:32:54:35">bsh</jtok>
<jtok eid="2" type="constructor_call" span="54:36:54:53">CollectionManager</jtok>
<jtok eid="2" type="constructor_call" span="54:54:54:70">BasicBshIterator</jtok>
<jtok eid="2" type="primary_name_ref" span="54:72:54:75">obj</jtok>
<jtok eid="3" type="method_name" span="57:17:57:22">isMap</jtok>
<jtok eid="3" type="parameter_type" span="57:24:57:30">Object</jtok>
<jtok eid="3" type="parameter_name" span="57:31:57:34">obj</jtok>
<jtok eid="3" type="primary_name_ref" span="59:8:59:11">obj</jtok>
<jtok eid="3" type="class_or_interface_ref" span="59:23:59:26">Map</jtok>
<jtok eid="3" type="method_call" span="62:17:62:22">isMap</jtok>
<jtok eid="3" type="primary_name_ref" span="62:24:62:27">obj</jtok>
<jtok eid="4" type="class_or_interface_ref" span="65:9:65:15">Object</jtok>
<jtok eid="4" type="method_name" span="65:16:65:26">getFromMap</jtok>
<jtok eid="4" type="parameter_type" span="65:28:65:34">Object</jtok>
<jtok eid="4" type="parameter_name" span="65:35:65:38">map</jtok>
<jtok eid="4" type="parameter_type" span="65:40:65:46">Object</jtok>
<jtok eid="4" type="parameter_name" span="65:47:65:50">key</jtok>
<jtok eid="4" type="line_comment" span="67:3:67:30">// Hashtable implements Map</jtok>
<jtok eid="4" type="class_or_interface_ref" span="68:12:68:15">Map</jtok>
<jtok eid="4" type="primary_name_ref" span="68:16:68:19">map</jtok>
<jtok eid="4" type="method_call" span="68:21:68:24">get</jtok>
<jtok eid="4" type="primary_name_ref" span="68:25:68:28">key</jtok>
<jtok eid="5" type="class_or_interface_ref" span="70:9:70:15">Object</jtok>
<jtok eid="5" type="method_name" span="70:16:70:24">putInMap</jtok>
<jtok eid="5" type="parameter_type" span="70:26:70:32">Object</jtok>
<jtok eid="5" type="parameter_name" span="70:33:70:36">map</jtok>
<jtok eid="5" type="parameter_type" span="70:38:70:44">Object</jtok>
<jtok eid="5" type="parameter_name" span="70:45:70:48">key</jtok>
<jtok eid="5" type="parameter_type" span="70:50:70:56">Object</jtok>
<jtok eid="5" type="parameter_name" span="70:57:70:62">value</jtok>
<jtok eid="5" type="line_comment" span="72:3:72:30">// Hashtable implements Map</jtok>
<jtok eid="5" type="class_or_interface_ref" span="73:12:73:15">Map</jtok>
<jtok eid="5" type="primary_name_ref" span="73:16:73:19">map</jtok>
<jtok eid="5" type="method_call" span="73:21:73:24">put</jtok>
<jtok eid="5" type="primary_name_ref" span="73:25:73:28">key</jtok>
<jtok eid="5" type="primary_name_ref" span="73:30:73:35">value</jtok>
</jdoc>