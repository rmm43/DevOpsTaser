<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector" jls="java5">
<jent id="0" type="file" span="0:0:281:2">Source/jEdit/org/gjt/sp/jedit/bsh/org/objectweb/asm/ByteVector.java</jent>
<jent id="1" pid="0" type="class" span="32:1:281:1">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector</jent>
<jent id="2" pid="1" type="method" span="50:3:52:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.ByteVector()</jent>
<jent id="3" pid="1" type="method" span="60:3:62:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.ByteVector(int)</jent>
<jent id="4" pid="1" type="method" span="72:3:80:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put1(int)</jent>
<jent id="5" pid="1" type="method" span="91:3:101:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put11(int,int)</jent>
<jent id="6" pid="1" type="method" span="111:3:121:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put2(int)</jent>
<jent id="7" pid="1" type="method" span="132:3:143:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put12(int,int)</jent>
<jent id="8" pid="1" type="method" span="153:3:165:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put4(int)</jent>
<jent id="9" pid="1" type="method" span="175:3:193:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.put8(long)</jent>
<jent id="10" pid="1" type="method" span="203:3:241:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.putUTF(String)</jent>
<jent id="11" pid="1" type="method" span="254:3:267:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.putByteArray(byte[],int,int)</jent>
<jent id="12" pid="1" type="method" span="276:3:280:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector.enlarge(int)</jent>
<jtok eid="0" type="block_comment" span="1:1:23:4">/***
 * ASM: a very small and fast Java bytecode manipulation framework
 * Copyright (C) 2000 INRIA, France Telecom
 * Copyright (C) 2002 France Telecom
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * Contact: Eric.Bruneton@rd.francetelecom.com
 *
 * Author: Eric Bruneton
 */</jtok>
<jtok eid="0" type="block_comment" span="27:1:30:4">/**
 * A dynamically extensible vector of bytes. This class is roughly equivalent to
 * a DataOutputStream on top of a ByteArrayOutputStream, but is more efficient.
 */</jtok>
<jtok eid="1" type="class_name" span="32:13:32:23">ByteVector</jtok>
<jtok eid="1" type="block_comment" span="34:3:36:6">/**
   * The content of this vector.
   */</jtok>
<jtok eid="1" type="field_name" span="38:10:38:14">data</jtok>
<jtok eid="1" type="block_comment" span="40:3:42:6">/**
   * Actual number of bytes in this vector.
   */</jtok>
<jtok eid="1" type="field_name" span="44:7:44:13">length</jtok>
<jtok eid="1" type="block_comment" span="46:3:48:6">/**
   * Constructs a new {@link ByteVector ByteVector} with a default initial size.
   */</jtok>
<jtok eid="2" type="method_name" span="50:10:50:20">ByteVector</jtok>
<jtok eid="2" type="primary_name_ref" span="51:5:51:9">data</jtok>
<jtok eid="1" type="block_comment" span="54:3:58:6">/**
   * Constructs a new {@link ByteVector ByteVector} with the given initial size.
   *
   * @param initialSize the initial size of the byte vector to be constructed.
   */</jtok>
<jtok eid="3" type="method_name" span="60:10:60:20">ByteVector</jtok>
<jtok eid="3" type="parameter_name" span="60:32:60:43">initialSize</jtok>
<jtok eid="3" type="primary_name_ref" span="61:5:61:9">data</jtok>
<jtok eid="3" type="primary_name_ref" span="61:21:61:32">initialSize</jtok>
<jtok eid="1" type="block_comment" span="64:3:70:6">/**
   * Puts a byte into this byte vector. The byte vector is automatically
   * enlarged if necessary.
   *
   * @param b a byte.
   * @return this byte vector.
   */</jtok>
<jtok eid="4" type="class_or_interface_ref" span="72:10:72:20">ByteVector</jtok>
<jtok eid="4" type="method_name" span="72:21:72:25">put1</jtok>
<jtok eid="4" type="parameter_name" span="72:37:72:38">b</jtok>
<jtok eid="4" type="local_variable_name" span="73:9:73:15">length</jtok>
<jtok eid="4" type="qualified_name_ref" span="73:23:73:29">length</jtok>
<jtok eid="4" type="primary_name_ref" span="74:9:74:15">length</jtok>
<jtok eid="4" type="primary_name_ref" span="74:22:74:26">data</jtok>
<jtok eid="4" type="qualified_name_ref" span="74:27:74:33">length</jtok>
<jtok eid="4" type="method_call" span="75:7:75:14">enlarge</jtok>
<jtok eid="4" type="primary_name_ref" span="77:5:77:9">data</jtok>
<jtok eid="4" type="primary_name_ref" span="77:10:77:16">length</jtok>
<jtok eid="4" type="primary_name_ref" span="77:28:77:29">b</jtok>
<jtok eid="4" type="qualified_name_ref" span="78:10:78:16">length</jtok>
<jtok eid="4" type="primary_name_ref" span="78:19:78:25">length</jtok>
<jtok eid="1" type="block_comment" span="82:3:89:6">/**
   * Puts two bytes into this byte vector. The byte vector is automatically
   * enlarged if necessary.
   *
   * @param b1 a byte.
   * @param b2 another byte.
   * @return this byte vector.
   */</jtok>
<jtok eid="5" type="class_or_interface_ref" span="91:10:91:20">ByteVector</jtok>
<jtok eid="5" type="method_name" span="91:21:91:26">put11</jtok>
<jtok eid="5" type="parameter_name" span="91:38:91:40">b1</jtok>
<jtok eid="5" type="parameter_name" span="91:52:91:54">b2</jtok>
<jtok eid="5" type="local_variable_name" span="92:9:92:15">length</jtok>
<jtok eid="5" type="qualified_name_ref" span="92:23:92:29">length</jtok>
<jtok eid="5" type="primary_name_ref" span="93:9:93:15">length</jtok>
<jtok eid="5" type="primary_name_ref" span="93:22:93:26">data</jtok>
<jtok eid="5" type="qualified_name_ref" span="93:27:93:33">length</jtok>
<jtok eid="5" type="method_call" span="94:7:94:14">enlarge</jtok>
<jtok eid="5" type="local_variable_name" span="96:12:96:16">data</jtok>
<jtok eid="5" type="qualified_name_ref" span="96:24:96:28">data</jtok>
<jtok eid="5" type="primary_name_ref" span="97:5:97:9">data</jtok>
<jtok eid="5" type="primary_name_ref" span="97:10:97:16">length</jtok>
<jtok eid="5" type="primary_name_ref" span="97:28:97:30">b1</jtok>
<jtok eid="5" type="primary_name_ref" span="98:5:98:9">data</jtok>
<jtok eid="5" type="primary_name_ref" span="98:10:98:16">length</jtok>
<jtok eid="5" type="primary_name_ref" span="98:28:98:30">b2</jtok>
<jtok eid="5" type="qualified_name_ref" span="99:10:99:16">length</jtok>
<jtok eid="5" type="primary_name_ref" span="99:19:99:25">length</jtok>
<jtok eid="1" type="block_comment" span="103:3:109:6">/**
   * Puts a short into this byte vector. The byte vector is automatically
   * enlarged if necessary.
   *
   * @param s a short.
   * @return this byte vector.
   */</jtok>
<jtok eid="6" type="class_or_interface_ref" span="111:10:111:20">ByteVector</jtok>
<jtok eid="6" type="method_name" span="111:21:111:25">put2</jtok>
<jtok eid="6" type="parameter_name" span="111:37:111:38">s</jtok>
<jtok eid="6" type="local_variable_name" span="112:9:112:15">length</jtok>
<jtok eid="6" type="qualified_name_ref" span="112:23:112:29">length</jtok>
<jtok eid="6" type="primary_name_ref" span="113:9:113:15">length</jtok>
<jtok eid="6" type="primary_name_ref" span="113:22:113:26">data</jtok>
<jtok eid="6" type="qualified_name_ref" span="113:27:113:33">length</jtok>
<jtok eid="6" type="method_call" span="114:7:114:14">enlarge</jtok>
<jtok eid="6" type="local_variable_name" span="116:12:116:16">data</jtok>
<jtok eid="6" type="qualified_name_ref" span="116:24:116:28">data</jtok>
<jtok eid="6" type="primary_name_ref" span="117:5:117:9">data</jtok>
<jtok eid="6" type="primary_name_ref" span="117:10:117:16">length</jtok>
<jtok eid="6" type="primary_name_ref" span="117:29:117:30">s</jtok>
<jtok eid="6" type="primary_name_ref" span="118:5:118:9">data</jtok>
<jtok eid="6" type="primary_name_ref" span="118:10:118:16">length</jtok>
<jtok eid="6" type="primary_name_ref" span="118:28:118:29">s</jtok>
<jtok eid="6" type="qualified_name_ref" span="119:10:119:16">length</jtok>
<jtok eid="6" type="primary_name_ref" span="119:19:119:25">length</jtok>
<jtok eid="1" type="block_comment" span="123:3:130:6">/**
   * Puts a byte and a short into this byte vector. The byte vector is
   * automatically enlarged if necessary.
   *
   * @param b a byte.
   * @param s a short.
   * @return this byte vector.
   */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="132:10:132:20">ByteVector</jtok>
<jtok eid="7" type="method_name" span="132:21:132:26">put12</jtok>
<jtok eid="7" type="parameter_name" span="132:38:132:39">b</jtok>
<jtok eid="7" type="parameter_name" span="132:51:132:52">s</jtok>
<jtok eid="7" type="local_variable_name" span="133:9:133:15">length</jtok>
<jtok eid="7" type="qualified_name_ref" span="133:23:133:29">length</jtok>
<jtok eid="7" type="primary_name_ref" span="134:9:134:15">length</jtok>
<jtok eid="7" type="primary_name_ref" span="134:22:134:26">data</jtok>
<jtok eid="7" type="qualified_name_ref" span="134:27:134:33">length</jtok>
<jtok eid="7" type="method_call" span="135:7:135:14">enlarge</jtok>
<jtok eid="7" type="local_variable_name" span="137:12:137:16">data</jtok>
<jtok eid="7" type="qualified_name_ref" span="137:24:137:28">data</jtok>
<jtok eid="7" type="primary_name_ref" span="138:5:138:9">data</jtok>
<jtok eid="7" type="primary_name_ref" span="138:10:138:16">length</jtok>
<jtok eid="7" type="primary_name_ref" span="138:28:138:29">b</jtok>
<jtok eid="7" type="primary_name_ref" span="139:5:139:9">data</jtok>
<jtok eid="7" type="primary_name_ref" span="139:10:139:16">length</jtok>
<jtok eid="7" type="primary_name_ref" span="139:29:139:30">s</jtok>
<jtok eid="7" type="primary_name_ref" span="140:5:140:9">data</jtok>
<jtok eid="7" type="primary_name_ref" span="140:10:140:16">length</jtok>
<jtok eid="7" type="primary_name_ref" span="140:28:140:29">s</jtok>
<jtok eid="7" type="qualified_name_ref" span="141:10:141:16">length</jtok>
<jtok eid="7" type="primary_name_ref" span="141:19:141:25">length</jtok>
<jtok eid="1" type="block_comment" span="145:3:151:6">/**
   * Puts an int into this byte vector. The byte vector is automatically
   * enlarged if necessary.
   *
   * @param i an int.
   * @return this byte vector.
   */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="153:10:153:20">ByteVector</jtok>
<jtok eid="8" type="method_name" span="153:21:153:25">put4</jtok>
<jtok eid="8" type="parameter_name" span="153:37:153:38">i</jtok>
<jtok eid="8" type="local_variable_name" span="154:9:154:15">length</jtok>
<jtok eid="8" type="qualified_name_ref" span="154:23:154:29">length</jtok>
<jtok eid="8" type="primary_name_ref" span="155:9:155:15">length</jtok>
<jtok eid="8" type="primary_name_ref" span="155:22:155:26">data</jtok>
<jtok eid="8" type="qualified_name_ref" span="155:27:155:33">length</jtok>
<jtok eid="8" type="method_call" span="156:7:156:14">enlarge</jtok>
<jtok eid="8" type="local_variable_name" span="158:12:158:16">data</jtok>
<jtok eid="8" type="qualified_name_ref" span="158:24:158:28">data</jtok>
<jtok eid="8" type="primary_name_ref" span="159:5:159:9">data</jtok>
<jtok eid="8" type="primary_name_ref" span="159:10:159:16">length</jtok>
<jtok eid="8" type="primary_name_ref" span="159:29:159:30">i</jtok>
<jtok eid="8" type="primary_name_ref" span="160:5:160:9">data</jtok>
<jtok eid="8" type="primary_name_ref" span="160:10:160:16">length</jtok>
<jtok eid="8" type="primary_name_ref" span="160:29:160:30">i</jtok>
<jtok eid="8" type="primary_name_ref" span="161:5:161:9">data</jtok>
<jtok eid="8" type="primary_name_ref" span="161:10:161:16">length</jtok>
<jtok eid="8" type="primary_name_ref" span="161:29:161:30">i</jtok>
<jtok eid="8" type="primary_name_ref" span="162:5:162:9">data</jtok>
<jtok eid="8" type="primary_name_ref" span="162:10:162:16">length</jtok>
<jtok eid="8" type="primary_name_ref" span="162:28:162:29">i</jtok>
<jtok eid="8" type="qualified_name_ref" span="163:10:163:16">length</jtok>
<jtok eid="8" type="primary_name_ref" span="163:19:163:25">length</jtok>
<jtok eid="1" type="block_comment" span="167:3:173:6">/**
   * Puts a long into this byte vector. The byte vector is automatically
   * enlarged if necessary.
   *
   * @param l a long.
   * @return this byte vector.
   */</jtok>
<jtok eid="9" type="class_or_interface_ref" span="175:10:175:20">ByteVector</jtok>
<jtok eid="9" type="method_name" span="175:21:175:25">put8</jtok>
<jtok eid="9" type="parameter_name" span="175:38:175:39">l</jtok>
<jtok eid="9" type="local_variable_name" span="176:9:176:15">length</jtok>
<jtok eid="9" type="qualified_name_ref" span="176:23:176:29">length</jtok>
<jtok eid="9" type="primary_name_ref" span="177:9:177:15">length</jtok>
<jtok eid="9" type="primary_name_ref" span="177:22:177:26">data</jtok>
<jtok eid="9" type="qualified_name_ref" span="177:27:177:33">length</jtok>
<jtok eid="9" type="method_call" span="178:7:178:14">enlarge</jtok>
<jtok eid="9" type="local_variable_name" span="180:12:180:16">data</jtok>
<jtok eid="9" type="qualified_name_ref" span="180:24:180:28">data</jtok>
<jtok eid="9" type="local_variable_name" span="181:9:181:10">i</jtok>
<jtok eid="9" type="primary_name_ref" span="181:19:181:20">l</jtok>
<jtok eid="9" type="primary_name_ref" span="182:5:182:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="182:10:182:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="182:29:182:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="183:5:183:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="183:10:183:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="183:29:183:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="184:5:184:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="184:10:184:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="184:29:184:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="185:5:185:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="185:10:185:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="185:28:185:29">i</jtok>
<jtok eid="9" type="primary_name_ref" span="186:5:186:6">i</jtok>
<jtok eid="9" type="primary_name_ref" span="186:14:186:15">l</jtok>
<jtok eid="9" type="primary_name_ref" span="187:5:187:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="187:10:187:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="187:29:187:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="188:5:188:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="188:10:188:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="188:29:188:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="189:5:189:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="189:10:189:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="189:29:189:30">i</jtok>
<jtok eid="9" type="primary_name_ref" span="190:5:190:9">data</jtok>
<jtok eid="9" type="primary_name_ref" span="190:10:190:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="190:28:190:29">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="191:10:191:16">length</jtok>
<jtok eid="9" type="primary_name_ref" span="191:19:191:25">length</jtok>
<jtok eid="1" type="block_comment" span="195:3:201:6">/**
   * Puts a String in UTF format into this byte vector. The byte vector is
   * automatically enlarged if necessary.
   *
   * @param s a String.
   * @return this byte vector.
   */</jtok>
<jtok eid="10" type="class_or_interface_ref" span="203:10:203:20">ByteVector</jtok>
<jtok eid="10" type="method_name" span="203:21:203:27">putUTF</jtok>
<jtok eid="10" type="parameter_type" span="203:35:203:41">String</jtok>
<jtok eid="10" type="parameter_name" span="203:42:203:43">s</jtok>
<jtok eid="10" type="local_variable_name" span="204:9:204:19">charLength</jtok>
<jtok eid="10" type="primary_name_ref" span="204:22:204:23">s</jtok>
<jtok eid="10" type="method_call" span="204:24:204:30">length</jtok>
<jtok eid="10" type="local_variable_name" span="205:9:205:19">byteLength</jtok>
<jtok eid="10" type="local_variable_name" span="206:14:206:15">i</jtok>
<jtok eid="10" type="primary_name_ref" span="206:21:206:22">i</jtok>
<jtok eid="10" type="primary_name_ref" span="206:25:206:35">charLength</jtok>
<jtok eid="10" type="primary_name_ref" span="206:39:206:40">i</jtok>
<jtok eid="10" type="local_variable_name" span="207:12:207:13">c</jtok>
<jtok eid="10" type="primary_name_ref" span="207:16:207:17">s</jtok>
<jtok eid="10" type="method_call" span="207:18:207:24">charAt</jtok>
<jtok eid="10" type="primary_name_ref" span="207:25:207:26">i</jtok>
<jtok eid="10" type="primary_name_ref" span="208:11:208:12">c</jtok>
<jtok eid="10" type="primary_name_ref" span="208:26:208:27">c</jtok>
<jtok eid="10" type="primary_name_ref" span="209:9:209:19">byteLength</jtok>
<jtok eid="10" type="primary_name_ref" span="210:18:210:19">c</jtok>
<jtok eid="10" type="primary_name_ref" span="211:9:211:19">byteLength</jtok>
<jtok eid="10" type="primary_name_ref" span="213:9:213:19">byteLength</jtok>
<jtok eid="10" type="primary_name_ref" span="216:9:216:19">byteLength</jtok>
<jtok eid="10" type="constructor_call" span="217:17:217:41">IllegalArgumentException</jtok>
<jtok eid="10" type="local_variable_name" span="219:9:219:15">length</jtok>
<jtok eid="10" type="qualified_name_ref" span="219:23:219:29">length</jtok>
<jtok eid="10" type="primary_name_ref" span="220:9:220:15">length</jtok>
<jtok eid="10" type="primary_name_ref" span="220:22:220:32">byteLength</jtok>
<jtok eid="10" type="primary_name_ref" span="220:35:220:39">data</jtok>
<jtok eid="10" type="qualified_name_ref" span="220:40:220:46">length</jtok>
<jtok eid="10" type="method_call" span="221:7:221:14">enlarge</jtok>
<jtok eid="10" type="primary_name_ref" span="221:19:221:29">byteLength</jtok>
<jtok eid="10" type="local_variable_name" span="223:12:223:16">data</jtok>
<jtok eid="10" type="qualified_name_ref" span="223:24:223:28">data</jtok>
<jtok eid="10" type="primary_name_ref" span="224:5:224:9">data</jtok>
<jtok eid="10" type="primary_name_ref" span="224:10:224:16">length</jtok>
<jtok eid="10" type="primary_name_ref" span="224:29:224:39">byteLength</jtok>
<jtok eid="10" type="primary_name_ref" span="225:5:225:9">data</jtok>
<jtok eid="10" type="primary_name_ref" span="225:10:225:16">length</jtok>
<jtok eid="10" type="primary_name_ref" span="225:29:225:39">byteLength</jtok>
<jtok eid="10" type="local_variable_name" span="226:14:226:15">i</jtok>
<jtok eid="10" type="primary_name_ref" span="226:21:226:22">i</jtok>
<jtok eid="10" type="primary_name_ref" span="226:25:226:35">charLength</jtok>
<jtok eid="10" type="primary_name_ref" span="226:39:226:40">i</jtok>
<jtok eid="10" type="local_variable_name" span="227:12:227:13">c</jtok>
<jtok eid="10" type="primary_name_ref" span="227:16:227:17">s</jtok>
<jtok eid="10" type="method_call" span="227:18:227:24">charAt</jtok>
<jtok eid="10" type="primary_name_ref" span="227:25:227:26">i</jtok>
<jtok eid="10" type="primary_name_ref" span="228:11:228:12">c</jtok>
<jtok eid="10" type="primary_name_ref" span="228:26:228:27">c</jtok>
<jtok eid="10" type="primary_name_ref" span="229:9:229:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="229:14:229:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="229:32:229:33">c</jtok>
<jtok eid="10" type="primary_name_ref" span="230:18:230:19">c</jtok>
<jtok eid="10" type="primary_name_ref" span="231:9:231:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="231:14:231:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="231:40:231:41">c</jtok>
<jtok eid="10" type="primary_name_ref" span="232:9:232:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="232:14:232:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="232:40:232:41">c</jtok>
<jtok eid="10" type="primary_name_ref" span="233:9:233:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="233:14:233:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="233:40:233:41">c</jtok>
<jtok eid="10" type="primary_name_ref" span="235:9:235:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="235:14:235:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="235:40:235:41">c</jtok>
<jtok eid="10" type="primary_name_ref" span="236:9:236:13">data</jtok>
<jtok eid="10" type="primary_name_ref" span="236:14:236:20">length</jtok>
<jtok eid="10" type="primary_name_ref" span="236:40:236:41">c</jtok>
<jtok eid="10" type="qualified_name_ref" span="239:10:239:16">length</jtok>
<jtok eid="10" type="primary_name_ref" span="239:19:239:25">length</jtok>
<jtok eid="1" type="block_comment" span="243:3:252:6">/**
   * Puts an array of bytes into this byte vector. The byte vector is
   * automatically enlarged if necessary.
   *
   * @param b an array of bytes. May be &lt;tt&gt;null&lt;/tt&gt; to put &lt;tt&gt;len&lt;/tt&gt; null
   *      bytes into this byte vector.
   * @param off index of the fist byte of b that must be copied.
   * @param len number of bytes of b that must be copied.
   * @return this byte vector.
   */</jtok>
<jtok eid="11" type="class_or_interface_ref" span="254:10:254:20">ByteVector</jtok>
<jtok eid="11" type="method_name" span="254:21:254:33">putByteArray</jtok>
<jtok eid="11" type="parameter_name" span="255:18:255:19">b</jtok>
<jtok eid="11" type="parameter_name" span="256:15:256:18">off</jtok>
<jtok eid="11" type="parameter_name" span="257:15:257:18">len</jtok>
<jtok eid="11" type="primary_name_ref" span="259:9:259:15">length</jtok>
<jtok eid="11" type="primary_name_ref" span="259:18:259:21">len</jtok>
<jtok eid="11" type="primary_name_ref" span="259:24:259:28">data</jtok>
<jtok eid="11" type="qualified_name_ref" span="259:29:259:35">length</jtok>
<jtok eid="11" type="method_call" span="260:7:260:14">enlarge</jtok>
<jtok eid="11" type="primary_name_ref" span="260:15:260:18">len</jtok>
<jtok eid="11" type="primary_name_ref" span="262:9:262:10">b</jtok>
<jtok eid="11" type="primary_name_ref" span="263:7:263:13">System</jtok>
<jtok eid="11" type="method_call" span="263:14:263:23">arraycopy</jtok>
<jtok eid="11" type="primary_name_ref" span="263:24:263:25">b</jtok>
<jtok eid="11" type="primary_name_ref" span="263:27:263:30">off</jtok>
<jtok eid="11" type="primary_name_ref" span="263:32:263:36">data</jtok>
<jtok eid="11" type="primary_name_ref" span="263:38:263:44">length</jtok>
<jtok eid="11" type="primary_name_ref" span="263:46:263:49">len</jtok>
<jtok eid="11" type="primary_name_ref" span="265:5:265:11">length</jtok>
<jtok eid="11" type="primary_name_ref" span="265:15:265:18">len</jtok>
<jtok eid="1" type="block_comment" span="269:3:274:6">/**
   * Enlarge this byte vector so that it can receive n more bytes.
   *
   * @param size number of additional bytes that this byte vector should be
   *      able to receive.
   */</jtok>
<jtok eid="12" type="method_name" span="276:16:276:23">enlarge</jtok>
<jtok eid="12" type="parameter_name" span="276:35:276:39">size</jtok>
<jtok eid="12" type="local_variable_name" span="277:12:277:19">newData</jtok>
<jtok eid="12" type="primary_name_ref" span="277:31:277:35">Math</jtok>
<jtok eid="12" type="method_call" span="277:36:277:39">max</jtok>
<jtok eid="12" type="primary_name_ref" span="277:42:277:46">data</jtok>
<jtok eid="12" type="qualified_name_ref" span="277:47:277:53">length</jtok>
<jtok eid="12" type="primary_name_ref" span="277:55:277:61">length</jtok>
<jtok eid="12" type="primary_name_ref" span="277:64:277:68">size</jtok>
<jtok eid="12" type="primary_name_ref" span="278:5:278:11">System</jtok>
<jtok eid="12" type="method_call" span="278:12:278:21">arraycopy</jtok>
<jtok eid="12" type="primary_name_ref" span="278:22:278:26">data</jtok>
<jtok eid="12" type="primary_name_ref" span="278:31:278:38">newData</jtok>
<jtok eid="12" type="primary_name_ref" span="278:43:278:49">length</jtok>
<jtok eid="12" type="primary_name_ref" span="279:5:279:9">data</jtok>
<jtok eid="12" type="primary_name_ref" span="279:12:279:19">newData</jtok>
</jdoc>