<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter" jls="java5">
<jent id="0" type="file" span="0:0:950:2">Source/jEdit/org/gjt/sp/jedit/bsh/org/objectweb/asm/ClassWriter.java</jent>
<jent id="1" pid="0" type="class" span="35:1:950:1">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter</jent>
<jent id="2" pid="1" type="method" span="445:3:454:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.ClassWriter(boolean)</jent>
<jent id="3" pid="1" type="method" span="460:3:484:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.visit(int,String,String,String[],String)</jent>
<jent id="4" pid="1" type="method" span="486:3:501:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.visitInnerClass(String,String,String,int)</jent>
<jent id="5" pid="1" type="method" span="503:3:535:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.visitField(int,String,String,Object)</jent>
<jent id="6" pid="1" type="method" span="537:3:546:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.visitMethod(int,String,String,String[])</jent>
<jent id="7" pid="1" type="method" span="548:3:549:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.visitEnd()</jent>
<jent id="8" pid="1" type="method" span="561:3:621:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.toByteArray()</jent>
<jent id="9" pid="1" type="method" span="638:3:656:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newCst(Object)</jent>
<jent id="10" pid="1" type="method" span="666:3:675:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newUTF8(String)</jent>
<jent id="11" pid="1" type="method" span="685:3:694:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newClass(String)</jent>
<jent id="12" pid="1" type="method" span="706:3:719:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newField(String,String,String)</jent>
<jent id="13" pid="1" type="method" span="731:3:744:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newMethod(String,String,String)</jent>
<jent id="14" pid="1" type="method" span="756:3:769:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newItfMethod(String,String,String)</jent>
<jent id="15" pid="1" type="method" span="779:3:788:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newInteger(int)</jent>
<jent id="16" pid="1" type="method" span="798:3:807:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newFloat(float)</jent>
<jent id="17" pid="1" type="method" span="817:3:827:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newLong(long)</jent>
<jent id="18" pid="1" type="method" span="837:3:847:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newDouble(double)</jent>
<jent id="19" pid="1" type="method" span="857:3:866:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newString(String)</jent>
<jent id="20" pid="1" type="method" span="877:3:886:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.newNameType(String,String)</jent>
<jent id="21" pid="1" type="method" span="897:3:907:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.get(Item)</jent>
<jent id="22" pid="1" type="method" span="916:3:937:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.put(Item)</jent>
<jent id="23" pid="1" type="method" span="947:3:949:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.put122(int,int,int)</jent>
<jtok eid="0" type="block_comment" span="1:1:23:4">/***
 * ASM: a very small and fast Java bytecode manipulation framework
 * Copyright (C) 2000 INRIA, France Telecom
 * Copyright (C) 2002 France Telecom
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * Contact: Eric.Bruneton@rd.francetelecom.com
 *
 * Author: Eric Bruneton
 */</jtok>
<jtok eid="0" type="block_comment" span="27:1:33:4">/**
 * A {@link org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassVisitor ClassVisitor} that generates Java class files. More
 * precisely this visitor generates a byte array conforming to the Java class
 * file format. It can be used alone, to generate a Java class "from scratch",
 * or with one or more adapter class
 * visitors to generate a modified class from one or more existing Java classes.
 */</jtok>
<jtok eid="1" type="class_name" span="35:14:35:25">ClassWriter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="35:37:35:49">ClassVisitor</jtok>
<jtok eid="1" type="block_comment" span="37:3:39:6">/**
   * The type of CONSTANT_Class constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="41:20:41:25">CLASS</jtok>
<jtok eid="1" type="block_comment" span="43:3:45:6">/**
   * The type of CONSTANT_Fieldref constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="47:20:47:25">FIELD</jtok>
<jtok eid="1" type="block_comment" span="49:3:51:6">/**
   * The type of CONSTANT_Methodref constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="53:20:53:24">METH</jtok>
<jtok eid="1" type="block_comment" span="55:3:57:6">/**
   * The type of CONSTANT_InterfaceMethodref constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="59:20:59:25">IMETH</jtok>
<jtok eid="1" type="block_comment" span="61:3:63:6">/**
   * The type of CONSTANT_String constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="65:20:65:23">STR</jtok>
<jtok eid="1" type="block_comment" span="67:3:69:6">/**
   * The type of CONSTANT_Integer constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="71:20:71:23">INT</jtok>
<jtok eid="1" type="block_comment" span="73:3:75:6">/**
   * The type of CONSTANT_Float constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="77:20:77:25">FLOAT</jtok>
<jtok eid="1" type="block_comment" span="79:3:81:6">/**
   * The type of CONSTANT_Long constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="83:20:83:24">LONG</jtok>
<jtok eid="1" type="block_comment" span="85:3:87:6">/**
   * The type of CONSTANT_Double constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="89:20:89:26">DOUBLE</jtok>
<jtok eid="1" type="block_comment" span="91:3:93:6">/**
   * The type of CONSTANT_NameAndType constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="95:20:95:29">NAME_TYPE</jtok>
<jtok eid="1" type="block_comment" span="97:3:99:6">/**
   * The type of CONSTANT_Utf8 constant pool items.
   */</jtok>
<jtok eid="1" type="field_name" span="101:20:101:24">UTF8</jtok>
<jtok eid="1" type="block_comment" span="103:3:105:6">/**
   * Index of the next item to be added in the constant pool.
   */</jtok>
<jtok eid="1" type="field_name" span="107:17:107:22">index</jtok>
<jtok eid="1" type="block_comment" span="109:3:111:6">/**
   * The constant pool of this class.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="113:11:113:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="113:22:113:26">pool</jtok>
<jtok eid="1" type="block_comment" span="115:3:117:6">/**
   * The constant pool's hash table data.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="119:11:119:15">Item</jtok>
<jtok eid="1" type="field_name" span="119:18:119:23">table</jtok>
<jtok eid="1" type="block_comment" span="121:3:123:6">/**
   * The threshold of the constant pool's hash table.
   */</jtok>
<jtok eid="1" type="field_name" span="125:15:125:24">threshold</jtok>
<jtok eid="1" type="block_comment" span="127:3:129:6">/**
   * The access flags of this class.
   */</jtok>
<jtok eid="1" type="field_name" span="131:15:131:21">access</jtok>
<jtok eid="1" type="block_comment" span="133:3:135:6">/**
   * The constant pool item that contains the internal name of this class.
   */</jtok>
<jtok eid="1" type="field_name" span="137:15:137:19">name</jtok>
<jtok eid="1" type="block_comment" span="139:3:142:6">/**
   * The constant pool item that contains the internal name of the super class
   * of this class.
   */</jtok>
<jtok eid="1" type="field_name" span="144:15:144:24">superName</jtok>
<jtok eid="1" type="block_comment" span="146:3:148:6">/**
   * Number of interfaces implemented or extended by this class or interface.
   */</jtok>
<jtok eid="1" type="field_name" span="150:15:150:29">interfaceCount</jtok>
<jtok eid="1" type="block_comment" span="152:3:156:6">/**
   * The interfaces implemented or extended by this class or interface. More
   * precisely, this array contains the indexes of the constant pool items
   * that contain the internal names of these interfaces.
   */</jtok>
<jtok eid="1" type="field_name" span="158:17:158:27">interfaces</jtok>
<jtok eid="1" type="block_comment" span="160:3:163:6">/**
   * The constant pool item that contains the name of the source file from
   * which this class was compiled.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="165:11:165:15">Item</jtok>
<jtok eid="1" type="field_name" span="165:16:165:26">sourceFile</jtok>
<jtok eid="1" type="block_comment" span="167:3:169:6">/**
   * Number of fields of this class.
   */</jtok>
<jtok eid="1" type="field_name" span="171:15:171:25">fieldCount</jtok>
<jtok eid="1" type="block_comment" span="173:3:175:6">/**
   * The fields of this class.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="177:11:177:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="177:22:177:28">fields</jtok>
<jtok eid="1" type="block_comment" span="179:3:182:6">/**
   * &lt;tt&gt;true&lt;/tt&gt; if the maximum stack size and number of local variables must
   * be automatically computed.
   */</jtok>
<jtok eid="1" type="field_name" span="184:19:184:30">computeMaxs</jtok>
<jtok eid="1" type="block_comment" span="186:3:190:6">/**
   * The methods of this class. These methods are stored in a linked list of
   * {@link CodeWriter CodeWriter} objects, linked to each other by their {@link
   * CodeWriter#next} field. This field stores the first element of this list.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="192:3:192:13">CodeWriter</jtok>
<jtok eid="1" type="field_name" span="192:14:192:25">firstMethod</jtok>
<jtok eid="1" type="block_comment" span="194:3:198:6">/**
   * The methods of this class. These methods are stored in a linked list of
   * {@link CodeWriter CodeWriter} objects, linked to each other by their {@link
   * CodeWriter#next} field. This field stores the last element of this list.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="200:3:200:13">CodeWriter</jtok>
<jtok eid="1" type="field_name" span="200:14:200:24">lastMethod</jtok>
<jtok eid="1" type="block_comment" span="202:3:204:6">/**
   * The number of entries in the InnerClasses attribute.
   */</jtok>
<jtok eid="1" type="field_name" span="206:15:206:32">innerClassesCount</jtok>
<jtok eid="1" type="block_comment" span="208:3:210:6">/**
   * The InnerClasses attribute.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="212:11:212:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="212:22:212:34">innerClasses</jtok>
<jtok eid="1" type="block_comment" span="214:3:216:6">/**
   * A reusable key used to look for items in the hash {@link #table table}.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="218:3:218:7">Item</jtok>
<jtok eid="1" type="field_name" span="218:8:218:11">key</jtok>
<jtok eid="1" type="block_comment" span="220:3:222:6">/**
   * A reusable key used to look for items in the hash {@link #table table}.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="224:3:224:7">Item</jtok>
<jtok eid="1" type="field_name" span="224:8:224:12">key2</jtok>
<jtok eid="1" type="block_comment" span="226:3:228:6">/**
   * A reusable key used to look for items in the hash {@link #table table}.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="230:3:230:7">Item</jtok>
<jtok eid="1" type="field_name" span="230:8:230:12">key3</jtok>
<jtok eid="1" type="block_comment" span="232:3:234:6">/**
   * The type of instructions without any label.
   */</jtok>
<jtok eid="1" type="field_name" span="236:20:236:30">NOARG_INSN</jtok>
<jtok eid="1" type="block_comment" span="238:3:240:6">/**
   * The type of instructions with an signed byte label.
   */</jtok>
<jtok eid="1" type="field_name" span="242:20:242:30">SBYTE_INSN</jtok>
<jtok eid="1" type="block_comment" span="244:3:246:6">/**
   * The type of instructions with an signed short label.
   */</jtok>
<jtok eid="1" type="field_name" span="248:20:248:30">SHORT_INSN</jtok>
<jtok eid="1" type="block_comment" span="250:3:252:6">/**
   * The type of instructions with a local variable index label.
   */</jtok>
<jtok eid="1" type="field_name" span="254:20:254:28">VAR_INSN</jtok>
<jtok eid="1" type="block_comment" span="256:3:258:6">/**
   * The type of instructions with an implicit local variable index label.
   */</jtok>
<jtok eid="1" type="field_name" span="260:20:260:32">IMPLVAR_INSN</jtok>
<jtok eid="1" type="block_comment" span="262:3:264:6">/**
   * The type of instructions with a type descriptor argument.
   */</jtok>
<jtok eid="1" type="field_name" span="266:20:266:29">TYPE_INSN</jtok>
<jtok eid="1" type="block_comment" span="268:3:270:6">/**
   * The type of field and method invocations instructions.
   */</jtok>
<jtok eid="1" type="field_name" span="272:20:272:36">FIELDORMETH_INSN</jtok>
<jtok eid="1" type="block_comment" span="274:3:276:6">/**
   * The type of the INVOKEINTERFACE instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="278:20:278:32">ITFMETH_INSN</jtok>
<jtok eid="1" type="block_comment" span="280:3:282:6">/**
   * The type of instructions with a 2 bytes bytecode offset label.
   */</jtok>
<jtok eid="1" type="field_name" span="284:20:284:30">LABEL_INSN</jtok>
<jtok eid="1" type="block_comment" span="286:3:288:6">/**
   * The type of instructions with a 4 bytes bytecode offset label.
   */</jtok>
<jtok eid="1" type="field_name" span="290:20:290:31">LABELW_INSN</jtok>
<jtok eid="1" type="block_comment" span="292:3:294:6">/**
   * The type of the LDC instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="296:20:296:28">LDC_INSN</jtok>
<jtok eid="1" type="block_comment" span="298:3:300:6">/**
   * The type of the LDC_W and LDC2_W instructions.
   */</jtok>
<jtok eid="1" type="field_name" span="302:20:302:29">LDCW_INSN</jtok>
<jtok eid="1" type="block_comment" span="304:3:306:6">/**
   * The type of the IINC instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="308:20:308:29">IINC_INSN</jtok>
<jtok eid="1" type="block_comment" span="310:3:312:6">/**
   * The type of the TABLESWITCH instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="314:20:314:29">TABL_INSN</jtok>
<jtok eid="1" type="block_comment" span="316:3:318:6">/**
   * The type of the LOOKUPSWITCH instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="320:20:320:29">LOOK_INSN</jtok>
<jtok eid="1" type="block_comment" span="322:3:324:6">/**
   * The type of the MULTIANEWARRAY instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="326:20:326:29">MANA_INSN</jtok>
<jtok eid="1" type="block_comment" span="328:3:330:6">/**
   * The type of the WIDE instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="332:20:332:29">WIDE_INSN</jtok>
<jtok eid="1" type="block_comment" span="334:3:336:6">/**
   * The instruction types of all JVM opcodes.
   */</jtok>
<jtok eid="1" type="field_name" span="338:17:338:21">TYPE</jtok>
<jtok eid="1" type="line_comment" span="340:3:340:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="341:3:341:24">// Static initializer</jtok>
<jtok eid="1" type="line_comment" span="342:3:342:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="344:3:346:6">/**
   * Computes the instruction types of JVM opcodes.
   */</jtok>
<jtok eid="1" type="field_name" span="349:9:349:10">i</jtok>
<jtok eid="1" type="field_name" span="350:12:350:13">b</jtok>
<jtok eid="1" type="class_or_interface_ref" span="351:5:351:11">String</jtok>
<jtok eid="1" type="field_name" span="351:12:351:13">s</jtok>
<jtok eid="1" type="string_literal" span="352:7:352:77">"AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEE"</jtok>
<jtok eid="1" type="string_literal" span="353:7:353:77">"EEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAA"</jtok>
<jtok eid="1" type="string_literal" span="354:7:354:77">"AAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJII"</jtok>
<jtok eid="1" type="string_literal" span="355:7:355:25">"IIIIIIIIIIIIIIII"</jtok>
<jtok eid="1" type="primary_name_ref" span="356:10:356:11">i</jtok>
<jtok eid="1" type="primary_name_ref" span="356:17:356:18">i</jtok>
<jtok eid="1" type="primary_name_ref" span="356:21:356:22">b</jtok>
<jtok eid="1" type="qualified_name_ref" span="356:23:356:29">length</jtok>
<jtok eid="1" type="primary_name_ref" span="356:33:356:34">i</jtok>
<jtok eid="1" type="primary_name_ref" span="357:7:357:8">b</jtok>
<jtok eid="1" type="primary_name_ref" span="357:9:357:10">i</jtok>
<jtok eid="1" type="primary_name_ref" span="357:21:357:22">s</jtok>
<jtok eid="1" type="method_call" span="357:23:357:29">charAt</jtok>
<jtok eid="1" type="primary_name_ref" span="357:30:357:31">i</jtok>
<jtok eid="1" type="primary_name_ref" span="359:5:359:9">TYPE</jtok>
<jtok eid="1" type="primary_name_ref" span="359:12:359:13">b</jtok>
<jtok eid="1" type="block_comment" span="361:5:426:7">/* code to generate the above string

    // SBYTE_INSN instructions
    b[Constants.NEWARRAY] = SBYTE_INSN;
    b[Constants.BIPUSH] = SBYTE_INSN;

    // SHORT_INSN instructions
    b[Constants.SIPUSH] = SHORT_INSN;

    // (IMPL)VAR_INSN instructions
    b[Constants.RET] = VAR_INSN;
    for (i = Constants.ILOAD; i &lt;= Constants.ALOAD; ++i) {
      b[i] = VAR_INSN;
    }
    for (i = Constants.ISTORE; i &lt;= Constants.ASTORE; ++i) {
      b[i] = VAR_INSN;
    }
    for (i = 26; i &lt;= 45; ++i) { // ILOAD_0 to ALOAD_3
      b[i] = IMPLVAR_INSN;
    }
    for (i = 59; i &lt;= 78; ++i) { // ISTORE_0 to ASTORE_3
      b[i] = IMPLVAR_INSN;
    }

    // TYPE_INSN instructions
    b[Constants.NEW] = TYPE_INSN;
    b[Constants.ANEWARRAY] = TYPE_INSN;
    b[Constants.CHECKCAST] = TYPE_INSN;
    b[Constants.INSTANCEOF] = TYPE_INSN;

    // (Set)FIELDORMETH_INSN instructions
    for (i = Constants.GETSTATIC; i &lt;= Constants.INVOKESTATIC; ++i) {
      b[i] = FIELDORMETH_INSN;
    }
    b[Constants.INVOKEINTERFACE] = ITFMETH_INSN;

    // LABEL(W)_INSN instructions
    for (i = Constants.IFEQ; i &lt;= Constants.JSR; ++i) {
      b[i] = LABEL_INSN;
    }
    b[Constants.IFNULL] = LABEL_INSN;
    b[Constants.IFNONNULL] = LABEL_INSN;
    b[200] = LABELW_INSN; // GOTO_W
    b[201] = LABELW_INSN; // JSR_W
    // temporary opcodes used internally by ASM - see Label and CodeWriter
    for (i = 202; i &lt; 220; ++i) {
      b[i] = LABEL_INSN;
    }

    // LDC(_W) instructions
    b[Constants.LDC] = LDC_INSN;
    b[19] = LDCW_INSN; // LDC_W
    b[20] = LDCW_INSN; // LDC2_W

    // special instructions
    b[Constants.IINC] = IINC_INSN;
    b[Constants.TABLESWITCH] = TABL_INSN;
    b[Constants.LOOKUPSWITCH] = LOOK_INSN;
    b[Constants.MULTIANEWARRAY] = MANA_INSN;
    b[196] = WIDE_INSN; // WIDE

    for (i = 0; i &lt; b.length; ++i) {
      System.err.print((char)('A' + b[i]));
    }
    System.err.println();
    */</jtok>
<jtok eid="1" type="line_comment" span="429:3:429:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="430:3:430:17">// Constructor</jtok>
<jtok eid="1" type="line_comment" span="431:3:431:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="433:3:443:6">/**
   * Constructs a new {@link ClassWriter ClassWriter} object.
   *
   * @param computeMaxs &lt;tt&gt;true&lt;/tt&gt; if the maximum stack size and the maximum
   *      number of local variables must be automatically computed. If this flag
   *      is &lt;tt&gt;true&lt;/tt&gt;, then the arguments of the {@link
   *      CodeVisitor#visitMaxs visitMaxs} method of the {@link CodeVisitor
   *      CodeVisitor} returned by the {@link #visitMethod visitMethod} method
   *      will be ignored, and computed automatically from the signature and
   *      the bytecode of each method.
   */</jtok>
<jtok eid="2" type="method_name" span="445:10:445:21">ClassWriter</jtok>
<jtok eid="2" type="parameter_name" span="445:37:445:48">computeMaxs</jtok>
<jtok eid="2" type="primary_name_ref" span="446:5:446:10">index</jtok>
<jtok eid="2" type="primary_name_ref" span="447:5:447:9">pool</jtok>
<jtok eid="2" type="constructor_call" span="447:16:447:26">ByteVector</jtok>
<jtok eid="2" type="primary_name_ref" span="448:5:448:10">table</jtok>
<jtok eid="2" type="constructor_call" span="448:17:448:21">Item</jtok>
<jtok eid="2" type="primary_name_ref" span="449:5:449:14">threshold</jtok>
<jtok eid="2" type="primary_name_ref" span="449:29:449:34">table</jtok>
<jtok eid="2" type="qualified_name_ref" span="449:35:449:41">length</jtok>
<jtok eid="2" type="primary_name_ref" span="450:5:450:8">key</jtok>
<jtok eid="2" type="constructor_call" span="450:15:450:19">Item</jtok>
<jtok eid="2" type="primary_name_ref" span="451:5:451:9">key2</jtok>
<jtok eid="2" type="constructor_call" span="451:16:451:20">Item</jtok>
<jtok eid="2" type="primary_name_ref" span="452:5:452:9">key3</jtok>
<jtok eid="2" type="constructor_call" span="452:16:452:20">Item</jtok>
<jtok eid="2" type="qualified_name_ref" span="453:10:453:21">computeMaxs</jtok>
<jtok eid="2" type="primary_name_ref" span="453:24:453:35">computeMaxs</jtok>
<jtok eid="1" type="line_comment" span="456:3:456:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="457:3:457:50">// Implementation of the ClassVisitor interface</jtok>
<jtok eid="1" type="line_comment" span="458:3:458:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="3" type="method_name" span="460:15:460:20">visit</jtok>
<jtok eid="3" type="parameter_name" span="461:15:461:21">access</jtok>
<jtok eid="3" type="parameter_type" span="462:11:462:17">String</jtok>
<jtok eid="3" type="parameter_name" span="462:18:462:22">name</jtok>
<jtok eid="3" type="parameter_type" span="463:11:463:17">String</jtok>
<jtok eid="3" type="parameter_name" span="463:18:463:27">superName</jtok>
<jtok eid="3" type="parameter_type" span="464:11:464:17">String</jtok>
<jtok eid="3" type="parameter_name" span="464:20:464:30">interfaces</jtok>
<jtok eid="3" type="parameter_type" span="465:11:465:17">String</jtok>
<jtok eid="3" type="parameter_name" span="465:18:465:28">sourceFile</jtok>
<jtok eid="3" type="qualified_name_ref" span="467:10:467:16">access</jtok>
<jtok eid="3" type="primary_name_ref" span="467:19:467:25">access</jtok>
<jtok eid="3" type="qualified_name_ref" span="468:10:468:14">name</jtok>
<jtok eid="3" type="method_call" span="468:17:468:25">newClass</jtok>
<jtok eid="3" type="primary_name_ref" span="468:26:468:30">name</jtok>
<jtok eid="3" type="qualified_name_ref" span="468:32:468:37">index</jtok>
<jtok eid="3" type="qualified_name_ref" span="469:10:469:19">superName</jtok>
<jtok eid="3" type="primary_name_ref" span="469:22:469:31">superName</jtok>
<jtok eid="3" type="method_call" span="469:46:469:54">newClass</jtok>
<jtok eid="3" type="primary_name_ref" span="469:55:469:64">superName</jtok>
<jtok eid="3" type="qualified_name_ref" span="469:66:469:71">index</jtok>
<jtok eid="3" type="primary_name_ref" span="470:9:470:19">interfaces</jtok>
<jtok eid="3" type="primary_name_ref" span="470:31:470:41">interfaces</jtok>
<jtok eid="3" type="qualified_name_ref" span="470:42:470:48">length</jtok>
<jtok eid="3" type="primary_name_ref" span="471:7:471:21">interfaceCount</jtok>
<jtok eid="3" type="primary_name_ref" span="471:24:471:34">interfaces</jtok>
<jtok eid="3" type="qualified_name_ref" span="471:35:471:41">length</jtok>
<jtok eid="3" type="qualified_name_ref" span="472:12:472:22">interfaces</jtok>
<jtok eid="3" type="primary_name_ref" span="472:33:472:47">interfaceCount</jtok>
<jtok eid="3" type="local_variable_name" span="473:16:473:17">i</jtok>
<jtok eid="3" type="primary_name_ref" span="473:23:473:24">i</jtok>
<jtok eid="3" type="primary_name_ref" span="473:27:473:41">interfaceCount</jtok>
<jtok eid="3" type="primary_name_ref" span="473:45:473:46">i</jtok>
<jtok eid="3" type="qualified_name_ref" span="474:14:474:24">interfaces</jtok>
<jtok eid="3" type="primary_name_ref" span="474:25:474:26">i</jtok>
<jtok eid="3" type="method_call" span="474:30:474:38">newClass</jtok>
<jtok eid="3" type="primary_name_ref" span="474:39:474:49">interfaces</jtok>
<jtok eid="3" type="primary_name_ref" span="474:50:474:51">i</jtok>
<jtok eid="3" type="qualified_name_ref" span="474:54:474:59">index</jtok>
<jtok eid="3" type="primary_name_ref" span="477:9:477:19">sourceFile</jtok>
<jtok eid="3" type="method_call" span="478:7:478:14">newUTF8</jtok>
<jtok eid="3" type="string_literal" span="478:15:478:27">"SourceFile"</jtok>
<jtok eid="3" type="qualified_name_ref" span="479:12:479:22">sourceFile</jtok>
<jtok eid="3" type="method_call" span="479:25:479:32">newUTF8</jtok>
<jtok eid="3" type="primary_name_ref" span="479:33:479:43">sourceFile</jtok>
<jtok eid="3" type="primary_name_ref" span="481:10:481:16">access</jtok>
<jtok eid="3" type="primary_name_ref" span="481:19:481:28">Constants</jtok>
<jtok eid="3" type="qualified_name_ref" span="481:29:481:43">ACC_DEPRECATED</jtok>
<jtok eid="3" type="method_call" span="482:7:482:14">newUTF8</jtok>
<jtok eid="3" type="string_literal" span="482:15:482:27">"Deprecated"</jtok>
<jtok eid="4" type="method_name" span="486:15:486:30">visitInnerClass</jtok>
<jtok eid="4" type="parameter_type" span="487:11:487:17">String</jtok>
<jtok eid="4" type="parameter_name" span="487:18:487:22">name</jtok>
<jtok eid="4" type="parameter_type" span="488:11:488:17">String</jtok>
<jtok eid="4" type="parameter_name" span="488:18:488:27">outerName</jtok>
<jtok eid="4" type="parameter_type" span="489:11:489:17">String</jtok>
<jtok eid="4" type="parameter_name" span="489:18:489:27">innerName</jtok>
<jtok eid="4" type="parameter_name" span="490:15:490:21">access</jtok>
<jtok eid="4" type="primary_name_ref" span="492:9:492:21">innerClasses</jtok>
<jtok eid="4" type="method_call" span="493:7:493:14">newUTF8</jtok>
<jtok eid="4" type="string_literal" span="493:15:493:29">"InnerClasses"</jtok>
<jtok eid="4" type="primary_name_ref" span="494:7:494:19">innerClasses</jtok>
<jtok eid="4" type="constructor_call" span="494:26:494:36">ByteVector</jtok>
<jtok eid="4" type="primary_name_ref" span="496:7:496:24">innerClassesCount</jtok>
<jtok eid="4" type="primary_name_ref" span="497:5:497:17">innerClasses</jtok>
<jtok eid="4" type="method_call" span="497:18:497:22">put2</jtok>
<jtok eid="4" type="primary_name_ref" span="497:23:497:27">name</jtok>
<jtok eid="4" type="method_call" span="497:42:497:50">newClass</jtok>
<jtok eid="4" type="primary_name_ref" span="497:51:497:55">name</jtok>
<jtok eid="4" type="qualified_name_ref" span="497:57:497:62">index</jtok>
<jtok eid="4" type="primary_name_ref" span="498:5:498:17">innerClasses</jtok>
<jtok eid="4" type="method_call" span="498:18:498:22">put2</jtok>
<jtok eid="4" type="primary_name_ref" span="498:23:498:32">outerName</jtok>
<jtok eid="4" type="method_call" span="498:47:498:55">newClass</jtok>
<jtok eid="4" type="primary_name_ref" span="498:56:498:65">outerName</jtok>
<jtok eid="4" type="qualified_name_ref" span="498:67:498:72">index</jtok>
<jtok eid="4" type="primary_name_ref" span="499:5:499:17">innerClasses</jtok>
<jtok eid="4" type="method_call" span="499:18:499:22">put2</jtok>
<jtok eid="4" type="primary_name_ref" span="499:23:499:32">innerName</jtok>
<jtok eid="4" type="method_call" span="499:47:499:54">newUTF8</jtok>
<jtok eid="4" type="primary_name_ref" span="499:55:499:64">innerName</jtok>
<jtok eid="4" type="qualified_name_ref" span="499:66:499:71">index</jtok>
<jtok eid="4" type="primary_name_ref" span="500:5:500:17">innerClasses</jtok>
<jtok eid="4" type="method_call" span="500:18:500:22">put2</jtok>
<jtok eid="4" type="primary_name_ref" span="500:23:500:29">access</jtok>
<jtok eid="5" type="method_name" span="503:15:503:25">visitField</jtok>
<jtok eid="5" type="parameter_name" span="504:15:504:21">access</jtok>
<jtok eid="5" type="parameter_type" span="505:11:505:17">String</jtok>
<jtok eid="5" type="parameter_name" span="505:18:505:22">name</jtok>
<jtok eid="5" type="parameter_type" span="506:11:506:17">String</jtok>
<jtok eid="5" type="parameter_name" span="506:18:506:22">desc</jtok>
<jtok eid="5" type="parameter_type" span="507:11:507:17">Object</jtok>
<jtok eid="5" type="parameter_name" span="507:18:507:23">value</jtok>
<jtok eid="5" type="primary_name_ref" span="509:7:509:17">fieldCount</jtok>
<jtok eid="5" type="primary_name_ref" span="510:9:510:15">fields</jtok>
<jtok eid="5" type="primary_name_ref" span="511:7:511:13">fields</jtok>
<jtok eid="5" type="constructor_call" span="511:20:511:30">ByteVector</jtok>
<jtok eid="5" type="primary_name_ref" span="513:5:513:11">fields</jtok>
<jtok eid="5" type="method_call" span="513:12:513:16">put2</jtok>
<jtok eid="5" type="primary_name_ref" span="513:17:513:23">access</jtok>
<jtok eid="5" type="method_call" span="513:25:513:29">put2</jtok>
<jtok eid="5" type="method_call" span="513:30:513:37">newUTF8</jtok>
<jtok eid="5" type="primary_name_ref" span="513:38:513:42">name</jtok>
<jtok eid="5" type="qualified_name_ref" span="513:44:513:49">index</jtok>
<jtok eid="5" type="method_call" span="513:51:513:55">put2</jtok>
<jtok eid="5" type="method_call" span="513:56:513:63">newUTF8</jtok>
<jtok eid="5" type="primary_name_ref" span="513:64:513:68">desc</jtok>
<jtok eid="5" type="qualified_name_ref" span="513:70:513:75">index</jtok>
<jtok eid="5" type="local_variable_name" span="514:9:514:23">attributeCount</jtok>
<jtok eid="5" type="primary_name_ref" span="515:9:515:14">value</jtok>
<jtok eid="5" type="primary_name_ref" span="516:9:516:23">attributeCount</jtok>
<jtok eid="5" type="primary_name_ref" span="518:10:518:16">access</jtok>
<jtok eid="5" type="primary_name_ref" span="518:19:518:28">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="518:29:518:42">ACC_SYNTHETIC</jtok>
<jtok eid="5" type="primary_name_ref" span="519:9:519:23">attributeCount</jtok>
<jtok eid="5" type="primary_name_ref" span="521:10:521:16">access</jtok>
<jtok eid="5" type="primary_name_ref" span="521:19:521:28">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="521:29:521:43">ACC_DEPRECATED</jtok>
<jtok eid="5" type="primary_name_ref" span="522:9:522:23">attributeCount</jtok>
<jtok eid="5" type="primary_name_ref" span="524:5:524:11">fields</jtok>
<jtok eid="5" type="method_call" span="524:12:524:16">put2</jtok>
<jtok eid="5" type="primary_name_ref" span="524:17:524:31">attributeCount</jtok>
<jtok eid="5" type="primary_name_ref" span="525:9:525:14">value</jtok>
<jtok eid="5" type="primary_name_ref" span="526:7:526:13">fields</jtok>
<jtok eid="5" type="method_call" span="526:14:526:18">put2</jtok>
<jtok eid="5" type="method_call" span="526:19:526:26">newUTF8</jtok>
<jtok eid="5" type="string_literal" span="526:27:526:42">"ConstantValue"</jtok>
<jtok eid="5" type="qualified_name_ref" span="526:44:526:49">index</jtok>
<jtok eid="5" type="primary_name_ref" span="527:7:527:13">fields</jtok>
<jtok eid="5" type="method_call" span="527:14:527:18">put4</jtok>
<jtok eid="5" type="method_call" span="527:22:527:26">put2</jtok>
<jtok eid="5" type="method_call" span="527:27:527:33">newCst</jtok>
<jtok eid="5" type="primary_name_ref" span="527:34:527:39">value</jtok>
<jtok eid="5" type="qualified_name_ref" span="527:41:527:46">index</jtok>
<jtok eid="5" type="primary_name_ref" span="529:10:529:16">access</jtok>
<jtok eid="5" type="primary_name_ref" span="529:19:529:28">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="529:29:529:42">ACC_SYNTHETIC</jtok>
<jtok eid="5" type="primary_name_ref" span="530:7:530:13">fields</jtok>
<jtok eid="5" type="method_call" span="530:14:530:18">put2</jtok>
<jtok eid="5" type="method_call" span="530:19:530:26">newUTF8</jtok>
<jtok eid="5" type="string_literal" span="530:27:530:38">"Synthetic"</jtok>
<jtok eid="5" type="qualified_name_ref" span="530:40:530:45">index</jtok>
<jtok eid="5" type="method_call" span="530:47:530:51">put4</jtok>
<jtok eid="5" type="primary_name_ref" span="532:10:532:16">access</jtok>
<jtok eid="5" type="primary_name_ref" span="532:19:532:28">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="532:29:532:43">ACC_DEPRECATED</jtok>
<jtok eid="5" type="primary_name_ref" span="533:7:533:13">fields</jtok>
<jtok eid="5" type="method_call" span="533:14:533:18">put2</jtok>
<jtok eid="5" type="method_call" span="533:19:533:26">newUTF8</jtok>
<jtok eid="5" type="string_literal" span="533:27:533:39">"Deprecated"</jtok>
<jtok eid="5" type="qualified_name_ref" span="533:41:533:46">index</jtok>
<jtok eid="5" type="method_call" span="533:48:533:52">put4</jtok>
<jtok eid="6" type="class_or_interface_ref" span="537:10:537:21">CodeVisitor</jtok>
<jtok eid="6" type="method_name" span="537:22:537:33">visitMethod</jtok>
<jtok eid="6" type="parameter_name" span="538:15:538:21">access</jtok>
<jtok eid="6" type="parameter_type" span="539:11:539:17">String</jtok>
<jtok eid="6" type="parameter_name" span="539:18:539:22">name</jtok>
<jtok eid="6" type="parameter_type" span="540:11:540:17">String</jtok>
<jtok eid="6" type="parameter_name" span="540:18:540:22">desc</jtok>
<jtok eid="6" type="parameter_type" span="541:11:541:17">String</jtok>
<jtok eid="6" type="parameter_name" span="541:20:541:30">exceptions</jtok>
<jtok eid="6" type="class_or_interface_ref" span="543:5:543:15">CodeWriter</jtok>
<jtok eid="6" type="local_variable_name" span="543:16:543:18">cw</jtok>
<jtok eid="6" type="constructor_call" span="543:25:543:35">CodeWriter</jtok>
<jtok eid="6" type="primary_name_ref" span="543:42:543:53">computeMaxs</jtok>
<jtok eid="6" type="primary_name_ref" span="544:5:544:7">cw</jtok>
<jtok eid="6" type="method_call" span="544:8:544:12">init</jtok>
<jtok eid="6" type="primary_name_ref" span="544:13:544:19">access</jtok>
<jtok eid="6" type="primary_name_ref" span="544:21:544:25">name</jtok>
<jtok eid="6" type="primary_name_ref" span="544:27:544:31">desc</jtok>
<jtok eid="6" type="primary_name_ref" span="544:33:544:43">exceptions</jtok>
<jtok eid="6" type="primary_name_ref" span="545:12:545:14">cw</jtok>
<jtok eid="7" type="method_name" span="548:15:548:23">visitEnd</jtok>
<jtok eid="1" type="line_comment" span="551:3:551:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="552:3:552:26">// Other public methods</jtok>
<jtok eid="1" type="line_comment" span="553:3:553:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="555:3:559:6">/**
   * Returns the bytecode of the class that was build with this class writer.
   *
   * @return the bytecode of the class that was build with this class writer.
   */</jtok>
<jtok eid="8" type="method_name" span="561:17:561:28">toByteArray</jtok>
<jtok eid="8" type="line_comment" span="562:5:562:60">// computes the real size of the bytecode of this class</jtok>
<jtok eid="8" type="local_variable_name" span="563:9:563:13">size</jtok>
<jtok eid="8" type="primary_name_ref" span="563:23:563:37">interfaceCount</jtok>
<jtok eid="8" type="primary_name_ref" span="564:9:564:15">fields</jtok>
<jtok eid="8" type="primary_name_ref" span="565:7:565:11">size</jtok>
<jtok eid="8" type="primary_name_ref" span="565:15:565:21">fields</jtok>
<jtok eid="8" type="qualified_name_ref" span="565:22:565:28">length</jtok>
<jtok eid="8" type="local_variable_name" span="567:9:567:18">nbMethods</jtok>
<jtok eid="8" type="class_or_interface_ref" span="568:5:568:15">CodeWriter</jtok>
<jtok eid="8" type="local_variable_name" span="568:16:568:18">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="568:21:568:32">firstMethod</jtok>
<jtok eid="8" type="primary_name_ref" span="569:12:569:14">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="570:9:570:18">nbMethods</jtok>
<jtok eid="8" type="primary_name_ref" span="571:7:571:11">size</jtok>
<jtok eid="8" type="primary_name_ref" span="571:15:571:17">cb</jtok>
<jtok eid="8" type="method_call" span="571:18:571:25">getSize</jtok>
<jtok eid="8" type="primary_name_ref" span="572:7:572:9">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="572:12:572:14">cb</jtok>
<jtok eid="8" type="qualified_name_ref" span="572:15:572:19">next</jtok>
<jtok eid="8" type="primary_name_ref" span="574:5:574:9">size</jtok>
<jtok eid="8" type="primary_name_ref" span="574:13:574:17">pool</jtok>
<jtok eid="8" type="qualified_name_ref" span="574:18:574:24">length</jtok>
<jtok eid="8" type="local_variable_name" span="575:9:575:23">attributeCount</jtok>
<jtok eid="8" type="primary_name_ref" span="576:9:576:19">sourceFile</jtok>
<jtok eid="8" type="primary_name_ref" span="577:9:577:23">attributeCount</jtok>
<jtok eid="8" type="primary_name_ref" span="578:7:578:11">size</jtok>
<jtok eid="8" type="primary_name_ref" span="580:10:580:16">access</jtok>
<jtok eid="8" type="primary_name_ref" span="580:19:580:28">Constants</jtok>
<jtok eid="8" type="qualified_name_ref" span="580:29:580:43">ACC_DEPRECATED</jtok>
<jtok eid="8" type="primary_name_ref" span="581:9:581:23">attributeCount</jtok>
<jtok eid="8" type="primary_name_ref" span="582:7:582:11">size</jtok>
<jtok eid="8" type="primary_name_ref" span="584:9:584:21">innerClasses</jtok>
<jtok eid="8" type="primary_name_ref" span="585:9:585:23">attributeCount</jtok>
<jtok eid="8" type="primary_name_ref" span="586:7:586:11">size</jtok>
<jtok eid="8" type="primary_name_ref" span="586:19:586:31">innerClasses</jtok>
<jtok eid="8" type="qualified_name_ref" span="586:32:586:38">length</jtok>
<jtok eid="8" type="line_comment" span="588:5:588:75">// allocates a byte vector of this size, in order to avoid unnecessary</jtok>
<jtok eid="8" type="line_comment" span="589:5:589:63">// arraycopy operations in the ByteVector.enlarge() method</jtok>
<jtok eid="8" type="class_or_interface_ref" span="590:5:590:15">ByteVector</jtok>
<jtok eid="8" type="local_variable_name" span="590:16:590:19">out</jtok>
<jtok eid="8" type="constructor_call" span="590:26:590:36">ByteVector</jtok>
<jtok eid="8" type="primary_name_ref" span="590:37:590:41">size</jtok>
<jtok eid="8" type="primary_name_ref" span="591:5:591:8">out</jtok>
<jtok eid="8" type="method_call" span="591:9:591:13">put4</jtok>
<jtok eid="8" type="method_call" span="591:26:591:30">put2</jtok>
<jtok eid="8" type="method_call" span="591:34:591:38">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="592:5:592:8">out</jtok>
<jtok eid="8" type="method_call" span="592:9:592:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="592:14:592:19">index</jtok>
<jtok eid="8" type="method_call" span="592:21:592:33">putByteArray</jtok>
<jtok eid="8" type="primary_name_ref" span="592:34:592:38">pool</jtok>
<jtok eid="8" type="qualified_name_ref" span="592:39:592:43">data</jtok>
<jtok eid="8" type="primary_name_ref" span="592:48:592:52">pool</jtok>
<jtok eid="8" type="qualified_name_ref" span="592:53:592:59">length</jtok>
<jtok eid="8" type="primary_name_ref" span="593:5:593:8">out</jtok>
<jtok eid="8" type="method_call" span="593:9:593:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="593:14:593:20">access</jtok>
<jtok eid="8" type="method_call" span="593:22:593:26">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="593:27:593:31">name</jtok>
<jtok eid="8" type="method_call" span="593:33:593:37">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="593:38:593:47">superName</jtok>
<jtok eid="8" type="primary_name_ref" span="594:5:594:8">out</jtok>
<jtok eid="8" type="method_call" span="594:9:594:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="594:14:594:28">interfaceCount</jtok>
<jtok eid="8" type="local_variable_name" span="595:14:595:15">i</jtok>
<jtok eid="8" type="primary_name_ref" span="595:21:595:22">i</jtok>
<jtok eid="8" type="primary_name_ref" span="595:25:595:39">interfaceCount</jtok>
<jtok eid="8" type="primary_name_ref" span="595:43:595:44">i</jtok>
<jtok eid="8" type="primary_name_ref" span="596:7:596:10">out</jtok>
<jtok eid="8" type="method_call" span="596:11:596:15">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="596:16:596:26">interfaces</jtok>
<jtok eid="8" type="primary_name_ref" span="596:27:596:28">i</jtok>
<jtok eid="8" type="primary_name_ref" span="598:5:598:8">out</jtok>
<jtok eid="8" type="method_call" span="598:9:598:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="598:14:598:24">fieldCount</jtok>
<jtok eid="8" type="primary_name_ref" span="599:9:599:15">fields</jtok>
<jtok eid="8" type="primary_name_ref" span="600:7:600:10">out</jtok>
<jtok eid="8" type="method_call" span="600:11:600:23">putByteArray</jtok>
<jtok eid="8" type="primary_name_ref" span="600:24:600:30">fields</jtok>
<jtok eid="8" type="qualified_name_ref" span="600:31:600:35">data</jtok>
<jtok eid="8" type="primary_name_ref" span="600:40:600:46">fields</jtok>
<jtok eid="8" type="qualified_name_ref" span="600:47:600:53">length</jtok>
<jtok eid="8" type="primary_name_ref" span="602:5:602:8">out</jtok>
<jtok eid="8" type="method_call" span="602:9:602:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="602:14:602:23">nbMethods</jtok>
<jtok eid="8" type="primary_name_ref" span="603:5:603:7">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="603:10:603:21">firstMethod</jtok>
<jtok eid="8" type="primary_name_ref" span="604:12:604:14">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="605:7:605:9">cb</jtok>
<jtok eid="8" type="method_call" span="605:10:605:13">put</jtok>
<jtok eid="8" type="primary_name_ref" span="605:14:605:17">out</jtok>
<jtok eid="8" type="primary_name_ref" span="606:7:606:9">cb</jtok>
<jtok eid="8" type="primary_name_ref" span="606:12:606:14">cb</jtok>
<jtok eid="8" type="qualified_name_ref" span="606:15:606:19">next</jtok>
<jtok eid="8" type="primary_name_ref" span="608:5:608:8">out</jtok>
<jtok eid="8" type="method_call" span="608:9:608:13">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="608:14:608:28">attributeCount</jtok>
<jtok eid="8" type="primary_name_ref" span="609:9:609:19">sourceFile</jtok>
<jtok eid="8" type="primary_name_ref" span="610:7:610:10">out</jtok>
<jtok eid="8" type="method_call" span="610:11:610:15">put2</jtok>
<jtok eid="8" type="method_call" span="610:16:610:23">newUTF8</jtok>
<jtok eid="8" type="string_literal" span="610:24:610:36">"SourceFile"</jtok>
<jtok eid="8" type="qualified_name_ref" span="610:38:610:43">index</jtok>
<jtok eid="8" type="method_call" span="610:45:610:49">put4</jtok>
<jtok eid="8" type="method_call" span="610:53:610:57">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="610:58:610:68">sourceFile</jtok>
<jtok eid="8" type="qualified_name_ref" span="610:69:610:74">index</jtok>
<jtok eid="8" type="primary_name_ref" span="612:10:612:16">access</jtok>
<jtok eid="8" type="primary_name_ref" span="612:19:612:28">Constants</jtok>
<jtok eid="8" type="qualified_name_ref" span="612:29:612:43">ACC_DEPRECATED</jtok>
<jtok eid="8" type="primary_name_ref" span="613:7:613:10">out</jtok>
<jtok eid="8" type="method_call" span="613:11:613:15">put2</jtok>
<jtok eid="8" type="method_call" span="613:16:613:23">newUTF8</jtok>
<jtok eid="8" type="string_literal" span="613:24:613:36">"Deprecated"</jtok>
<jtok eid="8" type="qualified_name_ref" span="613:38:613:43">index</jtok>
<jtok eid="8" type="method_call" span="613:45:613:49">put4</jtok>
<jtok eid="8" type="primary_name_ref" span="615:9:615:21">innerClasses</jtok>
<jtok eid="8" type="primary_name_ref" span="616:7:616:10">out</jtok>
<jtok eid="8" type="method_call" span="616:11:616:15">put2</jtok>
<jtok eid="8" type="method_call" span="616:16:616:23">newUTF8</jtok>
<jtok eid="8" type="string_literal" span="616:24:616:38">"InnerClasses"</jtok>
<jtok eid="8" type="qualified_name_ref" span="616:40:616:45">index</jtok>
<jtok eid="8" type="primary_name_ref" span="617:7:617:10">out</jtok>
<jtok eid="8" type="method_call" span="617:11:617:15">put4</jtok>
<jtok eid="8" type="primary_name_ref" span="617:16:617:28">innerClasses</jtok>
<jtok eid="8" type="qualified_name_ref" span="617:29:617:35">length</jtok>
<jtok eid="8" type="method_call" span="617:41:617:45">put2</jtok>
<jtok eid="8" type="primary_name_ref" span="617:46:617:63">innerClassesCount</jtok>
<jtok eid="8" type="primary_name_ref" span="618:7:618:10">out</jtok>
<jtok eid="8" type="method_call" span="618:11:618:23">putByteArray</jtok>
<jtok eid="8" type="primary_name_ref" span="618:24:618:36">innerClasses</jtok>
<jtok eid="8" type="qualified_name_ref" span="618:37:618:41">data</jtok>
<jtok eid="8" type="primary_name_ref" span="618:46:618:58">innerClasses</jtok>
<jtok eid="8" type="qualified_name_ref" span="618:59:618:65">length</jtok>
<jtok eid="8" type="primary_name_ref" span="620:12:620:15">out</jtok>
<jtok eid="8" type="qualified_name_ref" span="620:16:620:20">data</jtok>
<jtok eid="1" type="line_comment" span="623:3:623:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="624:3:624:47">// Utility methods: constant pool management</jtok>
<jtok eid="1" type="line_comment" span="625:3:625:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="627:3:636:6">/**
   * Adds a number or string constant to the constant pool of the class being
   * build. Does nothing if the constant pool already contains a similar item.
   *
   * @param cst the value of the constant to be added to the constant pool. This
   *      parameter must be an {@link java.lang.Integer Integer}, a {@link
   *      java.lang.Float Float}, a {@link java.lang.Long Long}, a {@link
          java.lang.Double Double} or a {@link String String}.
   * @return a new or already existing constant item with the given value.
   */</jtok>
<jtok eid="9" type="class_or_interface_ref" span="638:3:638:7">Item</jtok>
<jtok eid="9" type="method_name" span="638:8:638:14">newCst</jtok>
<jtok eid="9" type="parameter_type" span="638:22:638:28">Object</jtok>
<jtok eid="9" type="parameter_name" span="638:29:638:32">cst</jtok>
<jtok eid="9" type="primary_name_ref" span="639:9:639:12">cst</jtok>
<jtok eid="9" type="class_or_interface_ref" span="639:24:639:31">Integer</jtok>
<jtok eid="9" type="local_variable_name" span="640:11:640:14">val</jtok>
<jtok eid="9" type="class_or_interface_ref" span="640:19:640:26">Integer</jtok>
<jtok eid="9" type="primary_name_ref" span="640:27:640:30">cst</jtok>
<jtok eid="9" type="method_call" span="640:32:640:40">intValue</jtok>
<jtok eid="9" type="method_call" span="641:14:641:24">newInteger</jtok>
<jtok eid="9" type="primary_name_ref" span="641:25:641:28">val</jtok>
<jtok eid="9" type="primary_name_ref" span="642:16:642:19">cst</jtok>
<jtok eid="9" type="class_or_interface_ref" span="642:31:642:36">Float</jtok>
<jtok eid="9" type="local_variable_name" span="643:13:643:16">val</jtok>
<jtok eid="9" type="class_or_interface_ref" span="643:21:643:26">Float</jtok>
<jtok eid="9" type="primary_name_ref" span="643:27:643:30">cst</jtok>
<jtok eid="9" type="method_call" span="643:32:643:42">floatValue</jtok>
<jtok eid="9" type="method_call" span="644:14:644:22">newFloat</jtok>
<jtok eid="9" type="primary_name_ref" span="644:23:644:26">val</jtok>
<jtok eid="9" type="primary_name_ref" span="645:16:645:19">cst</jtok>
<jtok eid="9" type="class_or_interface_ref" span="645:31:645:35">Long</jtok>
<jtok eid="9" type="local_variable_name" span="646:12:646:15">val</jtok>
<jtok eid="9" type="class_or_interface_ref" span="646:20:646:24">Long</jtok>
<jtok eid="9" type="primary_name_ref" span="646:25:646:28">cst</jtok>
<jtok eid="9" type="method_call" span="646:30:646:39">longValue</jtok>
<jtok eid="9" type="method_call" span="647:14:647:21">newLong</jtok>
<jtok eid="9" type="primary_name_ref" span="647:22:647:25">val</jtok>
<jtok eid="9" type="primary_name_ref" span="648:16:648:19">cst</jtok>
<jtok eid="9" type="class_or_interface_ref" span="648:31:648:37">Double</jtok>
<jtok eid="9" type="local_variable_name" span="649:14:649:17">val</jtok>
<jtok eid="9" type="class_or_interface_ref" span="649:22:649:28">Double</jtok>
<jtok eid="9" type="primary_name_ref" span="649:29:649:32">cst</jtok>
<jtok eid="9" type="method_call" span="649:34:649:45">doubleValue</jtok>
<jtok eid="9" type="method_call" span="650:14:650:23">newDouble</jtok>
<jtok eid="9" type="primary_name_ref" span="650:24:650:27">val</jtok>
<jtok eid="9" type="primary_name_ref" span="651:16:651:19">cst</jtok>
<jtok eid="9" type="class_or_interface_ref" span="651:31:651:37">String</jtok>
<jtok eid="9" type="method_call" span="652:14:652:23">newString</jtok>
<jtok eid="9" type="class_or_interface_ref" span="652:25:652:31">String</jtok>
<jtok eid="9" type="primary_name_ref" span="652:32:652:35">cst</jtok>
<jtok eid="9" type="constructor_call" span="654:17:654:41">IllegalArgumentException</jtok>
<jtok eid="9" type="string_literal" span="654:42:654:50">"value "</jtok>
<jtok eid="9" type="primary_name_ref" span="654:53:654:56">cst</jtok>
<jtok eid="1" type="block_comment" span="658:3:664:6">/**
   * Adds an UTF string to the constant pool of the class being build. Does
   * nothing if the constant pool already contains a similar item.
   *
   * @param value the String value.
   * @return a new or already existing UTF8 item.
   */</jtok>
<jtok eid="10" type="class_or_interface_ref" span="666:3:666:7">Item</jtok>
<jtok eid="10" type="method_name" span="666:8:666:15">newUTF8</jtok>
<jtok eid="10" type="parameter_type" span="666:23:666:29">String</jtok>
<jtok eid="10" type="parameter_name" span="666:30:666:35">value</jtok>
<jtok eid="10" type="primary_name_ref" span="667:5:667:8">key</jtok>
<jtok eid="10" type="method_call" span="667:9:667:12">set</jtok>
<jtok eid="10" type="primary_name_ref" span="667:13:667:17">UTF8</jtok>
<jtok eid="10" type="primary_name_ref" span="667:19:667:24">value</jtok>
<jtok eid="10" type="class_or_interface_ref" span="668:5:668:9">Item</jtok>
<jtok eid="10" type="local_variable_name" span="668:10:668:16">result</jtok>
<jtok eid="10" type="method_call" span="668:19:668:22">get</jtok>
<jtok eid="10" type="primary_name_ref" span="668:23:668:26">key</jtok>
<jtok eid="10" type="primary_name_ref" span="669:9:669:15">result</jtok>
<jtok eid="10" type="primary_name_ref" span="670:7:670:11">pool</jtok>
<jtok eid="10" type="method_call" span="670:12:670:16">put1</jtok>
<jtok eid="10" type="primary_name_ref" span="670:17:670:21">UTF8</jtok>
<jtok eid="10" type="method_call" span="670:23:670:29">putUTF</jtok>
<jtok eid="10" type="primary_name_ref" span="670:30:670:35">value</jtok>
<jtok eid="10" type="primary_name_ref" span="671:7:671:13">result</jtok>
<jtok eid="10" type="constructor_call" span="671:20:671:24">Item</jtok>
<jtok eid="10" type="primary_name_ref" span="671:25:671:30">index</jtok>
<jtok eid="10" type="primary_name_ref" span="671:34:671:37">key</jtok>
<jtok eid="10" type="method_call" span="672:7:672:10">put</jtok>
<jtok eid="10" type="primary_name_ref" span="672:11:672:17">result</jtok>
<jtok eid="10" type="primary_name_ref" span="674:12:674:18">result</jtok>
<jtok eid="1" type="block_comment" span="677:3:683:6">/**
   * Adds a class reference to the constant pool of the class being build. Does
   * nothing if the constant pool already contains a similar item.
   *
   * @param value the internal name of the class.
   * @return a new or already existing class reference item.
   */</jtok>
<jtok eid="11" type="class_or_interface_ref" span="685:3:685:7">Item</jtok>
<jtok eid="11" type="method_name" span="685:8:685:16">newClass</jtok>
<jtok eid="11" type="parameter_type" span="685:24:685:30">String</jtok>
<jtok eid="11" type="parameter_name" span="685:31:685:36">value</jtok>
<jtok eid="11" type="primary_name_ref" span="686:5:686:9">key2</jtok>
<jtok eid="11" type="method_call" span="686:10:686:13">set</jtok>
<jtok eid="11" type="primary_name_ref" span="686:14:686:19">CLASS</jtok>
<jtok eid="11" type="primary_name_ref" span="686:21:686:26">value</jtok>
<jtok eid="11" type="class_or_interface_ref" span="687:5:687:9">Item</jtok>
<jtok eid="11" type="local_variable_name" span="687:10:687:16">result</jtok>
<jtok eid="11" type="method_call" span="687:19:687:22">get</jtok>
<jtok eid="11" type="primary_name_ref" span="687:23:687:27">key2</jtok>
<jtok eid="11" type="primary_name_ref" span="688:9:688:15">result</jtok>
<jtok eid="11" type="primary_name_ref" span="689:7:689:11">pool</jtok>
<jtok eid="11" type="method_call" span="689:12:689:17">put12</jtok>
<jtok eid="11" type="primary_name_ref" span="689:18:689:23">CLASS</jtok>
<jtok eid="11" type="method_call" span="689:25:689:32">newUTF8</jtok>
<jtok eid="11" type="primary_name_ref" span="689:33:689:38">value</jtok>
<jtok eid="11" type="qualified_name_ref" span="689:40:689:45">index</jtok>
<jtok eid="11" type="primary_name_ref" span="690:7:690:13">result</jtok>
<jtok eid="11" type="constructor_call" span="690:20:690:24">Item</jtok>
<jtok eid="11" type="primary_name_ref" span="690:25:690:30">index</jtok>
<jtok eid="11" type="primary_name_ref" span="690:34:690:38">key2</jtok>
<jtok eid="11" type="method_call" span="691:7:691:10">put</jtok>
<jtok eid="11" type="primary_name_ref" span="691:11:691:17">result</jtok>
<jtok eid="11" type="primary_name_ref" span="693:12:693:18">result</jtok>
<jtok eid="1" type="block_comment" span="696:3:704:6">/**
   * Adds a field reference to the constant pool of the class being build. Does
   * nothing if the constant pool already contains a similar item.
   *
   * @param owner the internal name of the field's owner class.
   * @param name the field's name.
   * @param desc the field's descriptor.
   * @return a new or already existing field reference item.
   */</jtok>
<jtok eid="12" type="class_or_interface_ref" span="706:3:706:7">Item</jtok>
<jtok eid="12" type="method_name" span="706:8:706:16">newField</jtok>
<jtok eid="12" type="parameter_type" span="707:11:707:17">String</jtok>
<jtok eid="12" type="parameter_name" span="707:18:707:23">owner</jtok>
<jtok eid="12" type="parameter_type" span="708:11:708:17">String</jtok>
<jtok eid="12" type="parameter_name" span="708:18:708:22">name</jtok>
<jtok eid="12" type="parameter_type" span="709:11:709:17">String</jtok>
<jtok eid="12" type="parameter_name" span="709:18:709:22">desc</jtok>
<jtok eid="12" type="primary_name_ref" span="711:5:711:9">key3</jtok>
<jtok eid="12" type="method_call" span="711:10:711:13">set</jtok>
<jtok eid="12" type="primary_name_ref" span="711:14:711:19">FIELD</jtok>
<jtok eid="12" type="primary_name_ref" span="711:21:711:26">owner</jtok>
<jtok eid="12" type="primary_name_ref" span="711:28:711:32">name</jtok>
<jtok eid="12" type="primary_name_ref" span="711:34:711:38">desc</jtok>
<jtok eid="12" type="class_or_interface_ref" span="712:5:712:9">Item</jtok>
<jtok eid="12" type="local_variable_name" span="712:10:712:16">result</jtok>
<jtok eid="12" type="method_call" span="712:19:712:22">get</jtok>
<jtok eid="12" type="primary_name_ref" span="712:23:712:27">key3</jtok>
<jtok eid="12" type="primary_name_ref" span="713:9:713:15">result</jtok>
<jtok eid="12" type="method_call" span="714:7:714:13">put122</jtok>
<jtok eid="12" type="primary_name_ref" span="714:14:714:19">FIELD</jtok>
<jtok eid="12" type="method_call" span="714:21:714:29">newClass</jtok>
<jtok eid="12" type="primary_name_ref" span="714:30:714:35">owner</jtok>
<jtok eid="12" type="qualified_name_ref" span="714:37:714:42">index</jtok>
<jtok eid="12" type="method_call" span="714:44:714:55">newNameType</jtok>
<jtok eid="12" type="primary_name_ref" span="714:56:714:60">name</jtok>
<jtok eid="12" type="primary_name_ref" span="714:62:714:66">desc</jtok>
<jtok eid="12" type="qualified_name_ref" span="714:68:714:73">index</jtok>
<jtok eid="12" type="primary_name_ref" span="715:7:715:13">result</jtok>
<jtok eid="12" type="constructor_call" span="715:20:715:24">Item</jtok>
<jtok eid="12" type="primary_name_ref" span="715:25:715:30">index</jtok>
<jtok eid="12" type="primary_name_ref" span="715:34:715:38">key3</jtok>
<jtok eid="12" type="method_call" span="716:7:716:10">put</jtok>
<jtok eid="12" type="primary_name_ref" span="716:11:716:17">result</jtok>
<jtok eid="12" type="primary_name_ref" span="718:12:718:18">result</jtok>
<jtok eid="1" type="block_comment" span="721:3:729:6">/**
   * Adds a method reference to the constant pool of the class being build. Does
   * nothing if the constant pool already contains a similar item.
   *
   * @param owner the internal name of the method's owner class.
   * @param name the method's name.
   * @param desc the method's descriptor.
   * @return a new or already existing method reference item.
   */</jtok>
<jtok eid="13" type="class_or_interface_ref" span="731:3:731:7">Item</jtok>
<jtok eid="13" type="method_name" span="731:8:731:17">newMethod</jtok>
<jtok eid="13" type="parameter_type" span="732:11:732:17">String</jtok>
<jtok eid="13" type="parameter_name" span="732:18:732:23">owner</jtok>
<jtok eid="13" type="parameter_type" span="733:11:733:17">String</jtok>
<jtok eid="13" type="parameter_name" span="733:18:733:22">name</jtok>
<jtok eid="13" type="parameter_type" span="734:11:734:17">String</jtok>
<jtok eid="13" type="parameter_name" span="734:18:734:22">desc</jtok>
<jtok eid="13" type="primary_name_ref" span="736:5:736:9">key3</jtok>
<jtok eid="13" type="method_call" span="736:10:736:13">set</jtok>
<jtok eid="13" type="primary_name_ref" span="736:14:736:18">METH</jtok>
<jtok eid="13" type="primary_name_ref" span="736:20:736:25">owner</jtok>
<jtok eid="13" type="primary_name_ref" span="736:27:736:31">name</jtok>
<jtok eid="13" type="primary_name_ref" span="736:33:736:37">desc</jtok>
<jtok eid="13" type="class_or_interface_ref" span="737:5:737:9">Item</jtok>
<jtok eid="13" type="local_variable_name" span="737:10:737:16">result</jtok>
<jtok eid="13" type="method_call" span="737:19:737:22">get</jtok>
<jtok eid="13" type="primary_name_ref" span="737:23:737:27">key3</jtok>
<jtok eid="13" type="primary_name_ref" span="738:9:738:15">result</jtok>
<jtok eid="13" type="method_call" span="739:7:739:13">put122</jtok>
<jtok eid="13" type="primary_name_ref" span="739:14:739:18">METH</jtok>
<jtok eid="13" type="method_call" span="739:20:739:28">newClass</jtok>
<jtok eid="13" type="primary_name_ref" span="739:29:739:34">owner</jtok>
<jtok eid="13" type="qualified_name_ref" span="739:36:739:41">index</jtok>
<jtok eid="13" type="method_call" span="739:43:739:54">newNameType</jtok>
<jtok eid="13" type="primary_name_ref" span="739:55:739:59">name</jtok>
<jtok eid="13" type="primary_name_ref" span="739:61:739:65">desc</jtok>
<jtok eid="13" type="qualified_name_ref" span="739:67:739:72">index</jtok>
<jtok eid="13" type="primary_name_ref" span="740:7:740:13">result</jtok>
<jtok eid="13" type="constructor_call" span="740:20:740:24">Item</jtok>
<jtok eid="13" type="primary_name_ref" span="740:25:740:30">index</jtok>
<jtok eid="13" type="primary_name_ref" span="740:34:740:38">key3</jtok>
<jtok eid="13" type="method_call" span="741:7:741:10">put</jtok>
<jtok eid="13" type="primary_name_ref" span="741:11:741:17">result</jtok>
<jtok eid="13" type="primary_name_ref" span="743:12:743:18">result</jtok>
<jtok eid="1" type="block_comment" span="746:3:754:6">/**
   * Adds an interface method reference to the constant pool of the class being
   * build. Does nothing if the constant pool already contains a similar item.
   *
   * @param ownerItf the internal name of the method's owner interface.
   * @param name the method's name.
   * @param desc the method's descriptor.
   * @return a new or already existing interface method reference item.
   */</jtok>
<jtok eid="14" type="class_or_interface_ref" span="756:3:756:7">Item</jtok>
<jtok eid="14" type="method_name" span="756:8:756:20">newItfMethod</jtok>
<jtok eid="14" type="parameter_type" span="757:11:757:17">String</jtok>
<jtok eid="14" type="parameter_name" span="757:18:757:26">ownerItf</jtok>
<jtok eid="14" type="parameter_type" span="758:11:758:17">String</jtok>
<jtok eid="14" type="parameter_name" span="758:18:758:22">name</jtok>
<jtok eid="14" type="parameter_type" span="759:11:759:17">String</jtok>
<jtok eid="14" type="parameter_name" span="759:18:759:22">desc</jtok>
<jtok eid="14" type="primary_name_ref" span="761:5:761:9">key3</jtok>
<jtok eid="14" type="method_call" span="761:10:761:13">set</jtok>
<jtok eid="14" type="primary_name_ref" span="761:14:761:19">IMETH</jtok>
<jtok eid="14" type="primary_name_ref" span="761:21:761:29">ownerItf</jtok>
<jtok eid="14" type="primary_name_ref" span="761:31:761:35">name</jtok>
<jtok eid="14" type="primary_name_ref" span="761:37:761:41">desc</jtok>
<jtok eid="14" type="class_or_interface_ref" span="762:5:762:9">Item</jtok>
<jtok eid="14" type="local_variable_name" span="762:10:762:16">result</jtok>
<jtok eid="14" type="method_call" span="762:19:762:22">get</jtok>
<jtok eid="14" type="primary_name_ref" span="762:23:762:27">key3</jtok>
<jtok eid="14" type="primary_name_ref" span="763:9:763:15">result</jtok>
<jtok eid="14" type="method_call" span="764:7:764:13">put122</jtok>
<jtok eid="14" type="primary_name_ref" span="764:14:764:19">IMETH</jtok>
<jtok eid="14" type="method_call" span="764:21:764:29">newClass</jtok>
<jtok eid="14" type="primary_name_ref" span="764:30:764:38">ownerItf</jtok>
<jtok eid="14" type="qualified_name_ref" span="764:40:764:45">index</jtok>
<jtok eid="14" type="method_call" span="764:47:764:58">newNameType</jtok>
<jtok eid="14" type="primary_name_ref" span="764:59:764:63">name</jtok>
<jtok eid="14" type="primary_name_ref" span="764:65:764:69">desc</jtok>
<jtok eid="14" type="qualified_name_ref" span="764:71:764:76">index</jtok>
<jtok eid="14" type="primary_name_ref" span="765:7:765:13">result</jtok>
<jtok eid="14" type="constructor_call" span="765:20:765:24">Item</jtok>
<jtok eid="14" type="primary_name_ref" span="765:25:765:30">index</jtok>
<jtok eid="14" type="primary_name_ref" span="765:34:765:38">key3</jtok>
<jtok eid="14" type="method_call" span="766:7:766:10">put</jtok>
<jtok eid="14" type="primary_name_ref" span="766:11:766:17">result</jtok>
<jtok eid="14" type="primary_name_ref" span="768:12:768:18">result</jtok>
<jtok eid="1" type="block_comment" span="771:3:777:6">/**
   * Adds an integer to the constant pool of the class being build. Does nothing
   * if the constant pool already contains a similar item.
   *
   * @param value the int value.
   * @return a new or already existing int item.
   */</jtok>
<jtok eid="15" type="class_or_interface_ref" span="779:11:779:15">Item</jtok>
<jtok eid="15" type="method_name" span="779:16:779:26">newInteger</jtok>
<jtok eid="15" type="parameter_name" span="779:38:779:43">value</jtok>
<jtok eid="15" type="primary_name_ref" span="780:5:780:8">key</jtok>
<jtok eid="15" type="method_call" span="780:9:780:12">set</jtok>
<jtok eid="15" type="primary_name_ref" span="780:13:780:18">value</jtok>
<jtok eid="15" type="class_or_interface_ref" span="781:5:781:9">Item</jtok>
<jtok eid="15" type="local_variable_name" span="781:10:781:16">result</jtok>
<jtok eid="15" type="method_call" span="781:19:781:22">get</jtok>
<jtok eid="15" type="primary_name_ref" span="781:23:781:26">key</jtok>
<jtok eid="15" type="primary_name_ref" span="782:9:782:15">result</jtok>
<jtok eid="15" type="primary_name_ref" span="783:7:783:11">pool</jtok>
<jtok eid="15" type="method_call" span="783:12:783:16">put1</jtok>
<jtok eid="15" type="primary_name_ref" span="783:17:783:20">INT</jtok>
<jtok eid="15" type="method_call" span="783:22:783:26">put4</jtok>
<jtok eid="15" type="primary_name_ref" span="783:27:783:32">value</jtok>
<jtok eid="15" type="primary_name_ref" span="784:7:784:13">result</jtok>
<jtok eid="15" type="constructor_call" span="784:20:784:24">Item</jtok>
<jtok eid="15" type="primary_name_ref" span="784:25:784:30">index</jtok>
<jtok eid="15" type="primary_name_ref" span="784:34:784:37">key</jtok>
<jtok eid="15" type="method_call" span="785:7:785:10">put</jtok>
<jtok eid="15" type="primary_name_ref" span="785:11:785:17">result</jtok>
<jtok eid="15" type="primary_name_ref" span="787:12:787:18">result</jtok>
<jtok eid="1" type="block_comment" span="790:3:796:6">/**
   * Adds a float to the constant pool of the class being build. Does nothing if
   * the constant pool already contains a similar item.
   *
   * @param value the float value.
   * @return a new or already existing float item.
   */</jtok>
<jtok eid="16" type="class_or_interface_ref" span="798:11:798:15">Item</jtok>
<jtok eid="16" type="method_name" span="798:16:798:24">newFloat</jtok>
<jtok eid="16" type="parameter_name" span="798:38:798:43">value</jtok>
<jtok eid="16" type="primary_name_ref" span="799:5:799:8">key</jtok>
<jtok eid="16" type="method_call" span="799:9:799:12">set</jtok>
<jtok eid="16" type="primary_name_ref" span="799:13:799:18">value</jtok>
<jtok eid="16" type="class_or_interface_ref" span="800:5:800:9">Item</jtok>
<jtok eid="16" type="local_variable_name" span="800:10:800:16">result</jtok>
<jtok eid="16" type="method_call" span="800:19:800:22">get</jtok>
<jtok eid="16" type="primary_name_ref" span="800:23:800:26">key</jtok>
<jtok eid="16" type="primary_name_ref" span="801:9:801:15">result</jtok>
<jtok eid="16" type="primary_name_ref" span="802:7:802:11">pool</jtok>
<jtok eid="16" type="method_call" span="802:12:802:16">put1</jtok>
<jtok eid="16" type="primary_name_ref" span="802:17:802:22">FLOAT</jtok>
<jtok eid="16" type="method_call" span="802:24:802:28">put4</jtok>
<jtok eid="16" type="primary_name_ref" span="802:29:802:34">Float</jtok>
<jtok eid="16" type="method_call" span="802:35:802:49">floatToIntBits</jtok>
<jtok eid="16" type="primary_name_ref" span="802:50:802:55">value</jtok>
<jtok eid="16" type="primary_name_ref" span="803:7:803:13">result</jtok>
<jtok eid="16" type="constructor_call" span="803:20:803:24">Item</jtok>
<jtok eid="16" type="primary_name_ref" span="803:25:803:30">index</jtok>
<jtok eid="16" type="primary_name_ref" span="803:34:803:37">key</jtok>
<jtok eid="16" type="method_call" span="804:7:804:10">put</jtok>
<jtok eid="16" type="primary_name_ref" span="804:11:804:17">result</jtok>
<jtok eid="16" type="primary_name_ref" span="806:12:806:18">result</jtok>
<jtok eid="1" type="block_comment" span="809:3:815:6">/**
   * Adds a long to the constant pool of the class being build. Does nothing if
   * the constant pool already contains a similar item.
   *
   * @param value the long value.
   * @return a new or already existing long item.
   */</jtok>
<jtok eid="17" type="class_or_interface_ref" span="817:11:817:15">Item</jtok>
<jtok eid="17" type="method_name" span="817:16:817:23">newLong</jtok>
<jtok eid="17" type="parameter_name" span="817:36:817:41">value</jtok>
<jtok eid="17" type="primary_name_ref" span="818:5:818:8">key</jtok>
<jtok eid="17" type="method_call" span="818:9:818:12">set</jtok>
<jtok eid="17" type="primary_name_ref" span="818:13:818:18">value</jtok>
<jtok eid="17" type="class_or_interface_ref" span="819:5:819:9">Item</jtok>
<jtok eid="17" type="local_variable_name" span="819:10:819:16">result</jtok>
<jtok eid="17" type="method_call" span="819:19:819:22">get</jtok>
<jtok eid="17" type="primary_name_ref" span="819:23:819:26">key</jtok>
<jtok eid="17" type="primary_name_ref" span="820:9:820:15">result</jtok>
<jtok eid="17" type="primary_name_ref" span="821:7:821:11">pool</jtok>
<jtok eid="17" type="method_call" span="821:12:821:16">put1</jtok>
<jtok eid="17" type="primary_name_ref" span="821:17:821:21">LONG</jtok>
<jtok eid="17" type="method_call" span="821:23:821:27">put8</jtok>
<jtok eid="17" type="primary_name_ref" span="821:28:821:33">value</jtok>
<jtok eid="17" type="primary_name_ref" span="822:7:822:13">result</jtok>
<jtok eid="17" type="constructor_call" span="822:20:822:24">Item</jtok>
<jtok eid="17" type="primary_name_ref" span="822:25:822:30">index</jtok>
<jtok eid="17" type="primary_name_ref" span="822:32:822:35">key</jtok>
<jtok eid="17" type="method_call" span="823:7:823:10">put</jtok>
<jtok eid="17" type="primary_name_ref" span="823:11:823:17">result</jtok>
<jtok eid="17" type="primary_name_ref" span="824:7:824:12">index</jtok>
<jtok eid="17" type="primary_name_ref" span="826:12:826:18">result</jtok>
<jtok eid="1" type="block_comment" span="829:3:835:6">/**
   * Adds a double to the constant pool of the class being build. Does nothing
   * if the constant pool already contains a similar item.
   *
   * @param value the double value.
   * @return a new or already existing double item.
   */</jtok>
<jtok eid="18" type="class_or_interface_ref" span="837:11:837:15">Item</jtok>
<jtok eid="18" type="method_name" span="837:16:837:25">newDouble</jtok>
<jtok eid="18" type="parameter_name" span="837:40:837:45">value</jtok>
<jtok eid="18" type="primary_name_ref" span="838:5:838:8">key</jtok>
<jtok eid="18" type="method_call" span="838:9:838:12">set</jtok>
<jtok eid="18" type="primary_name_ref" span="838:13:838:18">value</jtok>
<jtok eid="18" type="class_or_interface_ref" span="839:5:839:9">Item</jtok>
<jtok eid="18" type="local_variable_name" span="839:10:839:16">result</jtok>
<jtok eid="18" type="method_call" span="839:19:839:22">get</jtok>
<jtok eid="18" type="primary_name_ref" span="839:23:839:26">key</jtok>
<jtok eid="18" type="primary_name_ref" span="840:9:840:15">result</jtok>
<jtok eid="18" type="primary_name_ref" span="841:7:841:11">pool</jtok>
<jtok eid="18" type="method_call" span="841:12:841:16">put1</jtok>
<jtok eid="18" type="primary_name_ref" span="841:17:841:23">DOUBLE</jtok>
<jtok eid="18" type="method_call" span="841:25:841:29">put8</jtok>
<jtok eid="18" type="primary_name_ref" span="841:30:841:36">Double</jtok>
<jtok eid="18" type="method_call" span="841:37:841:53">doubleToLongBits</jtok>
<jtok eid="18" type="primary_name_ref" span="841:54:841:59">value</jtok>
<jtok eid="18" type="primary_name_ref" span="842:7:842:13">result</jtok>
<jtok eid="18" type="constructor_call" span="842:20:842:24">Item</jtok>
<jtok eid="18" type="primary_name_ref" span="842:25:842:30">index</jtok>
<jtok eid="18" type="primary_name_ref" span="842:32:842:35">key</jtok>
<jtok eid="18" type="method_call" span="843:7:843:10">put</jtok>
<jtok eid="18" type="primary_name_ref" span="843:11:843:17">result</jtok>
<jtok eid="18" type="primary_name_ref" span="844:7:844:12">index</jtok>
<jtok eid="18" type="primary_name_ref" span="846:12:846:18">result</jtok>
<jtok eid="1" type="block_comment" span="849:3:855:6">/**
   * Adds a string to the constant pool of the class being build. Does nothing
   * if the constant pool already contains a similar item.
   *
   * @param value the String value.
   * @return a new or already existing string item.
   */</jtok>
<jtok eid="19" type="class_or_interface_ref" span="857:11:857:15">Item</jtok>
<jtok eid="19" type="method_name" span="857:16:857:25">newString</jtok>
<jtok eid="19" type="parameter_type" span="857:33:857:39">String</jtok>
<jtok eid="19" type="parameter_name" span="857:40:857:45">value</jtok>
<jtok eid="19" type="primary_name_ref" span="858:5:858:9">key2</jtok>
<jtok eid="19" type="method_call" span="858:10:858:13">set</jtok>
<jtok eid="19" type="primary_name_ref" span="858:14:858:17">STR</jtok>
<jtok eid="19" type="primary_name_ref" span="858:19:858:24">value</jtok>
<jtok eid="19" type="class_or_interface_ref" span="859:5:859:9">Item</jtok>
<jtok eid="19" type="local_variable_name" span="859:10:859:16">result</jtok>
<jtok eid="19" type="method_call" span="859:19:859:22">get</jtok>
<jtok eid="19" type="primary_name_ref" span="859:23:859:27">key2</jtok>
<jtok eid="19" type="primary_name_ref" span="860:9:860:15">result</jtok>
<jtok eid="19" type="primary_name_ref" span="861:7:861:11">pool</jtok>
<jtok eid="19" type="method_call" span="861:12:861:17">put12</jtok>
<jtok eid="19" type="primary_name_ref" span="861:18:861:21">STR</jtok>
<jtok eid="19" type="method_call" span="861:23:861:30">newUTF8</jtok>
<jtok eid="19" type="primary_name_ref" span="861:31:861:36">value</jtok>
<jtok eid="19" type="qualified_name_ref" span="861:38:861:43">index</jtok>
<jtok eid="19" type="primary_name_ref" span="862:7:862:13">result</jtok>
<jtok eid="19" type="constructor_call" span="862:20:862:24">Item</jtok>
<jtok eid="19" type="primary_name_ref" span="862:25:862:30">index</jtok>
<jtok eid="19" type="primary_name_ref" span="862:34:862:38">key2</jtok>
<jtok eid="19" type="method_call" span="863:7:863:10">put</jtok>
<jtok eid="19" type="primary_name_ref" span="863:11:863:17">result</jtok>
<jtok eid="19" type="primary_name_ref" span="865:12:865:18">result</jtok>
<jtok eid="1" type="block_comment" span="868:3:875:6">/**
   * Adds a name and type to the constant pool of the class being build. Does
   * nothing if the constant pool already contains a similar item.
   *
   * @param name a name.
   * @param desc a type descriptor.
   * @return a new or already existing name and type item.
   */</jtok>
<jtok eid="20" type="class_or_interface_ref" span="877:11:877:15">Item</jtok>
<jtok eid="20" type="method_name" span="877:16:877:27">newNameType</jtok>
<jtok eid="20" type="parameter_type" span="877:35:877:41">String</jtok>
<jtok eid="20" type="parameter_name" span="877:42:877:46">name</jtok>
<jtok eid="20" type="parameter_type" span="877:54:877:60">String</jtok>
<jtok eid="20" type="parameter_name" span="877:61:877:65">desc</jtok>
<jtok eid="20" type="primary_name_ref" span="878:5:878:9">key2</jtok>
<jtok eid="20" type="method_call" span="878:10:878:13">set</jtok>
<jtok eid="20" type="primary_name_ref" span="878:14:878:23">NAME_TYPE</jtok>
<jtok eid="20" type="primary_name_ref" span="878:25:878:29">name</jtok>
<jtok eid="20" type="primary_name_ref" span="878:31:878:35">desc</jtok>
<jtok eid="20" type="class_or_interface_ref" span="879:5:879:9">Item</jtok>
<jtok eid="20" type="local_variable_name" span="879:10:879:16">result</jtok>
<jtok eid="20" type="method_call" span="879:19:879:22">get</jtok>
<jtok eid="20" type="primary_name_ref" span="879:23:879:27">key2</jtok>
<jtok eid="20" type="primary_name_ref" span="880:9:880:15">result</jtok>
<jtok eid="20" type="method_call" span="881:7:881:13">put122</jtok>
<jtok eid="20" type="primary_name_ref" span="881:14:881:23">NAME_TYPE</jtok>
<jtok eid="20" type="method_call" span="881:25:881:32">newUTF8</jtok>
<jtok eid="20" type="primary_name_ref" span="881:33:881:37">name</jtok>
<jtok eid="20" type="qualified_name_ref" span="881:39:881:44">index</jtok>
<jtok eid="20" type="method_call" span="881:46:881:53">newUTF8</jtok>
<jtok eid="20" type="primary_name_ref" span="881:54:881:58">desc</jtok>
<jtok eid="20" type="qualified_name_ref" span="881:60:881:65">index</jtok>
<jtok eid="20" type="primary_name_ref" span="882:7:882:13">result</jtok>
<jtok eid="20" type="constructor_call" span="882:20:882:24">Item</jtok>
<jtok eid="20" type="primary_name_ref" span="882:25:882:30">index</jtok>
<jtok eid="20" type="primary_name_ref" span="882:34:882:38">key2</jtok>
<jtok eid="20" type="method_call" span="883:7:883:10">put</jtok>
<jtok eid="20" type="primary_name_ref" span="883:11:883:17">result</jtok>
<jtok eid="20" type="primary_name_ref" span="885:12:885:18">result</jtok>
<jtok eid="1" type="block_comment" span="888:3:895:6">/**
   * Returns the constant pool's hash table item which is equal to the given
   * item.
   *
   * @param key a constant pool item.
   * @return the constant pool's hash table item which is equal to the given
   *      item, or &lt;tt&gt;null&lt;/tt&gt; if there is no such item.
   */</jtok>
<jtok eid="21" type="class_or_interface_ref" span="897:11:897:15">Item</jtok>
<jtok eid="21" type="method_name" span="897:16:897:19">get</jtok>
<jtok eid="21" type="parameter_type" span="897:27:897:31">Item</jtok>
<jtok eid="21" type="parameter_name" span="897:32:897:35">key</jtok>
<jtok eid="21" type="class_or_interface_ref" span="898:5:898:9">Item</jtok>
<jtok eid="21" type="local_variable_name" span="898:10:898:13">tab</jtok>
<jtok eid="21" type="primary_name_ref" span="898:18:898:23">table</jtok>
<jtok eid="21" type="local_variable_name" span="899:9:899:17">hashCode</jtok>
<jtok eid="21" type="primary_name_ref" span="899:20:899:23">key</jtok>
<jtok eid="21" type="qualified_name_ref" span="899:24:899:32">hashCode</jtok>
<jtok eid="21" type="local_variable_name" span="900:9:900:14">index</jtok>
<jtok eid="21" type="primary_name_ref" span="900:18:900:26">hashCode</jtok>
<jtok eid="21" type="primary_name_ref" span="900:43:900:46">tab</jtok>
<jtok eid="21" type="qualified_name_ref" span="900:47:900:53">length</jtok>
<jtok eid="21" type="class_or_interface_ref" span="901:10:901:14">Item</jtok>
<jtok eid="21" type="local_variable_name" span="901:15:901:16">i</jtok>
<jtok eid="21" type="primary_name_ref" span="901:19:901:22">tab</jtok>
<jtok eid="21" type="primary_name_ref" span="901:23:901:28">index</jtok>
<jtok eid="21" type="primary_name_ref" span="901:31:901:32">i</jtok>
<jtok eid="21" type="primary_name_ref" span="901:42:901:43">i</jtok>
<jtok eid="21" type="primary_name_ref" span="901:46:901:47">i</jtok>
<jtok eid="21" type="qualified_name_ref" span="901:48:901:52">next</jtok>
<jtok eid="21" type="primary_name_ref" span="902:11:902:12">i</jtok>
<jtok eid="21" type="qualified_name_ref" span="902:13:902:21">hashCode</jtok>
<jtok eid="21" type="primary_name_ref" span="902:25:902:33">hashCode</jtok>
<jtok eid="21" type="primary_name_ref" span="902:37:902:40">key</jtok>
<jtok eid="21" type="method_call" span="902:41:902:50">isEqualTo</jtok>
<jtok eid="21" type="primary_name_ref" span="902:51:902:52">i</jtok>
<jtok eid="21" type="primary_name_ref" span="903:16:903:17">i</jtok>
<jtok eid="1" type="block_comment" span="909:3:914:6">/**
   * Puts the given item in the constant pool's hash table. The hash table
   * &lt;i&gt;must&lt;/i&gt; not already contains this item.
   *
   * @param i the item to be added to the constant pool's hash table.
   */</jtok>
<jtok eid="22" type="method_name" span="916:16:916:19">put</jtok>
<jtok eid="22" type="parameter_type" span="916:27:916:31">Item</jtok>
<jtok eid="22" type="parameter_name" span="916:32:916:33">i</jtok>
<jtok eid="22" type="primary_name_ref" span="917:9:917:14">index</jtok>
<jtok eid="22" type="primary_name_ref" span="917:17:917:26">threshold</jtok>
<jtok eid="22" type="local_variable_name" span="918:11:918:22">oldCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="918:25:918:30">table</jtok>
<jtok eid="22" type="qualified_name_ref" span="918:31:918:37">length</jtok>
<jtok eid="22" type="class_or_interface_ref" span="919:7:919:11">Item</jtok>
<jtok eid="22" type="local_variable_name" span="919:12:919:18">oldMap</jtok>
<jtok eid="22" type="primary_name_ref" span="919:23:919:28">table</jtok>
<jtok eid="22" type="local_variable_name" span="920:11:920:22">newCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="920:25:920:36">oldCapacity</jtok>
<jtok eid="22" type="class_or_interface_ref" span="921:7:921:11">Item</jtok>
<jtok eid="22" type="local_variable_name" span="921:12:921:18">newMap</jtok>
<jtok eid="22" type="constructor_call" span="921:27:921:31">Item</jtok>
<jtok eid="22" type="primary_name_ref" span="921:32:921:43">newCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="922:7:922:16">threshold</jtok>
<jtok eid="22" type="primary_name_ref" span="922:25:922:36">newCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="923:7:923:12">table</jtok>
<jtok eid="22" type="primary_name_ref" span="923:15:923:21">newMap</jtok>
<jtok eid="22" type="local_variable_name" span="924:16:924:17">j</jtok>
<jtok eid="22" type="primary_name_ref" span="924:20:924:31">oldCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="924:33:924:34">j</jtok>
<jtok eid="22" type="class_or_interface_ref" span="925:14:925:18">Item</jtok>
<jtok eid="22" type="local_variable_name" span="925:19:925:22">old</jtok>
<jtok eid="22" type="primary_name_ref" span="925:25:925:31">oldMap</jtok>
<jtok eid="22" type="primary_name_ref" span="925:32:925:33">j</jtok>
<jtok eid="22" type="primary_name_ref" span="925:36:925:39">old</jtok>
<jtok eid="22" type="class_or_interface_ref" span="926:11:926:15">Item</jtok>
<jtok eid="22" type="local_variable_name" span="926:16:926:17">e</jtok>
<jtok eid="22" type="primary_name_ref" span="926:20:926:23">old</jtok>
<jtok eid="22" type="primary_name_ref" span="927:11:927:14">old</jtok>
<jtok eid="22" type="primary_name_ref" span="927:17:927:20">old</jtok>
<jtok eid="22" type="qualified_name_ref" span="927:21:927:25">next</jtok>
<jtok eid="22" type="local_variable_name" span="928:15:928:20">index</jtok>
<jtok eid="22" type="primary_name_ref" span="928:24:928:25">e</jtok>
<jtok eid="22" type="qualified_name_ref" span="928:26:928:34">hashCode</jtok>
<jtok eid="22" type="primary_name_ref" span="928:51:928:62">newCapacity</jtok>
<jtok eid="22" type="primary_name_ref" span="929:11:929:12">e</jtok>
<jtok eid="22" type="qualified_name_ref" span="929:13:929:17">next</jtok>
<jtok eid="22" type="primary_name_ref" span="929:20:929:26">newMap</jtok>
<jtok eid="22" type="primary_name_ref" span="929:27:929:32">index</jtok>
<jtok eid="22" type="primary_name_ref" span="930:11:930:17">newMap</jtok>
<jtok eid="22" type="primary_name_ref" span="930:18:930:23">index</jtok>
<jtok eid="22" type="primary_name_ref" span="930:27:930:28">e</jtok>
<jtok eid="22" type="local_variable_name" span="934:9:934:14">index</jtok>
<jtok eid="22" type="primary_name_ref" span="934:18:934:19">i</jtok>
<jtok eid="22" type="qualified_name_ref" span="934:20:934:28">hashCode</jtok>
<jtok eid="22" type="primary_name_ref" span="934:45:934:50">table</jtok>
<jtok eid="22" type="qualified_name_ref" span="934:51:934:57">length</jtok>
<jtok eid="22" type="primary_name_ref" span="935:5:935:6">i</jtok>
<jtok eid="22" type="qualified_name_ref" span="935:7:935:11">next</jtok>
<jtok eid="22" type="primary_name_ref" span="935:14:935:19">table</jtok>
<jtok eid="22" type="primary_name_ref" span="935:20:935:25">index</jtok>
<jtok eid="22" type="primary_name_ref" span="936:5:936:10">table</jtok>
<jtok eid="22" type="primary_name_ref" span="936:11:936:16">index</jtok>
<jtok eid="22" type="primary_name_ref" span="936:20:936:21">i</jtok>
<jtok eid="1" type="block_comment" span="939:3:945:6">/**
   * Puts one byte and two shorts into the constant pool.
   *
   * @param b a byte.
   * @param s1 a short.
   * @param s2 another short.
   */</jtok>
<jtok eid="23" type="method_name" span="947:16:947:22">put122</jtok>
<jtok eid="23" type="parameter_name" span="947:34:947:35">b</jtok>
<jtok eid="23" type="parameter_name" span="947:47:947:49">s1</jtok>
<jtok eid="23" type="parameter_name" span="947:61:947:63">s2</jtok>
<jtok eid="23" type="primary_name_ref" span="948:5:948:9">pool</jtok>
<jtok eid="23" type="method_call" span="948:10:948:15">put12</jtok>
<jtok eid="23" type="primary_name_ref" span="948:16:948:17">b</jtok>
<jtok eid="23" type="primary_name_ref" span="948:19:948:21">s1</jtok>
<jtok eid="23" type="method_call" span="948:23:948:27">put2</jtok>
<jtok eid="23" type="primary_name_ref" span="948:28:948:30">s2</jtok>
</jdoc>