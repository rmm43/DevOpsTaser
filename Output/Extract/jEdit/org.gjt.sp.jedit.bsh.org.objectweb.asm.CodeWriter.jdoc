<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter" jls="java5">
<jent id="0" type="file" span="0:0:1766:2">Source/jEdit/org/gjt/sp/jedit/bsh/org/objectweb/asm/CodeWriter.java</jent>
<jent id="1" pid="0" type="class" span="33:1:1766:1">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter</jent>
<jent id="2" pid="1" type="method" span="490:3:506:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.CodeWriter(ClassWriter,boolean)</jent>
<jent id="3" pid="1" type="method" span="518:3:544:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.init(int,String,String,String[])</jent>
<jent id="4" pid="1" type="method" span="550:3:570:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitInsn(int)</jent>
<jent id="5" pid="1" type="method" span="572:3:588:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitIntInsn(int,int)</jent>
<jent id="6" pid="1" type="method" span="590:3:633:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitVarInsn(int,int)</jent>
<jent id="7" pid="1" type="method" span="635:3:647:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitTypeInsn(int,String)</jent>
<jent id="8" pid="1" type="method" span="649:3:682:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitFieldInsn(int,String,String,String)</jent>
<jent id="9" pid="1" type="method" span="684:3:733:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitMethodInsn(int,String,String,String)</jent>
<jent id="10" pid="1" type="method" span="735:3:788:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitJumpInsn(int,Label)</jent>
<jent id="11" pid="1" type="method" span="790:3:812:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitLabel(Label)</jent>
<jent id="12" pid="1" type="method" span="814:3:839:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitLdcInsn(Object)</jent>
<jent id="13" pid="1" type="method" span="841:3:855:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitIincInsn(int,int)</jent>
<jent id="14" pid="1" type="method" span="857:3:887:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitTableSwitchInsn(int,int,Label,Label)</jent>
<jent id="15" pid="1" type="method" span="889:3:919:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitLookupSwitchInsn(Label,int,Label)</jent>
<jent id="16" pid="1" type="method" span="921:3:930:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitMultiANewArrayInsn(String,int)</jent>
<jent id="17" pid="1" type="method" span="932:3:963:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitTryCatchBlock(Label,Label,Label,String)</jent>
<jent id="18" pid="1" type="method" span="965:3:1017:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitMaxs(int,int)</jent>
<jent id="19" pid="1" type="method" span="1019:3:1044:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitLocalVariable(String,String,Label,Label,int)</jent>
<jent id="20" pid="1" type="method" span="1046:3:1059:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.visitLineNumber(int,Label)</jent>
<jent id="21" pid="1" type="method" span="1076:3:1101:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.getArgumentsAndReturnSizes(String)</jent>
<jent id="22" pid="1" type="method" span="1110:3:1134:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.addSuccessor(int,Label)</jent>
<jent id="23" pid="1" type="method" span="1146:3:1175:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.getSize()</jent>
<jent id="24" pid="1" type="method" span="1184:3:1247:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.put(ByteVector)</jent>
<jent id="25" pid="1" type="method" span="1286:3:1646:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.resizeInstructions(int[],int[],int)</jent>
<jent id="26" pid="1" type="method" span="1656:3:1658:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.readUnsignedShort(byte[],int)</jent>
<jent id="27" pid="1" type="method" span="1668:3:1670:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.readShort(byte[],int)</jent>
<jent id="28" pid="1" type="method" span="1680:3:1685:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.readInt(byte[],int)</jent>
<jent id="29" pid="1" type="method" span="1695:3:1698:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.writeShort(byte[],int,int)</jent>
<jent id="30" pid="1" type="method" span="1723:3:1738:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.getNewOffset(int[],int[],int,int)</jent>
<jent id="31" pid="1" type="method" span="1749:3:1751:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.getCodeSize()</jent>
<jent id="32" pid="1" type="method" span="1763:3:1765:3">org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter.getCode()</jent>
<jtok eid="0" type="block_comment" span="1:1:23:4">/***
 * ASM: a very small and fast Java bytecode manipulation framework
 * Copyright (C) 2000 INRIA, France Telecom
 * Copyright (C) 2002 France Telecom
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * Contact: Eric.Bruneton@rd.francetelecom.com
 *
 * Author: Eric Bruneton
 */</jtok>
<jtok eid="0" type="block_comment" span="27:1:31:4">/**
 * A {@link CodeVisitor CodeVisitor} that generates Java bytecode instructions.
 * Each visit method of this class appends the bytecode corresponding to the
 * visited instruction to a byte vector, in the order these methods are called.
 */</jtok>
<jtok eid="1" type="class_name" span="33:14:33:24">CodeWriter</jtok>
<jtok eid="1" type="class_or_interface_ref" span="33:36:33:47">CodeVisitor</jtok>
<jtok eid="1" type="block_comment" span="35:3:37:6">/**
   * &lt;tt&gt;true&lt;/tt&gt; if preconditions must be checked at runtime or not.
   */</jtok>
<jtok eid="1" type="field_name" span="39:24:39:29">CHECK</jtok>
<jtok eid="1" type="block_comment" span="41:3:43:6">/**
   * Next code writer (see {@link ClassWriter#firstMethod firstMethod}).
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="45:3:45:13">CodeWriter</jtok>
<jtok eid="1" type="field_name" span="45:14:45:18">next</jtok>
<jtok eid="1" type="block_comment" span="47:3:49:6">/**
   * The class writer to which this method must be added.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="51:11:51:22">ClassWriter</jtok>
<jtok eid="1" type="field_name" span="51:23:51:25">cw</jtok>
<jtok eid="1" type="block_comment" span="53:3:55:6">/**
   * The constant pool item that contains the name of this method.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="57:11:57:15">Item</jtok>
<jtok eid="1" type="field_name" span="57:16:57:20">name</jtok>
<jtok eid="1" type="block_comment" span="59:3:61:6">/**
   * The constant pool item that contains the descriptor of this method.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="63:11:63:15">Item</jtok>
<jtok eid="1" type="field_name" span="63:16:63:20">desc</jtok>
<jtok eid="1" type="block_comment" span="65:3:67:6">/**
   * Access flags of this method.
   */</jtok>
<jtok eid="1" type="field_name" span="69:15:69:21">access</jtok>
<jtok eid="1" type="block_comment" span="71:3:73:6">/**
   * Maximum stack size of this method.
   */</jtok>
<jtok eid="1" type="field_name" span="75:15:75:23">maxStack</jtok>
<jtok eid="1" type="block_comment" span="77:3:79:6">/**
   * Maximum number of local variables for this method.
   */</jtok>
<jtok eid="1" type="field_name" span="81:15:81:24">maxLocals</jtok>
<jtok eid="1" type="block_comment" span="83:3:85:6">/**
   * The bytecode of this method.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="87:11:87:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="87:22:87:26">code</jtok>
<jtok eid="1" type="constructor_call" span="87:33:87:43">ByteVector</jtok>
<jtok eid="1" type="block_comment" span="89:3:91:6">/**
   * Number of entries in the catch table of this method.
   */</jtok>
<jtok eid="1" type="field_name" span="93:15:93:25">catchCount</jtok>
<jtok eid="1" type="block_comment" span="95:3:97:6">/**
   * The catch table of this method.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="99:11:99:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="99:22:99:32">catchTable</jtok>
<jtok eid="1" type="block_comment" span="101:3:103:6">/**
   * Number of exceptions that can be thrown by this method.
   */</jtok>
<jtok eid="1" type="field_name" span="105:15:105:29">exceptionCount</jtok>
<jtok eid="1" type="block_comment" span="107:3:111:6">/**
   * The exceptions that can be thrown by this method. More
   * precisely, this array contains the indexes of the constant pool items
   * that contain the internal names of these exception classes.
   */</jtok>
<jtok eid="1" type="field_name" span="113:17:113:27">exceptions</jtok>
<jtok eid="1" type="block_comment" span="115:3:117:6">/**
   * Number of entries in the LocalVariableTable attribute.
   */</jtok>
<jtok eid="1" type="field_name" span="119:15:119:28">localVarCount</jtok>
<jtok eid="1" type="block_comment" span="121:3:123:6">/**
   * The LocalVariableTable attribute.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="125:11:125:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="125:22:125:30">localVar</jtok>
<jtok eid="1" type="block_comment" span="127:3:129:6">/**
   * Number of entries in the LineNumberTable attribute.
   */</jtok>
<jtok eid="1" type="field_name" span="131:15:131:30">lineNumberCount</jtok>
<jtok eid="1" type="block_comment" span="133:3:135:6">/**
   * The LineNumberTable attribute.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="137:11:137:21">ByteVector</jtok>
<jtok eid="1" type="field_name" span="137:22:137:32">lineNumber</jtok>
<jtok eid="1" type="block_comment" span="139:3:141:6">/**
   * Indicates if some jump instructions are too small and need to be resized.
   */</jtok>
<jtok eid="1" type="field_name" span="143:19:143:25">resize</jtok>
<jtok eid="1" type="line_comment" span="145:3:145:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="146:3:146:79">// Fields for the control flow graph analysis algorithm (used to compute the</jtok>
<jtok eid="1" type="line_comment" span="147:3:147:76">// maximum stack size). A control flow graph contains one node per "basic</jtok>
<jtok eid="1" type="line_comment" span="148:3:148:80">// block", and one edge per "jump" from one basic block to another. Each node</jtok>
<jtok eid="1" type="line_comment" span="149:3:149:70">// (i.e., each basic block) is represented by the Label object that</jtok>
<jtok eid="1" type="line_comment" span="150:3:150:78">// corresponds to the first instruction of this basic block. Each node also</jtok>
<jtok eid="1" type="line_comment" span="151:3:151:78">// stores the list of its successors in the graph, as a linked list of Edge</jtok>
<jtok eid="1" type="line_comment" span="152:3:152:14">// objects.</jtok>
<jtok eid="1" type="line_comment" span="153:3:153:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="155:3:158:6">/**
   * &lt;tt&gt;true&lt;/tt&gt; if the maximum stack size and number of local variables must
   * be automatically computed.
   */</jtok>
<jtok eid="1" type="field_name" span="160:25:160:36">computeMaxs</jtok>
<jtok eid="1" type="block_comment" span="162:3:168:6">/**
   * The (relative) stack size after the last visited instruction. This size is
   * relative to the beginning of the current basic block, i.e., the true stack
   * size after the last visited instruction is equal to the {@link
   * Label#beginStackSize beginStackSize} of the current basic block plus
   * &lt;tt&gt;stackSize&lt;/tt&gt;.
   */</jtok>
<jtok eid="1" type="field_name" span="170:15:170:24">stackSize</jtok>
<jtok eid="1" type="block_comment" span="172:3:178:6">/**
   * The (relative) maximum stack size after the last visited instruction. This
   * size is relative to the beginning of the current basic block, i.e., the
   * true maximum stack size after the last visited instruction is equal to the
   * {@link Label#beginStackSize beginStackSize} of the current basic block plus
   * &lt;tt&gt;stackSize&lt;/tt&gt;.
   */</jtok>
<jtok eid="1" type="field_name" span="180:15:180:27">maxStackSize</jtok>
<jtok eid="1" type="block_comment" span="182:3:185:6">/**
   * The current basic block. This block is the basic block to which the next
   * instruction to be visited must be added.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="187:11:187:16">Label</jtok>
<jtok eid="1" type="field_name" span="187:17:187:29">currentBlock</jtok>
<jtok eid="1" type="block_comment" span="189:3:194:6">/**
   * The basic block stack used by the control flow analysis algorithm. This
   * stack is represented by a linked list of {@link Label Label} objects,
   * linked to each other by their {@link Label#next} field. This stack must
   * not be confused with the JVM stack used to execute the JVM instructions!
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="196:11:196:16">Label</jtok>
<jtok eid="1" type="field_name" span="196:17:196:27">blockStack</jtok>
<jtok eid="1" type="block_comment" span="198:3:202:6">/**
   * The stack size variation corresponding to each JVM instruction. This stack
   * variation is equal to the size of the values produced by an instruction,
   * minus the size of the values consumed by this instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="204:30:204:34">SIZE</jtok>
<jtok eid="1" type="line_comment" span="206:3:206:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="207:3:207:77">// Fields to optimize the creation of {@link Edge Edge} objects by using a</jtok>
<jtok eid="1" type="line_comment" span="208:3:208:74">// pool of reusable objects. The (shared) pool is a linked list of Edge</jtok>
<jtok eid="1" type="line_comment" span="209:3:209:78">// objects, linked to each other by their {@link Edge#poolNext} field. Each</jtok>
<jtok eid="1" type="line_comment" span="210:3:210:76">// time a CodeWriter needs to allocate an Edge, it removes the first Edge</jtok>
<jtok eid="1" type="line_comment" span="211:3:211:78">// of the pool and adds it to a private list of Edge objects. After the end</jtok>
<jtok eid="1" type="line_comment" span="212:3:212:77">// of the control flow analysis algorithm, the Edge objects in the private</jtok>
<jtok eid="1" type="line_comment" span="213:3:213:74">// list of the CodeWriter are added back to the pool (by appending this</jtok>
<jtok eid="1" type="line_comment" span="214:3:214:79">// private list to the pool list; in order to do this in constant time, both</jtok>
<jtok eid="1" type="line_comment" span="215:3:215:71">// head and tail of the private list are stored in this CodeWriter).</jtok>
<jtok eid="1" type="line_comment" span="216:3:216:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="218:3:223:6">/**
   * The head of the list of {@link Edge Edge} objects used by this {@link
   * CodeWriter CodeWriter}. These objects, linked to each other by their
   * {@link Edge#poolNext} field, are added back to the shared pool at the
   * end of the control flow analysis algorithm.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="225:11:225:15">Edge</jtok>
<jtok eid="1" type="field_name" span="225:16:225:20">head</jtok>
<jtok eid="1" type="block_comment" span="227:3:232:6">/**
   * The tail of the list of {@link Edge Edge} objects used by this {@link
   * CodeWriter CodeWriter}. These objects, linked to each other by their
   * {@link Edge#poolNext} field, are added back to the shared pool at the
   * end of the control flow analysis algorithm.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="234:11:234:15">Edge</jtok>
<jtok eid="1" type="field_name" span="234:16:234:20">tail</jtok>
<jtok eid="1" type="block_comment" span="236:3:239:6">/**
   * The shared pool of {@link Edge Edge} objects. This pool is a linked list
   * of Edge objects, linked to each other by their {@link Edge#poolNext} field.
   */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="241:18:241:22">Edge</jtok>
<jtok eid="1" type="field_name" span="241:23:241:27">pool</jtok>
<jtok eid="1" type="line_comment" span="243:3:243:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="244:3:244:24">// Static initializer</jtok>
<jtok eid="1" type="line_comment" span="245:3:245:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="247:3:249:6">/**
   * Computes the stack size variation corresponding to each JVM instruction.
   */</jtok>
<jtok eid="1" type="field_name" span="252:9:252:10">i</jtok>
<jtok eid="1" type="field_name" span="253:11:253:12">b</jtok>
<jtok eid="1" type="class_or_interface_ref" span="254:5:254:11">String</jtok>
<jtok eid="1" type="field_name" span="254:12:254:13">s</jtok>
<jtok eid="1" type="string_literal" span="255:7:255:77">"EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEE"</jtok>
<jtok eid="1" type="string_literal" span="256:7:256:77">"EEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEF"</jtok>
<jtok eid="1" type="string_literal" span="257:7:257:75">"DDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE"</jtok>
<jtok eid="1" type="primary_name_ref" span="258:10:258:11">i</jtok>
<jtok eid="1" type="primary_name_ref" span="258:17:258:18">i</jtok>
<jtok eid="1" type="primary_name_ref" span="258:21:258:22">b</jtok>
<jtok eid="1" type="qualified_name_ref" span="258:23:258:29">length</jtok>
<jtok eid="1" type="primary_name_ref" span="258:33:258:34">i</jtok>
<jtok eid="1" type="primary_name_ref" span="259:7:259:8">b</jtok>
<jtok eid="1" type="primary_name_ref" span="259:9:259:10">i</jtok>
<jtok eid="1" type="primary_name_ref" span="259:14:259:15">s</jtok>
<jtok eid="1" type="method_call" span="259:16:259:22">charAt</jtok>
<jtok eid="1" type="primary_name_ref" span="259:23:259:24">i</jtok>
<jtok eid="1" type="primary_name_ref" span="261:5:261:9">SIZE</jtok>
<jtok eid="1" type="primary_name_ref" span="261:12:261:13">b</jtok>
<jtok eid="1" type="block_comment" span="263:5:475:7">/* code to generate the above string

    int NA = 0; // not applicable (unused opcode or variable size opcode)

    b = new int[] {
      0,  //NOP,             // visitInsn
      1,  //ACONST_NULL,     // -
      1,  //ICONST_M1,       // -
      1,  //ICONST_0,        // -
      1,  //ICONST_1,        // -
      1,  //ICONST_2,        // -
      1,  //ICONST_3,        // -
      1,  //ICONST_4,        // -
      1,  //ICONST_5,        // -
      2,  //LCONST_0,        // -
      2,  //LCONST_1,        // -
      1,  //FCONST_0,        // -
      1,  //FCONST_1,        // -
      1,  //FCONST_2,        // -
      2,  //DCONST_0,        // -
      2,  //DCONST_1,        // -
      1,  //BIPUSH,          // visitIntInsn
      1,  //SIPUSH,          // -
      1,  //LDC,             // visitLdcInsn
      NA, //LDC_W,           // -
      NA, //LDC2_W,          // -
      1,  //ILOAD,           // visitVarInsn
      2,  //LLOAD,           // -
      1,  //FLOAD,           // -
      2,  //DLOAD,           // -
      1,  //ALOAD,           // -
      NA, //ILOAD_0,         // -
      NA, //ILOAD_1,         // -
      NA, //ILOAD_2,         // -
      NA, //ILOAD_3,         // -
      NA, //LLOAD_0,         // -
      NA, //LLOAD_1,         // -
      NA, //LLOAD_2,         // -
      NA, //LLOAD_3,         // -
      NA, //FLOAD_0,         // -
      NA, //FLOAD_1,         // -
      NA, //FLOAD_2,         // -
      NA, //FLOAD_3,         // -
      NA, //DLOAD_0,         // -
      NA, //DLOAD_1,         // -
      NA, //DLOAD_2,         // -
      NA, //DLOAD_3,         // -
      NA, //ALOAD_0,         // -
      NA, //ALOAD_1,         // -
      NA, //ALOAD_2,         // -
      NA, //ALOAD_3,         // -
      -1, //IALOAD,          // visitInsn
      0,  //LALOAD,          // -
      -1, //FALOAD,          // -
      0,  //DALOAD,          // -
      -1, //AALOAD,          // -
      -1, //BALOAD,          // -
      -1, //CALOAD,          // -
      -1, //SALOAD,          // -
      -1, //ISTORE,          // visitVarInsn
      -2, //LSTORE,          // -
      -1, //FSTORE,          // -
      -2, //DSTORE,          // -
      -1, //ASTORE,          // -
      NA, //ISTORE_0,        // -
      NA, //ISTORE_1,        // -
      NA, //ISTORE_2,        // -
      NA, //ISTORE_3,        // -
      NA, //LSTORE_0,        // -
      NA, //LSTORE_1,        // -
      NA, //LSTORE_2,        // -
      NA, //LSTORE_3,        // -
      NA, //FSTORE_0,        // -
      NA, //FSTORE_1,        // -
      NA, //FSTORE_2,        // -
      NA, //FSTORE_3,        // -
      NA, //DSTORE_0,        // -
      NA, //DSTORE_1,        // -
      NA, //DSTORE_2,        // -
      NA, //DSTORE_3,        // -
      NA, //ASTORE_0,        // -
      NA, //ASTORE_1,        // -
      NA, //ASTORE_2,        // -
      NA, //ASTORE_3,        // -
      -3, //IASTORE,         // visitInsn
      -4, //LASTORE,         // -
      -3, //FASTORE,         // -
      -4, //DASTORE,         // -
      -3, //AASTORE,         // -
      -3, //BASTORE,         // -
      -3, //CASTORE,         // -
      -3, //SASTORE,         // -
      -1, //POP,             // -
      -2, //POP2,            // -
      1,  //DUP,             // -
      1,  //DUP_X1,          // -
      1,  //DUP_X2,          // -
      2,  //DUP2,            // -
      2,  //DUP2_X1,         // -
      2,  //DUP2_X2,         // -
      0,  //SWAP,            // -
      -1, //IADD,            // -
      -2, //LADD,            // -
      -1, //FADD,            // -
      -2, //DADD,            // -
      -1, //ISUB,            // -
      -2, //LSUB,            // -
      -1, //FSUB,            // -
      -2, //DSUB,            // -
      -1, //IMUL,            // -
      -2, //LMUL,            // -
      -1, //FMUL,            // -
      -2, //DMUL,            // -
      -1, //IDIV,            // -
      -2, //LDIV,            // -
      -1, //FDIV,            // -
      -2, //DDIV,            // -
      -1, //IREM,            // -
      -2, //LREM,            // -
      -1, //FREM,            // -
      -2, //DREM,            // -
      0,  //INEG,            // -
      0,  //LNEG,            // -
      0,  //FNEG,            // -
      0,  //DNEG,            // -
      -1, //ISHL,            // -
      -1, //LSHL,            // -
      -1, //ISHR,            // -
      -1, //LSHR,            // -
      -1, //IUSHR,           // -
      -1, //LUSHR,           // -
      -1, //IAND,            // -
      -2, //LAND,            // -
      -1, //IOR,             // -
      -2, //LOR,             // -
      -1, //IXOR,            // -
      -2, //LXOR,            // -
      0,  //IINC,            // visitIincInsn
      1,  //I2L,             // visitInsn
      0,  //I2F,             // -
      1,  //I2D,             // -
      -1, //L2I,             // -
      -1, //L2F,             // -
      0,  //L2D,             // -
      0,  //F2I,             // -
      1,  //F2L,             // -
      1,  //F2D,             // -
      -1, //D2I,             // -
      0,  //D2L,             // -
      -1, //D2F,             // -
      0,  //I2B,             // -
      0,  //I2C,             // -
      0,  //I2S,             // -
      -3, //LCMP,            // -
      -1, //FCMPL,           // -
      -1, //FCMPG,           // -
      -3, //DCMPL,           // -
      -3, //DCMPG,           // -
      -1, //IFEQ,            // visitJumpInsn
      -1, //IFNE,            // -
      -1, //IFLT,            // -
      -1, //IFGE,            // -
      -1, //IFGT,            // -
      -1, //IFLE,            // -
      -2, //IF_ICMPEQ,       // -
      -2, //IF_ICMPNE,       // -
      -2, //IF_ICMPLT,       // -
      -2, //IF_ICMPGE,       // -
      -2, //IF_ICMPGT,       // -
      -2, //IF_ICMPLE,       // -
      -2, //IF_ACMPEQ,       // -
      -2, //IF_ACMPNE,       // -
      0,  //GOTO,            // -
      1,  //JSR,             // -
      0,  //RET,             // visitVarInsn
      -1, //TABLESWITCH,     // visiTableSwitchInsn
      -1, //LOOKUPSWITCH,    // visitLookupSwitch
      -1, //IRETURN,         // visitInsn
      -2, //LRETURN,         // -
      -1, //FRETURN,         // -
      -2, //DRETURN,         // -
      -1, //ARETURN,         // -
      0,  //RETURN,          // -
      NA, //GETSTATIC,       // visitFieldInsn
      NA, //PUTSTATIC,       // -
      NA, //GETFIELD,        // -
      NA, //PUTFIELD,        // -
      NA, //INVOKEVIRTUAL,   // visitMethodInsn
      NA, //INVOKESPECIAL,   // -
      NA, //INVOKESTATIC,    // -
      NA, //INVOKEINTERFACE, // -
      NA, //UNUSED,          // NOT VISITED
      1,  //NEW,             // visitTypeInsn
      0,  //NEWARRAY,        // visitIntInsn
      0,  //ANEWARRAY,       // visitTypeInsn
      0,  //ARRAYLENGTH,     // visitInsn
      NA, //ATHROW,          // -
      0,  //CHECKCAST,       // visitTypeInsn
      0,  //INSTANCEOF,      // -
      -1, //MONITORENTER,    // visitInsn
      -1, //MONITOREXIT,     // -
      NA, //WIDE,            // NOT VISITED
      NA, //MULTIANEWARRAY,  // visitMultiANewArrayInsn
      -1, //IFNULL,          // visitJumpInsn
      -1, //IFNONNULL,       // -
      NA, //GOTO_W,          // -
      NA, //JSR_W,           // -
    };
    for (i = 0; i &lt; b.length; ++i) {
      System.err.print((char)('E' + b[i]));
    }
    System.err.println();
    */</jtok>
<jtok eid="1" type="line_comment" span="478:3:478:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="479:3:479:17">// Constructor</jtok>
<jtok eid="1" type="line_comment" span="480:3:480:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="482:3:488:6">/**
   * Constructs a CodeWriter.
   *
   * @param cw the class writer in which the method must be added.
   * @param computeMaxs &lt;tt&gt;true&lt;/tt&gt; if the maximum stack size and number of
   *      local variables must be automatically computed.
   */</jtok>
<jtok eid="2" type="method_name" span="490:13:490:23">CodeWriter</jtok>
<jtok eid="2" type="parameter_type" span="490:31:490:42">ClassWriter</jtok>
<jtok eid="2" type="parameter_name" span="490:43:490:45">cw</jtok>
<jtok eid="2" type="parameter_name" span="490:61:490:72">computeMaxs</jtok>
<jtok eid="2" type="primary_name_ref" span="491:9:491:11">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="491:12:491:23">firstMethod</jtok>
<jtok eid="2" type="primary_name_ref" span="492:7:492:9">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="492:10:492:21">firstMethod</jtok>
<jtok eid="2" type="primary_name_ref" span="493:7:493:9">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="493:10:493:20">lastMethod</jtok>
<jtok eid="2" type="primary_name_ref" span="495:7:495:9">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="495:10:495:20">lastMethod</jtok>
<jtok eid="2" type="qualified_name_ref" span="495:21:495:25">next</jtok>
<jtok eid="2" type="primary_name_ref" span="496:7:496:9">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="496:10:496:20">lastMethod</jtok>
<jtok eid="2" type="qualified_name_ref" span="498:10:498:12">cw</jtok>
<jtok eid="2" type="primary_name_ref" span="498:15:498:17">cw</jtok>
<jtok eid="2" type="qualified_name_ref" span="499:10:499:21">computeMaxs</jtok>
<jtok eid="2" type="primary_name_ref" span="499:24:499:35">computeMaxs</jtok>
<jtok eid="2" type="primary_name_ref" span="500:9:500:20">computeMaxs</jtok>
<jtok eid="2" type="line_comment" span="501:7:501:71">// pushes the first block onto the stack of blocks to be visited</jtok>
<jtok eid="2" type="primary_name_ref" span="502:7:502:19">currentBlock</jtok>
<jtok eid="2" type="constructor_call" span="502:26:502:31">Label</jtok>
<jtok eid="2" type="primary_name_ref" span="503:7:503:19">currentBlock</jtok>
<jtok eid="2" type="qualified_name_ref" span="503:20:503:26">pushed</jtok>
<jtok eid="2" type="primary_name_ref" span="504:7:504:17">blockStack</jtok>
<jtok eid="2" type="primary_name_ref" span="504:20:504:32">currentBlock</jtok>
<jtok eid="1" type="block_comment" span="508:3:516:6">/**
   * Initializes this CodeWriter to define the bytecode of the specified method.
   *
   * @param access the method's access flags (see {@link Constants}).
   * @param name the method's name.
   * @param desc the method's descriptor (see {@link Type Type}).
   * @param exceptions the internal names of the method's exceptions. May be
   *      &lt;tt&gt;null&lt;/tt&gt;.
   */</jtok>
<jtok eid="3" type="method_name" span="518:18:518:22">init</jtok>
<jtok eid="3" type="parameter_name" span="519:15:519:21">access</jtok>
<jtok eid="3" type="parameter_type" span="520:11:520:17">String</jtok>
<jtok eid="3" type="parameter_name" span="520:18:520:22">name</jtok>
<jtok eid="3" type="parameter_type" span="521:11:521:17">String</jtok>
<jtok eid="3" type="parameter_name" span="521:18:521:22">desc</jtok>
<jtok eid="3" type="parameter_type" span="522:11:522:17">String</jtok>
<jtok eid="3" type="parameter_name" span="522:20:522:30">exceptions</jtok>
<jtok eid="3" type="qualified_name_ref" span="524:10:524:16">access</jtok>
<jtok eid="3" type="primary_name_ref" span="524:19:524:25">access</jtok>
<jtok eid="3" type="qualified_name_ref" span="525:10:525:14">name</jtok>
<jtok eid="3" type="primary_name_ref" span="525:17:525:19">cw</jtok>
<jtok eid="3" type="method_call" span="525:20:525:27">newUTF8</jtok>
<jtok eid="3" type="primary_name_ref" span="525:28:525:32">name</jtok>
<jtok eid="3" type="qualified_name_ref" span="526:10:526:14">desc</jtok>
<jtok eid="3" type="primary_name_ref" span="526:17:526:19">cw</jtok>
<jtok eid="3" type="method_call" span="526:20:526:27">newUTF8</jtok>
<jtok eid="3" type="primary_name_ref" span="526:28:526:32">desc</jtok>
<jtok eid="3" type="primary_name_ref" span="527:9:527:19">exceptions</jtok>
<jtok eid="3" type="primary_name_ref" span="527:31:527:41">exceptions</jtok>
<jtok eid="3" type="qualified_name_ref" span="527:42:527:48">length</jtok>
<jtok eid="3" type="primary_name_ref" span="528:7:528:21">exceptionCount</jtok>
<jtok eid="3" type="primary_name_ref" span="528:24:528:34">exceptions</jtok>
<jtok eid="3" type="qualified_name_ref" span="528:35:528:41">length</jtok>
<jtok eid="3" type="qualified_name_ref" span="529:12:529:22">exceptions</jtok>
<jtok eid="3" type="primary_name_ref" span="529:33:529:47">exceptionCount</jtok>
<jtok eid="3" type="local_variable_name" span="530:16:530:17">i</jtok>
<jtok eid="3" type="primary_name_ref" span="530:23:530:24">i</jtok>
<jtok eid="3" type="primary_name_ref" span="530:27:530:41">exceptionCount</jtok>
<jtok eid="3" type="primary_name_ref" span="530:45:530:46">i</jtok>
<jtok eid="3" type="qualified_name_ref" span="531:14:531:24">exceptions</jtok>
<jtok eid="3" type="primary_name_ref" span="531:25:531:26">i</jtok>
<jtok eid="3" type="primary_name_ref" span="531:30:531:32">cw</jtok>
<jtok eid="3" type="method_call" span="531:33:531:41">newClass</jtok>
<jtok eid="3" type="primary_name_ref" span="531:42:531:52">exceptions</jtok>
<jtok eid="3" type="primary_name_ref" span="531:53:531:54">i</jtok>
<jtok eid="3" type="qualified_name_ref" span="531:57:531:62">index</jtok>
<jtok eid="3" type="primary_name_ref" span="534:9:534:20">computeMaxs</jtok>
<jtok eid="3" type="line_comment" span="535:7:535:27">// updates maxLocals</jtok>
<jtok eid="3" type="local_variable_name" span="536:11:536:15">size</jtok>
<jtok eid="3" type="method_call" span="536:18:536:44">getArgumentsAndReturnSizes</jtok>
<jtok eid="3" type="primary_name_ref" span="536:45:536:49">desc</jtok>
<jtok eid="3" type="primary_name_ref" span="537:12:537:18">access</jtok>
<jtok eid="3" type="primary_name_ref" span="537:21:537:30">Constants</jtok>
<jtok eid="3" type="qualified_name_ref" span="537:31:537:41">ACC_STATIC</jtok>
<jtok eid="3" type="primary_name_ref" span="538:11:538:15">size</jtok>
<jtok eid="3" type="primary_name_ref" span="540:11:540:15">size</jtok>
<jtok eid="3" type="primary_name_ref" span="540:18:540:27">maxLocals</jtok>
<jtok eid="3" type="primary_name_ref" span="541:9:541:18">maxLocals</jtok>
<jtok eid="3" type="primary_name_ref" span="541:21:541:25">size</jtok>
<jtok eid="1" type="line_comment" span="546:3:546:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="547:3:547:49">// Implementation of the CodeVisitor interface</jtok>
<jtok eid="1" type="line_comment" span="548:3:548:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="4" type="method_name" span="550:15:550:24">visitInsn</jtok>
<jtok eid="4" type="parameter_name" span="550:36:550:42">opcode</jtok>
<jtok eid="4" type="primary_name_ref" span="551:9:551:20">computeMaxs</jtok>
<jtok eid="4" type="line_comment" span="552:7:552:45">// updates current and max stack sizes</jtok>
<jtok eid="4" type="local_variable_name" span="553:11:553:15">size</jtok>
<jtok eid="4" type="primary_name_ref" span="553:18:553:27">stackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="553:30:553:34">SIZE</jtok>
<jtok eid="4" type="primary_name_ref" span="553:35:553:41">opcode</jtok>
<jtok eid="4" type="primary_name_ref" span="554:11:554:15">size</jtok>
<jtok eid="4" type="primary_name_ref" span="554:18:554:30">maxStackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="555:9:555:21">maxStackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="555:24:555:28">size</jtok>
<jtok eid="4" type="primary_name_ref" span="557:7:557:16">stackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="557:19:557:23">size</jtok>
<jtok eid="4" type="line_comment" span="558:7:558:75">// if opcode == ATHROW or xRETURN, ends current block (no successor)</jtok>
<jtok eid="4" type="primary_name_ref" span="559:12:559:18">opcode</jtok>
<jtok eid="4" type="primary_name_ref" span="559:22:559:31">Constants</jtok>
<jtok eid="4" type="qualified_name_ref" span="559:32:559:39">IRETURN</jtok>
<jtok eid="4" type="primary_name_ref" span="559:43:559:49">opcode</jtok>
<jtok eid="4" type="primary_name_ref" span="559:53:559:62">Constants</jtok>
<jtok eid="4" type="qualified_name_ref" span="559:63:559:69">RETURN</jtok>
<jtok eid="4" type="primary_name_ref" span="560:11:560:17">opcode</jtok>
<jtok eid="4" type="primary_name_ref" span="560:21:560:30">Constants</jtok>
<jtok eid="4" type="qualified_name_ref" span="560:31:560:37">ATHROW</jtok>
<jtok eid="4" type="primary_name_ref" span="562:13:562:25">currentBlock</jtok>
<jtok eid="4" type="primary_name_ref" span="563:11:563:23">currentBlock</jtok>
<jtok eid="4" type="qualified_name_ref" span="563:24:563:36">maxStackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="563:39:563:51">maxStackSize</jtok>
<jtok eid="4" type="primary_name_ref" span="564:11:564:23">currentBlock</jtok>
<jtok eid="4" type="line_comment" span="568:5:568:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="4" type="primary_name_ref" span="569:5:569:9">code</jtok>
<jtok eid="4" type="method_call" span="569:10:569:14">put1</jtok>
<jtok eid="4" type="primary_name_ref" span="569:15:569:21">opcode</jtok>
<jtok eid="5" type="method_name" span="572:15:572:27">visitIntInsn</jtok>
<jtok eid="5" type="parameter_name" span="572:39:572:45">opcode</jtok>
<jtok eid="5" type="parameter_name" span="572:57:572:64">operand</jtok>
<jtok eid="5" type="primary_name_ref" span="573:9:573:20">computeMaxs</jtok>
<jtok eid="5" type="primary_name_ref" span="573:24:573:30">opcode</jtok>
<jtok eid="5" type="primary_name_ref" span="573:34:573:43">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="573:44:573:52">NEWARRAY</jtok>
<jtok eid="5" type="line_comment" span="574:7:574:72">// updates current and max stack sizes only if opcode == NEWARRAY</jtok>
<jtok eid="5" type="line_comment" span="575:7:575:57">// (stack size variation = 0 for BIPUSH or SIPUSH)</jtok>
<jtok eid="5" type="local_variable_name" span="576:11:576:15">size</jtok>
<jtok eid="5" type="primary_name_ref" span="576:18:576:27">stackSize</jtok>
<jtok eid="5" type="primary_name_ref" span="577:11:577:15">size</jtok>
<jtok eid="5" type="primary_name_ref" span="577:18:577:30">maxStackSize</jtok>
<jtok eid="5" type="primary_name_ref" span="578:9:578:21">maxStackSize</jtok>
<jtok eid="5" type="primary_name_ref" span="578:24:578:28">size</jtok>
<jtok eid="5" type="primary_name_ref" span="580:7:580:16">stackSize</jtok>
<jtok eid="5" type="primary_name_ref" span="580:19:580:23">size</jtok>
<jtok eid="5" type="line_comment" span="582:5:582:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="5" type="primary_name_ref" span="583:9:583:15">opcode</jtok>
<jtok eid="5" type="primary_name_ref" span="583:19:583:28">Constants</jtok>
<jtok eid="5" type="qualified_name_ref" span="583:29:583:35">SIPUSH</jtok>
<jtok eid="5" type="primary_name_ref" span="584:7:584:11">code</jtok>
<jtok eid="5" type="method_call" span="584:12:584:17">put12</jtok>
<jtok eid="5" type="primary_name_ref" span="584:18:584:24">opcode</jtok>
<jtok eid="5" type="primary_name_ref" span="584:26:584:33">operand</jtok>
<jtok eid="5" type="line_comment" span="585:14:585:35">// BIPUSH or NEWARRAY</jtok>
<jtok eid="5" type="primary_name_ref" span="586:7:586:11">code</jtok>
<jtok eid="5" type="method_call" span="586:12:586:17">put11</jtok>
<jtok eid="5" type="primary_name_ref" span="586:18:586:24">opcode</jtok>
<jtok eid="5" type="primary_name_ref" span="586:26:586:33">operand</jtok>
<jtok eid="6" type="method_name" span="590:15:590:27">visitVarInsn</jtok>
<jtok eid="6" type="parameter_name" span="590:39:590:45">opcode</jtok>
<jtok eid="6" type="parameter_name" span="590:57:590:60">var</jtok>
<jtok eid="6" type="primary_name_ref" span="591:9:591:20">computeMaxs</jtok>
<jtok eid="6" type="line_comment" span="592:7:592:45">// updates current and max stack sizes</jtok>
<jtok eid="6" type="primary_name_ref" span="593:11:593:17">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="593:21:593:30">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="593:31:593:34">RET</jtok>
<jtok eid="6" type="line_comment" span="594:9:594:68">// no stack change, but end of current block (no successor)</jtok>
<jtok eid="6" type="primary_name_ref" span="595:13:595:25">currentBlock</jtok>
<jtok eid="6" type="primary_name_ref" span="596:11:596:23">currentBlock</jtok>
<jtok eid="6" type="qualified_name_ref" span="596:24:596:36">maxStackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="596:39:596:51">maxStackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="597:11:597:23">currentBlock</jtok>
<jtok eid="6" type="line_comment" span="599:16:599:34">// xLOAD or xSTORE</jtok>
<jtok eid="6" type="local_variable_name" span="600:13:600:17">size</jtok>
<jtok eid="6" type="primary_name_ref" span="600:20:600:29">stackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="600:32:600:36">SIZE</jtok>
<jtok eid="6" type="primary_name_ref" span="600:37:600:43">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="601:13:601:17">size</jtok>
<jtok eid="6" type="primary_name_ref" span="601:20:601:32">maxStackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="602:11:602:23">maxStackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="602:26:602:30">size</jtok>
<jtok eid="6" type="primary_name_ref" span="604:9:604:18">stackSize</jtok>
<jtok eid="6" type="primary_name_ref" span="604:21:604:25">size</jtok>
<jtok eid="6" type="line_comment" span="606:7:606:28">// updates max locals</jtok>
<jtok eid="6" type="local_variable_name" span="607:11:607:12">n</jtok>
<jtok eid="6" type="primary_name_ref" span="608:11:608:17">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="608:21:608:30">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="608:31:608:36">LLOAD</jtok>
<jtok eid="6" type="primary_name_ref" span="608:40:608:46">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="608:50:608:59">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="608:60:608:65">DLOAD</jtok>
<jtok eid="6" type="primary_name_ref" span="609:11:609:17">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="609:21:609:30">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="609:31:609:37">LSTORE</jtok>
<jtok eid="6" type="primary_name_ref" span="609:41:609:47">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="609:51:609:60">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="609:61:609:67">DSTORE</jtok>
<jtok eid="6" type="primary_name_ref" span="611:9:611:10">n</jtok>
<jtok eid="6" type="primary_name_ref" span="611:13:611:16">var</jtok>
<jtok eid="6" type="primary_name_ref" span="613:9:613:10">n</jtok>
<jtok eid="6" type="primary_name_ref" span="613:13:613:16">var</jtok>
<jtok eid="6" type="primary_name_ref" span="615:11:615:12">n</jtok>
<jtok eid="6" type="primary_name_ref" span="615:15:615:24">maxLocals</jtok>
<jtok eid="6" type="primary_name_ref" span="616:9:616:18">maxLocals</jtok>
<jtok eid="6" type="primary_name_ref" span="616:21:616:22">n</jtok>
<jtok eid="6" type="line_comment" span="619:5:619:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="6" type="primary_name_ref" span="620:9:620:12">var</jtok>
<jtok eid="6" type="primary_name_ref" span="620:20:620:26">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="620:30:620:39">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="620:40:620:43">RET</jtok>
<jtok eid="6" type="local_variable_name" span="621:11:621:14">opt</jtok>
<jtok eid="6" type="primary_name_ref" span="622:11:622:17">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="622:20:622:29">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="622:30:622:36">ISTORE</jtok>
<jtok eid="6" type="primary_name_ref" span="623:9:623:12">opt</jtok>
<jtok eid="6" type="block_comment" span="623:18:623:29">/*ILOAD_0*/</jtok>
<jtok eid="6" type="primary_name_ref" span="623:34:623:40">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="623:43:623:52">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="623:53:623:58">ILOAD</jtok>
<jtok eid="6" type="primary_name_ref" span="623:68:623:71">var</jtok>
<jtok eid="6" type="primary_name_ref" span="625:9:625:12">opt</jtok>
<jtok eid="6" type="block_comment" span="625:18:625:30">/*ISTORE_0*/</jtok>
<jtok eid="6" type="primary_name_ref" span="625:35:625:41">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="625:44:625:53">Constants</jtok>
<jtok eid="6" type="qualified_name_ref" span="625:54:625:60">ISTORE</jtok>
<jtok eid="6" type="primary_name_ref" span="625:70:625:73">var</jtok>
<jtok eid="6" type="primary_name_ref" span="627:7:627:11">code</jtok>
<jtok eid="6" type="method_call" span="627:12:627:16">put1</jtok>
<jtok eid="6" type="primary_name_ref" span="627:17:627:20">opt</jtok>
<jtok eid="6" type="primary_name_ref" span="628:16:628:19">var</jtok>
<jtok eid="6" type="primary_name_ref" span="629:7:629:11">code</jtok>
<jtok eid="6" type="method_call" span="629:12:629:16">put1</jtok>
<jtok eid="6" type="block_comment" span="629:21:629:29">/*WIDE*/</jtok>
<jtok eid="6" type="method_call" span="629:31:629:36">put12</jtok>
<jtok eid="6" type="primary_name_ref" span="629:37:629:43">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="629:45:629:48">var</jtok>
<jtok eid="6" type="primary_name_ref" span="631:7:631:11">code</jtok>
<jtok eid="6" type="method_call" span="631:12:631:17">put11</jtok>
<jtok eid="6" type="primary_name_ref" span="631:18:631:24">opcode</jtok>
<jtok eid="6" type="primary_name_ref" span="631:26:631:29">var</jtok>
<jtok eid="7" type="method_name" span="635:15:635:28">visitTypeInsn</jtok>
<jtok eid="7" type="parameter_name" span="635:40:635:46">opcode</jtok>
<jtok eid="7" type="parameter_type" span="635:54:635:60">String</jtok>
<jtok eid="7" type="parameter_name" span="635:61:635:65">desc</jtok>
<jtok eid="7" type="primary_name_ref" span="636:9:636:20">computeMaxs</jtok>
<jtok eid="7" type="primary_name_ref" span="636:24:636:30">opcode</jtok>
<jtok eid="7" type="primary_name_ref" span="636:34:636:43">Constants</jtok>
<jtok eid="7" type="qualified_name_ref" span="636:44:636:47">NEW</jtok>
<jtok eid="7" type="line_comment" span="637:7:637:67">// updates current and max stack sizes only if opcode == NEW</jtok>
<jtok eid="7" type="line_comment" span="638:7:638:73">// (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)</jtok>
<jtok eid="7" type="local_variable_name" span="639:11:639:15">size</jtok>
<jtok eid="7" type="primary_name_ref" span="639:18:639:27">stackSize</jtok>
<jtok eid="7" type="primary_name_ref" span="640:11:640:15">size</jtok>
<jtok eid="7" type="primary_name_ref" span="640:18:640:30">maxStackSize</jtok>
<jtok eid="7" type="primary_name_ref" span="641:9:641:21">maxStackSize</jtok>
<jtok eid="7" type="primary_name_ref" span="641:24:641:28">size</jtok>
<jtok eid="7" type="primary_name_ref" span="643:7:643:16">stackSize</jtok>
<jtok eid="7" type="primary_name_ref" span="643:19:643:23">size</jtok>
<jtok eid="7" type="line_comment" span="645:5:645:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="7" type="primary_name_ref" span="646:5:646:9">code</jtok>
<jtok eid="7" type="method_call" span="646:10:646:15">put12</jtok>
<jtok eid="7" type="primary_name_ref" span="646:16:646:22">opcode</jtok>
<jtok eid="7" type="primary_name_ref" span="646:24:646:26">cw</jtok>
<jtok eid="7" type="method_call" span="646:27:646:35">newClass</jtok>
<jtok eid="7" type="primary_name_ref" span="646:36:646:40">desc</jtok>
<jtok eid="7" type="qualified_name_ref" span="646:42:646:47">index</jtok>
<jtok eid="8" type="method_name" span="649:15:649:29">visitFieldInsn</jtok>
<jtok eid="8" type="parameter_name" span="650:15:650:21">opcode</jtok>
<jtok eid="8" type="parameter_type" span="651:11:651:17">String</jtok>
<jtok eid="8" type="parameter_name" span="651:18:651:23">owner</jtok>
<jtok eid="8" type="parameter_type" span="652:11:652:17">String</jtok>
<jtok eid="8" type="parameter_name" span="652:18:652:22">name</jtok>
<jtok eid="8" type="parameter_type" span="653:11:653:17">String</jtok>
<jtok eid="8" type="parameter_name" span="653:18:653:22">desc</jtok>
<jtok eid="8" type="primary_name_ref" span="655:9:655:20">computeMaxs</jtok>
<jtok eid="8" type="local_variable_name" span="656:11:656:15">size</jtok>
<jtok eid="8" type="line_comment" span="657:7:657:43">// computes the stack size variation</jtok>
<jtok eid="8" type="local_variable_name" span="658:12:658:13">c</jtok>
<jtok eid="8" type="primary_name_ref" span="658:16:658:20">desc</jtok>
<jtok eid="8" type="method_call" span="658:21:658:27">charAt</jtok>
<jtok eid="8" type="primary_name_ref" span="659:15:659:21">opcode</jtok>
<jtok eid="8" type="primary_name_ref" span="660:14:660:23">Constants</jtok>
<jtok eid="8" type="qualified_name_ref" span="660:24:660:33">GETSTATIC</jtok>
<jtok eid="8" type="primary_name_ref" span="661:11:661:15">size</jtok>
<jtok eid="8" type="primary_name_ref" span="661:18:661:27">stackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="661:31:661:32">c</jtok>
<jtok eid="8" type="primary_name_ref" span="661:43:661:44">c</jtok>
<jtok eid="8" type="primary_name_ref" span="663:14:663:23">Constants</jtok>
<jtok eid="8" type="qualified_name_ref" span="663:24:663:33">PUTSTATIC</jtok>
<jtok eid="8" type="primary_name_ref" span="664:11:664:15">size</jtok>
<jtok eid="8" type="primary_name_ref" span="664:18:664:27">stackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="664:31:664:32">c</jtok>
<jtok eid="8" type="primary_name_ref" span="664:43:664:44">c</jtok>
<jtok eid="8" type="primary_name_ref" span="666:14:666:23">Constants</jtok>
<jtok eid="8" type="qualified_name_ref" span="666:24:666:32">GETFIELD</jtok>
<jtok eid="8" type="primary_name_ref" span="667:11:667:15">size</jtok>
<jtok eid="8" type="primary_name_ref" span="667:18:667:27">stackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="667:31:667:32">c</jtok>
<jtok eid="8" type="primary_name_ref" span="667:43:667:44">c</jtok>
<jtok eid="8" type="line_comment" span="669:9:669:35">//case Constants.PUTFIELD:</jtok>
<jtok eid="8" type="primary_name_ref" span="671:11:671:15">size</jtok>
<jtok eid="8" type="primary_name_ref" span="671:18:671:27">stackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="671:31:671:32">c</jtok>
<jtok eid="8" type="primary_name_ref" span="671:43:671:44">c</jtok>
<jtok eid="8" type="line_comment" span="674:7:674:45">// updates current and max stack sizes</jtok>
<jtok eid="8" type="primary_name_ref" span="675:11:675:15">size</jtok>
<jtok eid="8" type="primary_name_ref" span="675:18:675:30">maxStackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="676:9:676:21">maxStackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="676:24:676:28">size</jtok>
<jtok eid="8" type="primary_name_ref" span="678:7:678:16">stackSize</jtok>
<jtok eid="8" type="primary_name_ref" span="678:19:678:23">size</jtok>
<jtok eid="8" type="line_comment" span="680:5:680:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="8" type="primary_name_ref" span="681:5:681:9">code</jtok>
<jtok eid="8" type="method_call" span="681:10:681:15">put12</jtok>
<jtok eid="8" type="primary_name_ref" span="681:16:681:22">opcode</jtok>
<jtok eid="8" type="primary_name_ref" span="681:24:681:26">cw</jtok>
<jtok eid="8" type="method_call" span="681:27:681:35">newField</jtok>
<jtok eid="8" type="primary_name_ref" span="681:36:681:41">owner</jtok>
<jtok eid="8" type="primary_name_ref" span="681:43:681:47">name</jtok>
<jtok eid="8" type="primary_name_ref" span="681:49:681:53">desc</jtok>
<jtok eid="8" type="qualified_name_ref" span="681:55:681:60">index</jtok>
<jtok eid="9" type="method_name" span="684:15:684:30">visitMethodInsn</jtok>
<jtok eid="9" type="parameter_name" span="685:15:685:21">opcode</jtok>
<jtok eid="9" type="parameter_type" span="686:11:686:17">String</jtok>
<jtok eid="9" type="parameter_name" span="686:18:686:23">owner</jtok>
<jtok eid="9" type="parameter_type" span="687:11:687:17">String</jtok>
<jtok eid="9" type="parameter_name" span="687:18:687:22">name</jtok>
<jtok eid="9" type="parameter_type" span="688:11:688:17">String</jtok>
<jtok eid="9" type="parameter_name" span="688:18:688:22">desc</jtok>
<jtok eid="9" type="class_or_interface_ref" span="690:5:690:9">Item</jtok>
<jtok eid="9" type="local_variable_name" span="690:10:690:11">i</jtok>
<jtok eid="9" type="primary_name_ref" span="691:9:691:15">opcode</jtok>
<jtok eid="9" type="primary_name_ref" span="691:19:691:28">Constants</jtok>
<jtok eid="9" type="qualified_name_ref" span="691:29:691:44">INVOKEINTERFACE</jtok>
<jtok eid="9" type="primary_name_ref" span="692:7:692:8">i</jtok>
<jtok eid="9" type="primary_name_ref" span="692:11:692:13">cw</jtok>
<jtok eid="9" type="method_call" span="692:14:692:26">newItfMethod</jtok>
<jtok eid="9" type="primary_name_ref" span="692:27:692:32">owner</jtok>
<jtok eid="9" type="primary_name_ref" span="692:34:692:38">name</jtok>
<jtok eid="9" type="primary_name_ref" span="692:40:692:44">desc</jtok>
<jtok eid="9" type="primary_name_ref" span="694:7:694:8">i</jtok>
<jtok eid="9" type="primary_name_ref" span="694:11:694:13">cw</jtok>
<jtok eid="9" type="method_call" span="694:14:694:23">newMethod</jtok>
<jtok eid="9" type="primary_name_ref" span="694:24:694:29">owner</jtok>
<jtok eid="9" type="primary_name_ref" span="694:31:694:35">name</jtok>
<jtok eid="9" type="primary_name_ref" span="694:37:694:41">desc</jtok>
<jtok eid="9" type="local_variable_name" span="696:9:696:16">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="696:19:696:20">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="696:21:696:27">intVal</jtok>
<jtok eid="9" type="primary_name_ref" span="697:9:697:20">computeMaxs</jtok>
<jtok eid="9" type="line_comment" span="698:7:698:78">// computes the stack size variation. In order not to recompute several</jtok>
<jtok eid="9" type="line_comment" span="699:7:699:76">// times this variation for the same Item, we use the intVal field of</jtok>
<jtok eid="9" type="line_comment" span="700:7:700:76">// this item to store this variation, once it has been computed. More</jtok>
<jtok eid="9" type="line_comment" span="701:7:701:78">// precisely this intVal field stores the sizes of the arguments and of</jtok>
<jtok eid="9" type="line_comment" span="702:7:702:49">// the return value corresponding to desc.</jtok>
<jtok eid="9" type="primary_name_ref" span="703:11:703:18">argSize</jtok>
<jtok eid="9" type="line_comment" span="704:9:704:77">// the above sizes have not been computed yet, so we compute them...</jtok>
<jtok eid="9" type="primary_name_ref" span="705:9:705:16">argSize</jtok>
<jtok eid="9" type="method_call" span="705:19:705:45">getArgumentsAndReturnSizes</jtok>
<jtok eid="9" type="primary_name_ref" span="705:46:705:50">desc</jtok>
<jtok eid="9" type="line_comment" span="706:9:706:77">// ... and we save them in order not to recompute them in the future</jtok>
<jtok eid="9" type="primary_name_ref" span="707:9:707:10">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="707:11:707:17">intVal</jtok>
<jtok eid="9" type="primary_name_ref" span="707:20:707:27">argSize</jtok>
<jtok eid="9" type="local_variable_name" span="709:11:709:15">size</jtok>
<jtok eid="9" type="primary_name_ref" span="710:11:710:17">opcode</jtok>
<jtok eid="9" type="primary_name_ref" span="710:21:710:30">Constants</jtok>
<jtok eid="9" type="qualified_name_ref" span="710:31:710:43">INVOKESTATIC</jtok>
<jtok eid="9" type="primary_name_ref" span="711:9:711:13">size</jtok>
<jtok eid="9" type="primary_name_ref" span="711:16:711:25">stackSize</jtok>
<jtok eid="9" type="primary_name_ref" span="711:29:711:36">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="711:46:711:53">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="713:9:713:13">size</jtok>
<jtok eid="9" type="primary_name_ref" span="713:16:713:25">stackSize</jtok>
<jtok eid="9" type="primary_name_ref" span="713:29:713:36">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="713:46:713:53">argSize</jtok>
<jtok eid="9" type="line_comment" span="715:7:715:45">// updates current and max stack sizes</jtok>
<jtok eid="9" type="primary_name_ref" span="716:11:716:15">size</jtok>
<jtok eid="9" type="primary_name_ref" span="716:18:716:30">maxStackSize</jtok>
<jtok eid="9" type="primary_name_ref" span="717:9:717:21">maxStackSize</jtok>
<jtok eid="9" type="primary_name_ref" span="717:24:717:28">size</jtok>
<jtok eid="9" type="primary_name_ref" span="719:7:719:16">stackSize</jtok>
<jtok eid="9" type="primary_name_ref" span="719:19:719:23">size</jtok>
<jtok eid="9" type="line_comment" span="721:5:721:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="9" type="primary_name_ref" span="722:9:722:15">opcode</jtok>
<jtok eid="9" type="primary_name_ref" span="722:19:722:28">Constants</jtok>
<jtok eid="9" type="qualified_name_ref" span="722:29:722:44">INVOKEINTERFACE</jtok>
<jtok eid="9" type="primary_name_ref" span="723:12:723:23">computeMaxs</jtok>
<jtok eid="9" type="primary_name_ref" span="724:13:724:20">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="725:11:725:18">argSize</jtok>
<jtok eid="9" type="method_call" span="725:21:725:47">getArgumentsAndReturnSizes</jtok>
<jtok eid="9" type="primary_name_ref" span="725:48:725:52">desc</jtok>
<jtok eid="9" type="primary_name_ref" span="726:11:726:12">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="726:13:726:19">intVal</jtok>
<jtok eid="9" type="primary_name_ref" span="726:22:726:29">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="729:7:729:11">code</jtok>
<jtok eid="9" type="method_call" span="729:12:729:17">put12</jtok>
<jtok eid="9" type="primary_name_ref" span="729:18:729:27">Constants</jtok>
<jtok eid="9" type="qualified_name_ref" span="729:28:729:43">INVOKEINTERFACE</jtok>
<jtok eid="9" type="primary_name_ref" span="729:45:729:46">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="729:47:729:52">index</jtok>
<jtok eid="9" type="method_call" span="729:54:729:59">put11</jtok>
<jtok eid="9" type="primary_name_ref" span="729:60:729:67">argSize</jtok>
<jtok eid="9" type="primary_name_ref" span="731:7:731:11">code</jtok>
<jtok eid="9" type="method_call" span="731:12:731:17">put12</jtok>
<jtok eid="9" type="primary_name_ref" span="731:18:731:24">opcode</jtok>
<jtok eid="9" type="primary_name_ref" span="731:26:731:27">i</jtok>
<jtok eid="9" type="qualified_name_ref" span="731:28:731:33">index</jtok>
<jtok eid="10" type="method_name" span="735:15:735:28">visitJumpInsn</jtok>
<jtok eid="10" type="parameter_name" span="735:40:735:46">opcode</jtok>
<jtok eid="10" type="parameter_type" span="735:54:735:59">Label</jtok>
<jtok eid="10" type="parameter_name" span="735:60:735:65">label</jtok>
<jtok eid="10" type="primary_name_ref" span="736:9:736:14">CHECK</jtok>
<jtok eid="10" type="primary_name_ref" span="737:11:737:16">label</jtok>
<jtok eid="10" type="qualified_name_ref" span="737:17:737:22">owner</jtok>
<jtok eid="10" type="primary_name_ref" span="738:9:738:14">label</jtok>
<jtok eid="10" type="qualified_name_ref" span="738:15:738:20">owner</jtok>
<jtok eid="10" type="primary_name_ref" span="739:18:739:23">label</jtok>
<jtok eid="10" type="qualified_name_ref" span="739:24:739:29">owner</jtok>
<jtok eid="10" type="constructor_call" span="740:19:740:43">IllegalArgumentException</jtok>
<jtok eid="10" type="primary_name_ref" span="743:9:743:20">computeMaxs</jtok>
<jtok eid="10" type="primary_name_ref" span="744:11:744:17">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="744:21:744:30">Constants</jtok>
<jtok eid="10" type="qualified_name_ref" span="744:31:744:35">GOTO</jtok>
<jtok eid="10" type="line_comment" span="745:9:745:78">// no stack change, but end of current block (with one new successor)</jtok>
<jtok eid="10" type="primary_name_ref" span="746:13:746:25">currentBlock</jtok>
<jtok eid="10" type="primary_name_ref" span="747:11:747:23">currentBlock</jtok>
<jtok eid="10" type="qualified_name_ref" span="747:24:747:36">maxStackSize</jtok>
<jtok eid="10" type="primary_name_ref" span="747:39:747:51">maxStackSize</jtok>
<jtok eid="10" type="method_call" span="748:11:748:23">addSuccessor</jtok>
<jtok eid="10" type="primary_name_ref" span="748:24:748:33">stackSize</jtok>
<jtok eid="10" type="primary_name_ref" span="748:35:748:40">label</jtok>
<jtok eid="10" type="primary_name_ref" span="749:11:749:23">currentBlock</jtok>
<jtok eid="10" type="primary_name_ref" span="751:18:751:24">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="751:28:751:37">Constants</jtok>
<jtok eid="10" type="qualified_name_ref" span="751:38:751:41">JSR</jtok>
<jtok eid="10" type="primary_name_ref" span="752:13:752:25">currentBlock</jtok>
<jtok eid="10" type="method_call" span="753:11:753:23">addSuccessor</jtok>
<jtok eid="10" type="primary_name_ref" span="753:24:753:33">stackSize</jtok>
<jtok eid="10" type="primary_name_ref" span="753:39:753:44">label</jtok>
<jtok eid="10" type="line_comment" span="756:9:756:78">// updates current stack size (max stack size unchanged because stack</jtok>
<jtok eid="10" type="line_comment" span="757:9:757:56">// size variation always negative in this case)</jtok>
<jtok eid="10" type="primary_name_ref" span="758:9:758:18">stackSize</jtok>
<jtok eid="10" type="primary_name_ref" span="758:22:758:26">SIZE</jtok>
<jtok eid="10" type="primary_name_ref" span="758:27:758:33">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="759:13:759:25">currentBlock</jtok>
<jtok eid="10" type="method_call" span="760:11:760:23">addSuccessor</jtok>
<jtok eid="10" type="primary_name_ref" span="760:24:760:33">stackSize</jtok>
<jtok eid="10" type="primary_name_ref" span="760:35:760:40">label</jtok>
<jtok eid="10" type="line_comment" span="764:5:764:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="10" type="primary_name_ref" span="765:9:765:14">label</jtok>
<jtok eid="10" type="qualified_name_ref" span="765:15:765:23">resolved</jtok>
<jtok eid="10" type="primary_name_ref" span="765:27:765:32">label</jtok>
<jtok eid="10" type="qualified_name_ref" span="765:33:765:41">position</jtok>
<jtok eid="10" type="primary_name_ref" span="765:44:765:48">code</jtok>
<jtok eid="10" type="qualified_name_ref" span="765:49:765:55">length</jtok>
<jtok eid="10" type="primary_name_ref" span="765:58:765:63">Short</jtok>
<jtok eid="10" type="qualified_name_ref" span="765:64:765:73">MIN_VALUE</jtok>
<jtok eid="10" type="line_comment" span="766:7:766:74">// case of a backward jump with an offset &lt; -32768. In this case we</jtok>
<jtok eid="10" type="line_comment" span="767:7:767:78">// automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx &lt;l&gt;</jtok>
<jtok eid="10" type="line_comment" span="768:7:768:80">// with IFNOTxxx &lt;l'&gt; GOTO_W &lt;l&gt;, where IFNOTxxx is the "opposite" opcode</jtok>
<jtok eid="10" type="line_comment" span="769:7:769:70">// of IFxxx (i.e., IFNE for IFEQ) and where &lt;l'&gt; designates the</jtok>
<jtok eid="10" type="line_comment" span="770:7:770:44">// instruction just after the GOTO_W.</jtok>
<jtok eid="10" type="primary_name_ref" span="771:11:771:17">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="771:21:771:30">Constants</jtok>
<jtok eid="10" type="qualified_name_ref" span="771:31:771:35">GOTO</jtok>
<jtok eid="10" type="primary_name_ref" span="772:9:772:13">code</jtok>
<jtok eid="10" type="method_call" span="772:14:772:18">put1</jtok>
<jtok eid="10" type="line_comment" span="772:25:772:34">// GOTO_W</jtok>
<jtok eid="10" type="primary_name_ref" span="773:18:773:24">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="773:28:773:37">Constants</jtok>
<jtok eid="10" type="qualified_name_ref" span="773:38:773:41">JSR</jtok>
<jtok eid="10" type="primary_name_ref" span="774:9:774:13">code</jtok>
<jtok eid="10" type="method_call" span="774:14:774:18">put1</jtok>
<jtok eid="10" type="line_comment" span="774:25:774:33">// JSR_W</jtok>
<jtok eid="10" type="primary_name_ref" span="776:9:776:13">code</jtok>
<jtok eid="10" type="method_call" span="776:14:776:18">put1</jtok>
<jtok eid="10" type="primary_name_ref" span="776:19:776:25">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="776:37:776:43">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="776:60:776:66">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="777:9:777:13">code</jtok>
<jtok eid="10" type="method_call" span="777:14:777:18">put2</jtok>
<jtok eid="10" type="line_comment" span="777:25:777:39">// jump offset</jtok>
<jtok eid="10" type="primary_name_ref" span="778:9:778:13">code</jtok>
<jtok eid="10" type="method_call" span="778:14:778:18">put1</jtok>
<jtok eid="10" type="line_comment" span="778:25:778:34">// GOTO_W</jtok>
<jtok eid="10" type="primary_name_ref" span="780:7:780:12">label</jtok>
<jtok eid="10" type="method_call" span="780:13:780:16">put</jtok>
<jtok eid="10" type="primary_name_ref" span="780:23:780:27">code</jtok>
<jtok eid="10" type="primary_name_ref" span="780:29:780:33">code</jtok>
<jtok eid="10" type="qualified_name_ref" span="780:34:780:40">length</jtok>
<jtok eid="10" type="line_comment" span="782:7:782:80">// case of a backward jump with an offset &gt;= -32768, or of a forward jump</jtok>
<jtok eid="10" type="line_comment" span="783:7:783:80">// with, of course, an unknown offset. In these cases we store the offset</jtok>
<jtok eid="10" type="line_comment" span="784:7:784:80">// in 2 bytes (which will be increased in resizeInstructions, if needed).</jtok>
<jtok eid="10" type="primary_name_ref" span="785:7:785:11">code</jtok>
<jtok eid="10" type="method_call" span="785:12:785:16">put1</jtok>
<jtok eid="10" type="primary_name_ref" span="785:17:785:23">opcode</jtok>
<jtok eid="10" type="primary_name_ref" span="786:7:786:12">label</jtok>
<jtok eid="10" type="method_call" span="786:13:786:16">put</jtok>
<jtok eid="10" type="primary_name_ref" span="786:23:786:27">code</jtok>
<jtok eid="10" type="primary_name_ref" span="786:29:786:33">code</jtok>
<jtok eid="10" type="qualified_name_ref" span="786:34:786:40">length</jtok>
<jtok eid="11" type="method_name" span="790:15:790:25">visitLabel</jtok>
<jtok eid="11" type="parameter_type" span="790:33:790:38">Label</jtok>
<jtok eid="11" type="parameter_name" span="790:39:790:44">label</jtok>
<jtok eid="11" type="primary_name_ref" span="791:9:791:14">CHECK</jtok>
<jtok eid="11" type="primary_name_ref" span="792:11:792:16">label</jtok>
<jtok eid="11" type="qualified_name_ref" span="792:17:792:22">owner</jtok>
<jtok eid="11" type="primary_name_ref" span="793:9:793:14">label</jtok>
<jtok eid="11" type="qualified_name_ref" span="793:15:793:20">owner</jtok>
<jtok eid="11" type="primary_name_ref" span="794:18:794:23">label</jtok>
<jtok eid="11" type="qualified_name_ref" span="794:24:794:29">owner</jtok>
<jtok eid="11" type="constructor_call" span="795:19:795:43">IllegalArgumentException</jtok>
<jtok eid="11" type="primary_name_ref" span="798:9:798:20">computeMaxs</jtok>
<jtok eid="11" type="primary_name_ref" span="799:11:799:23">currentBlock</jtok>
<jtok eid="11" type="line_comment" span="800:9:800:55">// ends current block (with one new successor)</jtok>
<jtok eid="11" type="primary_name_ref" span="801:9:801:21">currentBlock</jtok>
<jtok eid="11" type="qualified_name_ref" span="801:22:801:34">maxStackSize</jtok>
<jtok eid="11" type="primary_name_ref" span="801:37:801:49">maxStackSize</jtok>
<jtok eid="11" type="method_call" span="802:9:802:21">addSuccessor</jtok>
<jtok eid="11" type="primary_name_ref" span="802:22:802:31">stackSize</jtok>
<jtok eid="11" type="primary_name_ref" span="802:33:802:38">label</jtok>
<jtok eid="11" type="line_comment" span="804:7:804:37">// begins a new current block,</jtok>
<jtok eid="11" type="line_comment" span="805:7:805:57">// resets the relative current and max stack sizes</jtok>
<jtok eid="11" type="primary_name_ref" span="806:7:806:19">currentBlock</jtok>
<jtok eid="11" type="primary_name_ref" span="806:22:806:27">label</jtok>
<jtok eid="11" type="primary_name_ref" span="807:7:807:16">stackSize</jtok>
<jtok eid="11" type="primary_name_ref" span="808:7:808:19">maxStackSize</jtok>
<jtok eid="11" type="line_comment" span="810:5:810:61">// resolves previous forward references to label, if any</jtok>
<jtok eid="11" type="primary_name_ref" span="811:5:811:11">resize</jtok>
<jtok eid="11" type="primary_name_ref" span="811:15:811:20">label</jtok>
<jtok eid="11" type="method_call" span="811:21:811:28">resolve</jtok>
<jtok eid="11" type="primary_name_ref" span="811:35:811:39">code</jtok>
<jtok eid="11" type="qualified_name_ref" span="811:40:811:46">length</jtok>
<jtok eid="11" type="primary_name_ref" span="811:48:811:52">code</jtok>
<jtok eid="11" type="qualified_name_ref" span="811:53:811:57">data</jtok>
<jtok eid="12" type="method_name" span="814:15:814:27">visitLdcInsn</jtok>
<jtok eid="12" type="parameter_type" span="814:35:814:41">Object</jtok>
<jtok eid="12" type="parameter_name" span="814:42:814:45">cst</jtok>
<jtok eid="12" type="class_or_interface_ref" span="815:5:815:9">Item</jtok>
<jtok eid="12" type="local_variable_name" span="815:10:815:11">i</jtok>
<jtok eid="12" type="primary_name_ref" span="815:14:815:16">cw</jtok>
<jtok eid="12" type="method_call" span="815:17:815:23">newCst</jtok>
<jtok eid="12" type="primary_name_ref" span="815:24:815:27">cst</jtok>
<jtok eid="12" type="primary_name_ref" span="816:9:816:20">computeMaxs</jtok>
<jtok eid="12" type="local_variable_name" span="817:11:817:15">size</jtok>
<jtok eid="12" type="line_comment" span="818:7:818:43">// computes the stack size variation</jtok>
<jtok eid="12" type="primary_name_ref" span="819:11:819:12">i</jtok>
<jtok eid="12" type="qualified_name_ref" span="819:13:819:17">type</jtok>
<jtok eid="12" type="primary_name_ref" span="819:21:819:32">ClassWriter</jtok>
<jtok eid="12" type="qualified_name_ref" span="819:33:819:37">LONG</jtok>
<jtok eid="12" type="primary_name_ref" span="819:41:819:42">i</jtok>
<jtok eid="12" type="qualified_name_ref" span="819:43:819:47">type</jtok>
<jtok eid="12" type="primary_name_ref" span="819:51:819:62">ClassWriter</jtok>
<jtok eid="12" type="qualified_name_ref" span="819:63:819:69">DOUBLE</jtok>
<jtok eid="12" type="primary_name_ref" span="820:9:820:13">size</jtok>
<jtok eid="12" type="primary_name_ref" span="820:16:820:25">stackSize</jtok>
<jtok eid="12" type="primary_name_ref" span="822:9:822:13">size</jtok>
<jtok eid="12" type="primary_name_ref" span="822:16:822:25">stackSize</jtok>
<jtok eid="12" type="line_comment" span="824:7:824:45">// updates current and max stack sizes</jtok>
<jtok eid="12" type="primary_name_ref" span="825:11:825:15">size</jtok>
<jtok eid="12" type="primary_name_ref" span="825:18:825:30">maxStackSize</jtok>
<jtok eid="12" type="primary_name_ref" span="826:9:826:21">maxStackSize</jtok>
<jtok eid="12" type="primary_name_ref" span="826:24:826:28">size</jtok>
<jtok eid="12" type="primary_name_ref" span="828:7:828:16">stackSize</jtok>
<jtok eid="12" type="primary_name_ref" span="828:19:828:23">size</jtok>
<jtok eid="12" type="line_comment" span="830:5:830:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="12" type="local_variable_name" span="831:9:831:14">index</jtok>
<jtok eid="12" type="primary_name_ref" span="831:17:831:18">i</jtok>
<jtok eid="12" type="qualified_name_ref" span="831:19:831:24">index</jtok>
<jtok eid="12" type="primary_name_ref" span="832:9:832:10">i</jtok>
<jtok eid="12" type="qualified_name_ref" span="832:11:832:15">type</jtok>
<jtok eid="12" type="primary_name_ref" span="832:19:832:30">ClassWriter</jtok>
<jtok eid="12" type="qualified_name_ref" span="832:31:832:35">LONG</jtok>
<jtok eid="12" type="primary_name_ref" span="832:39:832:40">i</jtok>
<jtok eid="12" type="qualified_name_ref" span="832:41:832:45">type</jtok>
<jtok eid="12" type="primary_name_ref" span="832:49:832:60">ClassWriter</jtok>
<jtok eid="12" type="qualified_name_ref" span="832:61:832:67">DOUBLE</jtok>
<jtok eid="12" type="primary_name_ref" span="833:7:833:11">code</jtok>
<jtok eid="12" type="method_call" span="833:12:833:17">put12</jtok>
<jtok eid="12" type="block_comment" span="833:21:833:31">/*LDC2_W*/</jtok>
<jtok eid="12" type="primary_name_ref" span="833:33:833:38">index</jtok>
<jtok eid="12" type="primary_name_ref" span="834:16:834:21">index</jtok>
<jtok eid="12" type="primary_name_ref" span="835:7:835:11">code</jtok>
<jtok eid="12" type="method_call" span="835:12:835:17">put12</jtok>
<jtok eid="12" type="block_comment" span="835:21:835:30">/*LDC_W*/</jtok>
<jtok eid="12" type="primary_name_ref" span="835:32:835:37">index</jtok>
<jtok eid="12" type="primary_name_ref" span="837:7:837:11">code</jtok>
<jtok eid="12" type="method_call" span="837:12:837:17">put11</jtok>
<jtok eid="12" type="primary_name_ref" span="837:18:837:27">Constants</jtok>
<jtok eid="12" type="qualified_name_ref" span="837:28:837:31">LDC</jtok>
<jtok eid="12" type="primary_name_ref" span="837:33:837:38">index</jtok>
<jtok eid="13" type="method_name" span="841:15:841:28">visitIincInsn</jtok>
<jtok eid="13" type="parameter_name" span="841:40:841:43">var</jtok>
<jtok eid="13" type="parameter_name" span="841:55:841:64">increment</jtok>
<jtok eid="13" type="primary_name_ref" span="842:9:842:20">computeMaxs</jtok>
<jtok eid="13" type="line_comment" span="843:7:843:51">// updates max locals only (no stack change)</jtok>
<jtok eid="13" type="local_variable_name" span="844:11:844:12">n</jtok>
<jtok eid="13" type="primary_name_ref" span="844:15:844:18">var</jtok>
<jtok eid="13" type="primary_name_ref" span="845:11:845:12">n</jtok>
<jtok eid="13" type="primary_name_ref" span="845:15:845:24">maxLocals</jtok>
<jtok eid="13" type="primary_name_ref" span="846:9:846:18">maxLocals</jtok>
<jtok eid="13" type="primary_name_ref" span="846:21:846:22">n</jtok>
<jtok eid="13" type="line_comment" span="849:5:849:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="13" type="primary_name_ref" span="850:10:850:13">var</jtok>
<jtok eid="13" type="primary_name_ref" span="850:25:850:34">increment</jtok>
<jtok eid="13" type="primary_name_ref" span="850:46:850:55">increment</jtok>
<jtok eid="13" type="primary_name_ref" span="851:7:851:11">code</jtok>
<jtok eid="13" type="method_call" span="851:12:851:16">put1</jtok>
<jtok eid="13" type="block_comment" span="851:21:851:29">/*WIDE*/</jtok>
<jtok eid="13" type="method_call" span="851:31:851:36">put12</jtok>
<jtok eid="13" type="primary_name_ref" span="851:37:851:46">Constants</jtok>
<jtok eid="13" type="qualified_name_ref" span="851:47:851:51">IINC</jtok>
<jtok eid="13" type="primary_name_ref" span="851:53:851:56">var</jtok>
<jtok eid="13" type="method_call" span="851:58:851:62">put2</jtok>
<jtok eid="13" type="primary_name_ref" span="851:63:851:72">increment</jtok>
<jtok eid="13" type="primary_name_ref" span="853:7:853:11">code</jtok>
<jtok eid="13" type="method_call" span="853:12:853:16">put1</jtok>
<jtok eid="13" type="primary_name_ref" span="853:17:853:26">Constants</jtok>
<jtok eid="13" type="qualified_name_ref" span="853:27:853:31">IINC</jtok>
<jtok eid="13" type="method_call" span="853:33:853:38">put11</jtok>
<jtok eid="13" type="primary_name_ref" span="853:39:853:42">var</jtok>
<jtok eid="13" type="primary_name_ref" span="853:44:853:53">increment</jtok>
<jtok eid="14" type="method_name" span="857:15:857:35">visitTableSwitchInsn</jtok>
<jtok eid="14" type="parameter_name" span="858:15:858:18">min</jtok>
<jtok eid="14" type="parameter_name" span="859:15:859:18">max</jtok>
<jtok eid="14" type="parameter_type" span="860:11:860:16">Label</jtok>
<jtok eid="14" type="parameter_name" span="860:17:860:21">dflt</jtok>
<jtok eid="14" type="parameter_type" span="861:11:861:16">Label</jtok>
<jtok eid="14" type="parameter_name" span="861:17:861:23">labels</jtok>
<jtok eid="14" type="primary_name_ref" span="863:9:863:20">computeMaxs</jtok>
<jtok eid="14" type="line_comment" span="864:7:864:63">// updates current stack size (max stack size unchanged)</jtok>
<jtok eid="14" type="primary_name_ref" span="865:9:865:18">stackSize</jtok>
<jtok eid="14" type="line_comment" span="866:7:866:55">// ends current block (with many new successors)</jtok>
<jtok eid="14" type="primary_name_ref" span="867:11:867:23">currentBlock</jtok>
<jtok eid="14" type="primary_name_ref" span="868:9:868:21">currentBlock</jtok>
<jtok eid="14" type="qualified_name_ref" span="868:22:868:34">maxStackSize</jtok>
<jtok eid="14" type="primary_name_ref" span="868:37:868:49">maxStackSize</jtok>
<jtok eid="14" type="method_call" span="869:9:869:21">addSuccessor</jtok>
<jtok eid="14" type="primary_name_ref" span="869:22:869:31">stackSize</jtok>
<jtok eid="14" type="primary_name_ref" span="869:33:869:37">dflt</jtok>
<jtok eid="14" type="local_variable_name" span="870:18:870:19">i</jtok>
<jtok eid="14" type="primary_name_ref" span="870:25:870:26">i</jtok>
<jtok eid="14" type="primary_name_ref" span="870:29:870:35">labels</jtok>
<jtok eid="14" type="qualified_name_ref" span="870:36:870:42">length</jtok>
<jtok eid="14" type="primary_name_ref" span="870:46:870:47">i</jtok>
<jtok eid="14" type="method_call" span="871:11:871:23">addSuccessor</jtok>
<jtok eid="14" type="primary_name_ref" span="871:24:871:33">stackSize</jtok>
<jtok eid="14" type="primary_name_ref" span="871:35:871:41">labels</jtok>
<jtok eid="14" type="primary_name_ref" span="871:42:871:43">i</jtok>
<jtok eid="14" type="primary_name_ref" span="873:9:873:21">currentBlock</jtok>
<jtok eid="14" type="line_comment" span="876:5:876:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="14" type="local_variable_name" span="877:9:877:15">source</jtok>
<jtok eid="14" type="primary_name_ref" span="877:18:877:22">code</jtok>
<jtok eid="14" type="qualified_name_ref" span="877:23:877:29">length</jtok>
<jtok eid="14" type="primary_name_ref" span="878:5:878:9">code</jtok>
<jtok eid="14" type="method_call" span="878:10:878:14">put1</jtok>
<jtok eid="14" type="primary_name_ref" span="878:15:878:24">Constants</jtok>
<jtok eid="14" type="qualified_name_ref" span="878:25:878:36">TABLESWITCH</jtok>
<jtok eid="14" type="primary_name_ref" span="879:12:879:16">code</jtok>
<jtok eid="14" type="qualified_name_ref" span="879:17:879:23">length</jtok>
<jtok eid="14" type="primary_name_ref" span="880:7:880:11">code</jtok>
<jtok eid="14" type="method_call" span="880:12:880:16">put1</jtok>
<jtok eid="14" type="primary_name_ref" span="882:5:882:9">dflt</jtok>
<jtok eid="14" type="method_call" span="882:10:882:13">put</jtok>
<jtok eid="14" type="primary_name_ref" span="882:20:882:24">code</jtok>
<jtok eid="14" type="primary_name_ref" span="882:26:882:32">source</jtok>
<jtok eid="14" type="primary_name_ref" span="883:5:883:9">code</jtok>
<jtok eid="14" type="method_call" span="883:10:883:14">put4</jtok>
<jtok eid="14" type="primary_name_ref" span="883:15:883:18">min</jtok>
<jtok eid="14" type="method_call" span="883:20:883:24">put4</jtok>
<jtok eid="14" type="primary_name_ref" span="883:25:883:28">max</jtok>
<jtok eid="14" type="local_variable_name" span="884:14:884:15">i</jtok>
<jtok eid="14" type="primary_name_ref" span="884:21:884:22">i</jtok>
<jtok eid="14" type="primary_name_ref" span="884:25:884:31">labels</jtok>
<jtok eid="14" type="qualified_name_ref" span="884:32:884:38">length</jtok>
<jtok eid="14" type="primary_name_ref" span="884:42:884:43">i</jtok>
<jtok eid="14" type="primary_name_ref" span="885:7:885:13">labels</jtok>
<jtok eid="14" type="primary_name_ref" span="885:14:885:15">i</jtok>
<jtok eid="14" type="method_call" span="885:17:885:20">put</jtok>
<jtok eid="14" type="primary_name_ref" span="885:27:885:31">code</jtok>
<jtok eid="14" type="primary_name_ref" span="885:33:885:39">source</jtok>
<jtok eid="15" type="method_name" span="889:15:889:36">visitLookupSwitchInsn</jtok>
<jtok eid="15" type="parameter_type" span="890:11:890:16">Label</jtok>
<jtok eid="15" type="parameter_name" span="890:17:890:21">dflt</jtok>
<jtok eid="15" type="parameter_name" span="891:15:891:19">keys</jtok>
<jtok eid="15" type="parameter_type" span="892:11:892:16">Label</jtok>
<jtok eid="15" type="parameter_name" span="892:17:892:23">labels</jtok>
<jtok eid="15" type="primary_name_ref" span="894:9:894:20">computeMaxs</jtok>
<jtok eid="15" type="line_comment" span="895:7:895:63">// updates current stack size (max stack size unchanged)</jtok>
<jtok eid="15" type="primary_name_ref" span="896:9:896:18">stackSize</jtok>
<jtok eid="15" type="line_comment" span="897:7:897:55">// ends current block (with many new successors)</jtok>
<jtok eid="15" type="primary_name_ref" span="898:11:898:23">currentBlock</jtok>
<jtok eid="15" type="primary_name_ref" span="899:9:899:21">currentBlock</jtok>
<jtok eid="15" type="qualified_name_ref" span="899:22:899:34">maxStackSize</jtok>
<jtok eid="15" type="primary_name_ref" span="899:37:899:49">maxStackSize</jtok>
<jtok eid="15" type="method_call" span="900:9:900:21">addSuccessor</jtok>
<jtok eid="15" type="primary_name_ref" span="900:22:900:31">stackSize</jtok>
<jtok eid="15" type="primary_name_ref" span="900:33:900:37">dflt</jtok>
<jtok eid="15" type="local_variable_name" span="901:18:901:19">i</jtok>
<jtok eid="15" type="primary_name_ref" span="901:25:901:26">i</jtok>
<jtok eid="15" type="primary_name_ref" span="901:29:901:35">labels</jtok>
<jtok eid="15" type="qualified_name_ref" span="901:36:901:42">length</jtok>
<jtok eid="15" type="primary_name_ref" span="901:46:901:47">i</jtok>
<jtok eid="15" type="method_call" span="902:11:902:23">addSuccessor</jtok>
<jtok eid="15" type="primary_name_ref" span="902:24:902:33">stackSize</jtok>
<jtok eid="15" type="primary_name_ref" span="902:35:902:41">labels</jtok>
<jtok eid="15" type="primary_name_ref" span="902:42:902:43">i</jtok>
<jtok eid="15" type="primary_name_ref" span="904:9:904:21">currentBlock</jtok>
<jtok eid="15" type="line_comment" span="907:5:907:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="15" type="local_variable_name" span="908:9:908:15">source</jtok>
<jtok eid="15" type="primary_name_ref" span="908:18:908:22">code</jtok>
<jtok eid="15" type="qualified_name_ref" span="908:23:908:29">length</jtok>
<jtok eid="15" type="primary_name_ref" span="909:5:909:9">code</jtok>
<jtok eid="15" type="method_call" span="909:10:909:14">put1</jtok>
<jtok eid="15" type="primary_name_ref" span="909:15:909:24">Constants</jtok>
<jtok eid="15" type="qualified_name_ref" span="909:25:909:37">LOOKUPSWITCH</jtok>
<jtok eid="15" type="primary_name_ref" span="910:12:910:16">code</jtok>
<jtok eid="15" type="qualified_name_ref" span="910:17:910:23">length</jtok>
<jtok eid="15" type="primary_name_ref" span="911:7:911:11">code</jtok>
<jtok eid="15" type="method_call" span="911:12:911:16">put1</jtok>
<jtok eid="15" type="primary_name_ref" span="913:5:913:9">dflt</jtok>
<jtok eid="15" type="method_call" span="913:10:913:13">put</jtok>
<jtok eid="15" type="primary_name_ref" span="913:20:913:24">code</jtok>
<jtok eid="15" type="primary_name_ref" span="913:26:913:32">source</jtok>
<jtok eid="15" type="primary_name_ref" span="914:5:914:9">code</jtok>
<jtok eid="15" type="method_call" span="914:10:914:14">put4</jtok>
<jtok eid="15" type="primary_name_ref" span="914:15:914:21">labels</jtok>
<jtok eid="15" type="qualified_name_ref" span="914:22:914:28">length</jtok>
<jtok eid="15" type="local_variable_name" span="915:14:915:15">i</jtok>
<jtok eid="15" type="primary_name_ref" span="915:21:915:22">i</jtok>
<jtok eid="15" type="primary_name_ref" span="915:25:915:31">labels</jtok>
<jtok eid="15" type="qualified_name_ref" span="915:32:915:38">length</jtok>
<jtok eid="15" type="primary_name_ref" span="915:42:915:43">i</jtok>
<jtok eid="15" type="primary_name_ref" span="916:7:916:11">code</jtok>
<jtok eid="15" type="method_call" span="916:12:916:16">put4</jtok>
<jtok eid="15" type="primary_name_ref" span="916:17:916:21">keys</jtok>
<jtok eid="15" type="primary_name_ref" span="916:22:916:23">i</jtok>
<jtok eid="15" type="primary_name_ref" span="917:7:917:13">labels</jtok>
<jtok eid="15" type="primary_name_ref" span="917:14:917:15">i</jtok>
<jtok eid="15" type="method_call" span="917:17:917:20">put</jtok>
<jtok eid="15" type="primary_name_ref" span="917:27:917:31">code</jtok>
<jtok eid="15" type="primary_name_ref" span="917:33:917:39">source</jtok>
<jtok eid="16" type="method_name" span="921:15:921:38">visitMultiANewArrayInsn</jtok>
<jtok eid="16" type="parameter_type" span="921:46:921:52">String</jtok>
<jtok eid="16" type="parameter_name" span="921:53:921:57">desc</jtok>
<jtok eid="16" type="parameter_name" span="921:69:921:73">dims</jtok>
<jtok eid="16" type="primary_name_ref" span="922:9:922:20">computeMaxs</jtok>
<jtok eid="16" type="line_comment" span="923:7:923:76">// updates current stack size (max stack size unchanged because stack</jtok>
<jtok eid="16" type="line_comment" span="924:7:924:49">// size variation always negative or null)</jtok>
<jtok eid="16" type="primary_name_ref" span="925:7:925:16">stackSize</jtok>
<jtok eid="16" type="primary_name_ref" span="925:24:925:28">dims</jtok>
<jtok eid="16" type="line_comment" span="927:5:927:58">// adds the instruction to the bytecode of the method</jtok>
<jtok eid="16" type="class_or_interface_ref" span="928:5:928:9">Item</jtok>
<jtok eid="16" type="local_variable_name" span="928:10:928:19">classItem</jtok>
<jtok eid="16" type="primary_name_ref" span="928:22:928:24">cw</jtok>
<jtok eid="16" type="method_call" span="928:25:928:33">newClass</jtok>
<jtok eid="16" type="primary_name_ref" span="928:34:928:38">desc</jtok>
<jtok eid="16" type="primary_name_ref" span="929:5:929:9">code</jtok>
<jtok eid="16" type="method_call" span="929:10:929:15">put12</jtok>
<jtok eid="16" type="primary_name_ref" span="929:16:929:25">Constants</jtok>
<jtok eid="16" type="qualified_name_ref" span="929:26:929:40">MULTIANEWARRAY</jtok>
<jtok eid="16" type="primary_name_ref" span="929:42:929:51">classItem</jtok>
<jtok eid="16" type="qualified_name_ref" span="929:52:929:57">index</jtok>
<jtok eid="16" type="method_call" span="929:59:929:63">put1</jtok>
<jtok eid="16" type="primary_name_ref" span="929:64:929:68">dims</jtok>
<jtok eid="17" type="method_name" span="932:15:932:33">visitTryCatchBlock</jtok>
<jtok eid="17" type="parameter_type" span="933:11:933:16">Label</jtok>
<jtok eid="17" type="parameter_name" span="933:17:933:22">start</jtok>
<jtok eid="17" type="parameter_type" span="934:11:934:16">Label</jtok>
<jtok eid="17" type="parameter_name" span="934:17:934:20">end</jtok>
<jtok eid="17" type="parameter_type" span="935:11:935:16">Label</jtok>
<jtok eid="17" type="parameter_name" span="935:17:935:24">handler</jtok>
<jtok eid="17" type="parameter_type" span="936:11:936:17">String</jtok>
<jtok eid="17" type="parameter_name" span="936:18:936:22">type</jtok>
<jtok eid="17" type="primary_name_ref" span="938:9:938:14">CHECK</jtok>
<jtok eid="17" type="primary_name_ref" span="939:11:939:16">start</jtok>
<jtok eid="17" type="qualified_name_ref" span="939:17:939:22">owner</jtok>
<jtok eid="17" type="primary_name_ref" span="939:34:939:37">end</jtok>
<jtok eid="17" type="qualified_name_ref" span="939:38:939:43">owner</jtok>
<jtok eid="17" type="primary_name_ref" span="939:55:939:62">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="939:63:939:68">owner</jtok>
<jtok eid="17" type="constructor_call" span="940:19:940:43">IllegalArgumentException</jtok>
<jtok eid="17" type="primary_name_ref" span="942:12:942:17">start</jtok>
<jtok eid="17" type="qualified_name_ref" span="942:18:942:26">resolved</jtok>
<jtok eid="17" type="primary_name_ref" span="942:31:942:34">end</jtok>
<jtok eid="17" type="qualified_name_ref" span="942:35:942:43">resolved</jtok>
<jtok eid="17" type="primary_name_ref" span="942:48:942:55">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="942:56:942:64">resolved</jtok>
<jtok eid="17" type="constructor_call" span="943:19:943:43">IllegalArgumentException</jtok>
<jtok eid="17" type="primary_name_ref" span="946:9:946:20">computeMaxs</jtok>
<jtok eid="17" type="line_comment" span="947:7:947:69">// pushes handler block onto the stack of blocks to be visited</jtok>
<jtok eid="17" type="primary_name_ref" span="948:12:948:19">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="948:20:948:26">pushed</jtok>
<jtok eid="17" type="primary_name_ref" span="949:9:949:16">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="949:17:949:31">beginStackSize</jtok>
<jtok eid="17" type="primary_name_ref" span="950:9:950:16">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="950:17:950:23">pushed</jtok>
<jtok eid="17" type="primary_name_ref" span="951:9:951:16">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="951:17:951:21">next</jtok>
<jtok eid="17" type="primary_name_ref" span="951:24:951:34">blockStack</jtok>
<jtok eid="17" type="primary_name_ref" span="952:9:952:19">blockStack</jtok>
<jtok eid="17" type="primary_name_ref" span="952:22:952:29">handler</jtok>
<jtok eid="17" type="primary_name_ref" span="955:7:955:17">catchCount</jtok>
<jtok eid="17" type="primary_name_ref" span="956:9:956:19">catchTable</jtok>
<jtok eid="17" type="primary_name_ref" span="957:7:957:17">catchTable</jtok>
<jtok eid="17" type="constructor_call" span="957:24:957:34">ByteVector</jtok>
<jtok eid="17" type="primary_name_ref" span="959:5:959:15">catchTable</jtok>
<jtok eid="17" type="method_call" span="959:16:959:20">put2</jtok>
<jtok eid="17" type="primary_name_ref" span="959:21:959:26">start</jtok>
<jtok eid="17" type="qualified_name_ref" span="959:27:959:35">position</jtok>
<jtok eid="17" type="primary_name_ref" span="960:5:960:15">catchTable</jtok>
<jtok eid="17" type="method_call" span="960:16:960:20">put2</jtok>
<jtok eid="17" type="primary_name_ref" span="960:21:960:24">end</jtok>
<jtok eid="17" type="qualified_name_ref" span="960:25:960:33">position</jtok>
<jtok eid="17" type="primary_name_ref" span="961:5:961:15">catchTable</jtok>
<jtok eid="17" type="method_call" span="961:16:961:20">put2</jtok>
<jtok eid="17" type="primary_name_ref" span="961:21:961:28">handler</jtok>
<jtok eid="17" type="qualified_name_ref" span="961:29:961:37">position</jtok>
<jtok eid="17" type="primary_name_ref" span="962:5:962:15">catchTable</jtok>
<jtok eid="17" type="method_call" span="962:16:962:20">put2</jtok>
<jtok eid="17" type="primary_name_ref" span="962:21:962:25">type</jtok>
<jtok eid="17" type="primary_name_ref" span="962:36:962:38">cw</jtok>
<jtok eid="17" type="method_call" span="962:39:962:47">newClass</jtok>
<jtok eid="17" type="primary_name_ref" span="962:48:962:52">type</jtok>
<jtok eid="17" type="qualified_name_ref" span="962:54:962:59">index</jtok>
<jtok eid="18" type="method_name" span="965:15:965:24">visitMaxs</jtok>
<jtok eid="18" type="parameter_name" span="965:36:965:44">maxStack</jtok>
<jtok eid="18" type="parameter_name" span="965:56:965:65">maxLocals</jtok>
<jtok eid="18" type="primary_name_ref" span="966:9:966:20">computeMaxs</jtok>
<jtok eid="18" type="line_comment" span="967:7:967:44">// true (non relative) max stack size</jtok>
<jtok eid="18" type="local_variable_name" span="968:11:968:14">max</jtok>
<jtok eid="18" type="line_comment" span="969:7:969:78">// control flow analysis algorithm: while the block stack is not empty,</jtok>
<jtok eid="18" type="line_comment" span="970:7:970:73">// pop a block from this stack, update the max stack size, compute</jtok>
<jtok eid="18" type="line_comment" span="971:7:971:76">// the true (non relative) begin stack size of the successors of this</jtok>
<jtok eid="18" type="line_comment" span="972:7:972:75">// block, and push these successors onto the stack (unless they have</jtok>
<jtok eid="18" type="line_comment" span="973:7:973:78">// already been pushed onto the stack). Note: by hypothesis, the {@link</jtok>
<jtok eid="18" type="line_comment" span="974:7:974:77">// Label#beginStackSize} of the blocks in the block stack are the true</jtok>
<jtok eid="18" type="line_comment" span="975:7:975:63">// (non relative) beginning stack sizes of these blocks.</jtok>
<jtok eid="18" type="class_or_interface_ref" span="976:7:976:12">Label</jtok>
<jtok eid="18" type="local_variable_name" span="976:13:976:18">stack</jtok>
<jtok eid="18" type="primary_name_ref" span="976:21:976:31">blockStack</jtok>
<jtok eid="18" type="primary_name_ref" span="977:14:977:19">stack</jtok>
<jtok eid="18" type="line_comment" span="978:9:978:39">// pops a block from the stack</jtok>
<jtok eid="18" type="class_or_interface_ref" span="979:9:979:14">Label</jtok>
<jtok eid="18" type="local_variable_name" span="979:15:979:16">l</jtok>
<jtok eid="18" type="primary_name_ref" span="979:19:979:24">stack</jtok>
<jtok eid="18" type="primary_name_ref" span="980:9:980:14">stack</jtok>
<jtok eid="18" type="primary_name_ref" span="980:17:980:22">stack</jtok>
<jtok eid="18" type="qualified_name_ref" span="980:23:980:27">next</jtok>
<jtok eid="18" type="line_comment" span="981:9:981:73">// computes the true (non relative) max stack size of this block</jtok>
<jtok eid="18" type="local_variable_name" span="982:13:982:18">start</jtok>
<jtok eid="18" type="primary_name_ref" span="982:21:982:22">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="982:23:982:37">beginStackSize</jtok>
<jtok eid="18" type="local_variable_name" span="983:13:983:21">blockMax</jtok>
<jtok eid="18" type="primary_name_ref" span="983:24:983:29">start</jtok>
<jtok eid="18" type="primary_name_ref" span="983:32:983:33">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="983:34:983:46">maxStackSize</jtok>
<jtok eid="18" type="line_comment" span="984:9:984:45">// updates the global max stack size</jtok>
<jtok eid="18" type="primary_name_ref" span="985:13:985:21">blockMax</jtok>
<jtok eid="18" type="primary_name_ref" span="985:24:985:27">max</jtok>
<jtok eid="18" type="primary_name_ref" span="986:11:986:14">max</jtok>
<jtok eid="18" type="primary_name_ref" span="986:17:986:25">blockMax</jtok>
<jtok eid="18" type="line_comment" span="988:9:988:48">// analyses the successors of the block</jtok>
<jtok eid="18" type="class_or_interface_ref" span="989:9:989:13">Edge</jtok>
<jtok eid="18" type="local_variable_name" span="989:14:989:15">b</jtok>
<jtok eid="18" type="primary_name_ref" span="989:18:989:19">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="989:20:989:30">successors</jtok>
<jtok eid="18" type="primary_name_ref" span="990:16:990:17">b</jtok>
<jtok eid="18" type="primary_name_ref" span="991:11:991:12">l</jtok>
<jtok eid="18" type="primary_name_ref" span="991:15:991:16">b</jtok>
<jtok eid="18" type="qualified_name_ref" span="991:17:991:26">successor</jtok>
<jtok eid="18" type="line_comment" span="992:11:992:77">// if this successor has not already been pushed onto the stack...</jtok>
<jtok eid="18" type="primary_name_ref" span="993:16:993:17">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="993:18:993:24">pushed</jtok>
<jtok eid="18" type="line_comment" span="994:13:994:78">// computes the true beginning stack size of this successor block</jtok>
<jtok eid="18" type="primary_name_ref" span="995:13:995:14">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="995:15:995:29">beginStackSize</jtok>
<jtok eid="18" type="primary_name_ref" span="995:32:995:37">start</jtok>
<jtok eid="18" type="primary_name_ref" span="995:40:995:41">b</jtok>
<jtok eid="18" type="qualified_name_ref" span="995:42:995:51">stackSize</jtok>
<jtok eid="18" type="line_comment" span="996:13:996:52">// pushes this successor onto the stack</jtok>
<jtok eid="18" type="primary_name_ref" span="997:13:997:14">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="997:15:997:21">pushed</jtok>
<jtok eid="18" type="primary_name_ref" span="998:13:998:14">l</jtok>
<jtok eid="18" type="qualified_name_ref" span="998:15:998:19">next</jtok>
<jtok eid="18" type="primary_name_ref" span="998:22:998:27">stack</jtok>
<jtok eid="18" type="primary_name_ref" span="999:13:999:18">stack</jtok>
<jtok eid="18" type="primary_name_ref" span="999:21:999:22">l</jtok>
<jtok eid="18" type="primary_name_ref" span="1001:11:1001:12">b</jtok>
<jtok eid="18" type="primary_name_ref" span="1001:15:1001:16">b</jtok>
<jtok eid="18" type="qualified_name_ref" span="1001:17:1001:21">next</jtok>
<jtok eid="18" type="qualified_name_ref" span="1004:12:1004:20">maxStack</jtok>
<jtok eid="18" type="primary_name_ref" span="1004:23:1004:26">max</jtok>
<jtok eid="18" type="line_comment" span="1005:7:1005:63">// releases all the Edge objects used by this CodeWriter</jtok>
<jtok eid="18" type="primary_name_ref" span="1006:21:1006:25">SIZE</jtok>
<jtok eid="18" type="line_comment" span="1007:9:1007:78">// appends the [head ... tail] list at the beginning of the pool list</jtok>
<jtok eid="18" type="primary_name_ref" span="1008:13:1008:17">tail</jtok>
<jtok eid="18" type="primary_name_ref" span="1009:11:1009:15">tail</jtok>
<jtok eid="18" type="qualified_name_ref" span="1009:16:1009:24">poolNext</jtok>
<jtok eid="18" type="primary_name_ref" span="1009:27:1009:31">pool</jtok>
<jtok eid="18" type="primary_name_ref" span="1010:11:1010:15">pool</jtok>
<jtok eid="18" type="primary_name_ref" span="1010:18:1010:22">head</jtok>
<jtok eid="18" type="qualified_name_ref" span="1014:12:1014:20">maxStack</jtok>
<jtok eid="18" type="primary_name_ref" span="1014:23:1014:31">maxStack</jtok>
<jtok eid="18" type="qualified_name_ref" span="1015:12:1015:21">maxLocals</jtok>
<jtok eid="18" type="primary_name_ref" span="1015:24:1015:33">maxLocals</jtok>
<jtok eid="19" type="method_name" span="1019:15:1019:33">visitLocalVariable</jtok>
<jtok eid="19" type="parameter_type" span="1020:11:1020:17">String</jtok>
<jtok eid="19" type="parameter_name" span="1020:18:1020:22">name</jtok>
<jtok eid="19" type="parameter_type" span="1021:11:1021:17">String</jtok>
<jtok eid="19" type="parameter_name" span="1021:18:1021:22">desc</jtok>
<jtok eid="19" type="parameter_type" span="1022:11:1022:16">Label</jtok>
<jtok eid="19" type="parameter_name" span="1022:17:1022:22">start</jtok>
<jtok eid="19" type="parameter_type" span="1023:11:1023:16">Label</jtok>
<jtok eid="19" type="parameter_name" span="1023:17:1023:20">end</jtok>
<jtok eid="19" type="parameter_name" span="1024:15:1024:20">index</jtok>
<jtok eid="19" type="primary_name_ref" span="1026:9:1026:14">CHECK</jtok>
<jtok eid="19" type="primary_name_ref" span="1027:11:1027:16">start</jtok>
<jtok eid="19" type="qualified_name_ref" span="1027:17:1027:22">owner</jtok>
<jtok eid="19" type="primary_name_ref" span="1027:35:1027:40">start</jtok>
<jtok eid="19" type="qualified_name_ref" span="1027:41:1027:49">resolved</jtok>
<jtok eid="19" type="constructor_call" span="1028:19:1028:43">IllegalArgumentException</jtok>
<jtok eid="19" type="primary_name_ref" span="1030:11:1030:14">end</jtok>
<jtok eid="19" type="qualified_name_ref" span="1030:15:1030:20">owner</jtok>
<jtok eid="19" type="primary_name_ref" span="1030:33:1030:36">end</jtok>
<jtok eid="19" type="qualified_name_ref" span="1030:37:1030:45">resolved</jtok>
<jtok eid="19" type="constructor_call" span="1031:19:1031:43">IllegalArgumentException</jtok>
<jtok eid="19" type="primary_name_ref" span="1034:9:1034:17">localVar</jtok>
<jtok eid="19" type="primary_name_ref" span="1035:7:1035:9">cw</jtok>
<jtok eid="19" type="method_call" span="1035:10:1035:17">newUTF8</jtok>
<jtok eid="19" type="string_literal" span="1035:18:1035:38">"LocalVariableTable"</jtok>
<jtok eid="19" type="primary_name_ref" span="1036:7:1036:15">localVar</jtok>
<jtok eid="19" type="constructor_call" span="1036:22:1036:32">ByteVector</jtok>
<jtok eid="19" type="primary_name_ref" span="1038:7:1038:20">localVarCount</jtok>
<jtok eid="19" type="primary_name_ref" span="1039:5:1039:13">localVar</jtok>
<jtok eid="19" type="method_call" span="1039:14:1039:18">put2</jtok>
<jtok eid="19" type="primary_name_ref" span="1039:19:1039:24">start</jtok>
<jtok eid="19" type="qualified_name_ref" span="1039:25:1039:33">position</jtok>
<jtok eid="19" type="primary_name_ref" span="1040:5:1040:13">localVar</jtok>
<jtok eid="19" type="method_call" span="1040:14:1040:18">put2</jtok>
<jtok eid="19" type="primary_name_ref" span="1040:19:1040:22">end</jtok>
<jtok eid="19" type="qualified_name_ref" span="1040:23:1040:31">position</jtok>
<jtok eid="19" type="primary_name_ref" span="1040:34:1040:39">start</jtok>
<jtok eid="19" type="qualified_name_ref" span="1040:40:1040:48">position</jtok>
<jtok eid="19" type="primary_name_ref" span="1041:5:1041:13">localVar</jtok>
<jtok eid="19" type="method_call" span="1041:14:1041:18">put2</jtok>
<jtok eid="19" type="primary_name_ref" span="1041:19:1041:21">cw</jtok>
<jtok eid="19" type="method_call" span="1041:22:1041:29">newUTF8</jtok>
<jtok eid="19" type="primary_name_ref" span="1041:30:1041:34">name</jtok>
<jtok eid="19" type="qualified_name_ref" span="1041:36:1041:41">index</jtok>
<jtok eid="19" type="primary_name_ref" span="1042:5:1042:13">localVar</jtok>
<jtok eid="19" type="method_call" span="1042:14:1042:18">put2</jtok>
<jtok eid="19" type="primary_name_ref" span="1042:19:1042:21">cw</jtok>
<jtok eid="19" type="method_call" span="1042:22:1042:29">newUTF8</jtok>
<jtok eid="19" type="primary_name_ref" span="1042:30:1042:34">desc</jtok>
<jtok eid="19" type="qualified_name_ref" span="1042:36:1042:41">index</jtok>
<jtok eid="19" type="primary_name_ref" span="1043:5:1043:13">localVar</jtok>
<jtok eid="19" type="method_call" span="1043:14:1043:18">put2</jtok>
<jtok eid="19" type="primary_name_ref" span="1043:19:1043:24">index</jtok>
<jtok eid="20" type="method_name" span="1046:15:1046:30">visitLineNumber</jtok>
<jtok eid="20" type="parameter_name" span="1046:42:1046:46">line</jtok>
<jtok eid="20" type="parameter_type" span="1046:54:1046:59">Label</jtok>
<jtok eid="20" type="parameter_name" span="1046:60:1046:65">start</jtok>
<jtok eid="20" type="primary_name_ref" span="1047:9:1047:14">CHECK</jtok>
<jtok eid="20" type="primary_name_ref" span="1048:11:1048:16">start</jtok>
<jtok eid="20" type="qualified_name_ref" span="1048:17:1048:22">owner</jtok>
<jtok eid="20" type="primary_name_ref" span="1048:35:1048:40">start</jtok>
<jtok eid="20" type="qualified_name_ref" span="1048:41:1048:49">resolved</jtok>
<jtok eid="20" type="constructor_call" span="1049:19:1049:43">IllegalArgumentException</jtok>
<jtok eid="20" type="primary_name_ref" span="1052:9:1052:19">lineNumber</jtok>
<jtok eid="20" type="primary_name_ref" span="1053:7:1053:9">cw</jtok>
<jtok eid="20" type="method_call" span="1053:10:1053:17">newUTF8</jtok>
<jtok eid="20" type="string_literal" span="1053:18:1053:35">"LineNumberTable"</jtok>
<jtok eid="20" type="primary_name_ref" span="1054:7:1054:17">lineNumber</jtok>
<jtok eid="20" type="constructor_call" span="1054:24:1054:34">ByteVector</jtok>
<jtok eid="20" type="primary_name_ref" span="1056:7:1056:22">lineNumberCount</jtok>
<jtok eid="20" type="primary_name_ref" span="1057:5:1057:15">lineNumber</jtok>
<jtok eid="20" type="method_call" span="1057:16:1057:20">put2</jtok>
<jtok eid="20" type="primary_name_ref" span="1057:21:1057:26">start</jtok>
<jtok eid="20" type="qualified_name_ref" span="1057:27:1057:35">position</jtok>
<jtok eid="20" type="primary_name_ref" span="1058:5:1058:15">lineNumber</jtok>
<jtok eid="20" type="method_call" span="1058:16:1058:20">put2</jtok>
<jtok eid="20" type="primary_name_ref" span="1058:21:1058:25">line</jtok>
<jtok eid="1" type="line_comment" span="1061:3:1061:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="1062:3:1062:54">// Utility methods: control flow analysis algorithm</jtok>
<jtok eid="1" type="line_comment" span="1063:3:1063:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="1065:3:1074:6">/**
   * Computes the size of the arguments and of the return value of a method.
   *
   * @param desc the descriptor of a method.
   * @return the size of the arguments of the method (plus one for the implicit
   *      this argument), argSize, and the size of its return value, retSize,
   *      packed into a single int i = &lt;tt&gt;(argSize &lt;&lt; 2) | retSize&lt;/tt&gt;
   *      (argSize is therefore equal to &lt;tt&gt;i &gt;&gt; 2&lt;/tt&gt;, and retSize to
   *      &lt;tt&gt;i &amp; 0x03&lt;/tt&gt;).
   */</jtok>
<jtok eid="21" type="method_name" span="1076:22:1076:48">getArgumentsAndReturnSizes</jtok>
<jtok eid="21" type="parameter_type" span="1076:56:1076:62">String</jtok>
<jtok eid="21" type="parameter_name" span="1076:63:1076:67">desc</jtok>
<jtok eid="21" type="local_variable_name" span="1077:9:1077:10">n</jtok>
<jtok eid="21" type="local_variable_name" span="1078:9:1078:10">c</jtok>
<jtok eid="21" type="local_variable_name" span="1080:12:1080:15">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1080:18:1080:22">desc</jtok>
<jtok eid="21" type="method_call" span="1080:23:1080:29">charAt</jtok>
<jtok eid="21" type="primary_name_ref" span="1080:30:1080:31">c</jtok>
<jtok eid="21" type="primary_name_ref" span="1081:11:1081:14">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1082:9:1082:12">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1082:15:1082:19">desc</jtok>
<jtok eid="21" type="method_call" span="1082:20:1082:26">charAt</jtok>
<jtok eid="21" type="primary_name_ref" span="1082:27:1082:28">c</jtok>
<jtok eid="21" type="primary_name_ref" span="1083:16:1083:17">n</jtok>
<jtok eid="21" type="primary_name_ref" span="1083:26:1083:29">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1083:44:1083:47">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1083:58:1083:61">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1084:18:1084:21">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1085:16:1085:20">desc</jtok>
<jtok eid="21" type="method_call" span="1085:21:1085:27">charAt</jtok>
<jtok eid="21" type="primary_name_ref" span="1085:28:1085:29">c</jtok>
<jtok eid="21" type="primary_name_ref" span="1087:9:1087:10">n</jtok>
<jtok eid="21" type="primary_name_ref" span="1088:18:1088:21">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1089:17:1089:20">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1089:23:1089:27">desc</jtok>
<jtok eid="21" type="method_call" span="1089:28:1089:34">charAt</jtok>
<jtok eid="21" type="primary_name_ref" span="1089:35:1089:36">c</jtok>
<jtok eid="21" type="primary_name_ref" span="1090:13:1090:14">c</jtok>
<jtok eid="21" type="primary_name_ref" span="1092:13:1092:16">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1092:27:1092:30">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1093:11:1093:12">n</jtok>
<jtok eid="21" type="primary_name_ref" span="1095:18:1095:21">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1095:32:1095:35">car</jtok>
<jtok eid="21" type="primary_name_ref" span="1096:9:1096:10">n</jtok>
<jtok eid="21" type="primary_name_ref" span="1098:9:1098:10">n</jtok>
<jtok eid="1" type="block_comment" span="1103:3:1108:6">/**
   * Adds a successor to the {@link #currentBlock currentBlock} block.
   *
   * @param stackSize the current (relative) stack size in the current block.
   * @param successor the successor block to be added to the current block.
   */</jtok>
<jtok eid="22" type="method_name" span="1110:16:1110:28">addSuccessor</jtok>
<jtok eid="22" type="parameter_name" span="1110:40:1110:49">stackSize</jtok>
<jtok eid="22" type="parameter_type" span="1110:57:1110:62">Label</jtok>
<jtok eid="22" type="parameter_name" span="1110:63:1110:72">successor</jtok>
<jtok eid="22" type="class_or_interface_ref" span="1111:5:1111:9">Edge</jtok>
<jtok eid="22" type="local_variable_name" span="1111:10:1111:11">b</jtok>
<jtok eid="22" type="line_comment" span="1112:5:1112:68">// creates a new Edge object or reuses one from the shared pool</jtok>
<jtok eid="22" type="primary_name_ref" span="1113:19:1113:23">SIZE</jtok>
<jtok eid="22" type="primary_name_ref" span="1114:11:1114:15">pool</jtok>
<jtok eid="22" type="primary_name_ref" span="1115:9:1115:10">b</jtok>
<jtok eid="22" type="constructor_call" span="1115:17:1115:21">Edge</jtok>
<jtok eid="22" type="primary_name_ref" span="1117:9:1117:10">b</jtok>
<jtok eid="22" type="primary_name_ref" span="1117:13:1117:17">pool</jtok>
<jtok eid="22" type="line_comment" span="1118:9:1118:35">// removes b from the pool</jtok>
<jtok eid="22" type="primary_name_ref" span="1119:9:1119:13">pool</jtok>
<jtok eid="22" type="primary_name_ref" span="1119:16:1119:20">pool</jtok>
<jtok eid="22" type="qualified_name_ref" span="1119:21:1119:29">poolNext</jtok>
<jtok eid="22" type="line_comment" span="1122:5:1122:75">// adds the previous Edge to the list of Edges used by this CodeWriter</jtok>
<jtok eid="22" type="primary_name_ref" span="1123:9:1123:13">tail</jtok>
<jtok eid="22" type="primary_name_ref" span="1124:7:1124:11">tail</jtok>
<jtok eid="22" type="primary_name_ref" span="1124:14:1124:15">b</jtok>
<jtok eid="22" type="primary_name_ref" span="1126:5:1126:6">b</jtok>
<jtok eid="22" type="qualified_name_ref" span="1126:7:1126:15">poolNext</jtok>
<jtok eid="22" type="primary_name_ref" span="1126:18:1126:22">head</jtok>
<jtok eid="22" type="primary_name_ref" span="1127:5:1127:9">head</jtok>
<jtok eid="22" type="primary_name_ref" span="1127:12:1127:13">b</jtok>
<jtok eid="22" type="line_comment" span="1128:5:1128:47">// initializes the previous Edge object...</jtok>
<jtok eid="22" type="primary_name_ref" span="1129:5:1129:6">b</jtok>
<jtok eid="22" type="qualified_name_ref" span="1129:7:1129:16">stackSize</jtok>
<jtok eid="22" type="primary_name_ref" span="1129:19:1129:28">stackSize</jtok>
<jtok eid="22" type="primary_name_ref" span="1130:5:1130:6">b</jtok>
<jtok eid="22" type="qualified_name_ref" span="1130:7:1130:16">successor</jtok>
<jtok eid="22" type="primary_name_ref" span="1130:19:1130:28">successor</jtok>
<jtok eid="22" type="line_comment" span="1131:5:1131:70">// ...and adds it to the successor list of the currentBlock block</jtok>
<jtok eid="22" type="primary_name_ref" span="1132:5:1132:6">b</jtok>
<jtok eid="22" type="qualified_name_ref" span="1132:7:1132:11">next</jtok>
<jtok eid="22" type="primary_name_ref" span="1132:14:1132:26">currentBlock</jtok>
<jtok eid="22" type="qualified_name_ref" span="1132:27:1132:37">successors</jtok>
<jtok eid="22" type="primary_name_ref" span="1133:5:1133:17">currentBlock</jtok>
<jtok eid="22" type="qualified_name_ref" span="1133:18:1133:28">successors</jtok>
<jtok eid="22" type="primary_name_ref" span="1133:31:1133:32">b</jtok>
<jtok eid="1" type="line_comment" span="1136:3:1136:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="1137:3:1137:42">// Utility methods: dump bytecode array</jtok>
<jtok eid="1" type="line_comment" span="1138:3:1138:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="1140:3:1144:6">/**
   * Returns the size of the bytecode of this method.
   *
   * @return the size of the bytecode of this method.
   */</jtok>
<jtok eid="23" type="method_name" span="1146:13:1146:20">getSize</jtok>
<jtok eid="23" type="primary_name_ref" span="1147:9:1147:15">resize</jtok>
<jtok eid="23" type="line_comment" span="1148:7:1148:74">// replaces the temporary jump opcodes introduced by Label.resolve.</jtok>
<jtok eid="23" type="method_call" span="1149:7:1149:25">resizeInstructions</jtok>
<jtok eid="23" type="local_variable_name" span="1151:9:1151:13">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1152:9:1152:13">code</jtok>
<jtok eid="23" type="qualified_name_ref" span="1152:14:1152:20">length</jtok>
<jtok eid="23" type="primary_name_ref" span="1153:7:1153:9">cw</jtok>
<jtok eid="23" type="method_call" span="1153:10:1153:17">newUTF8</jtok>
<jtok eid="23" type="string_literal" span="1153:18:1153:24">"Code"</jtok>
<jtok eid="23" type="primary_name_ref" span="1154:7:1154:11">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1154:20:1154:24">code</jtok>
<jtok eid="23" type="qualified_name_ref" span="1154:25:1154:31">length</jtok>
<jtok eid="23" type="primary_name_ref" span="1154:38:1154:48">catchCount</jtok>
<jtok eid="23" type="primary_name_ref" span="1155:11:1155:19">localVar</jtok>
<jtok eid="23" type="primary_name_ref" span="1156:9:1156:13">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1156:21:1156:29">localVar</jtok>
<jtok eid="23" type="qualified_name_ref" span="1156:30:1156:36">length</jtok>
<jtok eid="23" type="primary_name_ref" span="1158:11:1158:21">lineNumber</jtok>
<jtok eid="23" type="primary_name_ref" span="1159:9:1159:13">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1159:21:1159:31">lineNumber</jtok>
<jtok eid="23" type="qualified_name_ref" span="1159:32:1159:38">length</jtok>
<jtok eid="23" type="primary_name_ref" span="1162:9:1162:23">exceptionCount</jtok>
<jtok eid="23" type="primary_name_ref" span="1163:7:1163:9">cw</jtok>
<jtok eid="23" type="method_call" span="1163:10:1163:17">newUTF8</jtok>
<jtok eid="23" type="string_literal" span="1163:18:1163:30">"Exceptions"</jtok>
<jtok eid="23" type="primary_name_ref" span="1164:7:1164:11">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1164:23:1164:37">exceptionCount</jtok>
<jtok eid="23" type="primary_name_ref" span="1166:10:1166:16">access</jtok>
<jtok eid="23" type="primary_name_ref" span="1166:19:1166:28">Constants</jtok>
<jtok eid="23" type="qualified_name_ref" span="1166:29:1166:42">ACC_SYNTHETIC</jtok>
<jtok eid="23" type="primary_name_ref" span="1167:7:1167:9">cw</jtok>
<jtok eid="23" type="method_call" span="1167:10:1167:17">newUTF8</jtok>
<jtok eid="23" type="string_literal" span="1167:18:1167:29">"Synthetic"</jtok>
<jtok eid="23" type="primary_name_ref" span="1168:7:1168:11">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1170:10:1170:16">access</jtok>
<jtok eid="23" type="primary_name_ref" span="1170:19:1170:28">Constants</jtok>
<jtok eid="23" type="qualified_name_ref" span="1170:29:1170:43">ACC_DEPRECATED</jtok>
<jtok eid="23" type="primary_name_ref" span="1171:7:1171:9">cw</jtok>
<jtok eid="23" type="method_call" span="1171:10:1171:17">newUTF8</jtok>
<jtok eid="23" type="string_literal" span="1171:18:1171:30">"Deprecated"</jtok>
<jtok eid="23" type="primary_name_ref" span="1172:7:1172:11">size</jtok>
<jtok eid="23" type="primary_name_ref" span="1174:12:1174:16">size</jtok>
<jtok eid="1" type="block_comment" span="1177:3:1182:6">/**
   * Puts the bytecode of this method in the given byte vector.
   *
   * @param out the byte vector into which the bytecode of this method must be
   *      copied.
   */</jtok>
<jtok eid="24" type="method_name" span="1184:14:1184:17">put</jtok>
<jtok eid="24" type="parameter_type" span="1184:25:1184:35">ByteVector</jtok>
<jtok eid="24" type="parameter_name" span="1184:36:1184:39">out</jtok>
<jtok eid="24" type="primary_name_ref" span="1185:5:1185:8">out</jtok>
<jtok eid="24" type="method_call" span="1185:9:1185:13">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1185:14:1185:20">access</jtok>
<jtok eid="24" type="method_call" span="1185:22:1185:26">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1185:27:1185:31">name</jtok>
<jtok eid="24" type="qualified_name_ref" span="1185:32:1185:37">index</jtok>
<jtok eid="24" type="method_call" span="1185:39:1185:43">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1185:44:1185:48">desc</jtok>
<jtok eid="24" type="qualified_name_ref" span="1185:49:1185:54">index</jtok>
<jtok eid="24" type="local_variable_name" span="1186:9:1186:23">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1187:9:1187:13">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1187:14:1187:20">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1188:9:1188:23">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1190:9:1190:23">exceptionCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1191:9:1191:23">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1193:10:1193:16">access</jtok>
<jtok eid="24" type="primary_name_ref" span="1193:19:1193:28">Constants</jtok>
<jtok eid="24" type="qualified_name_ref" span="1193:29:1193:42">ACC_SYNTHETIC</jtok>
<jtok eid="24" type="primary_name_ref" span="1194:9:1194:23">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1196:10:1196:16">access</jtok>
<jtok eid="24" type="primary_name_ref" span="1196:19:1196:28">Constants</jtok>
<jtok eid="24" type="qualified_name_ref" span="1196:29:1196:43">ACC_DEPRECATED</jtok>
<jtok eid="24" type="primary_name_ref" span="1197:9:1197:23">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1199:5:1199:8">out</jtok>
<jtok eid="24" type="method_call" span="1199:9:1199:13">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1199:14:1199:28">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1200:9:1200:13">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1200:14:1200:20">length</jtok>
<jtok eid="24" type="local_variable_name" span="1201:11:1201:15">size</jtok>
<jtok eid="24" type="primary_name_ref" span="1201:23:1201:27">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1201:28:1201:34">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1201:41:1201:51">catchCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1202:11:1202:19">localVar</jtok>
<jtok eid="24" type="primary_name_ref" span="1203:9:1203:13">size</jtok>
<jtok eid="24" type="primary_name_ref" span="1203:21:1203:29">localVar</jtok>
<jtok eid="24" type="qualified_name_ref" span="1203:30:1203:36">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1205:11:1205:21">lineNumber</jtok>
<jtok eid="24" type="primary_name_ref" span="1206:9:1206:13">size</jtok>
<jtok eid="24" type="primary_name_ref" span="1206:21:1206:31">lineNumber</jtok>
<jtok eid="24" type="qualified_name_ref" span="1206:32:1206:38">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1208:7:1208:10">out</jtok>
<jtok eid="24" type="method_call" span="1208:11:1208:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1208:16:1208:18">cw</jtok>
<jtok eid="24" type="method_call" span="1208:19:1208:26">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1208:27:1208:33">"Code"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1208:35:1208:40">index</jtok>
<jtok eid="24" type="method_call" span="1208:42:1208:46">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1208:47:1208:51">size</jtok>
<jtok eid="24" type="primary_name_ref" span="1209:7:1209:10">out</jtok>
<jtok eid="24" type="method_call" span="1209:11:1209:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1209:16:1209:24">maxStack</jtok>
<jtok eid="24" type="method_call" span="1209:26:1209:30">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1209:31:1209:40">maxLocals</jtok>
<jtok eid="24" type="primary_name_ref" span="1210:7:1210:10">out</jtok>
<jtok eid="24" type="method_call" span="1210:11:1210:15">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1210:16:1210:20">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1210:21:1210:27">length</jtok>
<jtok eid="24" type="method_call" span="1210:29:1210:41">putByteArray</jtok>
<jtok eid="24" type="primary_name_ref" span="1210:42:1210:46">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1210:47:1210:51">data</jtok>
<jtok eid="24" type="primary_name_ref" span="1210:56:1210:60">code</jtok>
<jtok eid="24" type="qualified_name_ref" span="1210:61:1210:67">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1211:7:1211:10">out</jtok>
<jtok eid="24" type="method_call" span="1211:11:1211:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1211:16:1211:26">catchCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1212:11:1212:21">catchCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1213:9:1213:12">out</jtok>
<jtok eid="24" type="method_call" span="1213:13:1213:25">putByteArray</jtok>
<jtok eid="24" type="primary_name_ref" span="1213:26:1213:36">catchTable</jtok>
<jtok eid="24" type="qualified_name_ref" span="1213:37:1213:41">data</jtok>
<jtok eid="24" type="primary_name_ref" span="1213:46:1213:56">catchTable</jtok>
<jtok eid="24" type="qualified_name_ref" span="1213:57:1213:63">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1215:7:1215:21">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1216:11:1216:19">localVar</jtok>
<jtok eid="24" type="primary_name_ref" span="1217:11:1217:25">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1219:11:1219:21">lineNumber</jtok>
<jtok eid="24" type="primary_name_ref" span="1220:11:1220:25">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1222:7:1222:10">out</jtok>
<jtok eid="24" type="method_call" span="1222:11:1222:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1222:16:1222:30">attributeCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1223:11:1223:19">localVar</jtok>
<jtok eid="24" type="primary_name_ref" span="1224:9:1224:12">out</jtok>
<jtok eid="24" type="method_call" span="1224:13:1224:17">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1224:18:1224:20">cw</jtok>
<jtok eid="24" type="method_call" span="1224:21:1224:28">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1224:29:1224:49">"LocalVariableTable"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1224:51:1224:56">index</jtok>
<jtok eid="24" type="primary_name_ref" span="1225:9:1225:12">out</jtok>
<jtok eid="24" type="method_call" span="1225:13:1225:17">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1225:18:1225:26">localVar</jtok>
<jtok eid="24" type="qualified_name_ref" span="1225:27:1225:33">length</jtok>
<jtok eid="24" type="method_call" span="1225:39:1225:43">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1225:44:1225:57">localVarCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1226:9:1226:12">out</jtok>
<jtok eid="24" type="method_call" span="1226:13:1226:25">putByteArray</jtok>
<jtok eid="24" type="primary_name_ref" span="1226:26:1226:34">localVar</jtok>
<jtok eid="24" type="qualified_name_ref" span="1226:35:1226:39">data</jtok>
<jtok eid="24" type="primary_name_ref" span="1226:44:1226:52">localVar</jtok>
<jtok eid="24" type="qualified_name_ref" span="1226:53:1226:59">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1228:11:1228:21">lineNumber</jtok>
<jtok eid="24" type="primary_name_ref" span="1229:9:1229:12">out</jtok>
<jtok eid="24" type="method_call" span="1229:13:1229:17">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1229:18:1229:20">cw</jtok>
<jtok eid="24" type="method_call" span="1229:21:1229:28">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1229:29:1229:46">"LineNumberTable"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1229:48:1229:53">index</jtok>
<jtok eid="24" type="primary_name_ref" span="1230:9:1230:12">out</jtok>
<jtok eid="24" type="method_call" span="1230:13:1230:17">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1230:18:1230:28">lineNumber</jtok>
<jtok eid="24" type="qualified_name_ref" span="1230:29:1230:35">length</jtok>
<jtok eid="24" type="method_call" span="1230:41:1230:45">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1230:46:1230:61">lineNumberCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1231:9:1231:12">out</jtok>
<jtok eid="24" type="method_call" span="1231:13:1231:25">putByteArray</jtok>
<jtok eid="24" type="primary_name_ref" span="1231:26:1231:36">lineNumber</jtok>
<jtok eid="24" type="qualified_name_ref" span="1231:37:1231:41">data</jtok>
<jtok eid="24" type="primary_name_ref" span="1231:46:1231:56">lineNumber</jtok>
<jtok eid="24" type="qualified_name_ref" span="1231:57:1231:63">length</jtok>
<jtok eid="24" type="primary_name_ref" span="1234:9:1234:23">exceptionCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1235:7:1235:10">out</jtok>
<jtok eid="24" type="method_call" span="1235:11:1235:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1235:16:1235:18">cw</jtok>
<jtok eid="24" type="method_call" span="1235:19:1235:26">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1235:27:1235:39">"Exceptions"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1235:41:1235:46">index</jtok>
<jtok eid="24" type="method_call" span="1235:48:1235:52">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1235:57:1235:71">exceptionCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1236:7:1236:10">out</jtok>
<jtok eid="24" type="method_call" span="1236:11:1236:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1236:16:1236:30">exceptionCount</jtok>
<jtok eid="24" type="local_variable_name" span="1237:16:1237:17">i</jtok>
<jtok eid="24" type="primary_name_ref" span="1237:23:1237:24">i</jtok>
<jtok eid="24" type="primary_name_ref" span="1237:27:1237:41">exceptionCount</jtok>
<jtok eid="24" type="primary_name_ref" span="1237:45:1237:46">i</jtok>
<jtok eid="24" type="primary_name_ref" span="1238:9:1238:12">out</jtok>
<jtok eid="24" type="method_call" span="1238:13:1238:17">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1238:18:1238:28">exceptions</jtok>
<jtok eid="24" type="primary_name_ref" span="1238:29:1238:30">i</jtok>
<jtok eid="24" type="primary_name_ref" span="1241:10:1241:16">access</jtok>
<jtok eid="24" type="primary_name_ref" span="1241:19:1241:28">Constants</jtok>
<jtok eid="24" type="qualified_name_ref" span="1241:29:1241:42">ACC_SYNTHETIC</jtok>
<jtok eid="24" type="primary_name_ref" span="1242:7:1242:10">out</jtok>
<jtok eid="24" type="method_call" span="1242:11:1242:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1242:16:1242:18">cw</jtok>
<jtok eid="24" type="method_call" span="1242:19:1242:26">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1242:27:1242:38">"Synthetic"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1242:40:1242:45">index</jtok>
<jtok eid="24" type="method_call" span="1242:47:1242:51">put4</jtok>
<jtok eid="24" type="primary_name_ref" span="1244:10:1244:16">access</jtok>
<jtok eid="24" type="primary_name_ref" span="1244:19:1244:28">Constants</jtok>
<jtok eid="24" type="qualified_name_ref" span="1244:29:1244:43">ACC_DEPRECATED</jtok>
<jtok eid="24" type="primary_name_ref" span="1245:7:1245:10">out</jtok>
<jtok eid="24" type="method_call" span="1245:11:1245:15">put2</jtok>
<jtok eid="24" type="primary_name_ref" span="1245:16:1245:18">cw</jtok>
<jtok eid="24" type="method_call" span="1245:19:1245:26">newUTF8</jtok>
<jtok eid="24" type="string_literal" span="1245:27:1245:39">"Deprecated"</jtok>
<jtok eid="24" type="qualified_name_ref" span="1245:41:1245:46">index</jtok>
<jtok eid="24" type="method_call" span="1245:48:1245:52">put4</jtok>
<jtok eid="1" type="line_comment" span="1249:3:1249:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="line_comment" span="1250:3:1250:77">// Utility methods: instruction resizing (used to handle GOTO_W and JSR_W)</jtok>
<jtok eid="1" type="line_comment" span="1251:3:1251:80">// --------------------------------------------------------------------------</jtok>
<jtok eid="1" type="block_comment" span="1253:3:1284:6">/**
   * Resizes the designated instructions, while keeping jump offsets and
   * instruction addresses consistent. This may require to resize other existing
   * instructions, or even to introduce new instructions: for example,
   * increasing the size of an instruction by 2 at the middle of a method can
   * increases the offset of an IFEQ instruction from 32766 to 32768, in which
   * case IFEQ 32766 must be replaced with IFNEQ 8 GOTO_W 32765. This, in turn,
   * may require to increase the size of another jump instruction, and so on...
   * All these operations are handled automatically by this method.
   * &lt;p&gt;
   * &lt;i&gt;This method must be called after all the method that is being built has
   * been visited&lt;/i&gt;. In particular, the {@link Label Label} objects used to
   * construct the method are no longer valid after this method has been called.
   *
   * @param indexes current positions of the instructions to be resized. Each
   *      instruction must be designated by the index of its &lt;i&gt;last&lt;/i&gt; byte,
   *      plus one (or, in other words, by the index of the &lt;i&gt;first&lt;/i&gt; byte of
   *      the &lt;i&gt;next&lt;/i&gt; instruction).
   * @param sizes the number of bytes to be &lt;i&gt;added&lt;/i&gt; to the above
   *      instructions. More precisely, for each i &amp;lt; &lt;tt&gt;len&lt;/tt&gt;,
   *      &lt;tt&gt;sizes&lt;/tt&gt;[i] bytes will be added at the end of the instruction
   *      designated by &lt;tt&gt;indexes&lt;/tt&gt;[i] or, if &lt;tt&gt;sizes&lt;/tt&gt;[i] is
   *      negative, the &lt;i&gt;last&lt;/i&gt; |&lt;tt&gt;sizes[i]&lt;/tt&gt;| bytes of the instruction
   *      will be removed (the instruction size &lt;i&gt;must not&lt;/i&gt; become negative
   *      or null). The gaps introduced by this method must be filled in
   *      "manually" in the array returned by the {@link #getCode getCode}
   *      method.
   * @param len the number of instruction to be resized. Must be smaller than or
   *      equal to &lt;tt&gt;indexes&lt;/tt&gt;.length and &lt;tt&gt;sizes&lt;/tt&gt;.length.
   * @return the &lt;tt&gt;indexes&lt;/tt&gt; array, which now contains the new positions of
   *      the resized instructions (designated as above).
   */</jtok>
<jtok eid="25" type="method_name" span="1286:19:1286:37">resizeInstructions</jtok>
<jtok eid="25" type="parameter_name" span="1287:17:1287:24">indexes</jtok>
<jtok eid="25" type="parameter_name" span="1288:17:1288:22">sizes</jtok>
<jtok eid="25" type="parameter_name" span="1289:15:1289:18">len</jtok>
<jtok eid="25" type="local_variable_name" span="1291:12:1291:13">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1291:16:1291:20">code</jtok>
<jtok eid="25" type="qualified_name_ref" span="1291:21:1291:25">data</jtok>
<jtok eid="25" type="line_comment" span="1291:27:1291:52">// bytecode of the method</jtok>
<jtok eid="25" type="local_variable_name" span="1292:9:1292:10">u</jtok>
<jtok eid="25" type="local_variable_name" span="1292:12:1292:13">v</jtok>
<jtok eid="25" type="local_variable_name" span="1292:15:1292:20">label</jtok>
<jtok eid="25" type="line_comment" span="1292:27:1292:42">// indexes in b</jtok>
<jtok eid="25" type="local_variable_name" span="1293:9:1293:10">i</jtok>
<jtok eid="25" type="local_variable_name" span="1293:12:1293:13">j</jtok>
<jtok eid="25" type="line_comment" span="1293:27:1293:42">// loop indexes</jtok>
<jtok eid="25" type="line_comment" span="1295:5:1295:17">// 1st step:</jtok>
<jtok eid="25" type="line_comment" span="1296:5:1296:81">// As explained above, resizing an instruction may require to resize another</jtok>
<jtok eid="25" type="line_comment" span="1297:5:1297:78">// one, which may require to resize yet another one, and so on. The first</jtok>
<jtok eid="25" type="line_comment" span="1298:5:1298:75">// step of the algorithm consists in finding all the instructions that</jtok>
<jtok eid="25" type="line_comment" span="1299:5:1299:75">// need to be resized, without modifying the code. This is done by the</jtok>
<jtok eid="25" type="line_comment" span="1300:5:1300:40">// following "fix point" algorithm:</jtok>
<jtok eid="25" type="line_comment" span="1301:5:1301:77">// - parse the code to find the jump instructions whose offset will need</jtok>
<jtok eid="25" type="line_comment" span="1302:5:1302:80">//   more than 2 bytes to be stored (the future offset is computed from the</jtok>
<jtok eid="25" type="line_comment" span="1303:5:1303:78">//   current offset and from the number of bytes that will be inserted or</jtok>
<jtok eid="25" type="line_comment" span="1304:5:1304:76">//   removed between the source and target instructions). For each such</jtok>
<jtok eid="25" type="line_comment" span="1305:5:1305:80">//   instruction, adds an entry in (a copy of) the indexes and sizes arrays</jtok>
<jtok eid="25" type="line_comment" span="1306:5:1306:70">//   (if this has not already been done in a previous iteration!)</jtok>
<jtok eid="25" type="line_comment" span="1307:5:1307:80">// - if at least one entry has been added during the previous step, go back</jtok>
<jtok eid="25" type="line_comment" span="1308:5:1308:43">//   to the beginning, otherwise stop.</jtok>
<jtok eid="25" type="line_comment" span="1309:5:1309:78">// In fact the real algorithm is complicated by the fact that the size of</jtok>
<jtok eid="25" type="line_comment" span="1310:5:1310:78">// TABLESWITCH and LOOKUPSWITCH instructions depends on their position in</jtok>
<jtok eid="25" type="line_comment" span="1311:5:1311:80">// the bytecode (because of padding). In order to ensure the convergence of</jtok>
<jtok eid="25" type="line_comment" span="1312:5:1312:76">// the algorithm, the number of bytes to be added or removed from these</jtok>
<jtok eid="25" type="line_comment" span="1313:5:1313:77">// instructions is over estimated during the previous loop, and computed</jtok>
<jtok eid="25" type="line_comment" span="1314:5:1314:78">// exactly only after the loop is finished (this requires another pass to</jtok>
<jtok eid="25" type="line_comment" span="1315:5:1315:42">// parse the bytecode of the method).</jtok>
<jtok eid="25" type="local_variable_name" span="1317:11:1317:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1317:32:1317:35">len</jtok>
<jtok eid="25" type="line_comment" span="1317:38:1317:56">// copy of indexes</jtok>
<jtok eid="25" type="local_variable_name" span="1318:11:1318:19">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1318:30:1318:33">len</jtok>
<jtok eid="25" type="line_comment" span="1318:38:1318:54">// copy of sizes</jtok>
<jtok eid="25" type="local_variable_name" span="1319:15:1319:21">resize</jtok>
<jtok eid="25" type="line_comment" span="1319:38:1319:67">// instructions to be resized</jtok>
<jtok eid="25" type="local_variable_name" span="1320:9:1320:18">newOffset</jtok>
<jtok eid="25" type="line_comment" span="1320:38:1320:76">// future offset of a jump instruction</jtok>
<jtok eid="25" type="primary_name_ref" span="1322:5:1322:11">System</jtok>
<jtok eid="25" type="method_call" span="1322:12:1322:21">arraycopy</jtok>
<jtok eid="25" type="primary_name_ref" span="1322:22:1322:29">indexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1322:34:1322:44">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1322:49:1322:52">len</jtok>
<jtok eid="25" type="primary_name_ref" span="1323:5:1323:11">System</jtok>
<jtok eid="25" type="method_call" span="1323:12:1323:21">arraycopy</jtok>
<jtok eid="25" type="primary_name_ref" span="1323:22:1323:27">sizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1323:32:1323:40">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1323:45:1323:48">len</jtok>
<jtok eid="25" type="primary_name_ref" span="1324:5:1324:11">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1324:26:1324:30">code</jtok>
<jtok eid="25" type="qualified_name_ref" span="1324:31:1324:37">length</jtok>
<jtok eid="25" type="local_variable_name" span="1326:9:1326:14">state</jtok>
<jtok eid="25" type="line_comment" span="1326:20:1326:78">// 3 = loop again, 2 = loop ended, 1 = last pass, 0 = done</jtok>
<jtok eid="25" type="primary_name_ref" span="1328:11:1328:16">state</jtok>
<jtok eid="25" type="primary_name_ref" span="1329:9:1329:14">state</jtok>
<jtok eid="25" type="primary_name_ref" span="1331:7:1331:8">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1332:14:1332:15">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1332:18:1332:19">b</jtok>
<jtok eid="25" type="qualified_name_ref" span="1332:20:1332:26">length</jtok>
<jtok eid="25" type="local_variable_name" span="1333:13:1333:19">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1333:22:1333:23">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1333:24:1333:25">u</jtok>
<jtok eid="25" type="line_comment" span="1333:36:1333:68">// opcode of current instruction</jtok>
<jtok eid="25" type="local_variable_name" span="1334:13:1334:19">insert</jtok>
<jtok eid="25" type="line_comment" span="1334:36:1334:79">// bytes to be added after this instruction</jtok>
<jtok eid="25" type="primary_name_ref" span="1336:17:1336:28">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1336:29:1336:33">TYPE</jtok>
<jtok eid="25" type="primary_name_ref" span="1336:34:1336:40">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1337:16:1337:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1337:28:1337:38">NOARG_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1338:16:1338:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1338:28:1338:40">IMPLVAR_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1339:13:1339:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1341:16:1341:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1341:28:1341:38">LABEL_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1342:17:1342:23">opcode</jtok>
<jtok eid="25" type="line_comment" span="1343:15:1343:80">// converts temporary opcodes 202 to 217 (inclusive), 218 and 219</jtok>
<jtok eid="25" type="line_comment" span="1344:15:1344:67">// to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL</jtok>
<jtok eid="25" type="primary_name_ref" span="1345:15:1345:21">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1345:24:1345:30">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1345:39:1345:45">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1345:53:1345:59">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1346:15:1346:20">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1346:23:1346:24">u</jtok>
<jtok eid="25" type="method_call" span="1346:27:1346:44">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1346:45:1346:46">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1346:48:1346:49">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1348:15:1348:20">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1348:23:1348:24">u</jtok>
<jtok eid="25" type="method_call" span="1348:27:1348:36">readShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1348:37:1348:38">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1348:40:1348:41">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1350:13:1350:22">newOffset</jtok>
<jtok eid="25" type="method_call" span="1350:25:1350:37">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1350:38:1350:48">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1350:50:1350:58">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1350:60:1350:61">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1350:63:1350:68">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1351:17:1351:26">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1351:29:1351:34">Short</jtok>
<jtok eid="25" type="qualified_name_ref" span="1351:35:1351:44">MIN_VALUE</jtok>
<jtok eid="25" type="primary_name_ref" span="1351:48:1351:57">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1351:60:1351:65">Short</jtok>
<jtok eid="25" type="qualified_name_ref" span="1351:66:1351:75">MAX_VALUE</jtok>
<jtok eid="25" type="primary_name_ref" span="1352:20:1352:26">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1352:27:1352:28">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1353:21:1353:27">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1353:31:1353:40">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1353:41:1353:45">GOTO</jtok>
<jtok eid="25" type="primary_name_ref" span="1353:49:1353:55">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1353:59:1353:68">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1353:69:1353:72">JSR</jtok>
<jtok eid="25" type="line_comment" span="1354:19:1354:75">// two additional bytes will be required to replace this</jtok>
<jtok eid="25" type="line_comment" span="1355:19:1355:70">// GOTO or JSR instruction with a GOTO_W or a JSR_W</jtok>
<jtok eid="25" type="primary_name_ref" span="1356:19:1356:25">insert</jtok>
<jtok eid="25" type="line_comment" span="1358:19:1358:76">// five additional bytes will be required to replace this</jtok>
<jtok eid="25" type="line_comment" span="1359:19:1359:80">// IFxxx &lt;l&gt; instruction with IFNOTxxx &lt;l'&gt; GOTO_W &lt;l&gt;, where</jtok>
<jtok eid="25" type="line_comment" span="1360:19:1360:80">// IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for</jtok>
<jtok eid="25" type="line_comment" span="1361:19:1361:80">// IFEQ) and where &lt;l'&gt; designates the instruction just after</jtok>
<jtok eid="25" type="line_comment" span="1362:19:1362:33">// the GOTO_W.</jtok>
<jtok eid="25" type="primary_name_ref" span="1363:19:1363:25">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1365:17:1365:23">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1365:24:1365:25">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1368:13:1368:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1370:16:1370:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1370:28:1370:39">LABELW_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1371:13:1371:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1373:16:1373:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1373:28:1373:37">TABL_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1374:17:1374:22">state</jtok>
<jtok eid="25" type="line_comment" span="1375:15:1375:73">// true number of bytes to be added (or removed) from this</jtok>
<jtok eid="25" type="line_comment" span="1376:15:1376:80">// instruction = (future number of padding bytes - current number</jtok>
<jtok eid="25" type="line_comment" span="1377:15:1377:74">// of padding byte) - previously over estimated variation =</jtok>
<jtok eid="25" type="line_comment" span="1378:15:1378:57">// = ((3 - newOffset%4) - (3 - u%4)) - u%4</jtok>
<jtok eid="25" type="line_comment" span="1379:15:1379:46">// = (-newOffset%4 + u%4) - u%4</jtok>
<jtok eid="25" type="line_comment" span="1380:15:1380:36">// = -(newOffset &amp; 3)</jtok>
<jtok eid="25" type="primary_name_ref" span="1381:15:1381:24">newOffset</jtok>
<jtok eid="25" type="method_call" span="1381:27:1381:39">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1381:40:1381:50">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1381:52:1381:60">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1381:65:1381:66">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1382:15:1382:21">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1382:26:1382:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1383:25:1383:31">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1383:32:1383:33">u</jtok>
<jtok eid="25" type="line_comment" span="1384:15:1384:76">// over estimation of the number of bytes to be added to this</jtok>
<jtok eid="25" type="line_comment" span="1385:15:1385:78">// instruction = 3 - current number of padding bytes = 3 - (3 -</jtok>
<jtok eid="25" type="line_comment" span="1386:15:1386:36">// u%4) = u%4 = u &amp; 3</jtok>
<jtok eid="25" type="primary_name_ref" span="1387:15:1387:21">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1387:24:1387:25">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1388:15:1388:21">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1388:22:1388:23">u</jtok>
<jtok eid="25" type="line_comment" span="1390:13:1390:33">// skips instruction</jtok>
<jtok eid="25" type="primary_name_ref" span="1391:13:1391:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1391:17:1391:18">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1391:26:1391:27">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1392:13:1392:14">u</jtok>
<jtok eid="25" type="method_call" span="1392:21:1392:28">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1392:29:1392:30">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1392:32:1392:33">u</jtok>
<jtok eid="25" type="method_call" span="1392:41:1392:48">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1392:49:1392:50">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1392:52:1392:53">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1394:16:1394:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1394:28:1394:37">LOOK_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1395:17:1395:22">state</jtok>
<jtok eid="25" type="line_comment" span="1396:15:1396:32">// like TABL_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1397:15:1397:24">newOffset</jtok>
<jtok eid="25" type="method_call" span="1397:27:1397:39">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1397:40:1397:50">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1397:52:1397:60">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1397:65:1397:66">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1398:15:1398:21">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1398:26:1398:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1399:25:1399:31">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1399:32:1399:33">u</jtok>
<jtok eid="25" type="line_comment" span="1400:15:1400:32">// like TABL_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1401:15:1401:21">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1401:24:1401:25">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1402:15:1402:21">resize</jtok>
<jtok eid="25" type="primary_name_ref" span="1402:22:1402:23">u</jtok>
<jtok eid="25" type="line_comment" span="1404:13:1404:33">// skips instruction</jtok>
<jtok eid="25" type="primary_name_ref" span="1405:13:1405:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1405:17:1405:18">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1405:26:1405:27">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1406:13:1406:14">u</jtok>
<jtok eid="25" type="method_call" span="1406:20:1406:27">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1406:28:1406:29">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1406:31:1406:32">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1408:16:1408:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1408:28:1408:37">WIDE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1409:13:1409:19">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1409:22:1409:23">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1409:24:1409:25">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1410:17:1410:23">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1410:27:1410:36">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1410:37:1410:41">IINC</jtok>
<jtok eid="25" type="primary_name_ref" span="1411:15:1411:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1413:15:1413:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1416:16:1416:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1416:28:1416:36">VAR_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1417:16:1417:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1417:28:1417:38">SBYTE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1418:16:1418:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1418:28:1418:36">LDC_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1419:13:1419:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1421:16:1421:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1421:28:1421:38">SHORT_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1422:16:1422:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1422:28:1422:37">LDCW_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1423:16:1423:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1423:28:1423:44">FIELDORMETH_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1424:16:1424:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1424:28:1424:37">TYPE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1425:16:1425:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1425:28:1425:37">IINC_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1426:13:1426:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1428:16:1428:27">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1428:28:1428:40">ITFMETH_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1429:13:1429:14">u</jtok>
<jtok eid="25" type="line_comment" span="1431:11:1431:41">// case ClassWriter.MANA_INSN:</jtok>
<jtok eid="25" type="primary_name_ref" span="1433:13:1433:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1436:13:1436:19">insert</jtok>
<jtok eid="25" type="line_comment" span="1437:11:1437:80">// adds a new (u, insert) entry in the allIndexes and allSizes arrays</jtok>
<jtok eid="25" type="local_variable_name" span="1438:17:1438:27">newIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1438:38:1438:48">allIndexes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1438:49:1438:55">length</jtok>
<jtok eid="25" type="local_variable_name" span="1439:17:1439:25">newSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1439:36:1439:44">allSizes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1439:45:1439:51">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1440:11:1440:17">System</jtok>
<jtok eid="25" type="method_call" span="1440:18:1440:27">arraycopy</jtok>
<jtok eid="25" type="primary_name_ref" span="1440:28:1440:38">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1440:43:1440:53">newIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1440:58:1440:68">allIndexes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1440:69:1440:75">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1441:11:1441:17">System</jtok>
<jtok eid="25" type="method_call" span="1441:18:1441:27">arraycopy</jtok>
<jtok eid="25" type="primary_name_ref" span="1441:28:1441:36">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1441:41:1441:49">newSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1441:54:1441:62">allSizes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1441:63:1441:69">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1442:11:1442:21">newIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1442:22:1442:32">allIndexes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1442:33:1442:39">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1442:43:1442:44">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1443:11:1443:19">newSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1443:20:1443:28">allSizes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1443:29:1443:35">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1443:39:1443:45">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1444:11:1444:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1444:24:1444:34">newIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1445:11:1445:19">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1445:22:1445:30">newSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1446:15:1446:21">insert</jtok>
<jtok eid="25" type="primary_name_ref" span="1447:13:1447:18">state</jtok>
<jtok eid="25" type="primary_name_ref" span="1451:11:1451:16">state</jtok>
<jtok eid="25" type="primary_name_ref" span="1452:11:1452:16">state</jtok>
<jtok eid="25" type="primary_name_ref" span="1454:14:1454:19">state</jtok>
<jtok eid="25" type="line_comment" span="1456:5:1456:17">// 2nd step:</jtok>
<jtok eid="25" type="line_comment" span="1457:5:1457:76">// copies the bytecode of the method into a new bytevector, updates the</jtok>
<jtok eid="25" type="line_comment" span="1458:5:1458:61">// offsets, and inserts (or removes) bytes as requested.</jtok>
<jtok eid="25" type="class_or_interface_ref" span="1460:5:1460:15">ByteVector</jtok>
<jtok eid="25" type="local_variable_name" span="1460:16:1460:23">newCode</jtok>
<jtok eid="25" type="constructor_call" span="1460:30:1460:40">ByteVector</jtok>
<jtok eid="25" type="primary_name_ref" span="1460:41:1460:45">code</jtok>
<jtok eid="25" type="qualified_name_ref" span="1460:46:1460:52">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1462:5:1462:6">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1463:12:1463:13">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1463:16:1463:20">code</jtok>
<jtok eid="25" type="qualified_name_ref" span="1463:21:1463:27">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1464:12:1464:13">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1464:16:1464:26">allIndexes</jtok>
<jtok eid="25" type="qualified_name_ref" span="1464:27:1464:33">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1464:39:1464:40">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1464:49:1464:50">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1465:13:1465:23">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1465:24:1465:25">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1465:30:1465:31">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1466:15:1466:16">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1466:19:1466:22">len</jtok>
<jtok eid="25" type="primary_name_ref" span="1467:17:1467:22">sizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1467:23:1467:24">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1468:15:1468:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1468:23:1468:35">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1468:45:1468:50">sizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1468:51:1468:52">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1470:15:1470:22">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1470:23:1470:29">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1470:33:1470:38">sizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1470:39:1470:40">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1472:13:1472:20">indexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1472:21:1472:22">i</jtok>
<jtok eid="25" type="primary_name_ref" span="1472:26:1472:33">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1472:34:1472:40">length</jtok>
<jtok eid="25" type="local_variable_name" span="1476:11:1476:17">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1476:20:1476:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1476:22:1476:23">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1477:15:1477:26">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1477:27:1477:31">TYPE</jtok>
<jtok eid="25" type="primary_name_ref" span="1477:32:1477:38">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1478:14:1478:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1478:26:1478:36">NOARG_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1479:14:1479:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1479:26:1479:38">IMPLVAR_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1480:11:1480:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1480:19:1480:23">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1480:24:1480:30">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1481:11:1481:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1483:14:1483:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1483:26:1483:36">LABEL_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1484:15:1484:21">opcode</jtok>
<jtok eid="25" type="line_comment" span="1485:13:1485:77">// changes temporary opcodes 202 to 217 (inclusive), 218 and 219</jtok>
<jtok eid="25" type="line_comment" span="1486:13:1486:65">// to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL</jtok>
<jtok eid="25" type="primary_name_ref" span="1487:13:1487:19">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1487:22:1487:28">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1487:37:1487:43">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1487:51:1487:57">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1488:13:1488:18">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1488:21:1488:22">u</jtok>
<jtok eid="25" type="method_call" span="1488:25:1488:42">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1488:43:1488:44">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1488:46:1488:47">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1490:13:1490:18">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1490:21:1490:22">u</jtok>
<jtok eid="25" type="method_call" span="1490:25:1490:34">readShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1490:35:1490:36">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1490:38:1490:39">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1492:11:1492:20">newOffset</jtok>
<jtok eid="25" type="method_call" span="1492:23:1492:35">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1492:36:1492:46">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1492:48:1492:56">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1492:58:1492:59">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1492:61:1492:66">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1493:15:1493:24">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1493:27:1493:32">Short</jtok>
<jtok eid="25" type="qualified_name_ref" span="1493:33:1493:42">MIN_VALUE</jtok>
<jtok eid="25" type="primary_name_ref" span="1493:46:1493:55">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1493:58:1493:63">Short</jtok>
<jtok eid="25" type="qualified_name_ref" span="1493:64:1493:73">MAX_VALUE</jtok>
<jtok eid="25" type="line_comment" span="1494:13:1494:76">// replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx &lt;l&gt; with</jtok>
<jtok eid="25" type="line_comment" span="1495:13:1495:81">// IFNOTxxx &lt;l'&gt; GOTO_W &lt;l&gt;, where IFNOTxxx is the "opposite" opcode</jtok>
<jtok eid="25" type="line_comment" span="1496:13:1496:76">// of IFxxx (i.e., IFNE for IFEQ) and where &lt;l'&gt; designates the</jtok>
<jtok eid="25" type="line_comment" span="1497:13:1497:50">// instruction just after the GOTO_W.</jtok>
<jtok eid="25" type="primary_name_ref" span="1498:17:1498:23">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1498:27:1498:36">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1498:37:1498:41">GOTO</jtok>
<jtok eid="25" type="primary_name_ref" span="1499:15:1499:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1499:23:1499:27">put1</jtok>
<jtok eid="25" type="line_comment" span="1499:34:1499:43">// GOTO_W</jtok>
<jtok eid="25" type="primary_name_ref" span="1500:24:1500:30">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1500:34:1500:43">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1500:44:1500:47">JSR</jtok>
<jtok eid="25" type="primary_name_ref" span="1501:15:1501:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1501:23:1501:27">put1</jtok>
<jtok eid="25" type="line_comment" span="1501:34:1501:42">// JSR_W</jtok>
<jtok eid="25" type="primary_name_ref" span="1503:15:1503:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1503:23:1503:27">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1503:28:1503:34">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1503:46:1503:52">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1503:69:1503:75">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1504:15:1504:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1504:23:1504:27">put2</jtok>
<jtok eid="25" type="line_comment" span="1504:34:1504:48">// jump offset</jtok>
<jtok eid="25" type="primary_name_ref" span="1505:15:1505:22">newCode</jtok>
<jtok eid="25" type="method_call" span="1505:23:1505:27">put1</jtok>
<jtok eid="25" type="line_comment" span="1505:34:1505:43">// GOTO_W</jtok>
<jtok eid="25" type="primary_name_ref" span="1506:15:1506:24">newOffset</jtok>
<jtok eid="25" type="line_comment" span="1506:34:1506:80">// newOffset now computed from start of GOTO_W</jtok>
<jtok eid="25" type="primary_name_ref" span="1508:13:1508:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1508:21:1508:25">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1508:26:1508:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1510:13:1510:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1510:21:1510:25">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1510:26:1510:32">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1511:13:1511:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1511:21:1511:25">put2</jtok>
<jtok eid="25" type="primary_name_ref" span="1511:26:1511:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1513:11:1513:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1515:14:1515:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1515:26:1515:37">LABELW_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1516:11:1516:16">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1516:19:1516:20">u</jtok>
<jtok eid="25" type="method_call" span="1516:23:1516:30">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1516:31:1516:32">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1516:34:1516:35">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1517:11:1517:20">newOffset</jtok>
<jtok eid="25" type="method_call" span="1517:23:1517:35">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1517:36:1517:46">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1517:48:1517:56">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1517:58:1517:59">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1517:61:1517:66">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1518:11:1518:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1518:19:1518:23">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1518:24:1518:30">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1519:11:1519:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1519:19:1519:23">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1519:24:1519:33">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1520:11:1520:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1522:14:1522:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1522:26:1522:35">TABL_INSN</jtok>
<jtok eid="25" type="line_comment" span="1523:11:1523:40">// skips 0 to 3 padding bytes</jtok>
<jtok eid="25" type="primary_name_ref" span="1524:11:1524:12">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1524:15:1524:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1525:11:1525:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1525:15:1525:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1525:24:1525:25">v</jtok>
<jtok eid="25" type="line_comment" span="1526:11:1526:42">// reads and copies instruction</jtok>
<jtok eid="25" type="local_variable_name" span="1527:15:1527:21">source</jtok>
<jtok eid="25" type="primary_name_ref" span="1527:24:1527:31">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1527:32:1527:38">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1528:11:1528:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1528:19:1528:23">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1528:24:1528:33">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1528:34:1528:45">TABLESWITCH</jtok>
<jtok eid="25" type="primary_name_ref" span="1529:18:1529:25">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1529:26:1529:32">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1530:13:1530:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1530:21:1530:25">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1532:11:1532:16">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1532:19:1532:20">v</jtok>
<jtok eid="25" type="method_call" span="1532:23:1532:30">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1532:31:1532:32">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1532:34:1532:35">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1532:38:1532:39">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1533:11:1533:20">newOffset</jtok>
<jtok eid="25" type="method_call" span="1533:23:1533:35">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1533:36:1533:46">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1533:48:1533:56">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1533:58:1533:59">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1533:61:1533:66">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1534:11:1534:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1534:19:1534:23">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1534:24:1534:33">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1535:11:1535:12">j</jtok>
<jtok eid="25" type="method_call" span="1535:15:1535:22">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1535:23:1535:24">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1535:26:1535:27">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1535:30:1535:31">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1536:11:1536:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1536:19:1536:23">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1536:24:1536:25">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1537:11:1537:12">j</jtok>
<jtok eid="25" type="method_call" span="1537:15:1537:22">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1537:23:1537:24">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1537:26:1537:27">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1537:31:1537:32">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1537:38:1537:39">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1538:11:1538:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1538:19:1538:23">put4</jtok>
<jtok eid="25" type="method_call" span="1538:24:1538:31">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1538:32:1538:33">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1538:35:1538:36">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1539:19:1539:20">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1539:28:1539:29">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1540:13:1540:18">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1540:21:1540:22">v</jtok>
<jtok eid="25" type="method_call" span="1540:25:1540:32">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1540:33:1540:34">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1540:36:1540:37">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1540:40:1540:41">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1541:13:1541:22">newOffset</jtok>
<jtok eid="25" type="method_call" span="1541:25:1541:37">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1541:38:1541:48">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1541:50:1541:58">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1541:60:1541:61">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1541:63:1541:68">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1542:13:1542:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1542:21:1542:25">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1542:26:1542:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1545:14:1545:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1545:26:1545:35">LOOK_INSN</jtok>
<jtok eid="25" type="line_comment" span="1546:11:1546:40">// skips 0 to 3 padding bytes</jtok>
<jtok eid="25" type="primary_name_ref" span="1547:11:1547:12">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1547:15:1547:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1548:11:1548:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1548:15:1548:16">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1548:24:1548:25">v</jtok>
<jtok eid="25" type="line_comment" span="1549:11:1549:42">// reads and copies instruction</jtok>
<jtok eid="25" type="primary_name_ref" span="1550:11:1550:17">source</jtok>
<jtok eid="25" type="primary_name_ref" span="1550:20:1550:27">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1550:28:1550:34">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1551:11:1551:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1551:19:1551:23">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1551:24:1551:33">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1551:34:1551:46">LOOKUPSWITCH</jtok>
<jtok eid="25" type="primary_name_ref" span="1552:18:1552:25">newCode</jtok>
<jtok eid="25" type="qualified_name_ref" span="1552:26:1552:32">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1553:13:1553:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1553:21:1553:25">put1</jtok>
<jtok eid="25" type="primary_name_ref" span="1555:11:1555:16">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1555:19:1555:20">v</jtok>
<jtok eid="25" type="method_call" span="1555:23:1555:30">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1555:31:1555:32">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1555:34:1555:35">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1555:38:1555:39">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1556:11:1556:20">newOffset</jtok>
<jtok eid="25" type="method_call" span="1556:23:1556:35">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1556:36:1556:46">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1556:48:1556:56">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1556:58:1556:59">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1556:61:1556:66">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1557:11:1557:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1557:19:1557:23">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1557:24:1557:33">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1558:11:1558:12">j</jtok>
<jtok eid="25" type="method_call" span="1558:15:1558:22">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1558:23:1558:24">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1558:26:1558:27">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1558:30:1558:31">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1559:11:1559:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1559:19:1559:23">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1559:24:1559:25">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1560:19:1560:20">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1560:28:1560:29">j</jtok>
<jtok eid="25" type="primary_name_ref" span="1561:13:1561:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1561:21:1561:25">put4</jtok>
<jtok eid="25" type="method_call" span="1561:26:1561:33">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1561:34:1561:35">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1561:37:1561:38">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1561:42:1561:43">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1562:13:1562:18">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1562:21:1562:22">v</jtok>
<jtok eid="25" type="method_call" span="1562:25:1562:32">readInt</jtok>
<jtok eid="25" type="primary_name_ref" span="1562:33:1562:34">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1562:36:1562:37">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1562:40:1562:41">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1563:13:1563:22">newOffset</jtok>
<jtok eid="25" type="method_call" span="1563:25:1563:37">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1563:38:1563:48">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1563:50:1563:58">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1563:60:1563:61">v</jtok>
<jtok eid="25" type="primary_name_ref" span="1563:63:1563:68">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1564:13:1564:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1564:21:1564:25">put4</jtok>
<jtok eid="25" type="primary_name_ref" span="1564:26:1564:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1567:14:1567:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1567:26:1567:35">WIDE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1568:11:1568:17">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1568:20:1568:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1568:22:1568:23">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1569:15:1569:21">opcode</jtok>
<jtok eid="25" type="primary_name_ref" span="1569:25:1569:34">Constants</jtok>
<jtok eid="25" type="qualified_name_ref" span="1569:35:1569:39">IINC</jtok>
<jtok eid="25" type="primary_name_ref" span="1570:13:1570:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1570:21:1570:33">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1570:34:1570:35">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1570:37:1570:38">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1571:13:1571:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1573:13:1573:20">newCode</jtok>
<jtok eid="25" type="method_call" span="1573:21:1573:33">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1573:34:1573:35">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1573:37:1573:38">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1574:13:1574:14">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1577:14:1577:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1577:26:1577:34">VAR_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1578:14:1578:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1578:26:1578:36">SBYTE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1579:14:1579:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1579:26:1579:34">LDC_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1580:11:1580:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1580:19:1580:31">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1580:32:1580:33">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1580:35:1580:36">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1581:11:1581:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1583:14:1583:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1583:26:1583:36">SHORT_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1584:14:1584:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1584:26:1584:35">LDCW_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1585:14:1585:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1585:26:1585:42">FIELDORMETH_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1586:14:1586:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1586:26:1586:35">TYPE_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1587:14:1587:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1587:26:1587:35">IINC_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1588:11:1588:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1588:19:1588:31">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1588:32:1588:33">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1588:35:1588:36">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1589:11:1589:12">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1591:14:1591:25">ClassWriter</jtok>
<jtok eid="25" type="qualified_name_ref" span="1591:26:1591:38">ITFMETH_INSN</jtok>
<jtok eid="25" type="primary_name_ref" span="1592:11:1592:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1592:19:1592:31">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1592:32:1592:33">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1592:35:1592:36">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1593:11:1593:12">u</jtok>
<jtok eid="25" type="line_comment" span="1595:9:1595:27">// case MANA_INSN:</jtok>
<jtok eid="25" type="primary_name_ref" span="1597:11:1597:18">newCode</jtok>
<jtok eid="25" type="method_call" span="1597:19:1597:31">putByteArray</jtok>
<jtok eid="25" type="primary_name_ref" span="1597:32:1597:33">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1597:35:1597:36">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1598:11:1598:12">u</jtok>
<jtok eid="25" type="line_comment" span="1603:5:1603:49">// updates the instructions addresses in the</jtok>
<jtok eid="25" type="line_comment" span="1604:5:1604:47">// catch, local var and line number tables</jtok>
<jtok eid="25" type="primary_name_ref" span="1605:9:1605:19">catchTable</jtok>
<jtok eid="25" type="primary_name_ref" span="1606:7:1606:8">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1606:11:1606:21">catchTable</jtok>
<jtok eid="25" type="qualified_name_ref" span="1606:22:1606:26">data</jtok>
<jtok eid="25" type="primary_name_ref" span="1607:7:1607:8">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1608:14:1608:15">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1608:18:1608:28">catchTable</jtok>
<jtok eid="25" type="qualified_name_ref" span="1608:29:1608:35">length</jtok>
<jtok eid="25" type="method_call" span="1609:9:1609:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1609:20:1609:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1609:23:1609:24">u</jtok>
<jtok eid="25" type="method_call" span="1609:26:1609:38">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1610:11:1610:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1610:23:1610:31">allSizes</jtok>
<jtok eid="25" type="method_call" span="1610:36:1610:53">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1610:54:1610:55">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1610:57:1610:58">u</jtok>
<jtok eid="25" type="method_call" span="1611:9:1611:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1611:20:1611:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1611:23:1611:24">u</jtok>
<jtok eid="25" type="method_call" span="1611:30:1611:42">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1612:11:1612:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1612:23:1612:31">allSizes</jtok>
<jtok eid="25" type="method_call" span="1612:36:1612:53">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1612:54:1612:55">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1612:57:1612:58">u</jtok>
<jtok eid="25" type="method_call" span="1613:9:1613:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1613:20:1613:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1613:23:1613:24">u</jtok>
<jtok eid="25" type="method_call" span="1613:30:1613:42">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1614:11:1614:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1614:23:1614:31">allSizes</jtok>
<jtok eid="25" type="method_call" span="1614:36:1614:53">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1614:54:1614:55">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1614:57:1614:58">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1615:9:1615:10">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1618:9:1618:17">localVar</jtok>
<jtok eid="25" type="primary_name_ref" span="1619:7:1619:8">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1619:11:1619:19">localVar</jtok>
<jtok eid="25" type="qualified_name_ref" span="1619:20:1619:24">data</jtok>
<jtok eid="25" type="primary_name_ref" span="1620:7:1620:8">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1621:14:1621:15">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1621:18:1621:26">localVar</jtok>
<jtok eid="25" type="qualified_name_ref" span="1621:27:1621:33">length</jtok>
<jtok eid="25" type="primary_name_ref" span="1622:9:1622:14">label</jtok>
<jtok eid="25" type="method_call" span="1622:17:1622:34">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1622:35:1622:36">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1622:38:1622:39">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1623:9:1623:18">newOffset</jtok>
<jtok eid="25" type="method_call" span="1623:21:1623:33">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1623:34:1623:44">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1623:46:1623:54">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1623:59:1623:64">label</jtok>
<jtok eid="25" type="method_call" span="1624:9:1624:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1624:20:1624:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1624:23:1624:24">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1624:26:1624:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1625:9:1625:14">label</jtok>
<jtok eid="25" type="method_call" span="1625:18:1625:35">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1625:36:1625:37">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1625:39:1625:40">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1626:9:1626:18">newOffset</jtok>
<jtok eid="25" type="method_call" span="1626:21:1626:33">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1626:34:1626:44">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1626:46:1626:54">allSizes</jtok>
<jtok eid="25" type="primary_name_ref" span="1626:59:1626:64">label</jtok>
<jtok eid="25" type="primary_name_ref" span="1626:68:1626:77">newOffset</jtok>
<jtok eid="25" type="method_call" span="1627:9:1627:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1627:20:1627:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1627:23:1627:24">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1627:26:1627:35">newOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1628:9:1628:10">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1631:9:1631:19">lineNumber</jtok>
<jtok eid="25" type="primary_name_ref" span="1632:7:1632:8">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1632:11:1632:21">lineNumber</jtok>
<jtok eid="25" type="qualified_name_ref" span="1632:22:1632:26">data</jtok>
<jtok eid="25" type="primary_name_ref" span="1633:7:1633:8">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1634:14:1634:15">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1634:18:1634:28">lineNumber</jtok>
<jtok eid="25" type="qualified_name_ref" span="1634:29:1634:35">length</jtok>
<jtok eid="25" type="method_call" span="1635:9:1635:19">writeShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1635:20:1635:21">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1635:23:1635:24">u</jtok>
<jtok eid="25" type="method_call" span="1635:26:1635:38">getNewOffset</jtok>
<jtok eid="25" type="primary_name_ref" span="1636:11:1636:21">allIndexes</jtok>
<jtok eid="25" type="primary_name_ref" span="1636:23:1636:31">allSizes</jtok>
<jtok eid="25" type="method_call" span="1636:36:1636:53">readUnsignedShort</jtok>
<jtok eid="25" type="primary_name_ref" span="1636:54:1636:55">b</jtok>
<jtok eid="25" type="primary_name_ref" span="1636:57:1636:58">u</jtok>
<jtok eid="25" type="primary_name_ref" span="1637:9:1637:10">u</jtok>
<jtok eid="25" type="line_comment" span="1641:5:1641:44">// replaces old bytecodes with new ones</jtok>
<jtok eid="25" type="primary_name_ref" span="1642:5:1642:9">code</jtok>
<jtok eid="25" type="primary_name_ref" span="1642:12:1642:19">newCode</jtok>
<jtok eid="25" type="line_comment" span="1644:5:1644:57">// returns the positions of the resized instructions</jtok>
<jtok eid="25" type="primary_name_ref" span="1645:12:1645:19">indexes</jtok>
<jtok eid="1" type="block_comment" span="1648:3:1654:6">/**
   * Reads an unsigned short value in the given byte array.
   *
   * @param b a byte array.
   * @param index the start index of the value to be read.
   * @return the read value.
   */</jtok>
<jtok eid="26" type="method_name" span="1656:14:1656:31">readUnsignedShort</jtok>
<jtok eid="26" type="parameter_name" span="1656:46:1656:47">b</jtok>
<jtok eid="26" type="parameter_name" span="1656:59:1656:64">index</jtok>
<jtok eid="26" type="primary_name_ref" span="1657:14:1657:15">b</jtok>
<jtok eid="26" type="primary_name_ref" span="1657:16:1657:21">index</jtok>
<jtok eid="26" type="primary_name_ref" span="1657:40:1657:41">b</jtok>
<jtok eid="26" type="primary_name_ref" span="1657:42:1657:47">index</jtok>
<jtok eid="1" type="block_comment" span="1660:3:1666:6">/**
   * Reads a signed short value in the given byte array.
   *
   * @param b a byte array.
   * @param index the start index of the value to be read.
   * @return the read value.
   */</jtok>
<jtok eid="27" type="method_name" span="1668:16:1668:25">readShort</jtok>
<jtok eid="27" type="parameter_name" span="1668:40:1668:41">b</jtok>
<jtok eid="27" type="parameter_name" span="1668:53:1668:58">index</jtok>
<jtok eid="27" type="primary_name_ref" span="1669:22:1669:23">b</jtok>
<jtok eid="27" type="primary_name_ref" span="1669:24:1669:29">index</jtok>
<jtok eid="27" type="primary_name_ref" span="1669:48:1669:49">b</jtok>
<jtok eid="27" type="primary_name_ref" span="1669:50:1669:55">index</jtok>
<jtok eid="1" type="block_comment" span="1672:3:1678:6">/**
   * Reads a signed int value in the given byte array.
   *
   * @param b a byte array.
   * @param index the start index of the value to be read.
   * @return the read value.
   */</jtok>
<jtok eid="28" type="method_name" span="1680:14:1680:21">readInt</jtok>
<jtok eid="28" type="parameter_name" span="1680:36:1680:37">b</jtok>
<jtok eid="28" type="parameter_name" span="1680:49:1680:54">index</jtok>
<jtok eid="28" type="primary_name_ref" span="1681:14:1681:15">b</jtok>
<jtok eid="28" type="primary_name_ref" span="1681:16:1681:21">index</jtok>
<jtok eid="28" type="primary_name_ref" span="1682:14:1682:15">b</jtok>
<jtok eid="28" type="primary_name_ref" span="1682:16:1682:21">index</jtok>
<jtok eid="28" type="primary_name_ref" span="1683:14:1683:15">b</jtok>
<jtok eid="28" type="primary_name_ref" span="1683:16:1683:21">index</jtok>
<jtok eid="28" type="primary_name_ref" span="1684:13:1684:14">b</jtok>
<jtok eid="28" type="primary_name_ref" span="1684:15:1684:20">index</jtok>
<jtok eid="1" type="block_comment" span="1687:3:1693:6">/**
   * Writes a short value in the given byte array.
   *
   * @param b a byte array.
   * @param index where the first byte of the short value must be written.
   * @param s the value to be written in the given byte array.
   */</jtok>
<jtok eid="29" type="method_name" span="1695:15:1695:25">writeShort</jtok>
<jtok eid="29" type="parameter_name" span="1695:40:1695:41">b</jtok>
<jtok eid="29" type="parameter_name" span="1695:53:1695:58">index</jtok>
<jtok eid="29" type="parameter_name" span="1695:70:1695:71">s</jtok>
<jtok eid="29" type="primary_name_ref" span="1696:5:1696:6">b</jtok>
<jtok eid="29" type="primary_name_ref" span="1696:7:1696:12">index</jtok>
<jtok eid="29" type="primary_name_ref" span="1696:23:1696:24">s</jtok>
<jtok eid="29" type="primary_name_ref" span="1697:5:1697:6">b</jtok>
<jtok eid="29" type="primary_name_ref" span="1697:7:1697:12">index</jtok>
<jtok eid="29" type="primary_name_ref" span="1697:26:1697:27">s</jtok>
<jtok eid="1" type="block_comment" span="1700:3:1721:6">/**
   * Computes the future value of a bytecode offset.
   * &lt;p&gt;
   * Note: it is possible to have several entries for the same instruction
   * in the &lt;tt&gt;indexes&lt;/tt&gt; and &lt;tt&gt;sizes&lt;/tt&gt;: two entries (index=a,size=b)
   * and (index=a,size=b') are equivalent to a single entry (index=a,size=b+b').
   *
   * @param indexes current positions of the instructions to be resized. Each
   *      instruction must be designated by the index of its &lt;i&gt;last&lt;/i&gt; byte,
   *      plus one (or, in other words, by the index of the &lt;i&gt;first&lt;/i&gt; byte of
   *      the &lt;i&gt;next&lt;/i&gt; instruction).
   * @param sizes the number of bytes to be &lt;i&gt;added&lt;/i&gt; to the above
   *      instructions. More precisely, for each i &lt; &lt;tt&gt;len&lt;/tt&gt;,
   *      &lt;tt&gt;sizes&lt;/tt&gt;[i] bytes will be added at the end of the instruction
   *      designated by &lt;tt&gt;indexes&lt;/tt&gt;[i] or, if &lt;tt&gt;sizes&lt;/tt&gt;[i] is
   *      negative, the &lt;i&gt;last&lt;/i&gt; |&lt;tt&gt;sizes[i]&lt;/tt&gt;| bytes of the instruction
   *      will be removed (the instruction size &lt;i&gt;must not&lt;/i&gt; become negative
   *      or null).
   * @param begin index of the first byte of the source instruction.
   * @param end index of the first byte of the target instruction.
   * @return the future value of the given bytecode offset.
   */</jtok>
<jtok eid="30" type="method_name" span="1723:14:1723:26">getNewOffset</jtok>
<jtok eid="30" type="parameter_name" span="1724:17:1724:24">indexes</jtok>
<jtok eid="30" type="parameter_name" span="1725:17:1725:22">sizes</jtok>
<jtok eid="30" type="parameter_name" span="1726:15:1726:20">begin</jtok>
<jtok eid="30" type="parameter_name" span="1727:15:1727:18">end</jtok>
<jtok eid="30" type="local_variable_name" span="1729:9:1729:15">offset</jtok>
<jtok eid="30" type="primary_name_ref" span="1729:18:1729:21">end</jtok>
<jtok eid="30" type="primary_name_ref" span="1729:24:1729:29">begin</jtok>
<jtok eid="30" type="local_variable_name" span="1730:14:1730:15">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1730:21:1730:22">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1730:25:1730:32">indexes</jtok>
<jtok eid="30" type="qualified_name_ref" span="1730:33:1730:39">length</jtok>
<jtok eid="30" type="primary_name_ref" span="1730:43:1730:44">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:11:1731:16">begin</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:19:1731:26">indexes</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:27:1731:28">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:33:1731:40">indexes</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:41:1731:42">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1731:47:1731:50">end</jtok>
<jtok eid="30" type="line_comment" span="1731:54:1731:69">// forward jump</jtok>
<jtok eid="30" type="primary_name_ref" span="1732:9:1732:15">offset</jtok>
<jtok eid="30" type="primary_name_ref" span="1732:19:1732:24">sizes</jtok>
<jtok eid="30" type="primary_name_ref" span="1732:25:1732:26">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:18:1733:21">end</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:24:1733:31">indexes</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:32:1733:33">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:38:1733:45">indexes</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:46:1733:47">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1733:52:1733:57">begin</jtok>
<jtok eid="30" type="line_comment" span="1733:61:1733:77">// backward jump</jtok>
<jtok eid="30" type="primary_name_ref" span="1734:9:1734:15">offset</jtok>
<jtok eid="30" type="primary_name_ref" span="1734:19:1734:24">sizes</jtok>
<jtok eid="30" type="primary_name_ref" span="1734:25:1734:26">i</jtok>
<jtok eid="30" type="primary_name_ref" span="1737:12:1737:18">offset</jtok>
<jtok eid="1" type="block_comment" span="1740:3:1747:6">/**
   * Returns the current size of the bytecode of this method. This size just
   * includes the size of the bytecode instructions: it does not include the
   * size of the Exceptions, LocalVariableTable, LineNumberTable, Synthetic
   * and Deprecated attributes, if present.
   *
   * @return the current size of the bytecode of this method.
   */</jtok>
<jtok eid="31" type="method_name" span="1749:17:1749:28">getCodeSize</jtok>
<jtok eid="31" type="primary_name_ref" span="1750:12:1750:16">code</jtok>
<jtok eid="31" type="qualified_name_ref" span="1750:17:1750:23">length</jtok>
<jtok eid="1" type="block_comment" span="1753:3:1761:6">/**
   * Returns the current bytecode of this method. This bytecode only contains
   * the instructions: it does not include the Exceptions, LocalVariableTable,
   * LineNumberTable, Synthetic and Deprecated attributes, if present.
   *
   * @return the current bytecode of this method. The bytecode is contained
   *      between the index 0 (inclusive) and the index {@link #getCodeSize
   *      getCodeSize} (exclusive).
   */</jtok>
<jtok eid="32" type="method_name" span="1763:20:1763:27">getCode</jtok>
<jtok eid="32" type="primary_name_ref" span="1764:12:1764:16">code</jtok>
<jtok eid="32" type="qualified_name_ref" span="1764:17:1764:21">data</jtok>
</jdoc>