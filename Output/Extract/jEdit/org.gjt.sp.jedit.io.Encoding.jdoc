<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.io.Encoding" jls="java5">
<jent id="0" type="file" span="0:0:64:2">Source/jEdit/org/gjt/sp/jedit/io/Encoding.java</jent>
<jent id="1" pid="0" type="interface" span="41:1:64:1">org.gjt.sp.jedit.io.Encoding</jent>
<jent id="2" pid="1" type="method" span="48:2:48:64">org.gjt.sp.jedit.io.Encoding.getTextReader(InputStream)</jent>
<jent id="3" pid="1" type="method" span="55:2:55:66">org.gjt.sp.jedit.io.Encoding.getTextWriter(OutputStream)</jent>
<jent id="4" pid="1" type="method" span="62:2:63:21">org.gjt.sp.jedit.io.Encoding.getPermissiveTextReader(InputStream)</jent>
<jtok eid="0" type="block_comment" span="1:1:19:4">/*
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2007 Kazutoshi Satoda
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="29:1:40:4">/**
 * An interface to represent an encoding.
 * An encoding is a mapping between a character stream and a byte
 * stream. It is like java.nio.charset.Charset but has slightly
 * different form. This can represents some extended encodings like
 * UTF-8Y which drops (inserts) the BOM bytes before actual decoding
 * (encoding). This also enables to add some extended encodings such
 * as ASCII representation used by Java property files.
 *
 * @since 4.3pre10
 * @author Kazutoshi Satoda
 */</jtok>
<jtok eid="1" type="interface_name" span="41:18:41:26">Encoding</jtok>
<jtok eid="1" type="block_comment" span="43:2:47:4">/**
	* Map an InputStream to a Reader.
	* Decode-error while reading from this Reader should be reported
	* by throwing an IOException.
	*/</jtok>
<jtok eid="2" type="class_or_interface_ref" span="48:9:48:15">Reader</jtok>
<jtok eid="2" type="method_name" span="48:16:48:29">getTextReader</jtok>
<jtok eid="2" type="parameter_type" span="48:30:48:41">InputStream</jtok>
<jtok eid="2" type="parameter_name" span="48:42:48:44">in</jtok>
<jtok eid="2" type="throws" span="48:53:48:64">IOException</jtok>
<jtok eid="1" type="block_comment" span="50:2:54:4">/**
	* Map an OutputStream to a Writer.
	* Encode-error while writing to this Writer should be reported
	* by throwing an IOException.
	*/</jtok>
<jtok eid="3" type="class_or_interface_ref" span="55:9:55:15">Writer</jtok>
<jtok eid="3" type="method_name" span="55:16:55:29">getTextWriter</jtok>
<jtok eid="3" type="parameter_type" span="55:30:55:42">OutputStream</jtok>
<jtok eid="3" type="parameter_name" span="55:43:55:46">out</jtok>
<jtok eid="3" type="throws" span="55:55:55:66">IOException</jtok>
<jtok eid="1" type="block_comment" span="57:2:61:4">/**
	* Map an InputStream to a Reader.
	* Decode-error while reading from this Reader should be ignored
	* or replaced.
	*/</jtok>
<jtok eid="4" type="class_or_interface_ref" span="62:9:62:15">Reader</jtok>
<jtok eid="4" type="method_name" span="62:16:62:39">getPermissiveTextReader</jtok>
<jtok eid="4" type="parameter_type" span="62:40:62:51">InputStream</jtok>
<jtok eid="4" type="parameter_name" span="62:52:62:54">in</jtok>
<jtok eid="4" type="throws" span="63:10:63:21">IOException</jtok>
</jdoc>