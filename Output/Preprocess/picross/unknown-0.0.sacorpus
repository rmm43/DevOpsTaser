<?xml version="1.0" encoding="utf-8"?>
<syncorp name="unknown-0.0">
<tr name="RemoveStopTokens(stopLists={java.lang})"/>
<tr name="SplitTokens(retainOriginal=true)"/>
<tr name="LowercaseTokens"/>
<tr name="RemoveStopTokens(stopLists={Fox})"/>
<tr name="StemTokens"/>
<syndoc type="method" name="net.archiloque.picross.Main.main(String[])">
<syntok type="method_name" weight="1">main</syntok>
<syntok type="parameter_name" weight="1">arg</syntok>
<syntok type="local_variable_name" weight="1">linesblock</syntok>
<syntok type="local_variable_name" weight="1">line</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="method_call" weight="1">splitblock</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="method_call" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">arg</syntok>
<syntok type="local_variable_name" weight="1">columnsblock</syntok>
<syntok type="local_variable_name" weight="1">column</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="method_call" weight="1">splitblock</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="method_call" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">arg</syntok>
<syntok type="class_or_interface_ref" weight="1">grid</syntok>
<syntok type="local_variable_name" weight="1">grid</syntok>
<syntok type="constructor_call" weight="1">grid</syntok>
<syntok type="primary_name_ref" weight="1">linesblock</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">columnsblock</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">grid</syntok>
<syntok type="method_call" weight="1">process</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">grid</syntok>
<syntok type="method_call" weight="1">tostr</syntok>
<syntok type="method_call" weight="1">string</syntok>
<syntok type="class_comment" weight="1">run</syntok>
<syntok type="class_comment" weight="1">picross</syntok>
<syntok type="class_comment" weight="1">output</syntok>
<syntok type="class_comment" weight="1">result</syntok>
<syntok type="class_comment" weight="1">readm</syntok>
<syntok type="class_comment" weight="1">exampl</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">main</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Main.splitBlocks(String)">
<syntok type="method_name" weight="1">splitblock</syntok>
<syntok type="method_name" weight="1">split</syntok>
<syntok type="method_name" weight="1">block</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="local_variable_name" weight="1">splittedblock</syntok>
<syntok type="local_variable_name" weight="1">split</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">splittedblock</syntok>
<syntok type="primary_name_ref" weight="1">split</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">splittedblock</syntok>
<syntok type="primary_name_ref" weight="1">split</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">item</syntok>
<syntok type="primary_name_ref" weight="1">splittedblock</syntok>
<syntok type="primary_name_ref" weight="1">split</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="method_call" weight="1">split</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">item</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">item</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">parseint</syntok>
<syntok type="method_call" weight="1">pars</syntok>
<syntok type="method_call" weight="1">int</syntok>
<syntok type="primary_name_ref" weight="1">item</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">run</syntok>
<syntok type="class_comment" weight="1">picross</syntok>
<syntok type="class_comment" weight="1">output</syntok>
<syntok type="class_comment" weight="1">result</syntok>
<syntok type="class_comment" weight="1">readm</syntok>
<syntok type="class_comment" weight="1">exampl</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">main</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.Record(int,int[])">
<syntok type="method_comment" weight="1">creat</syntok>
<syntok type="method_comment" weight="1">record</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">contain</syntok>
<syntok type="method_name" weight="1">record</syntok>
<syntok type="parameter_name" weight="1">length</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">unknown</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="line_comment" weight="1">block</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="line_comment" weight="1">block</syntok>
<syntok type="line_comment" weight="1">calcul</syntok>
<syntok type="line_comment" weight="1">avail</syntok>
<syntok type="line_comment" weight="1">block</syntok>
<syntok type="line_comment" weight="1">dispacth</syntok>
<syntok type="local_variable_name" weight="1">availableblock</syntok>
<syntok type="local_variable_name" weight="1">avail</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">availableblock</syntok>
<syntok type="primary_name_ref" weight="1">avail</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="method_call" weight="1">fillposs</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="method_call" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">availableblock</syntok>
<syntok type="primary_name_ref" weight="1">avail</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">contain</syntok>
<syntok type="class_comment" weight="1">block</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="field_name" weight="1">currentvalu</syntok>
<syntok type="field_name" weight="1">current</syntok>
<syntok type="field_name" weight="1">valu</syntok>
<syntok type="field_name" weight="1">block</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="field_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.applyChanged(List&lt;Change&gt;)">
<syntok type="method_comment" weight="1">appli</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">record</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">result</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">appli</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">null</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">result</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="method_name" weight="1">applychang</syntok>
<syntok type="method_name" weight="1">appli</syntok>
<syntok type="method_name" weight="1">chang</syntok>
<syntok type="parameter_type" weight="1">list</syntok>
<syntok type="parameter_type" weight="1">chang</syntok>
<syntok type="parameter_name" weight="1">chang</syntok>
<syntok type="line_comment" weight="1">filter</syntok>
<syntok type="line_comment" weight="1">possibl</syntok>
<syntok type="line_comment" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">isempti</syntok>
<syntok type="method_call" weight="1">empti</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="local_variable_name" weight="1">newposs</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">iscompat</syntok>
<syntok type="method_call" weight="1">compat</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">newposs</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">newposs</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="line_comment" weight="1">appli</syntok>
<syntok type="line_comment" weight="1">chang</syntok>
<syntok type="line_comment" weight="1">valu</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="line_comment" weight="1">check</syntok>
<syntok type="line_comment" weight="1">enabl</syntok>
<syntok type="line_comment" weight="1">calcul</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">unknown</syntok>
<syntok type="local_variable_name" weight="1">valu</syntok>
<syntok type="method_call" weight="1">getvaluefromposs</syntok>
<syntok type="method_call" weight="1">valu</syntok>
<syntok type="method_call" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">unknown</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">currentvalu</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">contain</syntok>
<syntok type="class_comment" weight="1">block</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="field_name" weight="1">currentvalu</syntok>
<syntok type="field_name" weight="1">current</syntok>
<syntok type="field_name" weight="1">valu</syntok>
<syntok type="field_name" weight="1">block</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="field_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.isCompatible(char[],List&lt;Change&gt;)">
<syntok type="method_comment" weight="1">check</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">compat</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">test</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">appli</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">true</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">compat</syntok>
<syntok type="method_name" weight="1">iscompat</syntok>
<syntok type="method_name" weight="1">compat</syntok>
<syntok type="parameter_name" weight="1">possibl</syntok>
<syntok type="parameter_type" weight="1">list</syntok>
<syntok type="parameter_type" weight="1">chang</syntok>
<syntok type="parameter_name" weight="1">chang</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">contain</syntok>
<syntok type="class_comment" weight="1">block</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="field_name" weight="1">currentvalu</syntok>
<syntok type="field_name" weight="1">current</syntok>
<syntok type="field_name" weight="1">valu</syntok>
<syntok type="field_name" weight="1">block</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="field_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.getValueFromPossibilities(int)">
<syntok type="method_comment" weight="1">check</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">deduc</syntok>
<syntok type="method_comment" weight="1">valu</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">valu</syntok>
<syntok type="method_comment" weight="1">posit</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">index</syntok>
<syntok type="method_comment" weight="1">posit</syntok>
<syntok type="method_comment" weight="1">check</syntok>
<syntok type="method_comment" weight="1">return</syntok>
<syntok type="method_comment" weight="1">calcul</syntok>
<syntok type="method_comment" weight="1">valu</syntok>
<syntok type="method_name" weight="1">getvaluefromposs</syntok>
<syntok type="method_name" weight="1">valu</syntok>
<syntok type="method_name" weight="1">possibl</syntok>
<syntok type="parameter_name" weight="1">index</syntok>
<syntok type="local_variable_name" weight="1">candid</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">candid</syntok>
<syntok type="primary_name_ref" weight="1">unknown</syntok>
<syntok type="primary_name_ref" weight="1">candid</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">contain</syntok>
<syntok type="class_comment" weight="1">block</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="field_name" weight="1">currentvalu</syntok>
<syntok type="field_name" weight="1">current</syntok>
<syntok type="field_name" weight="1">valu</syntok>
<syntok type="field_name" weight="1">block</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="field_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Record.fillPossibilities(char[],int,int,int)">
<syntok type="method_comment" weight="1">recurs</syntok>
<syntok type="method_comment" weight="1">function</syntok>
<syntok type="method_comment" weight="1">creat</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">creat</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">ad</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">currentst</syntok>
<syntok type="method_comment" weight="1">current</syntok>
<syntok type="method_comment" weight="1">current</syntok>
<syntok type="method_comment" weight="1">build</syntok>
<syntok type="method_comment" weight="1">possibl</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">availableblock</syntok>
<syntok type="method_comment" weight="1">avail</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">avail</syntok>
<syntok type="method_comment" weight="1">place</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">nextblockindex</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">index</syntok>
<syntok type="method_comment" weight="1">index</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">ad</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">totallength</syntok>
<syntok type="method_comment" weight="1">total</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">total</syntok>
<syntok type="method_comment" weight="1">length</syntok>
<syntok type="method_comment" weight="1">record</syntok>
<syntok type="method_name" weight="1">fillposs</syntok>
<syntok type="method_name" weight="1">fill</syntok>
<syntok type="method_name" weight="1">possibl</syntok>
<syntok type="parameter_name" weight="1">currentst</syntok>
<syntok type="parameter_name" weight="1">current</syntok>
<syntok type="parameter_name" weight="1">availableblock</syntok>
<syntok type="parameter_name" weight="1">avail</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="parameter_name" weight="1">nextblockindex</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="parameter_name" weight="1">index</syntok>
<syntok type="parameter_name" weight="1">totallength</syntok>
<syntok type="parameter_name" weight="1">total</syntok>
<syntok type="parameter_name" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">nextblocklength</syntok>
<syntok type="local_variable_name" weight="1">block</syntok>
<syntok type="local_variable_name" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">nextblockindex</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">availableblock</syntok>
<syntok type="primary_name_ref" weight="1">avail</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="local_variable_name" weight="1">tobeaddedlength</syntok>
<syntok type="local_variable_name" weight="1">ad</syntok>
<syntok type="local_variable_name" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">nextblockindex</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="local_variable_name" weight="1">newstat</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">copyof</syntok>
<syntok type="method_call" weight="1">copi</syntok>
<syntok type="primary_name_ref" weight="1">currentst</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="primary_name_ref" weight="1">currentst</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">tobeaddedlength</syntok>
<syntok type="primary_name_ref" weight="1">ad</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">nextblocklength</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="primary_name_ref" weight="1">currentst</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">currentst</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">tobeaddedlength</syntok>
<syntok type="primary_name_ref" weight="1">ad</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="primary_name_ref" weight="1">currentst</syntok>
<syntok type="primary_name_ref" weight="1">current</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">tobeaddedlength</syntok>
<syntok type="primary_name_ref" weight="1">ad</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">nextblockindex</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="local_variable_name" weight="1">laststat</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">copyof</syntok>
<syntok type="method_call" weight="1">copi</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="primary_name_ref" weight="1">totallength</syntok>
<syntok type="primary_name_ref" weight="1">total</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">laststat</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">laststat</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="primary_name_ref" weight="1">laststat</syntok>
<syntok type="method_call" weight="1">fillposs</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="method_call" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">newstat</syntok>
<syntok type="primary_name_ref" weight="1">availableblock</syntok>
<syntok type="primary_name_ref" weight="1">avail</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">nextblockindex</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">totallength</syntok>
<syntok type="primary_name_ref" weight="1">total</syntok>
<syntok type="primary_name_ref" weight="1">length</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">record</syntok>
<syntok type="class_comment" weight="1">line</syntok>
<syntok type="class_comment" weight="1">column</syntok>
<syntok type="class_comment" weight="1">contain</syntok>
<syntok type="class_comment" weight="1">block</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="field_name" weight="1">currentvalu</syntok>
<syntok type="field_name" weight="1">current</syntok>
<syntok type="field_name" weight="1">valu</syntok>
<syntok type="field_name" weight="1">block</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="field_name" weight="1">possibl</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.Grid(int[][],int[][])">
<syntok type="method_comment" weight="1">creat</syntok>
<syntok type="method_comment" weight="1">grid</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">linesblock</syntok>
<syntok type="method_comment" weight="1">line</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">line</syntok>
<syntok type="method_comment" weight="1">param</syntok>
<syntok type="method_comment" weight="1">columnsblock</syntok>
<syntok type="method_comment" weight="1">column</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">block</syntok>
<syntok type="method_comment" weight="1">column</syntok>
<syntok type="method_name" weight="1">grid</syntok>
<syntok type="parameter_name" weight="1">linesblock</syntok>
<syntok type="parameter_name" weight="1">line</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="parameter_name" weight="1">columnsblock</syntok>
<syntok type="parameter_name" weight="1">column</syntok>
<syntok type="parameter_name" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">linesblock</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">linesblock</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">columnsblock</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">linesblock</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">columnsblock</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">columnsblock</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">linesblock</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">columnsblock</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">block</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">grid</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">line</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">column</syntok>
<syntok type="block_comment" weight="1">solut</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">result</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">readi</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.hasAnyChange(List&lt;Change&gt;[])">
<syntok type="method_comment" weight="1">check</syntok>
<syntok type="method_comment" weight="1">array</syntok>
<syntok type="method_comment" weight="1">chang</syntok>
<syntok type="method_comment" weight="1">list</syntok>
<syntok type="method_comment" weight="1">empti</syntok>
<syntok type="method_name" weight="1">hasanychang</syntok>
<syntok type="method_name" weight="1">chang</syntok>
<syntok type="parameter_type" weight="1">list</syntok>
<syntok type="parameter_type" weight="1">chang</syntok>
<syntok type="parameter_name" weight="1">chang</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">isempti</syntok>
<syntok type="method_call" weight="1">empti</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">grid</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">line</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">column</syntok>
<syntok type="block_comment" weight="1">solut</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">result</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">readi</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.process()">
<syntok type="method_name" weight="1">process</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="method_call" weight="1">hasanychang</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">column</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="method_call" weight="1">hasanychang</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">grid</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">line</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">column</syntok>
<syntok type="block_comment" weight="1">solut</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">result</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">readi</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.applyChanges(List&lt;Change&gt;[],Record[],int)">
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="method_name" weight="1">applychang</syntok>
<syntok type="method_name" weight="1">appli</syntok>
<syntok type="method_name" weight="1">chang</syntok>
<syntok type="parameter_type" weight="1">list</syntok>
<syntok type="parameter_type" weight="1">chang</syntok>
<syntok type="parameter_name" weight="1">changestoappli</syntok>
<syntok type="parameter_name" weight="1">chang</syntok>
<syntok type="parameter_name" weight="1">appli</syntok>
<syntok type="parameter_type" weight="1">record</syntok>
<syntok type="parameter_name" weight="1">record</syntok>
<syntok type="parameter_name" weight="1">otherdimensions</syntok>
<syntok type="parameter_name" weight="1">dimens</syntok>
<syntok type="parameter_name" weight="1">size</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="primary_name_ref" weight="1">otherdimensions</syntok>
<syntok type="primary_name_ref" weight="1">dimens</syntok>
<syntok type="primary_name_ref" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">otherdimensions</syntok>
<syntok type="primary_name_ref" weight="1">dimens</syntok>
<syntok type="primary_name_ref" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">changestoappli</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">appli</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="method_call" weight="1">add</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">grid</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">line</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">column</syntok>
<syntok type="block_comment" weight="1">solut</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">result</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">readi</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.Grid.toString()">
<syntok type="method_name" weight="1">tostr</syntok>
<syntok type="method_name" weight="1">string</syntok>
<syntok type="class_or_interface_ref" weight="1">stringbuild</syntok>
<syntok type="class_or_interface_ref" weight="1">string</syntok>
<syntok type="class_or_interface_ref" weight="1">builder</syntok>
<syntok type="local_variable_name" weight="1">result</syntok>
<syntok type="constructor_call" weight="1">stringbuild</syntok>
<syntok type="constructor_call" weight="1">string</syntok>
<syntok type="constructor_call" weight="1">builder</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">append</syntok>
<syntok type="primary_name_ref" weight="1">line</syntok>
<syntok type="qualified_name_ref" weight="1">currentvalu</syntok>
<syntok type="qualified_name_ref" weight="1">current</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="method_call" weight="1">append</syntok>
<syntok type="primary_name_ref" weight="1">result</syntok>
<syntok type="method_call" weight="1">tostr</syntok>
<syntok type="method_call" weight="1">string</syntok>
<syntok type="class_comment" weight="1">repres</syntok>
<syntok type="class_comment" weight="1">grid</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">grid</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">line</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="field_name" weight="1">column</syntok>
<syntok type="block_comment" weight="1">solut</syntok>
<syntok type="block_comment" weight="1">process</syntok>
<syntok type="block_comment" weight="1">stuck</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">list</syntok>
<syntok type="block_comment" weight="1">record</syntok>
<syntok type="block_comment" weight="1">return</syntok>
<syntok type="block_comment" weight="1">result</syntok>
<syntok type="block_comment" weight="1">chang</syntok>
<syntok type="block_comment" weight="1">readi</syntok>
<syntok type="block_comment" weight="1">appli</syntok>
<syntok type="annotation_ref" weight="1">suppresswarn</syntok>
<syntok type="annotation_ref" weight="1">suppress</syntok>
<syntok type="annotation_ref" weight="1">warn</syntok>
<syntok type="string_literal" weight="1">uncheck</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.MainTest.something()">
<syntok type="primary_name_ref" weight="1">main</syntok>
<syntok type="method_call" weight="1">main</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">maintest</syntok>
<syntok type="class_name" weight="1">main</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.assertEquals(char[],char[])">
<syntok type="method_name" weight="1">assertequ</syntok>
<syntok type="method_name" weight="1">assert</syntok>
<syntok type="method_name" weight="1">equal</syntok>
<syntok type="parameter_name" weight="1">expect</syntok>
<syntok type="parameter_name" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">expect</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">found</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">expect</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">null</syntok>
<syntok type="string_literal" weight="1">found</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">dont</syntok>
<syntok type="string_literal" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="qualified_name_ref" weight="1">length</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="method_call" weight="1">fail</syntok>
<syntok type="string_literal" weight="1">array</syntok>
<syntok type="string_literal" weight="1">first</syntok>
<syntok type="string_literal" weight="1">element</syntok>
<syntok type="method_call" weight="1">format</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.format(String,Object,Object)">
<syntok type="method_name" weight="1">format</syntok>
<syntok type="parameter_name" weight="1">messag</syntok>
<syntok type="parameter_name" weight="1">expect</syntok>
<syntok type="parameter_name" weight="1">actual</syntok>
<syntok type="local_variable_name" weight="1">format</syntok>
<syntok type="primary_name_ref" weight="1">messag</syntok>
<syntok type="primary_name_ref" weight="1">format</syntok>
<syntok type="primary_name_ref" weight="1">messag</syntok>
<syntok type="primary_name_ref" weight="1">format</syntok>
<syntok type="string_literal" weight="1">expect</syntok>
<syntok type="primary_name_ref" weight="1">expect</syntok>
<syntok type="primary_name_ref" weight="1">actual</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.emptyRecord()">
<syntok type="method_name" weight="1">emptyrecord</syntok>
<syntok type="method_name" weight="1">empti</syntok>
<syntok type="method_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">tochararray</syntok>
<syntok type="method_call" weight="1">char</syntok>
<syntok type="method_call" weight="1">array</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.filledRecord()">
<syntok type="method_name" weight="1">filledrecord</syntok>
<syntok type="method_name" weight="1">fill</syntok>
<syntok type="method_name" weight="1">record</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.twoRecordFill()">
<syntok type="method_name" weight="1">tworecordfil</syntok>
<syntok type="method_name" weight="1">record</syntok>
<syntok type="method_name" weight="1">fill</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="local_variable_name" weight="1">possibl</syntok>
<syntok type="string_literal" weight="1">xxxx</syntok>
<syntok type="string_literal" weight="1">xxxx</syntok>
<syntok type="method_call" weight="1">tochararray</syntok>
<syntok type="method_call" weight="1">char</syntok>
<syntok type="method_call" weight="1">array</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="primary_name_ref" weight="1">possibl</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
<syndoc type="method" name="net.archiloque.picross.RecordTest.oneRecordWithSomeSpace()">
<syntok type="method_name" weight="1">onerecordwithsomespac</syntok>
<syntok type="method_name" weight="1">record</syntok>
<syntok type="method_name" weight="1">space</syntok>
<syntok type="class_or_interface_ref" weight="1">record</syntok>
<syntok type="local_variable_name" weight="1">record</syntok>
<syntok type="constructor_call" weight="1">record</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="qualified_name_ref" weight="1">err</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="qualified_name_ref" weight="1">err</syntok>
<syntok type="method_call" weight="1">println</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="string_literal" weight="1">xxxxxxxxx</syntok>
<syntok type="method_call" weight="1">tochararray</syntok>
<syntok type="method_call" weight="1">char</syntok>
<syntok type="method_call" weight="1">array</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="qualified_name_ref" weight="1">possibl</syntok>
<syntok type="string_literal" weight="1">xxxxxxxxx</syntok>
<syntok type="method_call" weight="1">tochararray</syntok>
<syntok type="method_call" weight="1">char</syntok>
<syntok type="method_call" weight="1">array</syntok>
<syntok type="class_or_interface_ref" weight="1">list</syntok>
<syntok type="class_or_interface_ref" weight="1">chang</syntok>
<syntok type="local_variable_name" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="constructor_call" weight="1">arraylist</syntok>
<syntok type="constructor_call" weight="1">array</syntok>
<syntok type="constructor_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">record</syntok>
<syntok type="method_call" weight="1">applychang</syntok>
<syntok type="method_call" weight="1">appli</syntok>
<syntok type="method_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">array</syntok>
<syntok type="method_call" weight="1">aslist</syntok>
<syntok type="method_call" weight="1">list</syntok>
<syntok type="constructor_call" weight="1">chang</syntok>
<syntok type="primary_name_ref" weight="1">fill</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="method_call" weight="1">size</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">valu</syntok>
<syntok type="primary_name_ref" weight="1">empti</syntok>
<syntok type="primary_name_ref" weight="1">assertjunit</syntok>
<syntok type="primary_name_ref" weight="1">assert</syntok>
<syntok type="primary_name_ref" weight="1">unit</syntok>
<syntok type="method_call" weight="1">assertequ</syntok>
<syntok type="method_call" weight="1">assert</syntok>
<syntok type="method_call" weight="1">equal</syntok>
<syntok type="primary_name_ref" weight="1">chang</syntok>
<syntok type="qualified_name_ref" weight="1">index</syntok>
<syntok type="class_comment" weight="1">julien</syntok>
<syntok type="class_comment" weight="1">kirch</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_comment" weight="1">mit</syntok>
<syntok type="class_comment" weight="1">licens</syntok>
<syntok type="class_name" weight="1">recordtest</syntok>
<syntok type="class_name" weight="1">record</syntok>
<syntok type="class_name" weight="1">test</syntok>
<syntok type="class_or_interface_ref" weight="1">slotvalu</syntok>
<syntok type="class_or_interface_ref" weight="1">slot</syntok>
<syntok type="class_or_interface_ref" weight="1">valu</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
<syntok type="annotation_ref" weight="1">test</syntok>
</syndoc>
</syncorp>