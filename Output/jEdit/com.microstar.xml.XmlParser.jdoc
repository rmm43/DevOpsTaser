<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="com.microstar.xml.XmlParser" jls="java5">
<jent id="0" type="file" span="0:0:4377:2">Source/jEdit/com/microstar/xml/XmlParser.java</jent>
<jent id="1" pid="0" type="class" span="42:1:4377:1">com.microstar.xml.XmlParser</jent>
<jent id="2" pid="1" type="method" span="63:3:65:3">com.microstar.xml.XmlParser.XmlParser()</jent>
<jent id="3" pid="1" type="method" span="74:3:77:3">com.microstar.xml.XmlParser.setHandler(XmlHandler)</jent>
<jent id="4" pid="1" type="method" span="91:3:95:3">com.microstar.xml.XmlParser.parse(String,String,String)</jent>
<jent id="5" pid="1" type="method" span="115:3:120:3">com.microstar.xml.XmlParser.parse(String,String,InputStream,String)</jent>
<jent id="6" pid="1" type="method" span="139:3:143:3">com.microstar.xml.XmlParser.parse(String,String,Reader)</jent>
<jent id="7" pid="1" type="method" span="146:3:178:3">com.microstar.xml.XmlParser.doParse(String,String,Reader,InputStream,String)</jent>
<jent id="8" pid="1" type="method" span="436:3:454:3">com.microstar.xml.XmlParser.error(String,String,String)</jent>
<jent id="9" pid="1" type="method" span="462:3:466:3">com.microstar.xml.XmlParser.error(String,char,String)</jent>
<jent id="10" pid="1" type="method" span="485:3:501:5">com.microstar.xml.XmlParser.parseDocument()</jent>
<jent id="11" pid="1" type="method" span="511:3:515:3">com.microstar.xml.XmlParser.parseComment()</jent>
<jent id="12" pid="1" type="method" span="527:3:540:3">com.microstar.xml.XmlParser.parsePI()</jent>
<jent id="13" pid="1" type="method" span="555:3:559:3">com.microstar.xml.XmlParser.parseCDSect()</jent>
<jent id="14" pid="1" type="method" span="576:3:585:3">com.microstar.xml.XmlParser.parseProlog()</jent>
<jent id="15" pid="1" type="method" span="603:3:635:3">com.microstar.xml.XmlParser.parseXMLDecl(boolean)</jent>
<jent id="16" pid="1" type="method" span="651:3:676:3">com.microstar.xml.XmlParser.parseTextDecl(boolean)</jent>
<jent id="17" pid="1" type="method" span="690:3:731:3">com.microstar.xml.XmlParser.checkEncoding(String,boolean)</jent>
<jent id="18" pid="1" type="method" span="741:3:754:5">com.microstar.xml.XmlParser.parseMisc()</jent>
<jent id="19" pid="1" type="method" span="765:3:830:3">com.microstar.xml.XmlParser.parseDoctypedecl()</jent>
<jent id="20" pid="1" type="method" span="843:3:863:3">com.microstar.xml.XmlParser.parseMarkupdecl()</jent>
<jent id="21" pid="1" type="method" span="878:3:957:3">com.microstar.xml.XmlParser.parseElement()</jent>
<jent id="22" pid="1" type="method" span="968:3:1005:3">com.microstar.xml.XmlParser.parseAttribute(String)</jent>
<jent id="23" pid="1" type="method" span="1012:3:1018:3">com.microstar.xml.XmlParser.parseEq()</jent>
<jent id="24" pid="1" type="method" span="1026:3:1039:3">com.microstar.xml.XmlParser.parseETag()</jent>
<jent id="25" pid="1" type="method" span="1047:3:1119:3">com.microstar.xml.XmlParser.parseContent()</jent>
<jent id="26" pid="1" type="method" span="1128:3:1143:3">com.microstar.xml.XmlParser.parseElementdecl()</jent>
<jent id="27" pid="1" type="method" span="1150:3:1172:3">com.microstar.xml.XmlParser.parseContentspec(String)</jent>
<jent id="28" pid="1" type="method" span="1187:3:1253:3">com.microstar.xml.XmlParser.parseElements()</jent>
<jent id="29" pid="1" type="method" span="1262:3:1284:3">com.microstar.xml.XmlParser.parseCp()</jent>
<jent id="30" pid="1" type="method" span="1294:3:1317:3">com.microstar.xml.XmlParser.parseMixed()</jent>
<jent id="31" pid="1" type="method" span="1325:3:1337:3">com.microstar.xml.XmlParser.parseAttlistDecl()</jent>
<jent id="32" pid="1" type="method" span="1344:3:1367:3">com.microstar.xml.XmlParser.parseAttDef(String)</jent>
<jent id="33" pid="1" type="method" span="1379:3:1401:3">com.microstar.xml.XmlParser.readAttType()</jent>
<jent id="34" pid="1" type="method" span="1410:3:1430:3">com.microstar.xml.XmlParser.parseEnumeration()</jent>
<jent id="35" pid="1" type="method" span="1440:3:1447:3">com.microstar.xml.XmlParser.parseNotationType()</jent>
<jent id="36" pid="1" type="method" span="1454:3:1481:3">com.microstar.xml.XmlParser.parseDefault(String,String,int,String)</jent>
<jent id="37" pid="1" type="method" span="1496:3:1530:3">com.microstar.xml.XmlParser.parseConditionalSect()</jent>
<jent id="38" pid="1" type="method" span="1538:3:1620:3">com.microstar.xml.XmlParser.parseCharRef()</jent>
<jent id="39" pid="1" type="method" span="1629:3:1660:3">com.microstar.xml.XmlParser.parseEntityRef(boolean)</jent>
<jent id="40" pid="1" type="method" span="1668:3:1698:3">com.microstar.xml.XmlParser.parsePEReference(boolean)</jent>
<jent id="41" pid="1" type="method" span="1712:3:1764:3">com.microstar.xml.XmlParser.parseEntityDecl()</jent>
<jent id="42" pid="1" type="method" span="1772:3:1794:3">com.microstar.xml.XmlParser.parseNotationDecl()</jent>
<jent id="43" pid="1" type="method" span="1805:3:1858:3">com.microstar.xml.XmlParser.parsePCData()</jent>
<jent id="44" pid="1" type="method" span="1870:3:1879:3">com.microstar.xml.XmlParser.requireWhitespace()</jent>
<jent id="45" pid="1" type="method" span="1885:3:1894:3">com.microstar.xml.XmlParser.parseWhitespace()</jent>
<jent id="46" pid="1" type="method" span="1901:3:1946:3">com.microstar.xml.XmlParser.skipWhitespace()</jent>
<jent id="47" pid="1" type="method" span="1955:3:2036:3">com.microstar.xml.XmlParser.readNmtoken(boolean)</jent>
<jent id="48" pid="1" type="method" span="2048:3:2109:3">com.microstar.xml.XmlParser.readLiteral(int)</jent>
<jent id="49" pid="1" type="method" span="2118:3:2142:3">com.microstar.xml.XmlParser.readExternalIds(boolean)</jent>
<jent id="50" pid="1" type="method" span="2153:3:2164:3">com.microstar.xml.XmlParser.isWhitespace(char)</jent>
<jent id="51" pid="1" type="method" span="2176:3:2182:3">com.microstar.xml.XmlParser.dataBufferAppend(char)</jent>
<jent id="52" pid="1" type="method" span="2188:3:2191:3">com.microstar.xml.XmlParser.dataBufferAppend(String)</jent>
<jent id="53" pid="1" type="method" span="2197:3:2206:3">com.microstar.xml.XmlParser.dataBufferAppend(char,int,int)</jent>
<jent id="54" pid="1" type="method" span="2212:3:2247:3">com.microstar.xml.XmlParser.dataBufferNormalize()</jent>
<jent id="55" pid="1" type="method" span="2255:3:2260:3">com.microstar.xml.XmlParser.dataBufferToString()</jent>
<jent id="56" pid="1" type="method" span="2267:3:2290:3">com.microstar.xml.XmlParser.dataBufferFlush()</jent>
<jent id="57" pid="1" type="method" span="2296:3:2303:3">com.microstar.xml.XmlParser.require(String)</jent>
<jent id="58" pid="1" type="method" span="2309:3:2317:3">com.microstar.xml.XmlParser.require(char)</jent>
<jent id="59" pid="1" type="method" span="2336:3:2340:3">com.microstar.xml.XmlParser.intern(String)</jent>
<jent id="60" pid="1" type="method" span="2355:3:2414:3">com.microstar.xml.XmlParser.intern(char,int,int)</jent>
<jent id="61" pid="1" type="method" span="2421:3:2442:3">com.microstar.xml.XmlParser.extendArray(Object,int,int)</jent>
<jent id="62" pid="1" type="method" span="2464:3:2467:3">com.microstar.xml.XmlParser.declaredElements()</jent>
<jent id="63" pid="1" type="method" span="2481:3:2489:3">com.microstar.xml.XmlParser.getElementContentType(String)</jent>
<jent id="64" pid="1" type="method" span="2500:3:2508:3">com.microstar.xml.XmlParser.getElementContentModel(String)</jent>
<jent id="65" pid="1" type="method" span="2517:3:2555:3">com.microstar.xml.XmlParser.setElement(String,int,String,Hashtable)</jent>
<jent id="66" pid="1" type="method" span="2562:3:2570:3">com.microstar.xml.XmlParser.getElementAttributes(String)</jent>
<jent id="67" pid="1" type="method" span="2590:3:2599:3">com.microstar.xml.XmlParser.declaredAttributes(String)</jent>
<jent id="68" pid="1" type="method" span="2619:3:2627:3">com.microstar.xml.XmlParser.getAttributeType(String,String)</jent>
<jent id="69" pid="1" type="method" span="2638:3:2646:3">com.microstar.xml.XmlParser.getAttributeEnumeration(String,String)</jent>
<jent id="70" pid="1" type="method" span="2657:3:2665:3">com.microstar.xml.XmlParser.getAttributeDefaultValue(String,String)</jent>
<jent id="71" pid="1" type="method" span="2677:3:2691:3">com.microstar.xml.XmlParser.getAttributeExpandedValue(String,String)</jent>
<jent id="72" pid="1" type="method" span="2701:3:2709:3">com.microstar.xml.XmlParser.getAttributeDefaultValueType(String,String)</jent>
<jent id="73" pid="1" type="method" span="2720:3:2750:3">com.microstar.xml.XmlParser.setAttribute(String,String,int,String,String,int)</jent>
<jent id="74" pid="1" type="method" span="2757:3:2769:3">com.microstar.xml.XmlParser.getAttribute(String,String)</jent>
<jent id="75" pid="1" type="method" span="2787:3:2790:3">com.microstar.xml.XmlParser.declaredEntities()</jent>
<jent id="76" pid="1" type="method" span="2801:3:2809:3">com.microstar.xml.XmlParser.getEntityType(String)</jent>
<jent id="77" pid="1" type="method" span="2821:3:2829:3">com.microstar.xml.XmlParser.getEntityPublicId(String)</jent>
<jent id="78" pid="1" type="method" span="2840:3:2848:3">com.microstar.xml.XmlParser.getEntitySystemId(String)</jent>
<jent id="79" pid="1" type="method" span="2858:3:2866:3">com.microstar.xml.XmlParser.getEntityValue(String)</jent>
<jent id="80" pid="1" type="method" span="2877:3:2885:3">com.microstar.xml.XmlParser.getEntityNotationName(String)</jent>
<jent id="81" pid="1" type="method" span="2891:3:2894:3">com.microstar.xml.XmlParser.setInternalEntity(String,String)</jent>
<jent id="82" pid="1" type="method" span="2900:3:2904:3">com.microstar.xml.XmlParser.setExternalDataEntity(String,String,String,String)</jent>
<jent id="83" pid="1" type="method" span="2910:3:2913:3">com.microstar.xml.XmlParser.setExternalTextEntity(String,String,String)</jent>
<jent id="84" pid="1" type="method" span="2919:3:2935:3">com.microstar.xml.XmlParser.setEntity(String,int,String,String,String,String)</jent>
<jent id="85" pid="1" type="method" span="2950:3:2953:3">com.microstar.xml.XmlParser.declaredNotations()</jent>
<jent id="86" pid="1" type="method" span="2966:3:2974:3">com.microstar.xml.XmlParser.getNotationPublicId(String)</jent>
<jent id="87" pid="1" type="method" span="2986:3:2994:3">com.microstar.xml.XmlParser.getNotationSystemId(String)</jent>
<jent id="88" pid="1" type="method" span="3003:3:3016:3">com.microstar.xml.XmlParser.setNotation(String,String,String)</jent>
<jent id="89" pid="1" type="method" span="3027:3:3030:3">com.microstar.xml.XmlParser.getLineNumber()</jent>
<jent id="90" pid="1" type="method" span="3036:3:3039:3">com.microstar.xml.XmlParser.getColumnNumber()</jent>
<jent id="91" pid="1" type="method" span="3066:3:3132:5">com.microstar.xml.XmlParser.readCh()</jent>
<jent id="92" pid="1" type="method" span="3150:3:3167:5">com.microstar.xml.XmlParser.unread(char)</jent>
<jent id="93" pid="1" type="method" span="3180:3:3195:5">com.microstar.xml.XmlParser.unread(char,int)</jent>
<jent id="94" pid="1" type="method" span="3215:3:3317:3">com.microstar.xml.XmlParser.pushURL(String,String,String,Reader,InputStream,String)</jent>
<jent id="95" pid="1" type="method" span="3323:3:3339:3">com.microstar.xml.XmlParser.tryEncodingDecl(boolean)</jent>
<jent id="96" pid="1" type="method" span="3361:3:3426:3">com.microstar.xml.XmlParser.detectEncoding()</jent>
<jent id="97" pid="1" type="method" span="3440:3:3443:3">com.microstar.xml.XmlParser.tryEncoding(byte,byte,byte,byte,byte)</jent>
<jent id="98" pid="1" type="method" span="3455:3:3458:3">com.microstar.xml.XmlParser.tryEncoding(byte,byte,byte)</jent>
<jent id="99" pid="1" type="method" span="3469:3:3474:3">com.microstar.xml.XmlParser.pushString(String,String)</jent>
<jent id="100" pid="1" type="method" span="3493:3:3503:3">com.microstar.xml.XmlParser.pushCharArray(String,char,int,int)</jent>
<jent id="101" pid="1" type="method" span="3532:3:3571:3">com.microstar.xml.XmlParser.pushInput(String)</jent>
<jent id="102" pid="1" type="method" span="3589:3:3643:3">com.microstar.xml.XmlParser.popInput()</jent>
<jent id="103" pid="1" type="method" span="3657:3:3673:3">com.microstar.xml.XmlParser.tryRead(char)</jent>
<jent id="104" pid="1" type="method" span="3691:3:3712:5">com.microstar.xml.XmlParser.tryRead(String)</jent>
<jent id="105" pid="1" type="method" span="3723:3:3735:3">com.microstar.xml.XmlParser.tryWhitespace()</jent>
<jent id="106" pid="1" type="method" span="3747:3:3762:3">com.microstar.xml.XmlParser.parseUntil(String)</jent>
<jent id="107" pid="1" type="method" span="3774:3:3780:3">com.microstar.xml.XmlParser.skipUntil(String)</jent>
<jent id="108" pid="1" type="method" span="3794:3:3815:3">com.microstar.xml.XmlParser.read8bitEncodingDeclaration()</jent>
<jent id="109" pid="1" type="method" span="3837:3:3925:5">com.microstar.xml.XmlParser.readDataChunk()</jent>
<jent id="110" pid="1" type="method" span="3935:3:3964:5">com.microstar.xml.XmlParser.filterCR()</jent>
<jent id="111" pid="1" type="method" span="3980:3:4036:3">com.microstar.xml.XmlParser.copyUtf8ReadBuffer(int)</jent>
<jent id="112" pid="1" type="method" span="4049:3:4074:3">com.microstar.xml.XmlParser.getNextUtf8Byte(int,int)</jent>
<jent id="113" pid="1" type="method" span="4088:3:4098:3">com.microstar.xml.XmlParser.copyIso8859_1ReadBuffer(int)</jent>
<jent id="114" pid="1" type="method" span="4113:3:4130:3">com.microstar.xml.XmlParser.copyUcs2ReadBuffer(int,int,int)</jent>
<jent id="115" pid="1" type="method" span="4149:3:4179:3">com.microstar.xml.XmlParser.copyUcs4ReadBuffer(int,int,int,int,int)</jent>
<jent id="116" pid="1" type="method" span="4185:3:4200:3">com.microstar.xml.XmlParser.encodingError(String,int,int)</jent>
<jent id="117" pid="1" type="method" span="4211:3:4247:3">com.microstar.xml.XmlParser.initializeVariables()</jent>
<jent id="118" pid="1" type="method" span="4254:3:4267:3">com.microstar.xml.XmlParser.cleanupVariables()</jent>
<jtok eid="0" type="line_comment" span="1:1:1:42">// XmlParser.java: the main parser class.</jtok>
<jtok eid="0" type="line_comment" span="2:1:2:49">// NO WARRANTY! See README, and copyright below.</jtok>
<jtok eid="0" type="line_comment" span="3:1:3:58">// $Id: XmlParser.java 14583 2009-02-06 05:38:53Z ezust $</jtok>
<jtok eid="0" type="block_comment" span="18:1:41:5">/**
  * Parse XML documents and return parse events through call-backs.
  * &lt;p&gt;You need to define a class implementing the &lt;code&gt;XmlHandler&lt;/code&gt;
  * interface: an object belonging to this class will receive the
  * callbacks for the events.  (As an alternative to implementing
  * the full XmlHandler interface, you can simply extend the 
  * &lt;code&gt;HandlerBase&lt;/code&gt; convenience class.)
  * &lt;p&gt;Usage (assuming that &lt;code&gt;MyHandler&lt;/code&gt; is your implementation
  * of the &lt;code&gt;XmlHandler&lt;/code&gt; interface):
  * &lt;pre&gt;
  * XmlHandler handler = new MyHandler();
  * XmlParser parser = new XmlParser();
  * parser.setHandler(handler);
  * try {
  *   parser.parse("http://www.host.com/doc.xml", null);
  * } catch (Exception e) {
  *   [do something interesting]
  * }
  * &lt;/pre&gt;
  * @author Copyright (c) 1997, 1998 by Microstar Software Ltd.
  * @author Written by David Megginson &amp;lt;dmeggins@microstar.com&amp;gt;
  * @version 1.1
  * @deprecated use org.xml.sax.XMLReader
  */</jtok>
<jtok eid="1" type="class_name" span="42:14:42:23">XmlParser</jtok>
<jtok eid="1" type="line_comment" span="44:3:44:5">//</jtok>
<jtok eid="1" type="line_comment" span="45:3:45:70">// Use special cheats that speed up the code (currently about 50%),</jtok>
<jtok eid="1" type="line_comment" span="46:3:46:67">// but may cause problems with future maintenance and add to the</jtok>
<jtok eid="1" type="line_comment" span="47:3:47:40">// class file size (about 500 bytes).</jtok>
<jtok eid="1" type="line_comment" span="48:3:48:5">//</jtok>
<jtok eid="1" type="field_name" span="49:32:49:42">USE_CHEATS</jtok>
<jtok eid="1" type="line_comment" span="53:3:53:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="54:3:54:19">// Constructors.</jtok>
<jtok eid="1" type="line_comment" span="55:3:55:75">////////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="58:3:62:7">/**
    * Construct a new parser with no associated handler.
    * @see #setHandler
    * @see #parse
    */</jtok>
<jtok eid="2" type="method_name" span="63:10:63:19">XmlParser</jtok>
<jtok eid="1" type="block_comment" span="68:3:73:7">/**
    * Set the handler that will receive parsing events.
    * @param handler The handler to receive callback events.
    * @see #parse
    * @see XmlHandler
    */</jtok>
<jtok eid="3" type="method_name" span="74:15:74:25">setHandler</jtok>
<jtok eid="3" type="parameter_type" span="74:27:74:37">XmlHandler</jtok>
<jtok eid="3" type="parameter_name" span="74:38:74:45">handler</jtok>
<jtok eid="3" type="qualified_name_ref" span="76:10:76:17">handler</jtok>
<jtok eid="3" type="primary_name_ref" span="76:20:76:27">handler</jtok>
<jtok eid="1" type="block_comment" span="80:3:90:7">/**
    * Parse an XML document from a URI.
    * &lt;p&gt;You may parse a document more than once, but only one thread
    * may call this method for an object at one time.
    * @param systemId The URI of the document.
    * @param publicId The public identifier of the document, or null.
    * @param encoding The suggested encoding, or null if unknown.
    * @exception java.lang.Exception Any exception thrown by your
    *            own handlers, or any derivation of java.io.IOException
    *            thrown by the parser itself.
    */</jtok>
<jtok eid="4" type="method_name" span="91:15:91:20">parse</jtok>
<jtok eid="4" type="parameter_type" span="91:22:91:28">String</jtok>
<jtok eid="4" type="parameter_name" span="91:29:91:37">systemId</jtok>
<jtok eid="4" type="parameter_type" span="91:39:91:45">String</jtok>
<jtok eid="4" type="parameter_name" span="91:46:91:54">publicId</jtok>
<jtok eid="4" type="parameter_type" span="91:56:91:62">String</jtok>
<jtok eid="4" type="parameter_name" span="91:63:91:71">encoding</jtok>
<jtok eid="4" type="throws" span="92:12:92:16">java</jtok>
<jtok eid="4" type="throws" span="92:17:92:21">lang</jtok>
<jtok eid="4" type="throws" span="92:22:92:31">Exception</jtok>
<jtok eid="4" type="method_call" span="94:5:94:12">doParse</jtok>
<jtok eid="4" type="primary_name_ref" span="94:13:94:21">systemId</jtok>
<jtok eid="4" type="primary_name_ref" span="94:23:94:31">publicId</jtok>
<jtok eid="4" type="primary_name_ref" span="94:45:94:53">encoding</jtok>
<jtok eid="1" type="block_comment" span="98:3:114:7">/**
    * Parse an XML document from a byte stream.
    * &lt;p&gt;The URI that you supply will become the base URI for
    * resolving relative links, but &amp;AElig;lfred will actually read
    * the document from the supplied input stream.
    * &lt;p&gt;You may parse a document more than once, but only one thread
    * may call this method for an object at one time.
    * @param systemId The base URI of the document, or null if not
    *                 known.
    * @param publicId The public identifier of the document, or null
    *                 if not known.
    * @param stream A byte input stream.
    * @param encoding The suggested encoding, or null if unknown.
    * @exception java.lang.Exception Any exception thrown by your
    *            own handlers, or any derivation of java.io.IOException
    *            thrown by the parser itself.
    */</jtok>
<jtok eid="5" type="method_name" span="115:15:115:20">parse</jtok>
<jtok eid="5" type="parameter_type" span="115:22:115:28">String</jtok>
<jtok eid="5" type="parameter_name" span="115:29:115:37">systemId</jtok>
<jtok eid="5" type="parameter_type" span="115:39:115:45">String</jtok>
<jtok eid="5" type="parameter_name" span="115:46:115:54">publicId</jtok>
<jtok eid="5" type="parameter_type" span="116:8:116:19">InputStream</jtok>
<jtok eid="5" type="parameter_name" span="116:20:116:26">stream</jtok>
<jtok eid="5" type="parameter_type" span="116:28:116:34">String</jtok>
<jtok eid="5" type="parameter_name" span="116:35:116:43">encoding</jtok>
<jtok eid="5" type="throws" span="117:12:117:16">java</jtok>
<jtok eid="5" type="throws" span="117:17:117:21">lang</jtok>
<jtok eid="5" type="throws" span="117:22:117:31">Exception</jtok>
<jtok eid="5" type="method_call" span="119:5:119:12">doParse</jtok>
<jtok eid="5" type="primary_name_ref" span="119:13:119:21">systemId</jtok>
<jtok eid="5" type="primary_name_ref" span="119:23:119:31">publicId</jtok>
<jtok eid="5" type="primary_name_ref" span="119:39:119:45">stream</jtok>
<jtok eid="5" type="primary_name_ref" span="119:47:119:55">encoding</jtok>
<jtok eid="1" type="block_comment" span="123:3:138:7">/**
    * Parse an XML document from a character stream.
    * &lt;p&gt;The URI that you supply will become the base URI for
    * resolving relative links, but &amp;AElig;lfred will actually read
    * the document from the supplied input stream.
    * &lt;p&gt;You may parse a document more than once, but only one thread
    * may call this method for an object at one time.
    * @param systemId The base URI of the document, or null if not
    *                 known.
    * @param publicId The public identifier of the document, or null
    *                 if not known.
    * @param reader A character stream.
    * @exception java.lang.Exception Any exception thrown by your
    *            own handlers, or any derivation of java.io.IOException
    *            thrown by the parser itself.
    */</jtok>
<jtok eid="6" type="method_name" span="139:15:139:20">parse</jtok>
<jtok eid="6" type="parameter_type" span="139:22:139:28">String</jtok>
<jtok eid="6" type="parameter_name" span="139:29:139:37">systemId</jtok>
<jtok eid="6" type="parameter_type" span="139:39:139:45">String</jtok>
<jtok eid="6" type="parameter_name" span="139:46:139:54">publicId</jtok>
<jtok eid="6" type="parameter_type" span="139:56:139:62">Reader</jtok>
<jtok eid="6" type="parameter_name" span="139:63:139:69">reader</jtok>
<jtok eid="6" type="throws" span="140:12:140:16">java</jtok>
<jtok eid="6" type="throws" span="140:17:140:21">lang</jtok>
<jtok eid="6" type="throws" span="140:22:140:31">Exception</jtok>
<jtok eid="6" type="method_call" span="142:5:142:12">doParse</jtok>
<jtok eid="6" type="primary_name_ref" span="142:13:142:21">systemId</jtok>
<jtok eid="6" type="primary_name_ref" span="142:23:142:31">publicId</jtok>
<jtok eid="6" type="primary_name_ref" span="142:33:142:39">reader</jtok>
<jtok eid="7" type="method_name" span="146:29:146:36">doParse</jtok>
<jtok eid="7" type="parameter_type" span="146:38:146:44">String</jtok>
<jtok eid="7" type="parameter_name" span="146:45:146:53">systemId</jtok>
<jtok eid="7" type="parameter_type" span="146:55:146:61">String</jtok>
<jtok eid="7" type="parameter_name" span="146:62:146:70">publicId</jtok>
<jtok eid="7" type="parameter_type" span="147:10:147:16">Reader</jtok>
<jtok eid="7" type="parameter_name" span="147:17:147:23">reader</jtok>
<jtok eid="7" type="parameter_type" span="147:25:147:36">InputStream</jtok>
<jtok eid="7" type="parameter_name" span="147:37:147:43">stream</jtok>
<jtok eid="7" type="parameter_type" span="148:10:148:16">String</jtok>
<jtok eid="7" type="parameter_name" span="148:17:148:25">encoding</jtok>
<jtok eid="7" type="throws" span="149:12:149:16">java</jtok>
<jtok eid="7" type="throws" span="149:17:149:21">lang</jtok>
<jtok eid="7" type="throws" span="149:22:149:31">Exception</jtok>
<jtok eid="7" type="primary_name_ref" span="151:5:151:17">basePublicId</jtok>
<jtok eid="7" type="primary_name_ref" span="151:20:151:28">publicId</jtok>
<jtok eid="7" type="primary_name_ref" span="152:5:152:12">baseURI</jtok>
<jtok eid="7" type="primary_name_ref" span="152:15:152:23">systemId</jtok>
<jtok eid="7" type="primary_name_ref" span="153:5:153:15">baseReader</jtok>
<jtok eid="7" type="primary_name_ref" span="153:18:153:24">reader</jtok>
<jtok eid="7" type="primary_name_ref" span="154:5:154:20">baseInputStream</jtok>
<jtok eid="7" type="primary_name_ref" span="154:23:154:29">stream</jtok>
<jtok eid="7" type="method_call" span="156:5:156:24">initializeVariables</jtok>
<jtok eid="7" type="line_comment" span="158:5:158:38">// Set the default entities here.</jtok>
<jtok eid="7" type="method_call" span="159:5:159:22">setInternalEntity</jtok>
<jtok eid="7" type="method_call" span="159:23:159:29">intern</jtok>
<jtok eid="7" type="string_literal" span="159:30:159:35">"amp"</jtok>
<jtok eid="7" type="string_literal" span="159:38:159:45">"&amp;#38;"</jtok>
<jtok eid="7" type="method_call" span="160:5:160:22">setInternalEntity</jtok>
<jtok eid="7" type="method_call" span="160:23:160:29">intern</jtok>
<jtok eid="7" type="string_literal" span="160:30:160:34">"lt"</jtok>
<jtok eid="7" type="string_literal" span="160:37:160:44">"&amp;#60;"</jtok>
<jtok eid="7" type="method_call" span="161:5:161:22">setInternalEntity</jtok>
<jtok eid="7" type="method_call" span="161:23:161:29">intern</jtok>
<jtok eid="7" type="string_literal" span="161:30:161:34">"gt"</jtok>
<jtok eid="7" type="string_literal" span="161:37:161:44">"&amp;#62;"</jtok>
<jtok eid="7" type="method_call" span="162:5:162:22">setInternalEntity</jtok>
<jtok eid="7" type="method_call" span="162:23:162:29">intern</jtok>
<jtok eid="7" type="string_literal" span="162:30:162:36">"apos"</jtok>
<jtok eid="7" type="string_literal" span="162:39:162:46">"&amp;#39;"</jtok>
<jtok eid="7" type="method_call" span="163:5:163:22">setInternalEntity</jtok>
<jtok eid="7" type="method_call" span="163:23:163:29">intern</jtok>
<jtok eid="7" type="string_literal" span="163:30:163:36">"quot"</jtok>
<jtok eid="7" type="string_literal" span="163:39:163:46">"&amp;#34;"</jtok>
<jtok eid="7" type="primary_name_ref" span="165:9:165:16">handler</jtok>
<jtok eid="7" type="primary_name_ref" span="166:7:166:14">handler</jtok>
<jtok eid="7" type="method_call" span="166:15:166:28">startDocument</jtok>
<jtok eid="7" type="method_call" span="169:5:169:12">pushURL</jtok>
<jtok eid="7" type="string_literal" span="169:13:169:25">"[document]"</jtok>
<jtok eid="7" type="primary_name_ref" span="169:27:169:39">basePublicId</jtok>
<jtok eid="7" type="primary_name_ref" span="169:41:169:48">baseURI</jtok>
<jtok eid="7" type="primary_name_ref" span="169:50:169:60">baseReader</jtok>
<jtok eid="7" type="primary_name_ref" span="169:62:169:77">baseInputStream</jtok>
<jtok eid="7" type="primary_name_ref" span="170:6:170:14">encoding</jtok>
<jtok eid="7" type="method_call" span="172:5:172:18">parseDocument</jtok>
<jtok eid="7" type="primary_name_ref" span="174:9:174:16">handler</jtok>
<jtok eid="7" type="primary_name_ref" span="175:7:175:14">handler</jtok>
<jtok eid="7" type="method_call" span="175:15:175:26">endDocument</jtok>
<jtok eid="7" type="method_call" span="177:5:177:21">cleanupVariables</jtok>
<jtok eid="1" type="line_comment" span="182:3:182:75">////////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="183:3:183:16">// Constants.</jtok>
<jtok eid="1" type="line_comment" span="184:3:184:75">////////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="186:3:186:5">//</jtok>
<jtok eid="1" type="line_comment" span="187:3:187:41">// Constants for element content type.</jtok>
<jtok eid="1" type="line_comment" span="188:3:188:5">//</jtok>
<jtok eid="1" type="block_comment" span="190:3:193:7">/**
    * Constant: an element has not been declared.
    * @see #getElementContentType
    */</jtok>
<jtok eid="1" type="field_name" span="194:27:194:45">CONTENT_UNDECLARED</jtok>
<jtok eid="1" type="block_comment" span="196:3:199:7">/**
    * Constant: the element has a content model of ANY.
    * @see #getElementContentType
    */</jtok>
<jtok eid="1" type="field_name" span="200:27:200:38">CONTENT_ANY</jtok>
<jtok eid="1" type="block_comment" span="202:3:205:7">/**
    * Constant: the element has declared content of EMPTY.
    * @see #getElementContentType
    */</jtok>
<jtok eid="1" type="field_name" span="206:27:206:40">CONTENT_EMPTY</jtok>
<jtok eid="1" type="block_comment" span="208:3:211:7">/**
    * Constant: the element has mixed content.
    * @see #getElementContentType
    */</jtok>
<jtok eid="1" type="field_name" span="212:27:212:40">CONTENT_MIXED</jtok>
<jtok eid="1" type="block_comment" span="214:3:217:7">/**
    * Constant: the element has element content.
    * @see #getElementContentType
    */</jtok>
<jtok eid="1" type="field_name" span="218:27:218:43">CONTENT_ELEMENTS</jtok>
<jtok eid="1" type="line_comment" span="221:3:221:5">//</jtok>
<jtok eid="1" type="line_comment" span="222:3:222:36">// Constants for the entity type.</jtok>
<jtok eid="1" type="line_comment" span="223:3:223:5">//</jtok>
<jtok eid="1" type="block_comment" span="225:3:228:7">/**
    * Constant: the entity has not been declared.
    * @see #getEntityType
    */</jtok>
<jtok eid="1" type="field_name" span="229:27:229:44">ENTITY_UNDECLARED</jtok>
<jtok eid="1" type="block_comment" span="231:3:234:7">/**
    * Constant: the entity is internal.
    * @see #getEntityType
    */</jtok>
<jtok eid="1" type="field_name" span="235:27:235:42">ENTITY_INTERNAL</jtok>
<jtok eid="1" type="block_comment" span="237:3:240:7">/**
    * Constant: the entity is external, non-XML data.
    * @see #getEntityType
    */</jtok>
<jtok eid="1" type="field_name" span="241:27:241:39">ENTITY_NDATA</jtok>
<jtok eid="1" type="block_comment" span="243:3:246:7">/**
    * Constant: the entity is external XML data.
    * @see #getEntityType
    */</jtok>
<jtok eid="1" type="field_name" span="247:27:247:38">ENTITY_TEXT</jtok>
<jtok eid="1" type="line_comment" span="250:3:250:5">//</jtok>
<jtok eid="1" type="line_comment" span="251:3:251:35">// Constants for attribute type.</jtok>
<jtok eid="1" type="line_comment" span="252:3:252:5">//</jtok>
<jtok eid="1" type="block_comment" span="254:3:257:7">/**
    * Constant: the attribute has not been declared for this element type.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="258:27:258:47">ATTRIBUTE_UNDECLARED</jtok>
<jtok eid="1" type="block_comment" span="260:3:263:7">/**
    * Constant: the attribute value is a string value.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="264:27:264:42">ATTRIBUTE_CDATA</jtok>
<jtok eid="1" type="block_comment" span="266:3:269:7">/**
    * Constant: the attribute value is a unique identifier.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="270:27:270:39">ATTRIBUTE_ID</jtok>
<jtok eid="1" type="block_comment" span="272:3:275:7">/**
    * Constant: the attribute value is a reference to a unique identifier.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="276:27:276:42">ATTRIBUTE_IDREF</jtok>
<jtok eid="1" type="block_comment" span="278:3:281:7">/**
    * Constant: the attribute value is a list of ID references.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="282:27:282:43">ATTRIBUTE_IDREFS</jtok>
<jtok eid="1" type="block_comment" span="284:3:287:7">/**
    * Constant: the attribute value is the name of an entity.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="288:27:288:43">ATTRIBUTE_ENTITY</jtok>
<jtok eid="1" type="block_comment" span="290:3:293:7">/**
    * Constant: the attribute value is a list of entity names.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="294:27:294:45">ATTRIBUTE_ENTITIES</jtok>
<jtok eid="1" type="block_comment" span="296:3:299:7">/**
    * Constant: the attribute value is a name token.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="300:27:300:44">ATTRIBUTE_NMTOKEN</jtok>
<jtok eid="1" type="block_comment" span="302:3:305:7">/**
    * Constant: the attribute value is a list of name tokens.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="306:27:306:45">ATTRIBUTE_NMTOKENS</jtok>
<jtok eid="1" type="block_comment" span="308:3:311:7">/**
    * Constant: the attribute value is a token from an enumeration.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="312:27:312:47">ATTRIBUTE_ENUMERATED</jtok>
<jtok eid="1" type="block_comment" span="314:3:317:7">/**
    * Constant: the attribute is the name of a notation.
    * @see #getAttributeType
    */</jtok>
<jtok eid="1" type="field_name" span="318:27:318:45">ATTRIBUTE_NOTATION</jtok>
<jtok eid="1" type="line_comment" span="321:3:321:5">//</jtok>
<jtok eid="1" type="line_comment" span="322:3:322:58">// When the class is loaded, populate the hash table of</jtok>
<jtok eid="1" type="line_comment" span="323:3:323:22">// attribute types.</jtok>
<jtok eid="1" type="line_comment" span="324:3:324:5">//</jtok>
<jtok eid="1" type="block_comment" span="326:3:328:7">/**
    * Hash table of attribute types.
    */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="329:18:329:27">Hashtable</jtok>
<jtok eid="1" type="field_name" span="329:28:329:45">attributeTypeHash</jtok>
<jtok eid="1" type="primary_name_ref" span="331:5:331:22">attributeTypeHash</jtok>
<jtok eid="1" type="constructor_call" span="331:29:331:38">Hashtable</jtok>
<jtok eid="1" type="primary_name_ref" span="332:5:332:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="332:23:332:26">put</jtok>
<jtok eid="1" type="string_literal" span="332:27:332:34">"CDATA"</jtok>
<jtok eid="1" type="constructor_call" span="332:40:332:47">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="332:48:332:63">ATTRIBUTE_CDATA</jtok>
<jtok eid="1" type="primary_name_ref" span="333:5:333:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="333:23:333:26">put</jtok>
<jtok eid="1" type="string_literal" span="333:27:333:31">"ID"</jtok>
<jtok eid="1" type="constructor_call" span="333:37:333:44">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="333:45:333:57">ATTRIBUTE_ID</jtok>
<jtok eid="1" type="primary_name_ref" span="334:5:334:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="334:23:334:26">put</jtok>
<jtok eid="1" type="string_literal" span="334:27:334:34">"IDREF"</jtok>
<jtok eid="1" type="constructor_call" span="334:40:334:47">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="334:48:334:63">ATTRIBUTE_IDREF</jtok>
<jtok eid="1" type="primary_name_ref" span="335:5:335:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="335:23:335:26">put</jtok>
<jtok eid="1" type="string_literal" span="335:27:335:35">"IDREFS"</jtok>
<jtok eid="1" type="constructor_call" span="335:41:335:48">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="335:49:335:65">ATTRIBUTE_IDREFS</jtok>
<jtok eid="1" type="primary_name_ref" span="336:5:336:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="336:23:336:26">put</jtok>
<jtok eid="1" type="string_literal" span="336:27:336:35">"ENTITY"</jtok>
<jtok eid="1" type="constructor_call" span="336:41:336:48">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="336:49:336:65">ATTRIBUTE_ENTITY</jtok>
<jtok eid="1" type="primary_name_ref" span="337:5:337:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="337:23:337:26">put</jtok>
<jtok eid="1" type="string_literal" span="337:27:337:37">"ENTITIES"</jtok>
<jtok eid="1" type="constructor_call" span="337:43:337:50">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="337:51:337:69">ATTRIBUTE_ENTITIES</jtok>
<jtok eid="1" type="primary_name_ref" span="338:5:338:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="338:23:338:26">put</jtok>
<jtok eid="1" type="string_literal" span="338:27:338:36">"NMTOKEN"</jtok>
<jtok eid="1" type="constructor_call" span="338:42:338:49">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="338:50:338:67">ATTRIBUTE_NMTOKEN</jtok>
<jtok eid="1" type="primary_name_ref" span="339:5:339:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="339:23:339:26">put</jtok>
<jtok eid="1" type="string_literal" span="339:27:339:37">"NMTOKENS"</jtok>
<jtok eid="1" type="constructor_call" span="339:43:339:50">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="339:51:339:69">ATTRIBUTE_NMTOKENS</jtok>
<jtok eid="1" type="primary_name_ref" span="340:5:340:22">attributeTypeHash</jtok>
<jtok eid="1" type="method_call" span="340:23:340:26">put</jtok>
<jtok eid="1" type="string_literal" span="340:27:340:37">"NOTATION"</jtok>
<jtok eid="1" type="constructor_call" span="340:43:340:50">Integer</jtok>
<jtok eid="1" type="primary_name_ref" span="340:51:340:69">ATTRIBUTE_NOTATION</jtok>
<jtok eid="1" type="line_comment" span="344:3:344:5">//</jtok>
<jtok eid="1" type="line_comment" span="345:3:345:40">// Constants for supported encodings.</jtok>
<jtok eid="1" type="line_comment" span="346:3:346:5">//</jtok>
<jtok eid="1" type="field_name" span="347:28:347:42">ENCODING_UTF_8</jtok>
<jtok eid="1" type="field_name" span="348:28:348:47">ENCODING_ISO_8859_1</jtok>
<jtok eid="1" type="field_name" span="349:28:349:45">ENCODING_UCS_2_12</jtok>
<jtok eid="1" type="field_name" span="350:28:350:45">ENCODING_UCS_2_21</jtok>
<jtok eid="1" type="field_name" span="351:28:351:47">ENCODING_UCS_4_1234</jtok>
<jtok eid="1" type="field_name" span="352:28:352:47">ENCODING_UCS_4_4321</jtok>
<jtok eid="1" type="field_name" span="353:28:353:47">ENCODING_UCS_4_2143</jtok>
<jtok eid="1" type="field_name" span="354:28:354:47">ENCODING_UCS_4_3412</jtok>
<jtok eid="1" type="line_comment" span="357:3:357:5">//</jtok>
<jtok eid="1" type="line_comment" span="358:3:358:44">// Constants for attribute default value.</jtok>
<jtok eid="1" type="line_comment" span="359:3:359:5">//</jtok>
<jtok eid="1" type="block_comment" span="361:3:364:7">/**
    * Constant: the attribute is not declared.
    * @see #getAttributeDefaultValueType
    */</jtok>
<jtok eid="1" type="field_name" span="365:27:365:55">ATTRIBUTE_DEFAULT_UNDECLARED</jtok>
<jtok eid="1" type="block_comment" span="367:3:371:7">/**
    * Constant: the attribute has a literal default value specified.
    * @see #getAttributeDefaultValueType
    * @see #getAttributeDefaultValue
    */</jtok>
<jtok eid="1" type="field_name" span="372:27:372:54">ATTRIBUTE_DEFAULT_SPECIFIED</jtok>
<jtok eid="1" type="block_comment" span="374:3:377:7">/**
    * Constant: the attribute was declared #IMPLIED.
    * @see #getAttributeDefaultValueType
    */</jtok>
<jtok eid="1" type="field_name" span="378:27:378:52">ATTRIBUTE_DEFAULT_IMPLIED</jtok>
<jtok eid="1" type="block_comment" span="380:3:383:7">/**
    * Constant: the attribute was declared #REQUIRED.
    * @see #getAttributeDefaultValueType
    */</jtok>
<jtok eid="1" type="field_name" span="384:27:384:53">ATTRIBUTE_DEFAULT_REQUIRED</jtok>
<jtok eid="1" type="block_comment" span="386:3:390:7">/**
    * Constant: the attribute was declared #FIXED.
    * @see #getAttributeDefaultValueType
    * @see #getAttributeDefaultValue
    */</jtok>
<jtok eid="1" type="field_name" span="391:27:391:50">ATTRIBUTE_DEFAULT_FIXED</jtok>
<jtok eid="1" type="line_comment" span="394:3:394:5">//</jtok>
<jtok eid="1" type="line_comment" span="395:3:395:26">// Constants for input.</jtok>
<jtok eid="1" type="line_comment" span="396:3:396:5">//</jtok>
<jtok eid="1" type="field_name" span="397:28:397:38">INPUT_NONE</jtok>
<jtok eid="1" type="field_name" span="398:28:398:42">INPUT_INTERNAL</jtok>
<jtok eid="1" type="field_name" span="399:28:399:42">INPUT_EXTERNAL</jtok>
<jtok eid="1" type="field_name" span="400:28:400:40">INPUT_STREAM</jtok>
<jtok eid="1" type="field_name" span="401:28:401:40">INPUT_BUFFER</jtok>
<jtok eid="1" type="field_name" span="402:28:402:40">INPUT_READER</jtok>
<jtok eid="1" type="line_comment" span="405:3:405:5">//</jtok>
<jtok eid="1" type="line_comment" span="406:3:406:33">// Flags for reading literals.</jtok>
<jtok eid="1" type="line_comment" span="407:3:407:5">//</jtok>
<jtok eid="1" type="field_name" span="408:28:408:40">LIT_CHAR_REF</jtok>
<jtok eid="1" type="field_name" span="409:28:409:42">LIT_ENTITY_REF</jtok>
<jtok eid="1" type="field_name" span="410:28:410:38">LIT_PE_REF</jtok>
<jtok eid="1" type="field_name" span="411:28:411:41">LIT_NORMALIZE</jtok>
<jtok eid="1" type="line_comment" span="414:3:414:5">//</jtok>
<jtok eid="1" type="line_comment" span="415:3:415:32">// Flags for parsing context.</jtok>
<jtok eid="1" type="line_comment" span="416:3:416:5">//</jtok>
<jtok eid="1" type="field_name" span="417:28:417:40">CONTEXT_NONE</jtok>
<jtok eid="1" type="field_name" span="418:28:418:39">CONTEXT_DTD</jtok>
<jtok eid="1" type="field_name" span="419:28:419:47">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="1" type="field_name" span="420:28:420:50">CONTEXT_ATTRIBUTEVALUE</jtok>
<jtok eid="1" type="line_comment" span="424:3:424:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="425:3:425:22">// Error reporting.</jtok>
<jtok eid="1" type="line_comment" span="426:3:426:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="429:3:435:7">/**
    * Report an error.
    * @param message The error message.
    * @param textFound The text that caused the error (or null).
    * @see XmlHandler#error
    * @see #line
    */</jtok>
<jtok eid="8" type="method_name" span="436:8:436:13">error</jtok>
<jtok eid="8" type="parameter_type" span="436:15:436:21">String</jtok>
<jtok eid="8" type="parameter_name" span="436:22:436:29">message</jtok>
<jtok eid="8" type="parameter_type" span="436:31:436:37">String</jtok>
<jtok eid="8" type="parameter_name" span="436:38:436:47">textFound</jtok>
<jtok eid="8" type="parameter_type" span="436:49:436:55">String</jtok>
<jtok eid="8" type="parameter_name" span="436:56:436:68">textExpected</jtok>
<jtok eid="8" type="throws" span="437:12:437:16">java</jtok>
<jtok eid="8" type="throws" span="437:17:437:21">lang</jtok>
<jtok eid="8" type="throws" span="437:22:437:31">Exception</jtok>
<jtok eid="8" type="primary_name_ref" span="439:5:439:15">errorCount</jtok>
<jtok eid="8" type="primary_name_ref" span="440:9:440:18">textFound</jtok>
<jtok eid="8" type="primary_name_ref" span="441:7:441:14">message</jtok>
<jtok eid="8" type="primary_name_ref" span="441:17:441:24">message</jtok>
<jtok eid="8" type="string_literal" span="441:27:441:39">" (found \""</jtok>
<jtok eid="8" type="primary_name_ref" span="441:42:441:51">textFound</jtok>
<jtok eid="8" type="string_literal" span="441:54:441:59">"\")"</jtok>
<jtok eid="8" type="primary_name_ref" span="443:9:443:21">textExpected</jtok>
<jtok eid="8" type="primary_name_ref" span="444:7:444:14">message</jtok>
<jtok eid="8" type="primary_name_ref" span="444:17:444:24">message</jtok>
<jtok eid="8" type="string_literal" span="444:27:444:42">" (expected \""</jtok>
<jtok eid="8" type="primary_name_ref" span="444:45:444:57">textExpected</jtok>
<jtok eid="8" type="string_literal" span="444:60:444:65">"\")"</jtok>
<jtok eid="8" type="primary_name_ref" span="446:9:446:16">handler</jtok>
<jtok eid="8" type="class_or_interface_ref" span="447:7:447:13">String</jtok>
<jtok eid="8" type="local_variable_name" span="447:14:447:17">uri</jtok>
<jtok eid="8" type="primary_name_ref" span="449:11:449:25">externalEntity</jtok>
<jtok eid="8" type="primary_name_ref" span="450:2:450:5">uri</jtok>
<jtok eid="8" type="primary_name_ref" span="450:8:450:22">externalEntity</jtok>
<jtok eid="8" type="method_call" span="450:23:450:29">getURL</jtok>
<jtok eid="8" type="method_call" span="450:32:450:40">toString</jtok>
<jtok eid="8" type="primary_name_ref" span="452:7:452:14">handler</jtok>
<jtok eid="8" type="method_call" span="452:15:452:20">error</jtok>
<jtok eid="8" type="primary_name_ref" span="452:21:452:28">message</jtok>
<jtok eid="8" type="primary_name_ref" span="452:30:452:33">uri</jtok>
<jtok eid="8" type="primary_name_ref" span="452:35:452:39">line</jtok>
<jtok eid="8" type="primary_name_ref" span="452:41:452:47">column</jtok>
<jtok eid="1" type="block_comment" span="457:3:461:7">/**
    * Report a serious error.
    * @param message The error message.
    * @param textFound The text that caused the error (or null).
    */</jtok>
<jtok eid="9" type="method_name" span="462:8:462:13">error</jtok>
<jtok eid="9" type="parameter_type" span="462:15:462:21">String</jtok>
<jtok eid="9" type="parameter_name" span="462:22:462:29">message</jtok>
<jtok eid="9" type="parameter_name" span="462:36:462:45">textFound</jtok>
<jtok eid="9" type="parameter_type" span="462:47:462:53">String</jtok>
<jtok eid="9" type="parameter_name" span="462:54:462:66">textExpected</jtok>
<jtok eid="9" type="throws" span="463:12:463:16">java</jtok>
<jtok eid="9" type="throws" span="463:17:463:21">lang</jtok>
<jtok eid="9" type="throws" span="463:22:463:31">Exception</jtok>
<jtok eid="9" type="method_call" span="465:5:465:10">error</jtok>
<jtok eid="9" type="primary_name_ref" span="465:11:465:18">message</jtok>
<jtok eid="9" type="constructor_call" span="465:24:465:33">Character</jtok>
<jtok eid="9" type="primary_name_ref" span="465:34:465:43">textFound</jtok>
<jtok eid="9" type="method_call" span="465:45:465:53">toString</jtok>
<jtok eid="9" type="primary_name_ref" span="465:57:465:69">textExpected</jtok>
<jtok eid="1" type="line_comment" span="470:3:470:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="471:3:471:34">// Major syntactic productions.</jtok>
<jtok eid="1" type="line_comment" span="472:3:472:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="475:3:484:7">/**
    * Parse an XML document.
    * &lt;pre&gt;
    * [1] document ::= prolog element Misc*
    * &lt;/pre&gt;
    * &lt;p&gt;This is the top-level parsing function for a single XML
    * document.  As a minimum, a well-formed document must have
    * a document element, and a valid document must have a prolog
    * as well.
    */</jtok>
<jtok eid="10" type="method_name" span="485:8:485:21">parseDocument</jtok>
<jtok eid="10" type="throws" span="486:12:486:16">java</jtok>
<jtok eid="10" type="throws" span="486:17:486:21">lang</jtok>
<jtok eid="10" type="throws" span="486:22:486:31">Exception</jtok>
<jtok eid="10" type="local_variable_name" span="488:10:488:11">c</jtok>
<jtok eid="10" type="method_call" span="490:5:490:16">parseProlog</jtok>
<jtok eid="10" type="method_call" span="491:5:491:12">require</jtok>
<jtok eid="10" type="method_call" span="492:5:492:17">parseElement</jtok>
<jtok eid="10" type="method_call" span="495:7:495:16">parseMisc</jtok>
<jtok eid="10" type="line_comment" span="495:21:495:56">//skip all white, PIs, and comments</jtok>
<jtok eid="10" type="primary_name_ref" span="496:7:496:8">c</jtok>
<jtok eid="10" type="method_call" span="496:9:496:15">readCh</jtok>
<jtok eid="10" type="line_comment" span="496:21:496:60">//if this doesn't throw an exception...</jtok>
<jtok eid="10" type="method_call" span="497:7:497:12">error</jtok>
<jtok eid="10" type="string_literal" span="497:13:497:55">"unexpected characters after document end"</jtok>
<jtok eid="10" type="primary_name_ref" span="497:56:497:57">c</jtok>
<jtok eid="10" type="class_or_interface_ref" span="499:12:499:24">EOFException</jtok>
<jtok eid="10" type="local_variable_name" span="499:25:499:26">e</jtok>
<jtok eid="1" type="block_comment" span="504:3:510:7">/**
    * Skip a comment.
    * &lt;pre&gt;
    * [18] Comment ::= '&amp;lt;!--' ((Char - '-') | ('-' (Char - '-')))* "--&gt;"
    * &lt;/pre&gt;
    * &lt;p&gt;(The &lt;code&gt;&amp;lt;!--&lt;/code&gt; has already been read.)
    */</jtok>
<jtok eid="11" type="method_name" span="511:8:511:20">parseComment</jtok>
<jtok eid="11" type="throws" span="512:12:512:16">java</jtok>
<jtok eid="11" type="throws" span="512:17:512:21">lang</jtok>
<jtok eid="11" type="throws" span="512:22:512:31">Exception</jtok>
<jtok eid="11" type="method_call" span="514:5:514:14">skipUntil</jtok>
<jtok eid="11" type="string_literal" span="514:15:514:20">"--&gt;"</jtok>
<jtok eid="1" type="block_comment" span="518:3:526:7">/**
    * Parse a processing instruction and do a call-back.
    * &lt;pre&gt;
    * [19] PI ::= '&amp;lt;?' Name (S (Char* - (Char* '?&amp;gt;' Char*)))? '?&amp;gt;'
    * &lt;/pre&gt;
    * &lt;p&gt;(The &lt;code&gt;&amp;lt;?&lt;/code&gt; has already been read.)
    * &lt;p&gt;An XML processing instruction &lt;em&gt;must&lt;/em&gt; begin with
    * a Name, which is the instruction's target.
    */</jtok>
<jtok eid="12" type="method_name" span="527:8:527:15">parsePI</jtok>
<jtok eid="12" type="throws" span="528:12:528:16">java</jtok>
<jtok eid="12" type="throws" span="528:17:528:21">lang</jtok>
<jtok eid="12" type="throws" span="528:22:528:31">Exception</jtok>
<jtok eid="12" type="class_or_interface_ref" span="530:5:530:11">String</jtok>
<jtok eid="12" type="local_variable_name" span="530:12:530:16">name</jtok>
<jtok eid="12" type="primary_name_ref" span="532:5:532:9">name</jtok>
<jtok eid="12" type="method_call" span="532:12:532:23">readNmtoken</jtok>
<jtok eid="12" type="method_call" span="533:10:533:17">tryRead</jtok>
<jtok eid="12" type="string_literal" span="533:18:533:22">"?&gt;"</jtok>
<jtok eid="12" type="method_call" span="534:7:534:24">requireWhitespace</jtok>
<jtok eid="12" type="method_call" span="535:7:535:17">parseUntil</jtok>
<jtok eid="12" type="string_literal" span="535:18:535:22">"?&gt;"</jtok>
<jtok eid="12" type="primary_name_ref" span="537:9:537:16">handler</jtok>
<jtok eid="12" type="primary_name_ref" span="538:7:538:14">handler</jtok>
<jtok eid="12" type="method_call" span="538:15:538:36">processingInstruction</jtok>
<jtok eid="12" type="primary_name_ref" span="538:37:538:41">name</jtok>
<jtok eid="12" type="method_call" span="538:43:538:61">dataBufferToString</jtok>
<jtok eid="1" type="block_comment" span="543:3:554:7">/**
    * Parse a CDATA marked section.
    * &lt;pre&gt;
    * [20] CDSect ::= CDStart CData CDEnd
    * [21] CDStart ::= '&amp;lt;![CDATA['
    * [22] CData ::= (Char* - (Char* ']]&amp;gt;' Char*))
    * [23] CDEnd ::= ']]&amp;gt;'
    * &lt;/pre&gt;
    * &lt;p&gt;(The '&amp;lt;![CDATA[' has already been read.)
    * &lt;p&gt;Note that this just appends characters to the dataBuffer,
    * without actually generating an event.
    */</jtok>
<jtok eid="13" type="method_name" span="555:8:555:19">parseCDSect</jtok>
<jtok eid="13" type="throws" span="556:12:556:16">java</jtok>
<jtok eid="13" type="throws" span="556:17:556:21">lang</jtok>
<jtok eid="13" type="throws" span="556:22:556:31">Exception</jtok>
<jtok eid="13" type="method_call" span="558:5:558:15">parseUntil</jtok>
<jtok eid="13" type="string_literal" span="558:16:558:21">"]]&gt;"</jtok>
<jtok eid="1" type="block_comment" span="562:3:575:7">/**
    * Parse the prolog of an XML document.
    * &lt;pre&gt;
    * [24] prolog ::= XMLDecl? Misc* (Doctypedecl Misc*)?
    * &lt;/pre&gt;
    * &lt;p&gt;There are a couple of tricks here.  First, it is necessary to
    * declare the XML default attributes after the DTD (if present)
    * has been read.  Second, it is not possible to expand general
    * references in attribute value literals until after the entire
    * DTD (if present) has been parsed.
    * &lt;p&gt;We do not look for the XML declaration here, because it is
    * handled by pushURL().
    * @see pushURL
    */</jtok>
<jtok eid="14" type="method_name" span="576:8:576:19">parseProlog</jtok>
<jtok eid="14" type="throws" span="577:12:577:16">java</jtok>
<jtok eid="14" type="throws" span="577:17:577:21">lang</jtok>
<jtok eid="14" type="throws" span="577:22:577:31">Exception</jtok>
<jtok eid="14" type="method_call" span="579:5:579:14">parseMisc</jtok>
<jtok eid="14" type="method_call" span="581:9:581:16">tryRead</jtok>
<jtok eid="14" type="string_literal" span="581:17:581:28">"&lt;!DOCTYPE"</jtok>
<jtok eid="14" type="method_call" span="582:7:582:23">parseDoctypedecl</jtok>
<jtok eid="14" type="method_call" span="583:7:583:16">parseMisc</jtok>
<jtok eid="1" type="block_comment" span="588:3:602:7">/**
    * Parse the XML declaration.
    * &lt;pre&gt;
    * [25] XMLDecl ::= '&amp;lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&amp;gt;'
    * [26] VersionInfo ::= S 'version' Eq ('"1.0"' | "'1.0'")
    * [33] SDDecl ::= S 'standalone' Eq "'" ('yes' | 'no') "'"
    *               | S 'standalone' Eq '"' ("yes" | "no") '"'
    * [78] EncodingDecl ::= S 'encoding' Eq QEncoding
    * &lt;/pre&gt;
    * &lt;p&gt;([80] to [82] are also significant.)
    * &lt;p&gt;(The &lt;code&gt;&amp;lt;?xml&lt;/code&gt; and whitespace have already been read.)
    * &lt;p&gt;TODO: validate value of standalone.
    * @see #parseTextDecl
    * @see #checkEncoding
    */</jtok>
<jtok eid="15" type="method_name" span="603:8:603:20">parseXMLDecl</jtok>
<jtok eid="15" type="parameter_name" span="603:30:603:44">ignoreEncoding</jtok>
<jtok eid="15" type="throws" span="604:12:604:16">java</jtok>
<jtok eid="15" type="throws" span="604:17:604:21">lang</jtok>
<jtok eid="15" type="throws" span="604:22:604:31">Exception</jtok>
<jtok eid="15" type="class_or_interface_ref" span="606:5:606:11">String</jtok>
<jtok eid="15" type="local_variable_name" span="606:12:606:19">version</jtok>
<jtok eid="15" type="class_or_interface_ref" span="607:5:607:11">String</jtok>
<jtok eid="15" type="local_variable_name" span="607:12:607:24">encodingName</jtok>
<jtok eid="15" type="class_or_interface_ref" span="608:5:608:11">String</jtok>
<jtok eid="15" type="local_variable_name" span="608:12:608:22">standalone</jtok>
<jtok eid="15" type="line_comment" span="610:5:610:25">// Read the version.</jtok>
<jtok eid="15" type="method_call" span="611:5:611:12">require</jtok>
<jtok eid="15" type="string_literal" span="611:13:611:22">"version"</jtok>
<jtok eid="15" type="method_call" span="612:5:612:12">parseEq</jtok>
<jtok eid="15" type="primary_name_ref" span="613:5:613:12">version</jtok>
<jtok eid="15" type="method_call" span="613:15:613:26">readLiteral</jtok>
<jtok eid="15" type="primary_name_ref" span="614:10:614:17">version</jtok>
<jtok eid="15" type="method_call" span="614:18:614:24">equals</jtok>
<jtok eid="15" type="string_literal" span="614:25:614:30">"1.0"</jtok>
<jtok eid="15" type="method_call" span="615:7:615:12">error</jtok>
<jtok eid="15" type="string_literal" span="615:13:615:38">"unsupported XML version"</jtok>
<jtok eid="15" type="primary_name_ref" span="615:40:615:47">version</jtok>
<jtok eid="15" type="string_literal" span="615:49:615:54">"1.0"</jtok>
<jtok eid="15" type="line_comment" span="618:5:618:44">// Try reading an encoding declaration.</jtok>
<jtok eid="15" type="method_call" span="619:5:619:19">skipWhitespace</jtok>
<jtok eid="15" type="method_call" span="620:9:620:16">tryRead</jtok>
<jtok eid="15" type="string_literal" span="620:17:620:27">"encoding"</jtok>
<jtok eid="15" type="method_call" span="621:7:621:14">parseEq</jtok>
<jtok eid="15" type="primary_name_ref" span="622:7:622:19">encodingName</jtok>
<jtok eid="15" type="method_call" span="622:22:622:33">readLiteral</jtok>
<jtok eid="15" type="method_call" span="623:7:623:20">checkEncoding</jtok>
<jtok eid="15" type="primary_name_ref" span="623:21:623:33">encodingName</jtok>
<jtok eid="15" type="primary_name_ref" span="623:35:623:49">ignoreEncoding</jtok>
<jtok eid="15" type="line_comment" span="626:5:626:44">// Try reading a standalone declaration</jtok>
<jtok eid="15" type="method_call" span="627:5:627:19">skipWhitespace</jtok>
<jtok eid="15" type="method_call" span="628:9:628:16">tryRead</jtok>
<jtok eid="15" type="string_literal" span="628:17:628:29">"standalone"</jtok>
<jtok eid="15" type="method_call" span="629:7:629:14">parseEq</jtok>
<jtok eid="15" type="primary_name_ref" span="630:7:630:17">standalone</jtok>
<jtok eid="15" type="method_call" span="630:20:630:31">readLiteral</jtok>
<jtok eid="15" type="method_call" span="633:5:633:19">skipWhitespace</jtok>
<jtok eid="15" type="method_call" span="634:5:634:12">require</jtok>
<jtok eid="15" type="string_literal" span="634:13:634:17">"?&gt;"</jtok>
<jtok eid="1" type="block_comment" span="638:3:650:7">/**
    * Parse the Encoding PI.
    * &lt;pre&gt;
    * [78] EncodingDecl ::= S 'encoding' Eq QEncoding
    * [79] EncodingPI ::= '&amp;lt;?xml' S 'encoding' Eq QEncoding S? '?&amp;gt;'
    * [80] QEncoding ::= '"' Encoding '"' | "'" Encoding "'"
    * [81] Encoding ::= LatinName
    * [82] LatinName ::= [A-Za-z] ([A-Za-z0-9._] | '-')*
    * &lt;/pre&gt;
    * &lt;p&gt;(The &lt;code&gt;&amp;lt;?xml&lt;/code&gt;' and whitespace have already been read.)
    * @see #parseXMLDecl
    * @see #checkEncoding
    */</jtok>
<jtok eid="16" type="method_name" span="651:8:651:21">parseTextDecl</jtok>
<jtok eid="16" type="parameter_name" span="651:31:651:45">ignoreEncoding</jtok>
<jtok eid="16" type="throws" span="652:12:652:16">java</jtok>
<jtok eid="16" type="throws" span="652:17:652:21">lang</jtok>
<jtok eid="16" type="throws" span="652:22:652:31">Exception</jtok>
<jtok eid="16" type="class_or_interface_ref" span="654:5:654:11">String</jtok>
<jtok eid="16" type="local_variable_name" span="654:12:654:24">encodingName</jtok>
<jtok eid="16" type="line_comment" span="656:5:656:33">// Read an optional version.</jtok>
<jtok eid="16" type="method_call" span="657:9:657:16">tryRead</jtok>
<jtok eid="16" type="string_literal" span="657:17:657:26">"version"</jtok>
<jtok eid="16" type="class_or_interface_ref" span="658:7:658:13">String</jtok>
<jtok eid="16" type="local_variable_name" span="658:14:658:21">version</jtok>
<jtok eid="16" type="method_call" span="659:7:659:14">parseEq</jtok>
<jtok eid="16" type="primary_name_ref" span="660:7:660:14">version</jtok>
<jtok eid="16" type="method_call" span="660:17:660:28">readLiteral</jtok>
<jtok eid="16" type="primary_name_ref" span="661:12:661:19">version</jtok>
<jtok eid="16" type="method_call" span="661:20:661:26">equals</jtok>
<jtok eid="16" type="string_literal" span="661:27:661:32">"1.0"</jtok>
<jtok eid="16" type="method_call" span="662:2:662:7">error</jtok>
<jtok eid="16" type="string_literal" span="662:8:662:33">"unsupported XML version"</jtok>
<jtok eid="16" type="primary_name_ref" span="662:35:662:42">version</jtok>
<jtok eid="16" type="string_literal" span="662:44:662:49">"1.0"</jtok>
<jtok eid="16" type="method_call" span="664:7:664:24">requireWhitespace</jtok>
<jtok eid="16" type="line_comment" span="668:5:668:26">// Read the encoding.</jtok>
<jtok eid="16" type="method_call" span="669:5:669:12">require</jtok>
<jtok eid="16" type="string_literal" span="669:13:669:23">"encoding"</jtok>
<jtok eid="16" type="method_call" span="670:5:670:12">parseEq</jtok>
<jtok eid="16" type="primary_name_ref" span="671:5:671:17">encodingName</jtok>
<jtok eid="16" type="method_call" span="671:20:671:31">readLiteral</jtok>
<jtok eid="16" type="method_call" span="672:5:672:18">checkEncoding</jtok>
<jtok eid="16" type="primary_name_ref" span="672:19:672:31">encodingName</jtok>
<jtok eid="16" type="primary_name_ref" span="672:33:672:47">ignoreEncoding</jtok>
<jtok eid="16" type="method_call" span="674:5:674:19">skipWhitespace</jtok>
<jtok eid="16" type="method_call" span="675:5:675:12">require</jtok>
<jtok eid="16" type="string_literal" span="675:13:675:17">"?&gt;"</jtok>
<jtok eid="1" type="block_comment" span="679:3:689:7">/**
    * Check that the encoding specified makes sense.
    * &lt;p&gt;Compare what the author has specified in the XML declaration
    * or encoding PI with what we have detected.
    * &lt;p&gt;This is also important for distinguishing among the various
    * 7- and 8-bit encodings, such as ISO-LATIN-1 (I cannot autodetect
    * those).
    * @param encodingName The name of the encoding specified by the user.
    * @see #parseXMLDecl
    * @see #parseTextDecl
    */</jtok>
<jtok eid="17" type="method_name" span="690:8:690:21">checkEncoding</jtok>
<jtok eid="17" type="parameter_type" span="690:23:690:29">String</jtok>
<jtok eid="17" type="parameter_name" span="690:30:690:42">encodingName</jtok>
<jtok eid="17" type="parameter_name" span="690:52:690:66">ignoreEncoding</jtok>
<jtok eid="17" type="throws" span="691:12:691:16">java</jtok>
<jtok eid="17" type="throws" span="691:17:691:21">lang</jtok>
<jtok eid="17" type="throws" span="691:22:691:31">Exception</jtok>
<jtok eid="17" type="primary_name_ref" span="693:5:693:17">encodingName</jtok>
<jtok eid="17" type="primary_name_ref" span="693:20:693:32">encodingName</jtok>
<jtok eid="17" type="method_call" span="693:33:693:44">toUpperCase</jtok>
<jtok eid="17" type="primary_name_ref" span="695:9:695:23">ignoreEncoding</jtok>
<jtok eid="17" type="primary_name_ref" span="699:13:699:21">encoding</jtok>
<jtok eid="17" type="line_comment" span="700:5:700:23">// 8-bit encodings</jtok>
<jtok eid="17" type="primary_name_ref" span="701:10:701:24">ENCODING_UTF_8</jtok>
<jtok eid="17" type="primary_name_ref" span="702:11:702:23">encodingName</jtok>
<jtok eid="17" type="method_call" span="702:24:702:30">equals</jtok>
<jtok eid="17" type="string_literal" span="702:31:702:43">"ISO-8859-1"</jtok>
<jtok eid="17" type="primary_name_ref" span="703:2:703:10">encoding</jtok>
<jtok eid="17" type="primary_name_ref" span="703:13:703:32">ENCODING_ISO_8859_1</jtok>
<jtok eid="17" type="primary_name_ref" span="704:19:704:31">encodingName</jtok>
<jtok eid="17" type="method_call" span="704:32:704:38">equals</jtok>
<jtok eid="17" type="string_literal" span="704:39:704:46">"UTF-8"</jtok>
<jtok eid="17" type="method_call" span="705:2:705:7">error</jtok>
<jtok eid="17" type="string_literal" span="705:8:705:36">"unsupported 8-bit encoding"</jtok>
<jtok eid="17" type="primary_name_ref" span="706:8:706:20">encodingName</jtok>
<jtok eid="17" type="string_literal" span="707:8:707:29">"UTF-8 or ISO-8859-1"</jtok>
<jtok eid="17" type="line_comment" span="710:5:710:24">// 16-bit encodings</jtok>
<jtok eid="17" type="primary_name_ref" span="711:10:711:27">ENCODING_UCS_2_12</jtok>
<jtok eid="17" type="primary_name_ref" span="712:10:712:27">ENCODING_UCS_2_21</jtok>
<jtok eid="17" type="primary_name_ref" span="713:12:713:24">encodingName</jtok>
<jtok eid="17" type="method_call" span="713:25:713:31">equals</jtok>
<jtok eid="17" type="string_literal" span="713:32:713:49">"ISO-10646-UCS-2"</jtok>
<jtok eid="17" type="primary_name_ref" span="714:5:714:17">encodingName</jtok>
<jtok eid="17" type="method_call" span="714:18:714:24">equals</jtok>
<jtok eid="17" type="string_literal" span="714:25:714:33">"UTF-16"</jtok>
<jtok eid="17" type="method_call" span="715:2:715:7">error</jtok>
<jtok eid="17" type="string_literal" span="715:8:715:37">"unsupported 16-bit encoding"</jtok>
<jtok eid="17" type="primary_name_ref" span="716:8:716:20">encodingName</jtok>
<jtok eid="17" type="string_literal" span="717:8:717:25">"ISO-10646-UCS-2"</jtok>
<jtok eid="17" type="line_comment" span="720:5:720:24">// 32-bit encodings</jtok>
<jtok eid="17" type="primary_name_ref" span="721:10:721:29">ENCODING_UCS_4_1234</jtok>
<jtok eid="17" type="primary_name_ref" span="722:10:722:29">ENCODING_UCS_4_4321</jtok>
<jtok eid="17" type="primary_name_ref" span="723:10:723:29">ENCODING_UCS_4_2143</jtok>
<jtok eid="17" type="primary_name_ref" span="724:10:724:29">ENCODING_UCS_4_3412</jtok>
<jtok eid="17" type="primary_name_ref" span="725:12:725:24">encodingName</jtok>
<jtok eid="17" type="method_call" span="725:25:725:31">equals</jtok>
<jtok eid="17" type="string_literal" span="725:32:725:49">"ISO-10646-UCS-4"</jtok>
<jtok eid="17" type="method_call" span="726:2:726:7">error</jtok>
<jtok eid="17" type="string_literal" span="726:8:726:37">"unsupported 32-bit encoding"</jtok>
<jtok eid="17" type="primary_name_ref" span="727:8:727:20">encodingName</jtok>
<jtok eid="17" type="string_literal" span="728:8:728:25">"ISO-10646-UCS-4"</jtok>
<jtok eid="1" type="block_comment" span="734:3:740:7">/**
    * Parse miscellaneous markup outside the document element and DOCTYPE
    * declaration.
    * &lt;pre&gt;
    * [27] Misc ::= Comment | PI | S
    * &lt;/pre&gt;
    */</jtok>
<jtok eid="18" type="method_name" span="741:8:741:17">parseMisc</jtok>
<jtok eid="18" type="throws" span="742:12:742:16">java</jtok>
<jtok eid="18" type="throws" span="742:17:742:21">lang</jtok>
<jtok eid="18" type="throws" span="742:22:742:31">Exception</jtok>
<jtok eid="18" type="method_call" span="746:7:746:21">skipWhitespace</jtok>
<jtok eid="18" type="method_call" span="747:11:747:18">tryRead</jtok>
<jtok eid="18" type="string_literal" span="747:19:747:23">"&lt;?"</jtok>
<jtok eid="18" type="method_call" span="748:10:748:17">parsePI</jtok>
<jtok eid="18" type="method_call" span="749:16:749:23">tryRead</jtok>
<jtok eid="18" type="string_literal" span="749:24:749:30">"&lt;!--"</jtok>
<jtok eid="18" type="method_call" span="750:10:750:22">parseComment</jtok>
<jtok eid="1" type="block_comment" span="757:3:764:7">/**
    * Parse a document type declaration.
    * &lt;pre&gt;
    * [28] doctypedecl ::= '&amp;lt;!DOCTYPE' S Name (S ExternalID)? S?
    *                      ('[' %markupdecl* ']' S?)? '&amp;gt;'
    * &lt;/pre&gt;
    * &lt;p&gt;(The &lt;code&gt;&amp;lt;!DOCTYPE&lt;/code&gt; has already been read.)
    */</jtok>
<jtok eid="19" type="method_name" span="765:8:765:24">parseDoctypedecl</jtok>
<jtok eid="19" type="throws" span="766:12:766:16">java</jtok>
<jtok eid="19" type="throws" span="766:17:766:21">lang</jtok>
<jtok eid="19" type="throws" span="766:22:766:31">Exception</jtok>
<jtok eid="19" type="local_variable_name" span="768:10:768:11">c</jtok>
<jtok eid="19" type="class_or_interface_ref" span="769:5:769:11">String</jtok>
<jtok eid="19" type="local_variable_name" span="769:12:769:23">doctypeName</jtok>
<jtok eid="19" type="local_variable_name" span="769:25:769:28">ids</jtok>
<jtok eid="19" type="line_comment" span="771:5:771:36">// Read the document type name.</jtok>
<jtok eid="19" type="method_call" span="772:5:772:22">requireWhitespace</jtok>
<jtok eid="19" type="primary_name_ref" span="773:5:773:16">doctypeName</jtok>
<jtok eid="19" type="method_call" span="773:19:773:30">readNmtoken</jtok>
<jtok eid="19" type="line_comment" span="775:5:775:29">// Read the ExternalIDs.</jtok>
<jtok eid="19" type="method_call" span="776:5:776:19">skipWhitespace</jtok>
<jtok eid="19" type="primary_name_ref" span="777:5:777:8">ids</jtok>
<jtok eid="19" type="method_call" span="777:11:777:26">readExternalIds</jtok>
<jtok eid="19" type="line_comment" span="779:5:779:38">// Look for a declaration subset.</jtok>
<jtok eid="19" type="method_call" span="780:5:780:19">skipWhitespace</jtok>
<jtok eid="19" type="method_call" span="781:9:781:16">tryRead</jtok>
<jtok eid="19" type="line_comment" span="783:5:783:34">// loop until the subset ends</jtok>
<jtok eid="19" type="primary_name_ref" span="785:2:785:9">context</jtok>
<jtok eid="19" type="primary_name_ref" span="785:12:785:23">CONTEXT_DTD</jtok>
<jtok eid="19" type="method_call" span="786:2:786:16">skipWhitespace</jtok>
<jtok eid="19" type="primary_name_ref" span="787:2:787:9">context</jtok>
<jtok eid="19" type="primary_name_ref" span="787:12:787:24">CONTEXT_NONE</jtok>
<jtok eid="19" type="method_call" span="788:6:788:13">tryRead</jtok>
<jtok eid="19" type="line_comment" span="789:12:789:28">// end of subset</jtok>
<jtok eid="19" type="primary_name_ref" span="791:4:791:11">context</jtok>
<jtok eid="19" type="primary_name_ref" span="791:14:791:25">CONTEXT_DTD</jtok>
<jtok eid="19" type="method_call" span="792:4:792:19">parseMarkupdecl</jtok>
<jtok eid="19" type="primary_name_ref" span="793:4:793:11">context</jtok>
<jtok eid="19" type="primary_name_ref" span="793:14:793:26">CONTEXT_NONE</jtok>
<jtok eid="19" type="line_comment" span="798:5:798:40">// Read the external subset, if any</jtok>
<jtok eid="19" type="primary_name_ref" span="799:9:799:12">ids</jtok>
<jtok eid="19" type="method_call" span="800:7:800:14">pushURL</jtok>
<jtok eid="19" type="string_literal" span="800:15:800:34">"[external subset]"</jtok>
<jtok eid="19" type="primary_name_ref" span="800:36:800:39">ids</jtok>
<jtok eid="19" type="primary_name_ref" span="800:44:800:47">ids</jtok>
<jtok eid="19" type="line_comment" span="802:5:802:40">// Loop until we end up back at '&gt;'</jtok>
<jtok eid="19" type="primary_name_ref" span="804:2:804:9">context</jtok>
<jtok eid="19" type="primary_name_ref" span="804:12:804:23">CONTEXT_DTD</jtok>
<jtok eid="19" type="method_call" span="805:2:805:16">skipWhitespace</jtok>
<jtok eid="19" type="primary_name_ref" span="806:2:806:9">context</jtok>
<jtok eid="19" type="primary_name_ref" span="806:12:806:24">CONTEXT_NONE</jtok>
<jtok eid="19" type="method_call" span="807:6:807:13">tryRead</jtok>
<jtok eid="19" type="primary_name_ref" span="810:4:810:11">context</jtok>
<jtok eid="19" type="primary_name_ref" span="810:14:810:25">CONTEXT_DTD</jtok>
<jtok eid="19" type="method_call" span="811:4:811:19">parseMarkupdecl</jtok>
<jtok eid="19" type="primary_name_ref" span="812:4:812:11">context</jtok>
<jtok eid="19" type="primary_name_ref" span="812:14:812:26">CONTEXT_NONE</jtok>
<jtok eid="19" type="line_comment" span="816:5:816:27">// No external subset.</jtok>
<jtok eid="19" type="method_call" span="817:7:817:21">skipWhitespace</jtok>
<jtok eid="19" type="method_call" span="818:7:818:14">require</jtok>
<jtok eid="19" type="primary_name_ref" span="821:9:821:16">handler</jtok>
<jtok eid="19" type="primary_name_ref" span="822:7:822:14">handler</jtok>
<jtok eid="19" type="method_call" span="822:15:822:26">doctypeDecl</jtok>
<jtok eid="19" type="primary_name_ref" span="822:27:822:38">doctypeName</jtok>
<jtok eid="19" type="primary_name_ref" span="822:40:822:43">ids</jtok>
<jtok eid="19" type="primary_name_ref" span="822:48:822:51">ids</jtok>
<jtok eid="19" type="line_comment" span="825:5:825:34">// Expand general entities in</jtok>
<jtok eid="19" type="line_comment" span="826:5:826:37">// default values of attributes.</jtok>
<jtok eid="19" type="line_comment" span="827:5:827:38">// (Do this after the doctypeDecl</jtok>
<jtok eid="19" type="line_comment" span="828:5:828:16">// event!).</jtok>
<jtok eid="19" type="line_comment" span="829:5:829:39">// expandAttributeDefaultValues();</jtok>
<jtok eid="1" type="block_comment" span="833:3:842:7">/**
    * Parse a markup declaration in the internal or external DTD subset.
    * &lt;pre&gt;
    * [29] markupdecl ::= ( %elementdecl | %AttlistDecl | %EntityDecl |
    *                       %NotationDecl | %PI | %S | %Comment |
    *                       InternalPERef )
    * [30] InternalPERef ::= PEReference
    * [31] extSubset ::= (%markupdecl | %conditionalSect)*
    * &lt;/pre&gt;
    */</jtok>
<jtok eid="20" type="method_name" span="843:8:843:23">parseMarkupdecl</jtok>
<jtok eid="20" type="throws" span="844:12:844:16">java</jtok>
<jtok eid="20" type="throws" span="844:17:844:21">lang</jtok>
<jtok eid="20" type="throws" span="844:22:844:31">Exception</jtok>
<jtok eid="20" type="method_call" span="846:9:846:16">tryRead</jtok>
<jtok eid="20" type="string_literal" span="846:17:846:28">"&lt;!ELEMENT"</jtok>
<jtok eid="20" type="method_call" span="847:7:847:23">parseElementdecl</jtok>
<jtok eid="20" type="method_call" span="848:16:848:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="848:24:848:35">"&lt;!ATTLIST"</jtok>
<jtok eid="20" type="method_call" span="849:7:849:23">parseAttlistDecl</jtok>
<jtok eid="20" type="method_call" span="850:16:850:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="850:24:850:34">"&lt;!ENTITY"</jtok>
<jtok eid="20" type="method_call" span="851:7:851:22">parseEntityDecl</jtok>
<jtok eid="20" type="method_call" span="852:16:852:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="852:24:852:36">"&lt;!NOTATION"</jtok>
<jtok eid="20" type="method_call" span="853:7:853:24">parseNotationDecl</jtok>
<jtok eid="20" type="method_call" span="854:16:854:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="854:24:854:28">"&lt;?"</jtok>
<jtok eid="20" type="method_call" span="855:7:855:14">parsePI</jtok>
<jtok eid="20" type="method_call" span="856:16:856:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="856:24:856:30">"&lt;!--"</jtok>
<jtok eid="20" type="method_call" span="857:7:857:19">parseComment</jtok>
<jtok eid="20" type="method_call" span="858:16:858:23">tryRead</jtok>
<jtok eid="20" type="string_literal" span="858:24:858:29">"&lt;!["</jtok>
<jtok eid="20" type="method_call" span="859:7:859:27">parseConditionalSect</jtok>
<jtok eid="20" type="method_call" span="861:7:861:12">error</jtok>
<jtok eid="20" type="string_literal" span="861:13:861:42">"expected markup declaration"</jtok>
<jtok eid="1" type="block_comment" span="866:3:877:7">/**
    * Parse an element, with its tags.
    * &lt;pre&gt;
    * [33] STag ::= '&amp;lt;' Name (S Attribute)* S? '&amp;gt;' [WFC: unique Att spec]
    * [38] element ::= EmptyElement | STag content ETag
    * [39] EmptyElement ::= '&amp;lt;' Name (S Attribute)* S? '/&amp;gt;'
    *                       [WFC: unique Att spec]
    * &lt;/pre&gt;
    * &lt;p&gt;(The '&amp;lt;' has already been read.)
    * &lt;p&gt;NOTE: this method actually chains onto parseContent(), if necessary,
    * and parseContent() will take care of calling parseETag().
    */</jtok>
<jtok eid="21" type="method_name" span="878:8:878:20">parseElement</jtok>
<jtok eid="21" type="throws" span="879:12:879:16">java</jtok>
<jtok eid="21" type="throws" span="879:17:879:21">lang</jtok>
<jtok eid="21" type="throws" span="879:22:879:31">Exception</jtok>
<jtok eid="21" type="class_or_interface_ref" span="881:5:881:11">String</jtok>
<jtok eid="21" type="local_variable_name" span="881:12:881:14">gi</jtok>
<jtok eid="21" type="local_variable_name" span="882:10:882:11">c</jtok>
<jtok eid="21" type="local_variable_name" span="883:9:883:26">oldElementContent</jtok>
<jtok eid="21" type="primary_name_ref" span="883:29:883:50">currentElementContent</jtok>
<jtok eid="21" type="class_or_interface_ref" span="884:5:884:11">String</jtok>
<jtok eid="21" type="local_variable_name" span="884:12:884:22">oldElement</jtok>
<jtok eid="21" type="primary_name_ref" span="884:25:884:39">currentElement</jtok>
<jtok eid="21" type="line_comment" span="886:5:886:44">// This is the (global) counter for the</jtok>
<jtok eid="21" type="line_comment" span="887:5:887:38">// array of specified attributes.</jtok>
<jtok eid="21" type="primary_name_ref" span="888:5:888:20">tagAttributePos</jtok>
<jtok eid="21" type="line_comment" span="890:5:890:35">// Read the element type name.</jtok>
<jtok eid="21" type="primary_name_ref" span="891:5:891:7">gi</jtok>
<jtok eid="21" type="method_call" span="891:10:891:21">readNmtoken</jtok>
<jtok eid="21" type="line_comment" span="893:5:893:43">// Determine the current content type.</jtok>
<jtok eid="21" type="primary_name_ref" span="894:5:894:19">currentElement</jtok>
<jtok eid="21" type="primary_name_ref" span="894:22:894:24">gi</jtok>
<jtok eid="21" type="primary_name_ref" span="895:5:895:26">currentElementContent</jtok>
<jtok eid="21" type="method_call" span="895:29:895:50">getElementContentType</jtok>
<jtok eid="21" type="primary_name_ref" span="895:51:895:53">gi</jtok>
<jtok eid="21" type="primary_name_ref" span="896:9:896:30">currentElementContent</jtok>
<jtok eid="21" type="primary_name_ref" span="896:34:896:52">CONTENT_UNDECLARED</jtok>
<jtok eid="21" type="primary_name_ref" span="897:7:897:28">currentElementContent</jtok>
<jtok eid="21" type="primary_name_ref" span="897:31:897:42">CONTENT_ANY</jtok>
<jtok eid="21" type="line_comment" span="900:5:900:36">// Read the attributes, if any.</jtok>
<jtok eid="21" type="line_comment" span="901:5:901:42">// After this loop, we should be just</jtok>
<jtok eid="21" type="line_comment" span="902:5:902:42">// in front of the closing delimiter.</jtok>
<jtok eid="21" type="method_call" span="903:5:903:19">skipWhitespace</jtok>
<jtok eid="21" type="primary_name_ref" span="904:5:904:6">c</jtok>
<jtok eid="21" type="method_call" span="904:9:904:15">readCh</jtok>
<jtok eid="21" type="primary_name_ref" span="905:12:905:13">c</jtok>
<jtok eid="21" type="primary_name_ref" span="905:24:905:25">c</jtok>
<jtok eid="21" type="method_call" span="906:7:906:13">unread</jtok>
<jtok eid="21" type="primary_name_ref" span="906:14:906:15">c</jtok>
<jtok eid="21" type="method_call" span="907:7:907:21">parseAttribute</jtok>
<jtok eid="21" type="primary_name_ref" span="907:22:907:24">gi</jtok>
<jtok eid="21" type="method_call" span="908:7:908:21">skipWhitespace</jtok>
<jtok eid="21" type="primary_name_ref" span="909:7:909:8">c</jtok>
<jtok eid="21" type="method_call" span="909:11:909:17">readCh</jtok>
<jtok eid="21" type="method_call" span="911:5:911:11">unread</jtok>
<jtok eid="21" type="primary_name_ref" span="911:12:911:13">c</jtok>
<jtok eid="21" type="line_comment" span="913:5:913:40">// Supply any defaulted attributes.</jtok>
<jtok eid="21" type="class_or_interface_ref" span="914:5:914:16">Enumeration</jtok>
<jtok eid="21" type="local_variable_name" span="914:17:914:21">atts</jtok>
<jtok eid="21" type="method_call" span="914:24:914:42">declaredAttributes</jtok>
<jtok eid="21" type="primary_name_ref" span="914:43:914:45">gi</jtok>
<jtok eid="21" type="primary_name_ref" span="915:9:915:13">atts</jtok>
<jtok eid="21" type="class_or_interface_ref" span="916:7:916:13">String</jtok>
<jtok eid="21" type="local_variable_name" span="916:14:916:19">aname</jtok>
<jtok eid="21" type="label_name" span="917:5:917:9">loop</jtok>
<jtok eid="21" type="primary_name_ref" span="917:18:917:22">atts</jtok>
<jtok eid="21" type="method_call" span="917:23:917:38">hasMoreElements</jtok>
<jtok eid="21" type="primary_name_ref" span="918:7:918:12">aname</jtok>
<jtok eid="21" type="class_or_interface_ref" span="918:16:918:22">String</jtok>
<jtok eid="21" type="primary_name_ref" span="918:23:918:27">atts</jtok>
<jtok eid="21" type="method_call" span="918:28:918:39">nextElement</jtok>
<jtok eid="21" type="line_comment" span="919:5:919:32">// See if it was specified.</jtok>
<jtok eid="21" type="local_variable_name" span="920:16:920:17">i</jtok>
<jtok eid="21" type="primary_name_ref" span="920:23:920:24">i</jtok>
<jtok eid="21" type="primary_name_ref" span="920:27:920:42">tagAttributePos</jtok>
<jtok eid="21" type="primary_name_ref" span="920:44:920:45">i</jtok>
<jtok eid="21" type="primary_name_ref" span="921:6:921:19">tagAttributes</jtok>
<jtok eid="21" type="primary_name_ref" span="921:20:921:21">i</jtok>
<jtok eid="21" type="primary_name_ref" span="921:26:921:31">aname</jtok>
<jtok eid="21" type="label_ref" span="922:13:922:17">loop</jtok>
<jtok eid="21" type="line_comment" span="925:5:925:22">// I guess not...</jtok>
<jtok eid="21" type="primary_name_ref" span="926:11:926:18">handler</jtok>
<jtok eid="21" type="primary_name_ref" span="927:2:927:9">handler</jtok>
<jtok eid="21" type="method_call" span="927:10:927:19">attribute</jtok>
<jtok eid="21" type="primary_name_ref" span="927:20:927:25">aname</jtok>
<jtok eid="21" type="method_call" span="928:6:928:31">getAttributeExpandedValue</jtok>
<jtok eid="21" type="primary_name_ref" span="928:32:928:34">gi</jtok>
<jtok eid="21" type="primary_name_ref" span="928:36:928:41">aname</jtok>
<jtok eid="21" type="line_comment" span="934:5:934:41">// Figure out if this is a start tag</jtok>
<jtok eid="21" type="line_comment" span="935:5:935:44">// or an empty element, and dispatch an</jtok>
<jtok eid="21" type="line_comment" span="936:5:936:26">// event accordingly.</jtok>
<jtok eid="21" type="primary_name_ref" span="937:5:937:6">c</jtok>
<jtok eid="21" type="method_call" span="937:9:937:15">readCh</jtok>
<jtok eid="21" type="primary_name_ref" span="938:13:938:14">c</jtok>
<jtok eid="21" type="primary_name_ref" span="940:11:940:18">handler</jtok>
<jtok eid="21" type="primary_name_ref" span="941:2:941:9">handler</jtok>
<jtok eid="21" type="method_call" span="941:10:941:22">startElement</jtok>
<jtok eid="21" type="primary_name_ref" span="941:23:941:25">gi</jtok>
<jtok eid="21" type="method_call" span="943:7:943:19">parseContent</jtok>
<jtok eid="21" type="method_call" span="946:7:946:14">require</jtok>
<jtok eid="21" type="primary_name_ref" span="947:11:947:18">handler</jtok>
<jtok eid="21" type="primary_name_ref" span="948:2:948:9">handler</jtok>
<jtok eid="21" type="method_call" span="948:10:948:22">startElement</jtok>
<jtok eid="21" type="primary_name_ref" span="948:23:948:25">gi</jtok>
<jtok eid="21" type="primary_name_ref" span="949:2:949:9">handler</jtok>
<jtok eid="21" type="method_call" span="949:10:949:20">endElement</jtok>
<jtok eid="21" type="primary_name_ref" span="949:21:949:23">gi</jtok>
<jtok eid="21" type="line_comment" span="954:5:954:35">// Restore the previous state.</jtok>
<jtok eid="21" type="primary_name_ref" span="955:5:955:19">currentElement</jtok>
<jtok eid="21" type="primary_name_ref" span="955:22:955:32">oldElement</jtok>
<jtok eid="21" type="primary_name_ref" span="956:5:956:26">currentElementContent</jtok>
<jtok eid="21" type="primary_name_ref" span="956:29:956:46">oldElementContent</jtok>
<jtok eid="1" type="block_comment" span="960:3:967:7">/**
    * Parse an attribute assignment.
    * &lt;pre&gt;
    * [34] Attribute ::= Name Eq AttValue
    * &lt;/pre&gt;
    * @param name The name of the attribute's element.
    * @see XmlHandler#attribute
    */</jtok>
<jtok eid="22" type="method_name" span="968:8:968:22">parseAttribute</jtok>
<jtok eid="22" type="parameter_type" span="968:24:968:30">String</jtok>
<jtok eid="22" type="parameter_name" span="968:31:968:35">name</jtok>
<jtok eid="22" type="throws" span="969:12:969:16">java</jtok>
<jtok eid="22" type="throws" span="969:17:969:21">lang</jtok>
<jtok eid="22" type="throws" span="969:22:969:31">Exception</jtok>
<jtok eid="22" type="class_or_interface_ref" span="971:5:971:11">String</jtok>
<jtok eid="22" type="local_variable_name" span="971:12:971:17">aname</jtok>
<jtok eid="22" type="local_variable_name" span="972:9:972:13">type</jtok>
<jtok eid="22" type="class_or_interface_ref" span="973:5:973:11">String</jtok>
<jtok eid="22" type="local_variable_name" span="973:12:973:17">value</jtok>
<jtok eid="22" type="line_comment" span="975:5:975:32">// Read the attribute name.</jtok>
<jtok eid="22" type="primary_name_ref" span="976:5:976:10">aname</jtok>
<jtok eid="22" type="method_call" span="976:13:976:24">readNmtoken</jtok>
<jtok eid="22" type="method_call" span="976:31:976:37">intern</jtok>
<jtok eid="22" type="primary_name_ref" span="977:5:977:9">type</jtok>
<jtok eid="22" type="method_call" span="977:12:977:40">getAttributeDefaultValueType</jtok>
<jtok eid="22" type="primary_name_ref" span="977:41:977:45">name</jtok>
<jtok eid="22" type="primary_name_ref" span="977:47:977:52">aname</jtok>
<jtok eid="22" type="line_comment" span="979:5:979:17">// Parse '='</jtok>
<jtok eid="22" type="method_call" span="980:5:980:12">parseEq</jtok>
<jtok eid="22" type="line_comment" span="982:5:982:46">// Read the value, normalizing whitespace</jtok>
<jtok eid="22" type="line_comment" span="983:5:983:27">// if it is not CDATA.</jtok>
<jtok eid="22" type="primary_name_ref" span="984:9:984:13">type</jtok>
<jtok eid="22" type="primary_name_ref" span="984:17:984:32">ATTRIBUTE_CDATA</jtok>
<jtok eid="22" type="primary_name_ref" span="984:36:984:40">type</jtok>
<jtok eid="22" type="primary_name_ref" span="984:44:984:64">ATTRIBUTE_UNDECLARED</jtok>
<jtok eid="22" type="primary_name_ref" span="985:7:985:12">value</jtok>
<jtok eid="22" type="method_call" span="985:15:985:26">readLiteral</jtok>
<jtok eid="22" type="primary_name_ref" span="985:27:985:39">LIT_CHAR_REF</jtok>
<jtok eid="22" type="primary_name_ref" span="985:42:985:56">LIT_ENTITY_REF</jtok>
<jtok eid="22" type="primary_name_ref" span="987:7:987:12">value</jtok>
<jtok eid="22" type="method_call" span="987:15:987:26">readLiteral</jtok>
<jtok eid="22" type="primary_name_ref" span="987:27:987:39">LIT_CHAR_REF</jtok>
<jtok eid="22" type="primary_name_ref" span="987:42:987:56">LIT_ENTITY_REF</jtok>
<jtok eid="22" type="primary_name_ref" span="987:59:987:72">LIT_NORMALIZE</jtok>
<jtok eid="22" type="line_comment" span="990:5:990:36">// Inform the handler about the</jtok>
<jtok eid="22" type="line_comment" span="991:5:991:18">// attribute.</jtok>
<jtok eid="22" type="primary_name_ref" span="992:9:992:16">handler</jtok>
<jtok eid="22" type="primary_name_ref" span="993:7:993:14">handler</jtok>
<jtok eid="22" type="method_call" span="993:15:993:24">attribute</jtok>
<jtok eid="22" type="primary_name_ref" span="993:25:993:30">aname</jtok>
<jtok eid="22" type="primary_name_ref" span="993:32:993:37">value</jtok>
<jtok eid="22" type="primary_name_ref" span="995:5:995:18">dataBufferPos</jtok>
<jtok eid="22" type="line_comment" span="997:5:997:40">// Note that the attribute has been</jtok>
<jtok eid="22" type="line_comment" span="998:5:998:18">// specified.</jtok>
<jtok eid="22" type="primary_name_ref" span="999:9:999:24">tagAttributePos</jtok>
<jtok eid="22" type="primary_name_ref" span="999:28:999:41">tagAttributes</jtok>
<jtok eid="22" type="qualified_name_ref" span="999:42:999:48">length</jtok>
<jtok eid="22" type="class_or_interface_ref" span="1000:7:1000:13">String</jtok>
<jtok eid="22" type="local_variable_name" span="1000:14:1000:23">newAttrib</jtok>
<jtok eid="22" type="constructor_call" span="1000:32:1000:38">String</jtok>
<jtok eid="22" type="primary_name_ref" span="1000:39:1000:52">tagAttributes</jtok>
<jtok eid="22" type="qualified_name_ref" span="1000:53:1000:59">length</jtok>
<jtok eid="22" type="primary_name_ref" span="1001:7:1001:13">System</jtok>
<jtok eid="22" type="method_call" span="1001:14:1001:23">arraycopy</jtok>
<jtok eid="22" type="primary_name_ref" span="1001:24:1001:37">tagAttributes</jtok>
<jtok eid="22" type="primary_name_ref" span="1001:42:1001:51">newAttrib</jtok>
<jtok eid="22" type="primary_name_ref" span="1001:56:1001:71">tagAttributePos</jtok>
<jtok eid="22" type="primary_name_ref" span="1002:7:1002:20">tagAttributes</jtok>
<jtok eid="22" type="primary_name_ref" span="1002:23:1002:32">newAttrib</jtok>
<jtok eid="22" type="primary_name_ref" span="1004:5:1004:18">tagAttributes</jtok>
<jtok eid="22" type="primary_name_ref" span="1004:19:1004:34">tagAttributePos</jtok>
<jtok eid="22" type="primary_name_ref" span="1004:40:1004:45">aname</jtok>
<jtok eid="1" type="block_comment" span="1008:3:1011:7">/**
    * Parse an equals sign surrounded by optional whitespace.
    * [35] Eq ::= S? '=' S?
    */</jtok>
<jtok eid="23" type="method_name" span="1012:8:1012:15">parseEq</jtok>
<jtok eid="23" type="throws" span="1013:12:1013:16">java</jtok>
<jtok eid="23" type="throws" span="1013:17:1013:21">lang</jtok>
<jtok eid="23" type="throws" span="1013:22:1013:31">Exception</jtok>
<jtok eid="23" type="method_call" span="1015:5:1015:19">skipWhitespace</jtok>
<jtok eid="23" type="method_call" span="1016:5:1016:12">require</jtok>
<jtok eid="23" type="method_call" span="1017:5:1017:19">skipWhitespace</jtok>
<jtok eid="1" type="block_comment" span="1021:3:1025:7">/**
    * Parse an end tag.
    * [36] ETag ::= '&lt;/' Name S? '&gt;'
    * *NOTE: parseContent() chains to here.
    */</jtok>
<jtok eid="24" type="method_name" span="1026:8:1026:17">parseETag</jtok>
<jtok eid="24" type="throws" span="1027:12:1027:16">java</jtok>
<jtok eid="24" type="throws" span="1027:17:1027:21">lang</jtok>
<jtok eid="24" type="throws" span="1027:22:1027:31">Exception</jtok>
<jtok eid="24" type="class_or_interface_ref" span="1029:5:1029:11">String</jtok>
<jtok eid="24" type="local_variable_name" span="1029:12:1029:16">name</jtok>
<jtok eid="24" type="primary_name_ref" span="1030:5:1030:9">name</jtok>
<jtok eid="24" type="method_call" span="1030:12:1030:23">readNmtoken</jtok>
<jtok eid="24" type="primary_name_ref" span="1031:9:1031:13">name</jtok>
<jtok eid="24" type="primary_name_ref" span="1031:17:1031:31">currentElement</jtok>
<jtok eid="24" type="method_call" span="1032:7:1032:12">error</jtok>
<jtok eid="24" type="string_literal" span="1032:13:1032:33">"mismatched end tag"</jtok>
<jtok eid="24" type="primary_name_ref" span="1032:35:1032:39">name</jtok>
<jtok eid="24" type="primary_name_ref" span="1032:41:1032:55">currentElement</jtok>
<jtok eid="24" type="method_call" span="1034:5:1034:19">skipWhitespace</jtok>
<jtok eid="24" type="method_call" span="1035:5:1035:12">require</jtok>
<jtok eid="24" type="primary_name_ref" span="1036:9:1036:16">handler</jtok>
<jtok eid="24" type="primary_name_ref" span="1037:7:1037:14">handler</jtok>
<jtok eid="24" type="method_call" span="1037:15:1037:25">endElement</jtok>
<jtok eid="24" type="primary_name_ref" span="1037:26:1037:30">name</jtok>
<jtok eid="1" type="block_comment" span="1042:3:1046:7">/**
    * Parse the content of an element.
    * [37] content ::= (element | PCData | Reference | CDSect | PI | Comment)*
    * [68] Reference ::= EntityRef | CharRef
    */</jtok>
<jtok eid="25" type="method_name" span="1047:8:1047:20">parseContent</jtok>
<jtok eid="25" type="throws" span="1048:12:1048:16">java</jtok>
<jtok eid="25" type="throws" span="1048:17:1048:21">lang</jtok>
<jtok eid="25" type="throws" span="1048:22:1048:31">Exception</jtok>
<jtok eid="25" type="class_or_interface_ref" span="1050:5:1050:11">String</jtok>
<jtok eid="25" type="local_variable_name" span="1050:12:1050:16">data</jtok>
<jtok eid="25" type="local_variable_name" span="1051:10:1051:11">c</jtok>
<jtok eid="25" type="primary_name_ref" span="1055:15:1055:36">currentElementContent</jtok>
<jtok eid="25" type="primary_name_ref" span="1056:12:1056:23">CONTENT_ANY</jtok>
<jtok eid="25" type="primary_name_ref" span="1057:12:1057:25">CONTENT_MIXED</jtok>
<jtok eid="25" type="method_call" span="1058:2:1058:13">parsePCData</jtok>
<jtok eid="25" type="primary_name_ref" span="1060:12:1060:28">CONTENT_ELEMENTS</jtok>
<jtok eid="25" type="method_call" span="1061:2:1061:17">parseWhitespace</jtok>
<jtok eid="25" type="line_comment" span="1065:5:1065:25">// Handle delimiters</jtok>
<jtok eid="25" type="primary_name_ref" span="1066:7:1066:8">c</jtok>
<jtok eid="25" type="method_call" span="1066:11:1066:17">readCh</jtok>
<jtok eid="25" type="primary_name_ref" span="1067:15:1067:16">c</jtok>
<jtok eid="25" type="line_comment" span="1069:19:1069:31">// Found "&amp;"</jtok>
<jtok eid="25" type="primary_name_ref" span="1070:2:1070:3">c</jtok>
<jtok eid="25" type="method_call" span="1070:6:1070:12">readCh</jtok>
<jtok eid="25" type="primary_name_ref" span="1071:6:1071:7">c</jtok>
<jtok eid="25" type="method_call" span="1072:4:1072:16">parseCharRef</jtok>
<jtok eid="25" type="method_call" span="1074:4:1074:10">unread</jtok>
<jtok eid="25" type="primary_name_ref" span="1074:11:1074:12">c</jtok>
<jtok eid="25" type="method_call" span="1075:4:1075:18">parseEntityRef</jtok>
<jtok eid="25" type="line_comment" span="1079:19:1079:31">// Found "&lt;"</jtok>
<jtok eid="25" type="primary_name_ref" span="1081:2:1081:3">c</jtok>
<jtok eid="25" type="method_call" span="1081:6:1081:12">readCh</jtok>
<jtok eid="25" type="primary_name_ref" span="1082:10:1082:11">c</jtok>
<jtok eid="25" type="line_comment" span="1084:13:1084:26">// Found "&lt;!"</jtok>
<jtok eid="25" type="primary_name_ref" span="1085:4:1085:5">c</jtok>
<jtok eid="25" type="method_call" span="1085:8:1085:14">readCh</jtok>
<jtok eid="25" type="primary_name_ref" span="1086:12:1086:13">c</jtok>
<jtok eid="25" type="line_comment" span="1087:15:1087:29">// Found "&lt;!-"</jtok>
<jtok eid="25" type="method_call" span="1088:6:1088:13">require</jtok>
<jtok eid="25" type="method_call" span="1089:6:1089:18">parseComment</jtok>
<jtok eid="25" type="line_comment" span="1091:15:1091:29">// Found "&lt;!["</jtok>
<jtok eid="25" type="method_call" span="1092:6:1092:13">require</jtok>
<jtok eid="25" type="string_literal" span="1092:14:1092:22">"CDATA["</jtok>
<jtok eid="25" type="method_call" span="1093:6:1093:17">parseCDSect</jtok>
<jtok eid="25" type="method_call" span="1096:6:1096:11">error</jtok>
<jtok eid="25" type="string_literal" span="1096:12:1096:47">"expected comment or CDATA section"</jtok>
<jtok eid="25" type="primary_name_ref" span="1096:49:1096:50">c</jtok>
<jtok eid="25" type="line_comment" span="1101:13:1101:26">// Found "&lt;?"</jtok>
<jtok eid="25" type="method_call" span="1102:4:1102:19">dataBufferFlush</jtok>
<jtok eid="25" type="method_call" span="1103:4:1103:11">parsePI</jtok>
<jtok eid="25" type="line_comment" span="1106:13:1106:26">// Found "&lt;/"</jtok>
<jtok eid="25" type="method_call" span="1107:4:1107:19">dataBufferFlush</jtok>
<jtok eid="25" type="method_call" span="1108:4:1108:13">parseETag</jtok>
<jtok eid="25" type="line_comment" span="1111:12:1111:51">// Found "&lt;" followed by something else</jtok>
<jtok eid="25" type="method_call" span="1112:4:1112:19">dataBufferFlush</jtok>
<jtok eid="25" type="method_call" span="1113:4:1113:10">unread</jtok>
<jtok eid="25" type="primary_name_ref" span="1113:11:1113:12">c</jtok>
<jtok eid="25" type="method_call" span="1114:4:1114:16">parseElement</jtok>
<jtok eid="1" type="block_comment" span="1122:3:1127:7">/**
    * Parse an element type declaration.
    * [40] elementdecl ::= '&lt;!ELEMENT' S %Name S (%S S)? %contentspec S? '&gt;'
    *                      [VC: Unique Element Declaration]
    * *NOTE: the '&lt;!ELEMENT' has already been read.
    */</jtok>
<jtok eid="26" type="method_name" span="1128:8:1128:24">parseElementdecl</jtok>
<jtok eid="26" type="throws" span="1129:12:1129:16">java</jtok>
<jtok eid="26" type="throws" span="1129:17:1129:21">lang</jtok>
<jtok eid="26" type="throws" span="1129:22:1129:31">Exception</jtok>
<jtok eid="26" type="class_or_interface_ref" span="1131:5:1131:11">String</jtok>
<jtok eid="26" type="local_variable_name" span="1131:12:1131:16">name</jtok>
<jtok eid="26" type="method_call" span="1133:5:1133:22">requireWhitespace</jtok>
<jtok eid="26" type="line_comment" span="1134:5:1134:35">// Read the element type name.</jtok>
<jtok eid="26" type="primary_name_ref" span="1135:5:1135:9">name</jtok>
<jtok eid="26" type="method_call" span="1135:12:1135:23">readNmtoken</jtok>
<jtok eid="26" type="method_call" span="1137:5:1137:22">requireWhitespace</jtok>
<jtok eid="26" type="line_comment" span="1138:5:1138:31">// Read the content model.</jtok>
<jtok eid="26" type="method_call" span="1139:5:1139:21">parseContentspec</jtok>
<jtok eid="26" type="primary_name_ref" span="1139:22:1139:26">name</jtok>
<jtok eid="26" type="method_call" span="1141:5:1141:19">skipWhitespace</jtok>
<jtok eid="26" type="method_call" span="1142:5:1142:12">require</jtok>
<jtok eid="1" type="block_comment" span="1146:3:1149:7">/**
    * Content specification.
    * [41] contentspec ::= 'EMPTY' | 'ANY' | Mixed | elements
    */</jtok>
<jtok eid="27" type="method_name" span="1150:8:1150:24">parseContentspec</jtok>
<jtok eid="27" type="parameter_type" span="1150:26:1150:32">String</jtok>
<jtok eid="27" type="parameter_name" span="1150:33:1150:37">name</jtok>
<jtok eid="27" type="throws" span="1151:12:1151:16">java</jtok>
<jtok eid="27" type="throws" span="1151:17:1151:21">lang</jtok>
<jtok eid="27" type="throws" span="1151:22:1151:31">Exception</jtok>
<jtok eid="27" type="method_call" span="1153:9:1153:16">tryRead</jtok>
<jtok eid="27" type="string_literal" span="1153:17:1153:24">"EMPTY"</jtok>
<jtok eid="27" type="method_call" span="1154:7:1154:17">setElement</jtok>
<jtok eid="27" type="primary_name_ref" span="1154:18:1154:22">name</jtok>
<jtok eid="27" type="primary_name_ref" span="1154:24:1154:37">CONTENT_EMPTY</jtok>
<jtok eid="27" type="method_call" span="1156:16:1156:23">tryRead</jtok>
<jtok eid="27" type="string_literal" span="1156:24:1156:29">"ANY"</jtok>
<jtok eid="27" type="method_call" span="1157:7:1157:17">setElement</jtok>
<jtok eid="27" type="primary_name_ref" span="1157:18:1157:22">name</jtok>
<jtok eid="27" type="primary_name_ref" span="1157:24:1157:35">CONTENT_ANY</jtok>
<jtok eid="27" type="method_call" span="1160:7:1160:14">require</jtok>
<jtok eid="27" type="method_call" span="1161:7:1161:23">dataBufferAppend</jtok>
<jtok eid="27" type="method_call" span="1162:7:1162:21">skipWhitespace</jtok>
<jtok eid="27" type="method_call" span="1163:11:1163:18">tryRead</jtok>
<jtok eid="27" type="string_literal" span="1163:19:1163:28">"#PCDATA"</jtok>
<jtok eid="27" type="method_call" span="1164:2:1164:18">dataBufferAppend</jtok>
<jtok eid="27" type="string_literal" span="1164:19:1164:28">"#PCDATA"</jtok>
<jtok eid="27" type="method_call" span="1165:2:1165:12">parseMixed</jtok>
<jtok eid="27" type="method_call" span="1166:2:1166:12">setElement</jtok>
<jtok eid="27" type="primary_name_ref" span="1166:13:1166:17">name</jtok>
<jtok eid="27" type="primary_name_ref" span="1166:19:1166:32">CONTENT_MIXED</jtok>
<jtok eid="27" type="method_call" span="1166:34:1166:52">dataBufferToString</jtok>
<jtok eid="27" type="method_call" span="1168:2:1168:15">parseElements</jtok>
<jtok eid="27" type="method_call" span="1169:2:1169:12">setElement</jtok>
<jtok eid="27" type="primary_name_ref" span="1169:13:1169:17">name</jtok>
<jtok eid="27" type="primary_name_ref" span="1169:19:1169:35">CONTENT_ELEMENTS</jtok>
<jtok eid="27" type="method_call" span="1169:37:1169:55">dataBufferToString</jtok>
<jtok eid="1" type="block_comment" span="1175:3:1186:7">/**
    * Parse an element-content model.
    * [42] elements ::= (choice | seq) ('?' | '*' | '+')?
    * [44] cps ::= S? %cp S?
    * [45] choice ::= '(' S? %ctokplus (S? '|' S? %ctoks)* S? ')'
    * [46] ctokplus ::= cps ('|' cps)+
    * [47] ctoks ::= cps ('|' cps)*
    * [48] seq ::= '(' S? %stoks (S? ',' S? %stoks)* S? ')'
    * [49] stoks ::= cps (',' cps)*
    * *NOTE: the opening '(' and S have already been read.
    * *TODO: go over parameter entity boundaries more carefully.
    */</jtok>
<jtok eid="28" type="method_name" span="1187:8:1187:21">parseElements</jtok>
<jtok eid="28" type="throws" span="1188:12:1188:16">java</jtok>
<jtok eid="28" type="throws" span="1188:17:1188:21">lang</jtok>
<jtok eid="28" type="throws" span="1188:22:1188:31">Exception</jtok>
<jtok eid="28" type="local_variable_name" span="1190:10:1190:11">c</jtok>
<jtok eid="28" type="local_variable_name" span="1191:10:1191:13">sep</jtok>
<jtok eid="28" type="line_comment" span="1193:5:1193:40">// Parse the first content particle</jtok>
<jtok eid="28" type="method_call" span="1194:5:1194:19">skipWhitespace</jtok>
<jtok eid="28" type="method_call" span="1195:5:1195:12">parseCp</jtok>
<jtok eid="28" type="line_comment" span="1197:5:1197:41">// Check for end or for a separator.</jtok>
<jtok eid="28" type="method_call" span="1198:5:1198:19">skipWhitespace</jtok>
<jtok eid="28" type="primary_name_ref" span="1199:5:1199:6">c</jtok>
<jtok eid="28" type="method_call" span="1199:9:1199:15">readCh</jtok>
<jtok eid="28" type="primary_name_ref" span="1200:13:1200:14">c</jtok>
<jtok eid="28" type="method_call" span="1202:7:1202:23">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1203:7:1203:8">c</jtok>
<jtok eid="28" type="method_call" span="1203:11:1203:17">readCh</jtok>
<jtok eid="28" type="primary_name_ref" span="1204:15:1204:16">c</jtok>
<jtok eid="28" type="method_call" span="1208:2:1208:18">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1208:19:1208:20">c</jtok>
<jtok eid="28" type="method_call" span="1211:2:1211:8">unread</jtok>
<jtok eid="28" type="primary_name_ref" span="1211:9:1211:10">c</jtok>
<jtok eid="28" type="line_comment" span="1214:17:1214:43">// Register the separator.</jtok>
<jtok eid="28" type="primary_name_ref" span="1216:7:1216:10">sep</jtok>
<jtok eid="28" type="primary_name_ref" span="1216:13:1216:14">c</jtok>
<jtok eid="28" type="method_call" span="1217:7:1217:23">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1217:24:1217:25">c</jtok>
<jtok eid="28" type="method_call" span="1220:7:1220:12">error</jtok>
<jtok eid="28" type="string_literal" span="1220:13:1220:45">"bad separator in content model"</jtok>
<jtok eid="28" type="primary_name_ref" span="1220:47:1220:48">c</jtok>
<jtok eid="28" type="line_comment" span="1224:5:1224:44">// Parse the rest of the content model.</jtok>
<jtok eid="28" type="method_call" span="1226:7:1226:21">skipWhitespace</jtok>
<jtok eid="28" type="method_call" span="1227:7:1227:14">parseCp</jtok>
<jtok eid="28" type="method_call" span="1228:7:1228:21">skipWhitespace</jtok>
<jtok eid="28" type="primary_name_ref" span="1229:7:1229:8">c</jtok>
<jtok eid="28" type="method_call" span="1229:11:1229:17">readCh</jtok>
<jtok eid="28" type="primary_name_ref" span="1230:11:1230:12">c</jtok>
<jtok eid="28" type="method_call" span="1231:2:1231:18">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1233:18:1233:19">c</jtok>
<jtok eid="28" type="primary_name_ref" span="1233:23:1233:26">sep</jtok>
<jtok eid="28" type="method_call" span="1234:2:1234:7">error</jtok>
<jtok eid="28" type="string_literal" span="1234:8:1234:40">"bad separator in content model"</jtok>
<jtok eid="28" type="primary_name_ref" span="1234:42:1234:43">c</jtok>
<jtok eid="28" type="method_call" span="1237:2:1237:18">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1237:19:1237:20">c</jtok>
<jtok eid="28" type="line_comment" span="1241:5:1241:43">// Check for the occurrence indicator.</jtok>
<jtok eid="28" type="primary_name_ref" span="1242:5:1242:6">c</jtok>
<jtok eid="28" type="method_call" span="1242:9:1242:15">readCh</jtok>
<jtok eid="28" type="primary_name_ref" span="1243:13:1243:14">c</jtok>
<jtok eid="28" type="method_call" span="1247:7:1247:23">dataBufferAppend</jtok>
<jtok eid="28" type="primary_name_ref" span="1247:24:1247:25">c</jtok>
<jtok eid="28" type="method_call" span="1250:7:1250:13">unread</jtok>
<jtok eid="28" type="primary_name_ref" span="1250:14:1250:15">c</jtok>
<jtok eid="1" type="block_comment" span="1256:3:1261:7">/**
    * Parse a content particle.
    * [43] cp ::= (Name | choice | seq) ('?' | '*' | '+')
    * *NOTE: I actually use a slightly different production here:
    *        cp ::= (elements | (Name ('?' | '*' | '+')?))
    */</jtok>
<jtok eid="29" type="method_name" span="1262:8:1262:15">parseCp</jtok>
<jtok eid="29" type="throws" span="1263:12:1263:16">java</jtok>
<jtok eid="29" type="throws" span="1263:17:1263:21">lang</jtok>
<jtok eid="29" type="throws" span="1263:22:1263:31">Exception</jtok>
<jtok eid="29" type="local_variable_name" span="1265:10:1265:11">c</jtok>
<jtok eid="29" type="method_call" span="1267:9:1267:16">tryRead</jtok>
<jtok eid="29" type="method_call" span="1268:7:1268:23">dataBufferAppend</jtok>
<jtok eid="29" type="method_call" span="1269:7:1269:20">parseElements</jtok>
<jtok eid="29" type="method_call" span="1271:7:1271:23">dataBufferAppend</jtok>
<jtok eid="29" type="method_call" span="1271:24:1271:35">readNmtoken</jtok>
<jtok eid="29" type="primary_name_ref" span="1272:7:1272:8">c</jtok>
<jtok eid="29" type="method_call" span="1272:11:1272:17">readCh</jtok>
<jtok eid="29" type="primary_name_ref" span="1273:15:1273:16">c</jtok>
<jtok eid="29" type="method_call" span="1277:2:1277:18">dataBufferAppend</jtok>
<jtok eid="29" type="primary_name_ref" span="1277:19:1277:20">c</jtok>
<jtok eid="29" type="method_call" span="1280:2:1280:8">unread</jtok>
<jtok eid="29" type="primary_name_ref" span="1280:9:1280:10">c</jtok>
<jtok eid="1" type="block_comment" span="1287:3:1293:7">/**
    * Parse mixed content.
    * [50] Mixed ::= '(' S? %( %'#PCDATA' (S? '|' S? %Mtoks)* ) S? ')*'
    *              | '(' S? %('#PCDATA') S? ')'
    * [51] Mtoks ::= %Name (S? '|' S? %Name)*
    * *NOTE: the S and '#PCDATA' have already been read.
    */</jtok>
<jtok eid="30" type="method_name" span="1294:8:1294:18">parseMixed</jtok>
<jtok eid="30" type="throws" span="1295:12:1295:16">java</jtok>
<jtok eid="30" type="throws" span="1295:17:1295:21">lang</jtok>
<jtok eid="30" type="throws" span="1295:22:1295:31">Exception</jtok>
<jtok eid="30" type="local_variable_name" span="1297:10:1297:11">c</jtok>
<jtok eid="30" type="line_comment" span="1299:5:1299:31">// Check for PCDATA alone.</jtok>
<jtok eid="30" type="method_call" span="1300:5:1300:19">skipWhitespace</jtok>
<jtok eid="30" type="method_call" span="1301:9:1301:16">tryRead</jtok>
<jtok eid="30" type="method_call" span="1302:7:1302:23">dataBufferAppend</jtok>
<jtok eid="30" type="string_literal" span="1302:24:1302:28">")*"</jtok>
<jtok eid="30" type="method_call" span="1303:7:1303:14">tryRead</jtok>
<jtok eid="30" type="line_comment" span="1307:5:1307:28">// Parse mixed content.</jtok>
<jtok eid="30" type="method_call" span="1308:5:1308:19">skipWhitespace</jtok>
<jtok eid="30" type="method_call" span="1309:13:1309:20">tryRead</jtok>
<jtok eid="30" type="string_literal" span="1309:21:1309:25">")*"</jtok>
<jtok eid="30" type="method_call" span="1310:7:1310:14">require</jtok>
<jtok eid="30" type="method_call" span="1311:7:1311:23">dataBufferAppend</jtok>
<jtok eid="30" type="method_call" span="1312:7:1312:21">skipWhitespace</jtok>
<jtok eid="30" type="method_call" span="1313:7:1313:23">dataBufferAppend</jtok>
<jtok eid="30" type="method_call" span="1313:24:1313:35">readNmtoken</jtok>
<jtok eid="30" type="method_call" span="1314:7:1314:21">skipWhitespace</jtok>
<jtok eid="30" type="method_call" span="1316:5:1316:21">dataBufferAppend</jtok>
<jtok eid="30" type="string_literal" span="1316:22:1316:26">")*"</jtok>
<jtok eid="1" type="block_comment" span="1320:3:1324:7">/**
    * Parse an attribute list declaration.
    * [52] AttlistDecl ::= '&lt;!ATTLIST' S %Name S? %AttDef+ S? '&gt;'
    * *NOTE: the '&lt;!ATTLIST' has already been read.
    */</jtok>
<jtok eid="31" type="method_name" span="1325:8:1325:24">parseAttlistDecl</jtok>
<jtok eid="31" type="throws" span="1326:12:1326:16">java</jtok>
<jtok eid="31" type="throws" span="1326:17:1326:21">lang</jtok>
<jtok eid="31" type="throws" span="1326:22:1326:31">Exception</jtok>
<jtok eid="31" type="class_or_interface_ref" span="1328:5:1328:11">String</jtok>
<jtok eid="31" type="local_variable_name" span="1328:12:1328:23">elementName</jtok>
<jtok eid="31" type="method_call" span="1330:5:1330:22">requireWhitespace</jtok>
<jtok eid="31" type="primary_name_ref" span="1331:5:1331:16">elementName</jtok>
<jtok eid="31" type="method_call" span="1331:19:1331:30">readNmtoken</jtok>
<jtok eid="31" type="method_call" span="1332:5:1332:22">requireWhitespace</jtok>
<jtok eid="31" type="method_call" span="1333:13:1333:20">tryRead</jtok>
<jtok eid="31" type="method_call" span="1334:7:1334:18">parseAttDef</jtok>
<jtok eid="31" type="primary_name_ref" span="1334:19:1334:30">elementName</jtok>
<jtok eid="31" type="method_call" span="1335:7:1335:21">skipWhitespace</jtok>
<jtok eid="1" type="block_comment" span="1340:3:1343:7">/**
    * Parse a single attribute definition.
    * [53] AttDef ::= S %Name S %AttType S %Default
    */</jtok>
<jtok eid="32" type="method_name" span="1344:8:1344:19">parseAttDef</jtok>
<jtok eid="32" type="parameter_type" span="1344:21:1344:27">String</jtok>
<jtok eid="32" type="parameter_name" span="1344:28:1344:39">elementName</jtok>
<jtok eid="32" type="throws" span="1345:12:1345:16">java</jtok>
<jtok eid="32" type="throws" span="1345:17:1345:21">lang</jtok>
<jtok eid="32" type="throws" span="1345:22:1345:31">Exception</jtok>
<jtok eid="32" type="class_or_interface_ref" span="1347:5:1347:11">String</jtok>
<jtok eid="32" type="local_variable_name" span="1347:12:1347:16">name</jtok>
<jtok eid="32" type="local_variable_name" span="1348:9:1348:13">type</jtok>
<jtok eid="32" type="class_or_interface_ref" span="1349:5:1349:11">String</jtok>
<jtok eid="32" type="local_variable_name" span="1349:12:1349:23">enumeration</jtok>
<jtok eid="32" type="line_comment" span="1351:5:1351:32">// Read the attribute name.</jtok>
<jtok eid="32" type="primary_name_ref" span="1352:5:1352:9">name</jtok>
<jtok eid="32" type="method_call" span="1352:12:1352:23">readNmtoken</jtok>
<jtok eid="32" type="line_comment" span="1354:5:1354:32">// Read the attribute type.</jtok>
<jtok eid="32" type="method_call" span="1355:5:1355:22">requireWhitespace</jtok>
<jtok eid="32" type="primary_name_ref" span="1356:5:1356:9">type</jtok>
<jtok eid="32" type="method_call" span="1356:12:1356:23">readAttType</jtok>
<jtok eid="32" type="line_comment" span="1358:5:1358:43">// Get the string of enumerated values</jtok>
<jtok eid="32" type="line_comment" span="1359:5:1359:21">// if necessary.</jtok>
<jtok eid="32" type="primary_name_ref" span="1360:9:1360:13">type</jtok>
<jtok eid="32" type="primary_name_ref" span="1360:17:1360:37">ATTRIBUTE_ENUMERATED</jtok>
<jtok eid="32" type="primary_name_ref" span="1360:41:1360:45">type</jtok>
<jtok eid="32" type="primary_name_ref" span="1360:49:1360:67">ATTRIBUTE_NOTATION</jtok>
<jtok eid="32" type="primary_name_ref" span="1361:7:1361:18">enumeration</jtok>
<jtok eid="32" type="method_call" span="1361:21:1361:39">dataBufferToString</jtok>
<jtok eid="32" type="line_comment" span="1364:5:1364:31">// Read the default value.</jtok>
<jtok eid="32" type="method_call" span="1365:5:1365:22">requireWhitespace</jtok>
<jtok eid="32" type="method_call" span="1366:5:1366:17">parseDefault</jtok>
<jtok eid="32" type="primary_name_ref" span="1366:18:1366:29">elementName</jtok>
<jtok eid="32" type="primary_name_ref" span="1366:31:1366:35">name</jtok>
<jtok eid="32" type="primary_name_ref" span="1366:37:1366:41">type</jtok>
<jtok eid="32" type="primary_name_ref" span="1366:43:1366:54">enumeration</jtok>
<jtok eid="1" type="block_comment" span="1370:3:1378:7">/**
    * Parse the attribute type.
    * [54] AttType ::= StringType | TokenizedType | EnumeratedType
    * [55] StringType ::= 'CDATA'
    * [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' |
    *                        'NMTOKEN' | 'NMTOKENS'
    * [57] EnumeratedType ::= NotationType | Enumeration
    * *TODO: validate the type!!
    */</jtok>
<jtok eid="33" type="method_name" span="1379:7:1379:18">readAttType</jtok>
<jtok eid="33" type="throws" span="1380:12:1380:16">java</jtok>
<jtok eid="33" type="throws" span="1380:17:1380:21">lang</jtok>
<jtok eid="33" type="throws" span="1380:22:1380:31">Exception</jtok>
<jtok eid="33" type="class_or_interface_ref" span="1382:5:1382:11">String</jtok>
<jtok eid="33" type="local_variable_name" span="1382:12:1382:22">typeString</jtok>
<jtok eid="33" type="class_or_interface_ref" span="1383:5:1383:12">Integer</jtok>
<jtok eid="33" type="local_variable_name" span="1383:13:1383:17">type</jtok>
<jtok eid="33" type="method_call" span="1385:9:1385:16">tryRead</jtok>
<jtok eid="33" type="method_call" span="1386:7:1386:23">parseEnumeration</jtok>
<jtok eid="33" type="primary_name_ref" span="1387:14:1387:34">ATTRIBUTE_ENUMERATED</jtok>
<jtok eid="33" type="primary_name_ref" span="1389:7:1389:17">typeString</jtok>
<jtok eid="33" type="method_call" span="1389:20:1389:31">readNmtoken</jtok>
<jtok eid="33" type="primary_name_ref" span="1390:11:1390:21">typeString</jtok>
<jtok eid="33" type="method_call" span="1390:22:1390:28">equals</jtok>
<jtok eid="33" type="string_literal" span="1390:29:1390:39">"NOTATION"</jtok>
<jtok eid="33" type="method_call" span="1391:2:1391:19">parseNotationType</jtok>
<jtok eid="33" type="primary_name_ref" span="1393:7:1393:11">type</jtok>
<jtok eid="33" type="class_or_interface_ref" span="1393:15:1393:22">Integer</jtok>
<jtok eid="33" type="primary_name_ref" span="1393:23:1393:40">attributeTypeHash</jtok>
<jtok eid="33" type="method_call" span="1393:41:1393:44">get</jtok>
<jtok eid="33" type="primary_name_ref" span="1393:45:1393:55">typeString</jtok>
<jtok eid="33" type="primary_name_ref" span="1394:11:1394:15">type</jtok>
<jtok eid="33" type="method_call" span="1395:2:1395:7">error</jtok>
<jtok eid="33" type="string_literal" span="1395:8:1395:32">"illegal attribute type"</jtok>
<jtok eid="33" type="primary_name_ref" span="1395:34:1395:44">typeString</jtok>
<jtok eid="33" type="primary_name_ref" span="1396:9:1396:29">ATTRIBUTE_UNDECLARED</jtok>
<jtok eid="33" type="primary_name_ref" span="1398:9:1398:13">type</jtok>
<jtok eid="33" type="method_call" span="1398:14:1398:22">intValue</jtok>
<jtok eid="1" type="block_comment" span="1404:3:1409:7">/**
    * Parse an enumeration.
    * [60] Enumeration ::= '(' S? %Etoks (S? '|' S? %Etoks)* S? ')'
    * [61] Etoks ::= %Nmtoken (S? '|' S? %Nmtoken)*
    * *NOTE: the '(' has already been read.
    */</jtok>
<jtok eid="34" type="method_name" span="1410:8:1410:24">parseEnumeration</jtok>
<jtok eid="34" type="throws" span="1411:12:1411:16">java</jtok>
<jtok eid="34" type="throws" span="1411:17:1411:21">lang</jtok>
<jtok eid="34" type="throws" span="1411:22:1411:31">Exception</jtok>
<jtok eid="34" type="local_variable_name" span="1413:10:1413:11">c</jtok>
<jtok eid="34" type="method_call" span="1415:5:1415:21">dataBufferAppend</jtok>
<jtok eid="34" type="line_comment" span="1417:5:1417:29">// Read the first token.</jtok>
<jtok eid="34" type="method_call" span="1418:5:1418:19">skipWhitespace</jtok>
<jtok eid="34" type="method_call" span="1419:5:1419:21">dataBufferAppend</jtok>
<jtok eid="34" type="method_call" span="1419:22:1419:33">readNmtoken</jtok>
<jtok eid="34" type="line_comment" span="1420:5:1420:34">// Read the remaining tokens.</jtok>
<jtok eid="34" type="method_call" span="1421:5:1421:19">skipWhitespace</jtok>
<jtok eid="34" type="method_call" span="1422:13:1422:20">tryRead</jtok>
<jtok eid="34" type="method_call" span="1423:7:1423:14">require</jtok>
<jtok eid="34" type="method_call" span="1424:7:1424:23">dataBufferAppend</jtok>
<jtok eid="34" type="method_call" span="1425:7:1425:21">skipWhitespace</jtok>
<jtok eid="34" type="method_call" span="1426:7:1426:23">dataBufferAppend</jtok>
<jtok eid="34" type="method_call" span="1426:24:1426:35">readNmtoken</jtok>
<jtok eid="34" type="method_call" span="1427:7:1427:21">skipWhitespace</jtok>
<jtok eid="34" type="method_call" span="1429:5:1429:21">dataBufferAppend</jtok>
<jtok eid="1" type="block_comment" span="1433:3:1439:7">/**
    * Parse a notation type for an attribute.
    * [58] NotationType ::= %'NOTATION' S '(' S? %Ntoks (S? '|' S? %Ntoks)*
    *                       S? ')'
    * [59] Ntoks ::= %Name (S? '|' S? %Name)
    * *NOTE: the 'NOTATION' has already been read
    */</jtok>
<jtok eid="35" type="method_name" span="1440:8:1440:25">parseNotationType</jtok>
<jtok eid="35" type="throws" span="1441:12:1441:16">java</jtok>
<jtok eid="35" type="throws" span="1441:17:1441:21">lang</jtok>
<jtok eid="35" type="throws" span="1441:22:1441:31">Exception</jtok>
<jtok eid="35" type="method_call" span="1443:5:1443:22">requireWhitespace</jtok>
<jtok eid="35" type="method_call" span="1444:5:1444:12">require</jtok>
<jtok eid="35" type="method_call" span="1446:5:1446:21">parseEnumeration</jtok>
<jtok eid="1" type="block_comment" span="1450:3:1453:7">/**
    * Parse the default value for an attribute.
    * [62] Default ::= '#REQUIRED' | '#IMPLIED' | ((%'#FIXED' S)? %AttValue
    */</jtok>
<jtok eid="36" type="method_name" span="1454:8:1454:20">parseDefault</jtok>
<jtok eid="36" type="parameter_type" span="1454:22:1454:28">String</jtok>
<jtok eid="36" type="parameter_name" span="1454:29:1454:40">elementName</jtok>
<jtok eid="36" type="parameter_type" span="1454:42:1454:48">String</jtok>
<jtok eid="36" type="parameter_name" span="1454:49:1454:53">name</jtok>
<jtok eid="36" type="parameter_name" span="1454:59:1454:63">type</jtok>
<jtok eid="36" type="parameter_type" span="1454:65:1454:71">String</jtok>
<jtok eid="36" type="parameter_name" span="1454:72:1454:83">enumeration</jtok>
<jtok eid="36" type="throws" span="1455:12:1455:16">java</jtok>
<jtok eid="36" type="throws" span="1455:17:1455:21">lang</jtok>
<jtok eid="36" type="throws" span="1455:22:1455:31">Exception</jtok>
<jtok eid="36" type="local_variable_name" span="1457:9:1457:18">valueType</jtok>
<jtok eid="36" type="primary_name_ref" span="1457:21:1457:48">ATTRIBUTE_DEFAULT_SPECIFIED</jtok>
<jtok eid="36" type="class_or_interface_ref" span="1458:5:1458:11">String</jtok>
<jtok eid="36" type="local_variable_name" span="1458:12:1458:17">value</jtok>
<jtok eid="36" type="local_variable_name" span="1459:13:1459:28">normalizeWSFlag</jtok>
<jtok eid="36" type="method_call" span="1461:9:1461:16">tryRead</jtok>
<jtok eid="36" type="method_call" span="1462:11:1462:18">tryRead</jtok>
<jtok eid="36" type="string_literal" span="1462:19:1462:26">"FIXED"</jtok>
<jtok eid="36" type="primary_name_ref" span="1463:2:1463:11">valueType</jtok>
<jtok eid="36" type="primary_name_ref" span="1463:14:1463:37">ATTRIBUTE_DEFAULT_FIXED</jtok>
<jtok eid="36" type="method_call" span="1464:2:1464:19">requireWhitespace</jtok>
<jtok eid="36" type="primary_name_ref" span="1465:2:1465:9">context</jtok>
<jtok eid="36" type="primary_name_ref" span="1465:12:1465:34">CONTEXT_ATTRIBUTEVALUE</jtok>
<jtok eid="36" type="primary_name_ref" span="1466:2:1466:7">value</jtok>
<jtok eid="36" type="method_call" span="1466:10:1466:21">readLiteral</jtok>
<jtok eid="36" type="primary_name_ref" span="1466:22:1466:34">LIT_CHAR_REF</jtok>
<jtok eid="36" type="primary_name_ref" span="1467:2:1467:9">context</jtok>
<jtok eid="36" type="primary_name_ref" span="1467:12:1467:23">CONTEXT_DTD</jtok>
<jtok eid="36" type="method_call" span="1468:18:1468:25">tryRead</jtok>
<jtok eid="36" type="string_literal" span="1468:26:1468:36">"REQUIRED"</jtok>
<jtok eid="36" type="primary_name_ref" span="1469:2:1469:11">valueType</jtok>
<jtok eid="36" type="primary_name_ref" span="1469:14:1469:40">ATTRIBUTE_DEFAULT_REQUIRED</jtok>
<jtok eid="36" type="method_call" span="1470:18:1470:25">tryRead</jtok>
<jtok eid="36" type="string_literal" span="1470:26:1470:35">"IMPLIED"</jtok>
<jtok eid="36" type="primary_name_ref" span="1471:2:1471:11">valueType</jtok>
<jtok eid="36" type="primary_name_ref" span="1471:14:1471:39">ATTRIBUTE_DEFAULT_IMPLIED</jtok>
<jtok eid="36" type="method_call" span="1473:2:1473:7">error</jtok>
<jtok eid="36" type="string_literal" span="1473:8:1473:53">"illegal keyword for attribute default value"</jtok>
<jtok eid="36" type="primary_name_ref" span="1476:7:1476:14">context</jtok>
<jtok eid="36" type="primary_name_ref" span="1476:17:1476:39">CONTEXT_ATTRIBUTEVALUE</jtok>
<jtok eid="36" type="primary_name_ref" span="1477:7:1477:12">value</jtok>
<jtok eid="36" type="method_call" span="1477:15:1477:26">readLiteral</jtok>
<jtok eid="36" type="primary_name_ref" span="1477:27:1477:39">LIT_CHAR_REF</jtok>
<jtok eid="36" type="primary_name_ref" span="1478:7:1478:14">context</jtok>
<jtok eid="36" type="primary_name_ref" span="1478:17:1478:28">CONTEXT_DTD</jtok>
<jtok eid="36" type="method_call" span="1480:5:1480:17">setAttribute</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:18:1480:29">elementName</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:31:1480:35">name</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:37:1480:41">type</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:43:1480:54">enumeration</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:56:1480:61">value</jtok>
<jtok eid="36" type="primary_name_ref" span="1480:63:1480:72">valueType</jtok>
<jtok eid="1" type="block_comment" span="1484:3:1495:7">/**
    * Parse a conditional section.
    * [63] conditionalSect ::= includeSect || ignoreSect
    * [64] includeSect ::= '&lt;![' %'INCLUDE' '[' (%markupdecl*)* ']]&gt;'
    * [65] ignoreSect ::= '&lt;![' %'IGNORE' '[' ignoreSectContents* ']]&gt;'
    * [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char* ']]&gt;'))
    *                           | ('&lt;![' ignoreSectContents* ']]&gt;')
    *                           | (Char - (']' | [&lt;'"]))
    *                           | ('&lt;!' (Char - ('-' | '[')))
    * *NOTE: the '&lt;![' has already been read.
    * *TODO: verify that I am handling ignoreSectContents right.
    */</jtok>
<jtok eid="37" type="method_name" span="1496:8:1496:28">parseConditionalSect</jtok>
<jtok eid="37" type="throws" span="1497:12:1497:16">java</jtok>
<jtok eid="37" type="throws" span="1497:17:1497:21">lang</jtok>
<jtok eid="37" type="throws" span="1497:22:1497:31">Exception</jtok>
<jtok eid="37" type="method_call" span="1499:5:1499:19">skipWhitespace</jtok>
<jtok eid="37" type="method_call" span="1500:9:1500:16">tryRead</jtok>
<jtok eid="37" type="string_literal" span="1500:17:1500:26">"INCLUDE"</jtok>
<jtok eid="37" type="method_call" span="1501:7:1501:21">skipWhitespace</jtok>
<jtok eid="37" type="method_call" span="1502:7:1502:14">require</jtok>
<jtok eid="37" type="method_call" span="1503:7:1503:21">skipWhitespace</jtok>
<jtok eid="37" type="method_call" span="1504:15:1504:22">tryRead</jtok>
<jtok eid="37" type="string_literal" span="1504:23:1504:28">"]]&gt;"</jtok>
<jtok eid="37" type="method_call" span="1505:2:1505:17">parseMarkupdecl</jtok>
<jtok eid="37" type="method_call" span="1506:2:1506:16">skipWhitespace</jtok>
<jtok eid="37" type="method_call" span="1508:16:1508:23">tryRead</jtok>
<jtok eid="37" type="string_literal" span="1508:24:1508:32">"IGNORE"</jtok>
<jtok eid="37" type="method_call" span="1509:7:1509:21">skipWhitespace</jtok>
<jtok eid="37" type="method_call" span="1510:7:1510:14">require</jtok>
<jtok eid="37" type="local_variable_name" span="1511:11:1511:18">nesting</jtok>
<jtok eid="37" type="local_variable_name" span="1512:12:1512:13">c</jtok>
<jtok eid="37" type="local_variable_name" span="1513:16:1513:20">nest</jtok>
<jtok eid="37" type="primary_name_ref" span="1513:26:1513:30">nest</jtok>
<jtok eid="37" type="primary_name_ref" span="1514:2:1514:3">c</jtok>
<jtok eid="37" type="method_call" span="1514:6:1514:12">readCh</jtok>
<jtok eid="37" type="primary_name_ref" span="1515:10:1515:11">c</jtok>
<jtok eid="37" type="method_call" span="1517:8:1517:15">tryRead</jtok>
<jtok eid="37" type="string_literal" span="1517:16:1517:20">"!["</jtok>
<jtok eid="37" type="primary_name_ref" span="1518:6:1518:10">nest</jtok>
<jtok eid="37" type="method_call" span="1521:8:1521:15">tryRead</jtok>
<jtok eid="37" type="string_literal" span="1521:16:1521:20">"]&gt;"</jtok>
<jtok eid="37" type="primary_name_ref" span="1522:6:1522:10">nest</jtok>
<jtok eid="37" type="method_call" span="1527:7:1527:12">error</jtok>
<jtok eid="37" type="string_literal" span="1527:13:1527:68">"conditional section must begin with INCLUDE or IGNORE"</jtok>
<jtok eid="1" type="block_comment" span="1533:3:1537:7">/**
    * Read a character reference.
    * [67] CharRef ::= '&amp;#' [0-9]+ ';' | '&amp;#x' [0-9a-fA-F]+ ';'
    * *NOTE: the '&amp;#' has already been read.
    */</jtok>
<jtok eid="38" type="method_name" span="1538:8:1538:20">parseCharRef</jtok>
<jtok eid="38" type="throws" span="1539:12:1539:16">java</jtok>
<jtok eid="38" type="throws" span="1539:17:1539:21">lang</jtok>
<jtok eid="38" type="throws" span="1539:22:1539:31">Exception</jtok>
<jtok eid="38" type="local_variable_name" span="1541:9:1541:14">value</jtok>
<jtok eid="38" type="local_variable_name" span="1542:10:1542:11">c</jtok>
<jtok eid="38" type="method_call" span="1544:9:1544:16">tryRead</jtok>
<jtok eid="38" type="label_name" span="1545:7:1545:12">loop1</jtok>
<jtok eid="38" type="primary_name_ref" span="1546:2:1546:3">c</jtok>
<jtok eid="38" type="method_call" span="1546:6:1546:12">readCh</jtok>
<jtok eid="38" type="primary_name_ref" span="1547:10:1547:11">c</jtok>
<jtok eid="38" type="primary_name_ref" span="1570:4:1570:9">value</jtok>
<jtok eid="38" type="primary_name_ref" span="1571:4:1571:9">value</jtok>
<jtok eid="38" type="primary_name_ref" span="1571:13:1571:20">Integer</jtok>
<jtok eid="38" type="method_call" span="1571:21:1571:29">parseInt</jtok>
<jtok eid="38" type="constructor_call" span="1571:34:1571:43">Character</jtok>
<jtok eid="38" type="primary_name_ref" span="1571:44:1571:45">c</jtok>
<jtok eid="38" type="method_call" span="1571:47:1571:55">toString</jtok>
<jtok eid="38" type="label_ref" span="1574:10:1574:15">loop1</jtok>
<jtok eid="38" type="method_call" span="1576:4:1576:9">error</jtok>
<jtok eid="38" type="string_literal" span="1576:10:1576:52">"illegal character in character reference"</jtok>
<jtok eid="38" type="primary_name_ref" span="1576:54:1576:55">c</jtok>
<jtok eid="38" type="label_ref" span="1577:10:1577:15">loop1</jtok>
<jtok eid="38" type="label_name" span="1581:7:1581:12">loop2</jtok>
<jtok eid="38" type="primary_name_ref" span="1582:2:1582:3">c</jtok>
<jtok eid="38" type="method_call" span="1582:6:1582:12">readCh</jtok>
<jtok eid="38" type="primary_name_ref" span="1583:10:1583:11">c</jtok>
<jtok eid="38" type="primary_name_ref" span="1594:4:1594:9">value</jtok>
<jtok eid="38" type="primary_name_ref" span="1595:4:1595:9">value</jtok>
<jtok eid="38" type="primary_name_ref" span="1595:13:1595:20">Integer</jtok>
<jtok eid="38" type="method_call" span="1595:21:1595:29">parseInt</jtok>
<jtok eid="38" type="constructor_call" span="1595:34:1595:43">Character</jtok>
<jtok eid="38" type="primary_name_ref" span="1595:44:1595:45">c</jtok>
<jtok eid="38" type="method_call" span="1595:47:1595:55">toString</jtok>
<jtok eid="38" type="label_ref" span="1598:10:1598:15">loop2</jtok>
<jtok eid="38" type="method_call" span="1600:4:1600:9">error</jtok>
<jtok eid="38" type="string_literal" span="1600:10:1600:52">"illegal character in character reference"</jtok>
<jtok eid="38" type="primary_name_ref" span="1600:54:1600:55">c</jtok>
<jtok eid="38" type="label_ref" span="1601:10:1601:15">loop2</jtok>
<jtok eid="38" type="line_comment" span="1606:5:1606:65">// Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz</jtok>
<jtok eid="38" type="line_comment" span="1607:5:1607:52">//  (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz:</jtok>
<jtok eid="38" type="primary_name_ref" span="1608:9:1608:14">value</jtok>
<jtok eid="38" type="line_comment" span="1609:5:1609:28">// no surrogates needed</jtok>
<jtok eid="38" type="method_call" span="1610:7:1610:23">dataBufferAppend</jtok>
<jtok eid="38" type="primary_name_ref" span="1610:30:1610:35">value</jtok>
<jtok eid="38" type="primary_name_ref" span="1611:16:1611:21">value</jtok>
<jtok eid="38" type="line_comment" span="1612:5:1612:35">// &gt; 16 bits, surrogate needed</jtok>
<jtok eid="38" type="method_call" span="1613:7:1613:23">dataBufferAppend</jtok>
<jtok eid="38" type="primary_name_ref" span="1613:40:1613:45">value</jtok>
<jtok eid="38" type="method_call" span="1614:7:1614:23">dataBufferAppend</jtok>
<jtok eid="38" type="primary_name_ref" span="1614:39:1614:44">value</jtok>
<jtok eid="38" type="line_comment" span="1616:5:1616:29">// too big for surrogate</jtok>
<jtok eid="38" type="method_call" span="1617:7:1617:12">error</jtok>
<jtok eid="38" type="string_literal" span="1617:13:1617:35">"character reference "</jtok>
<jtok eid="38" type="primary_name_ref" span="1617:38:1617:43">value</jtok>
<jtok eid="38" type="string_literal" span="1617:46:1617:72">" is too large for UTF-16"</jtok>
<jtok eid="38" type="constructor_call" span="1618:10:1618:17">Integer</jtok>
<jtok eid="38" type="primary_name_ref" span="1618:18:1618:23">value</jtok>
<jtok eid="38" type="method_call" span="1618:25:1618:33">toString</jtok>
<jtok eid="1" type="block_comment" span="1623:3:1628:7">/**
    * Parse a reference.
    * [69] EntityRef ::= '&amp;' Name ';'
    * *NOTE: the '&amp;' has already been read.
    * @param externalAllowed External entities are allowed here.
    */</jtok>
<jtok eid="39" type="method_name" span="1629:8:1629:22">parseEntityRef</jtok>
<jtok eid="39" type="parameter_name" span="1629:32:1629:47">externalAllowed</jtok>
<jtok eid="39" type="throws" span="1630:12:1630:16">java</jtok>
<jtok eid="39" type="throws" span="1630:17:1630:21">lang</jtok>
<jtok eid="39" type="throws" span="1630:22:1630:31">Exception</jtok>
<jtok eid="39" type="class_or_interface_ref" span="1632:5:1632:11">String</jtok>
<jtok eid="39" type="local_variable_name" span="1632:12:1632:16">name</jtok>
<jtok eid="39" type="primary_name_ref" span="1634:5:1634:9">name</jtok>
<jtok eid="39" type="method_call" span="1634:12:1634:23">readNmtoken</jtok>
<jtok eid="39" type="method_call" span="1635:5:1635:12">require</jtok>
<jtok eid="39" type="method_call" span="1636:13:1636:26">getEntityType</jtok>
<jtok eid="39" type="primary_name_ref" span="1636:27:1636:31">name</jtok>
<jtok eid="39" type="primary_name_ref" span="1637:10:1637:27">ENTITY_UNDECLARED</jtok>
<jtok eid="39" type="method_call" span="1638:7:1638:12">error</jtok>
<jtok eid="39" type="string_literal" span="1638:13:1638:45">"reference to undeclared entity"</jtok>
<jtok eid="39" type="primary_name_ref" span="1638:47:1638:51">name</jtok>
<jtok eid="39" type="primary_name_ref" span="1640:10:1640:25">ENTITY_INTERNAL</jtok>
<jtok eid="39" type="method_call" span="1641:7:1641:17">pushString</jtok>
<jtok eid="39" type="primary_name_ref" span="1641:18:1641:22">name</jtok>
<jtok eid="39" type="method_call" span="1641:24:1641:38">getEntityValue</jtok>
<jtok eid="39" type="primary_name_ref" span="1641:39:1641:43">name</jtok>
<jtok eid="39" type="primary_name_ref" span="1643:10:1643:21">ENTITY_TEXT</jtok>
<jtok eid="39" type="primary_name_ref" span="1644:11:1644:26">externalAllowed</jtok>
<jtok eid="39" type="method_call" span="1645:2:1645:9">pushURL</jtok>
<jtok eid="39" type="primary_name_ref" span="1645:10:1645:14">name</jtok>
<jtok eid="39" type="method_call" span="1645:16:1645:33">getEntityPublicId</jtok>
<jtok eid="39" type="primary_name_ref" span="1645:34:1645:38">name</jtok>
<jtok eid="39" type="method_call" span="1646:3:1646:20">getEntitySystemId</jtok>
<jtok eid="39" type="primary_name_ref" span="1646:21:1646:25">name</jtok>
<jtok eid="39" type="method_call" span="1649:2:1649:7">error</jtok>
<jtok eid="39" type="string_literal" span="1649:8:1649:58">"reference to external entity in attribute value."</jtok>
<jtok eid="39" type="primary_name_ref" span="1649:60:1649:64">name</jtok>
<jtok eid="39" type="primary_name_ref" span="1652:10:1652:22">ENTITY_NDATA</jtok>
<jtok eid="39" type="primary_name_ref" span="1653:11:1653:26">externalAllowed</jtok>
<jtok eid="39" type="method_call" span="1654:2:1654:7">error</jtok>
<jtok eid="39" type="string_literal" span="1654:8:1654:42">"data entity reference in content"</jtok>
<jtok eid="39" type="primary_name_ref" span="1654:44:1654:48">name</jtok>
<jtok eid="39" type="method_call" span="1656:2:1656:7">error</jtok>
<jtok eid="39" type="string_literal" span="1656:8:1656:58">"reference to external entity in attribute value."</jtok>
<jtok eid="39" type="primary_name_ref" span="1656:60:1656:64">name</jtok>
<jtok eid="1" type="block_comment" span="1663:3:1667:7">/**
    * Parse a parameter entity reference.
    * [70] PEReference ::= '%' Name ';'
    * *NOTE: the '%' has already been read.
    */</jtok>
<jtok eid="40" type="method_name" span="1668:8:1668:24">parsePEReference</jtok>
<jtok eid="40" type="parameter_name" span="1668:34:1668:47">isEntityValue</jtok>
<jtok eid="40" type="throws" span="1669:12:1669:16">java</jtok>
<jtok eid="40" type="throws" span="1669:17:1669:21">lang</jtok>
<jtok eid="40" type="throws" span="1669:22:1669:31">Exception</jtok>
<jtok eid="40" type="class_or_interface_ref" span="1671:5:1671:11">String</jtok>
<jtok eid="40" type="local_variable_name" span="1671:12:1671:16">name</jtok>
<jtok eid="40" type="primary_name_ref" span="1673:5:1673:9">name</jtok>
<jtok eid="40" type="string_literal" span="1673:12:1673:15">"%"</jtok>
<jtok eid="40" type="method_call" span="1673:18:1673:29">readNmtoken</jtok>
<jtok eid="40" type="method_call" span="1674:5:1674:12">require</jtok>
<jtok eid="40" type="method_call" span="1675:13:1675:26">getEntityType</jtok>
<jtok eid="40" type="primary_name_ref" span="1675:27:1675:31">name</jtok>
<jtok eid="40" type="primary_name_ref" span="1676:10:1676:27">ENTITY_UNDECLARED</jtok>
<jtok eid="40" type="method_call" span="1677:7:1677:12">error</jtok>
<jtok eid="40" type="string_literal" span="1677:13:1677:55">"reference to undeclared parameter entity"</jtok>
<jtok eid="40" type="primary_name_ref" span="1677:57:1677:61">name</jtok>
<jtok eid="40" type="primary_name_ref" span="1679:10:1679:25">ENTITY_INTERNAL</jtok>
<jtok eid="40" type="primary_name_ref" span="1680:11:1680:24">isEntityValue</jtok>
<jtok eid="40" type="method_call" span="1681:2:1681:12">pushString</jtok>
<jtok eid="40" type="primary_name_ref" span="1681:13:1681:17">name</jtok>
<jtok eid="40" type="method_call" span="1681:19:1681:33">getEntityValue</jtok>
<jtok eid="40" type="primary_name_ref" span="1681:34:1681:38">name</jtok>
<jtok eid="40" type="method_call" span="1683:2:1683:12">pushString</jtok>
<jtok eid="40" type="primary_name_ref" span="1683:13:1683:17">name</jtok>
<jtok eid="40" type="string_literal" span="1683:19:1683:22">" "</jtok>
<jtok eid="40" type="method_call" span="1683:25:1683:39">getEntityValue</jtok>
<jtok eid="40" type="primary_name_ref" span="1683:40:1683:44">name</jtok>
<jtok eid="40" type="primary_name_ref" span="1686:10:1686:21">ENTITY_TEXT</jtok>
<jtok eid="40" type="primary_name_ref" span="1687:11:1687:24">isEntityValue</jtok>
<jtok eid="40" type="method_call" span="1688:2:1688:12">pushString</jtok>
<jtok eid="40" type="string_literal" span="1688:19:1688:22">" "</jtok>
<jtok eid="40" type="method_call" span="1690:7:1690:14">pushURL</jtok>
<jtok eid="40" type="primary_name_ref" span="1690:15:1690:19">name</jtok>
<jtok eid="40" type="method_call" span="1690:21:1690:38">getEntityPublicId</jtok>
<jtok eid="40" type="primary_name_ref" span="1690:39:1690:43">name</jtok>
<jtok eid="40" type="method_call" span="1691:8:1691:25">getEntitySystemId</jtok>
<jtok eid="40" type="primary_name_ref" span="1691:26:1691:30">name</jtok>
<jtok eid="40" type="primary_name_ref" span="1693:11:1693:24">isEntityValue</jtok>
<jtok eid="40" type="method_call" span="1694:2:1694:12">pushString</jtok>
<jtok eid="40" type="string_literal" span="1694:19:1694:22">" "</jtok>
<jtok eid="1" type="block_comment" span="1701:3:1711:7">/**
    * Parse an entity declaration.
    * [71] EntityDecl ::= '&lt;!ENTITY' S %Name S %EntityDef S? '&gt;'
    *                   | '&lt;!ENTITY' S '%' S %Name S %EntityDef S? '&gt;'
    * [72] EntityDef ::= EntityValue | ExternalDef
    * [73] ExternalDef ::= ExternalID %NDataDecl?
    * [74] ExternalID ::= 'SYSTEM' S SystemLiteral
    *                   | 'PUBLIC' S PubidLiteral S SystemLiteral
    * [75] NDataDecl ::= S %'NDATA' S %Name
    * *NOTE: the '&lt;!ENTITY' has already been read.
    */</jtok>
<jtok eid="41" type="method_name" span="1712:8:1712:23">parseEntityDecl</jtok>
<jtok eid="41" type="throws" span="1713:12:1713:16">java</jtok>
<jtok eid="41" type="throws" span="1713:17:1713:21">lang</jtok>
<jtok eid="41" type="throws" span="1713:22:1713:31">Exception</jtok>
<jtok eid="41" type="local_variable_name" span="1715:10:1715:11">c</jtok>
<jtok eid="41" type="local_variable_name" span="1716:13:1716:19">peFlag</jtok>
<jtok eid="41" type="class_or_interface_ref" span="1717:5:1717:11">String</jtok>
<jtok eid="41" type="local_variable_name" span="1717:12:1717:16">name</jtok>
<jtok eid="41" type="local_variable_name" span="1717:18:1717:23">value</jtok>
<jtok eid="41" type="local_variable_name" span="1717:25:1717:37">notationName</jtok>
<jtok eid="41" type="local_variable_name" span="1717:39:1717:42">ids</jtok>
<jtok eid="41" type="line_comment" span="1719:5:1719:37">// Check for a parameter entity.</jtok>
<jtok eid="41" type="method_call" span="1720:5:1720:22">requireWhitespace</jtok>
<jtok eid="41" type="method_call" span="1721:9:1721:16">tryRead</jtok>
<jtok eid="41" type="primary_name_ref" span="1722:7:1722:13">peFlag</jtok>
<jtok eid="41" type="method_call" span="1723:7:1723:24">requireWhitespace</jtok>
<jtok eid="41" type="line_comment" span="1726:5:1726:41">// Read the entity name, and prepend</jtok>
<jtok eid="41" type="line_comment" span="1727:5:1727:25">// '%' if necessary.</jtok>
<jtok eid="41" type="primary_name_ref" span="1728:5:1728:9">name</jtok>
<jtok eid="41" type="method_call" span="1728:12:1728:23">readNmtoken</jtok>
<jtok eid="41" type="primary_name_ref" span="1729:9:1729:15">peFlag</jtok>
<jtok eid="41" type="primary_name_ref" span="1730:7:1730:11">name</jtok>
<jtok eid="41" type="string_literal" span="1730:14:1730:17">"%"</jtok>
<jtok eid="41" type="primary_name_ref" span="1730:20:1730:24">name</jtok>
<jtok eid="41" type="line_comment" span="1733:5:1733:30">// Read the entity value.</jtok>
<jtok eid="41" type="method_call" span="1734:5:1734:22">requireWhitespace</jtok>
<jtok eid="41" type="primary_name_ref" span="1735:5:1735:6">c</jtok>
<jtok eid="41" type="method_call" span="1735:9:1735:15">readCh</jtok>
<jtok eid="41" type="method_call" span="1736:5:1736:11">unread</jtok>
<jtok eid="41" type="primary_name_ref" span="1736:12:1736:13">c</jtok>
<jtok eid="41" type="primary_name_ref" span="1737:9:1737:10">c</jtok>
<jtok eid="41" type="primary_name_ref" span="1737:21:1737:22">c</jtok>
<jtok eid="41" type="line_comment" span="1738:5:1738:24">// Internal entity.</jtok>
<jtok eid="41" type="primary_name_ref" span="1739:7:1739:14">context</jtok>
<jtok eid="41" type="primary_name_ref" span="1739:17:1739:36">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="41" type="primary_name_ref" span="1740:7:1740:12">value</jtok>
<jtok eid="41" type="method_call" span="1740:15:1740:26">readLiteral</jtok>
<jtok eid="41" type="primary_name_ref" span="1740:27:1740:39">LIT_CHAR_REF</jtok>
<jtok eid="41" type="primary_name_ref" span="1740:40:1740:50">LIT_PE_REF</jtok>
<jtok eid="41" type="primary_name_ref" span="1741:7:1741:14">context</jtok>
<jtok eid="41" type="primary_name_ref" span="1741:17:1741:28">CONTEXT_DTD</jtok>
<jtok eid="41" type="method_call" span="1742:7:1742:24">setInternalEntity</jtok>
<jtok eid="41" type="primary_name_ref" span="1742:25:1742:29">name</jtok>
<jtok eid="41" type="primary_name_ref" span="1742:30:1742:35">value</jtok>
<jtok eid="41" type="line_comment" span="1744:5:1744:29">// Read the external IDs</jtok>
<jtok eid="41" type="primary_name_ref" span="1745:7:1745:10">ids</jtok>
<jtok eid="41" type="method_call" span="1745:13:1745:28">readExternalIds</jtok>
<jtok eid="41" type="primary_name_ref" span="1746:11:1746:14">ids</jtok>
<jtok eid="41" type="method_call" span="1747:2:1747:7">error</jtok>
<jtok eid="41" type="string_literal" span="1747:8:1747:34">"system identifer missing"</jtok>
<jtok eid="41" type="primary_name_ref" span="1747:36:1747:40">name</jtok>
<jtok eid="41" type="line_comment" span="1750:5:1750:36">// Check for NDATA declaration.</jtok>
<jtok eid="41" type="method_call" span="1751:7:1751:21">skipWhitespace</jtok>
<jtok eid="41" type="method_call" span="1752:11:1752:18">tryRead</jtok>
<jtok eid="41" type="string_literal" span="1752:19:1752:26">"NDATA"</jtok>
<jtok eid="41" type="method_call" span="1753:2:1753:19">requireWhitespace</jtok>
<jtok eid="41" type="primary_name_ref" span="1754:2:1754:14">notationName</jtok>
<jtok eid="41" type="method_call" span="1754:17:1754:28">readNmtoken</jtok>
<jtok eid="41" type="method_call" span="1755:2:1755:23">setExternalDataEntity</jtok>
<jtok eid="41" type="primary_name_ref" span="1755:24:1755:28">name</jtok>
<jtok eid="41" type="primary_name_ref" span="1755:30:1755:33">ids</jtok>
<jtok eid="41" type="primary_name_ref" span="1755:38:1755:41">ids</jtok>
<jtok eid="41" type="primary_name_ref" span="1755:46:1755:58">notationName</jtok>
<jtok eid="41" type="method_call" span="1757:2:1757:23">setExternalTextEntity</jtok>
<jtok eid="41" type="primary_name_ref" span="1757:24:1757:28">name</jtok>
<jtok eid="41" type="primary_name_ref" span="1757:30:1757:33">ids</jtok>
<jtok eid="41" type="primary_name_ref" span="1757:38:1757:41">ids</jtok>
<jtok eid="41" type="line_comment" span="1761:5:1761:31">// Finish the declaration.</jtok>
<jtok eid="41" type="method_call" span="1762:5:1762:19">skipWhitespace</jtok>
<jtok eid="41" type="method_call" span="1763:5:1763:12">require</jtok>
<jtok eid="1" type="block_comment" span="1767:3:1771:7">/**
    * Parse a notation declaration.
    * [81] NotationDecl ::= '&lt;!NOTATION' S %Name S %ExternalID S? '&gt;'
    * *NOTE: the '&lt;!NOTATION' has already been read.
    */</jtok>
<jtok eid="42" type="method_name" span="1772:8:1772:25">parseNotationDecl</jtok>
<jtok eid="42" type="throws" span="1773:12:1773:16">java</jtok>
<jtok eid="42" type="throws" span="1773:17:1773:21">lang</jtok>
<jtok eid="42" type="throws" span="1773:22:1773:31">Exception</jtok>
<jtok eid="42" type="class_or_interface_ref" span="1775:5:1775:11">String</jtok>
<jtok eid="42" type="local_variable_name" span="1775:12:1775:17">nname</jtok>
<jtok eid="42" type="local_variable_name" span="1775:19:1775:22">ids</jtok>
<jtok eid="42" type="method_call" span="1778:5:1778:22">requireWhitespace</jtok>
<jtok eid="42" type="primary_name_ref" span="1779:5:1779:10">nname</jtok>
<jtok eid="42" type="method_call" span="1779:13:1779:24">readNmtoken</jtok>
<jtok eid="42" type="method_call" span="1781:5:1781:22">requireWhitespace</jtok>
<jtok eid="42" type="line_comment" span="1783:5:1783:38">// Read the external identifiers.</jtok>
<jtok eid="42" type="primary_name_ref" span="1784:5:1784:8">ids</jtok>
<jtok eid="42" type="method_call" span="1784:11:1784:26">readExternalIds</jtok>
<jtok eid="42" type="primary_name_ref" span="1785:9:1785:12">ids</jtok>
<jtok eid="42" type="primary_name_ref" span="1785:27:1785:30">ids</jtok>
<jtok eid="42" type="method_call" span="1786:7:1786:12">error</jtok>
<jtok eid="42" type="string_literal" span="1786:13:1786:41">"external identifer missing"</jtok>
<jtok eid="42" type="primary_name_ref" span="1786:43:1786:48">nname</jtok>
<jtok eid="42" type="line_comment" span="1789:5:1789:30">// Register the notation.</jtok>
<jtok eid="42" type="method_call" span="1790:5:1790:16">setNotation</jtok>
<jtok eid="42" type="primary_name_ref" span="1790:17:1790:22">nname</jtok>
<jtok eid="42" type="primary_name_ref" span="1790:24:1790:27">ids</jtok>
<jtok eid="42" type="primary_name_ref" span="1790:32:1790:35">ids</jtok>
<jtok eid="42" type="method_call" span="1792:5:1792:19">skipWhitespace</jtok>
<jtok eid="42" type="method_call" span="1793:5:1793:12">require</jtok>
<jtok eid="1" type="block_comment" span="1797:3:1804:7">/**
    * Parse PCDATA.
    * &lt;pre&gt;
    * [16] PCData ::= [^&amp;lt;&amp;amp;]*
    * &lt;/pre&gt;
    * &lt;p&gt;The trick here is that the data stays in the dataBuffer without
    * necessarily being converted to a string right away.
    */</jtok>
<jtok eid="43" type="method_name" span="1805:8:1805:19">parsePCData</jtok>
<jtok eid="43" type="throws" span="1806:12:1806:16">java</jtok>
<jtok eid="43" type="throws" span="1806:17:1806:21">lang</jtok>
<jtok eid="43" type="throws" span="1806:22:1806:31">Exception</jtok>
<jtok eid="43" type="local_variable_name" span="1808:10:1808:11">c</jtok>
<jtok eid="43" type="line_comment" span="1810:5:1810:44">// Start with a little cheat -- in most</jtok>
<jtok eid="43" type="line_comment" span="1811:5:1811:37">// cases, the entire sequence of</jtok>
<jtok eid="43" type="line_comment" span="1812:5:1812:41">// character data will already be in</jtok>
<jtok eid="43" type="line_comment" span="1813:5:1813:47">// the readBuffer; if not, fall through to</jtok>
<jtok eid="43" type="line_comment" span="1814:5:1814:28">// the normal approach.</jtok>
<jtok eid="43" type="primary_name_ref" span="1815:9:1815:19">USE_CHEATS</jtok>
<jtok eid="43" type="local_variable_name" span="1816:11:1816:22">lineAugment</jtok>
<jtok eid="43" type="local_variable_name" span="1817:11:1817:24">columnAugment</jtok>
<jtok eid="43" type="label_name" span="1819:7:1819:11">loop</jtok>
<jtok eid="43" type="local_variable_name" span="1819:22:1819:23">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1819:26:1819:39">readBufferPos</jtok>
<jtok eid="43" type="primary_name_ref" span="1819:41:1819:42">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1819:45:1819:61">readBufferLength</jtok>
<jtok eid="43" type="primary_name_ref" span="1819:63:1819:64">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1820:10:1820:20">readBuffer</jtok>
<jtok eid="43" type="primary_name_ref" span="1820:21:1820:22">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1822:4:1822:15">lineAugment</jtok>
<jtok eid="43" type="primary_name_ref" span="1823:4:1823:17">columnAugment</jtok>
<jtok eid="43" type="local_variable_name" span="1827:8:1827:13">start</jtok>
<jtok eid="43" type="primary_name_ref" span="1827:16:1827:29">readBufferPos</jtok>
<jtok eid="43" type="primary_name_ref" span="1828:4:1828:17">columnAugment</jtok>
<jtok eid="43" type="primary_name_ref" span="1829:4:1829:17">readBufferPos</jtok>
<jtok eid="43" type="primary_name_ref" span="1829:20:1829:21">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1830:8:1830:19">lineAugment</jtok>
<jtok eid="43" type="primary_name_ref" span="1831:6:1831:10">line</jtok>
<jtok eid="43" type="primary_name_ref" span="1831:14:1831:25">lineAugment</jtok>
<jtok eid="43" type="primary_name_ref" span="1832:6:1832:12">column</jtok>
<jtok eid="43" type="primary_name_ref" span="1832:15:1832:28">columnAugment</jtok>
<jtok eid="43" type="primary_name_ref" span="1834:6:1834:12">column</jtok>
<jtok eid="43" type="primary_name_ref" span="1834:16:1834:29">columnAugment</jtok>
<jtok eid="43" type="method_call" span="1836:4:1836:20">dataBufferAppend</jtok>
<jtok eid="43" type="primary_name_ref" span="1836:21:1836:31">readBuffer</jtok>
<jtok eid="43" type="primary_name_ref" span="1836:33:1836:38">start</jtok>
<jtok eid="43" type="primary_name_ref" span="1836:40:1836:41">i</jtok>
<jtok eid="43" type="primary_name_ref" span="1836:42:1836:47">start</jtok>
<jtok eid="43" type="primary_name_ref" span="1839:4:1839:17">columnAugment</jtok>
<jtok eid="43" type="line_comment" span="1844:5:1844:45">// OK, the cheat didn't work; start over</jtok>
<jtok eid="43" type="line_comment" span="1845:5:1845:30">// and do it by the book.</jtok>
<jtok eid="43" type="primary_name_ref" span="1847:7:1847:8">c</jtok>
<jtok eid="43" type="method_call" span="1847:11:1847:17">readCh</jtok>
<jtok eid="43" type="primary_name_ref" span="1848:15:1848:16">c</jtok>
<jtok eid="43" type="method_call" span="1851:2:1851:8">unread</jtok>
<jtok eid="43" type="primary_name_ref" span="1851:9:1851:10">c</jtok>
<jtok eid="43" type="method_call" span="1854:2:1854:18">dataBufferAppend</jtok>
<jtok eid="43" type="primary_name_ref" span="1854:19:1854:20">c</jtok>
<jtok eid="1" type="line_comment" span="1862:3:1862:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="1863:3:1863:46">// High-level reading and scanning methods.</jtok>
<jtok eid="1" type="line_comment" span="1864:3:1864:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="1866:3:1869:7">/**
    * Require whitespace characters.
    * [1] S ::= (#x20 | #x9 | #xd | #xa)+
    */</jtok>
<jtok eid="44" type="method_name" span="1870:8:1870:25">requireWhitespace</jtok>
<jtok eid="44" type="throws" span="1871:12:1871:16">java</jtok>
<jtok eid="44" type="throws" span="1871:17:1871:21">lang</jtok>
<jtok eid="44" type="throws" span="1871:22:1871:31">Exception</jtok>
<jtok eid="44" type="local_variable_name" span="1873:10:1873:11">c</jtok>
<jtok eid="44" type="method_call" span="1873:14:1873:20">readCh</jtok>
<jtok eid="44" type="method_call" span="1874:9:1874:21">isWhitespace</jtok>
<jtok eid="44" type="primary_name_ref" span="1874:22:1874:23">c</jtok>
<jtok eid="44" type="method_call" span="1875:7:1875:21">skipWhitespace</jtok>
<jtok eid="44" type="method_call" span="1877:7:1877:12">error</jtok>
<jtok eid="44" type="string_literal" span="1877:13:1877:34">"whitespace expected"</jtok>
<jtok eid="44" type="primary_name_ref" span="1877:36:1877:37">c</jtok>
<jtok eid="1" type="block_comment" span="1882:3:1884:7">/**
    * Parse whitespace characters, and leave them in the data buffer.
    */</jtok>
<jtok eid="45" type="method_name" span="1885:8:1885:23">parseWhitespace</jtok>
<jtok eid="45" type="throws" span="1886:12:1886:16">java</jtok>
<jtok eid="45" type="throws" span="1886:17:1886:21">lang</jtok>
<jtok eid="45" type="throws" span="1886:22:1886:31">Exception</jtok>
<jtok eid="45" type="local_variable_name" span="1888:10:1888:11">c</jtok>
<jtok eid="45" type="method_call" span="1888:14:1888:20">readCh</jtok>
<jtok eid="45" type="method_call" span="1889:12:1889:24">isWhitespace</jtok>
<jtok eid="45" type="primary_name_ref" span="1889:25:1889:26">c</jtok>
<jtok eid="45" type="method_call" span="1890:7:1890:23">dataBufferAppend</jtok>
<jtok eid="45" type="primary_name_ref" span="1890:24:1890:25">c</jtok>
<jtok eid="45" type="primary_name_ref" span="1891:7:1891:8">c</jtok>
<jtok eid="45" type="method_call" span="1891:11:1891:17">readCh</jtok>
<jtok eid="45" type="method_call" span="1893:5:1893:11">unread</jtok>
<jtok eid="45" type="primary_name_ref" span="1893:12:1893:13">c</jtok>
<jtok eid="1" type="block_comment" span="1897:3:1900:7">/**
    * Skip whitespace characters.
    * [1] S ::= (#x20 | #x9 | #xd | #xa)+
    */</jtok>
<jtok eid="46" type="method_name" span="1901:8:1901:22">skipWhitespace</jtok>
<jtok eid="46" type="throws" span="1902:12:1902:16">java</jtok>
<jtok eid="46" type="throws" span="1902:17:1902:21">lang</jtok>
<jtok eid="46" type="throws" span="1902:22:1902:31">Exception</jtok>
<jtok eid="46" type="line_comment" span="1904:5:1904:43">// Start with a little cheat.  Most of</jtok>
<jtok eid="46" type="line_comment" span="1905:5:1905:43">// the time, the white space will fall</jtok>
<jtok eid="46" type="line_comment" span="1906:5:1906:42">// within the current read buffer; if</jtok>
<jtok eid="46" type="line_comment" span="1907:5:1907:31">// not, then fall through.</jtok>
<jtok eid="46" type="primary_name_ref" span="1908:9:1908:19">USE_CHEATS</jtok>
<jtok eid="46" type="local_variable_name" span="1909:11:1909:22">lineAugment</jtok>
<jtok eid="46" type="local_variable_name" span="1910:11:1910:24">columnAugment</jtok>
<jtok eid="46" type="label_name" span="1912:7:1912:11">loop</jtok>
<jtok eid="46" type="local_variable_name" span="1912:22:1912:23">i</jtok>
<jtok eid="46" type="primary_name_ref" span="1912:26:1912:39">readBufferPos</jtok>
<jtok eid="46" type="primary_name_ref" span="1912:41:1912:42">i</jtok>
<jtok eid="46" type="primary_name_ref" span="1912:45:1912:61">readBufferLength</jtok>
<jtok eid="46" type="primary_name_ref" span="1912:63:1912:64">i</jtok>
<jtok eid="46" type="primary_name_ref" span="1913:10:1913:20">readBuffer</jtok>
<jtok eid="46" type="primary_name_ref" span="1913:21:1913:22">i</jtok>
<jtok eid="46" type="primary_name_ref" span="1917:4:1917:17">columnAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1920:4:1920:15">lineAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1921:4:1921:17">columnAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1924:8:1924:15">context</jtok>
<jtok eid="46" type="primary_name_ref" span="1924:19:1924:30">CONTEXT_DTD</jtok>
<jtok eid="46" type="primary_name_ref" span="1924:34:1924:41">context</jtok>
<jtok eid="46" type="primary_name_ref" span="1924:45:1924:64">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="46" type="label_ref" span="1925:12:1925:16">loop</jtok>
<jtok eid="46" type="line_comment" span="1926:6:1926:29">// else fall through...</jtok>
<jtok eid="46" type="primary_name_ref" span="1928:4:1928:17">readBufferPos</jtok>
<jtok eid="46" type="primary_name_ref" span="1928:20:1928:21">i</jtok>
<jtok eid="46" type="primary_name_ref" span="1929:8:1929:19">lineAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1930:6:1930:10">line</jtok>
<jtok eid="46" type="primary_name_ref" span="1930:14:1930:25">lineAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1931:6:1931:12">column</jtok>
<jtok eid="46" type="primary_name_ref" span="1931:15:1931:28">columnAugment</jtok>
<jtok eid="46" type="primary_name_ref" span="1933:6:1933:12">column</jtok>
<jtok eid="46" type="primary_name_ref" span="1933:16:1933:29">columnAugment</jtok>
<jtok eid="46" type="line_comment" span="1940:5:1940:30">// OK, do it by the book.</jtok>
<jtok eid="46" type="local_variable_name" span="1941:10:1941:11">c</jtok>
<jtok eid="46" type="method_call" span="1941:14:1941:20">readCh</jtok>
<jtok eid="46" type="method_call" span="1942:12:1942:24">isWhitespace</jtok>
<jtok eid="46" type="primary_name_ref" span="1942:25:1942:26">c</jtok>
<jtok eid="46" type="primary_name_ref" span="1943:7:1943:8">c</jtok>
<jtok eid="46" type="method_call" span="1943:11:1943:17">readCh</jtok>
<jtok eid="46" type="method_call" span="1945:5:1945:11">unread</jtok>
<jtok eid="46" type="primary_name_ref" span="1945:12:1945:13">c</jtok>
<jtok eid="1" type="block_comment" span="1949:3:1954:7">/**
    * Read a name or name token.
    * [5] Name ::= (Letter | '_' | ':') (NameChar)*
    * [7] Nmtoken ::= (NameChar)+
    * *NOTE: [6] is implemented implicitly where required.
    */</jtok>
<jtok eid="47" type="class_or_interface_ref" span="1955:3:1955:9">String</jtok>
<jtok eid="47" type="method_name" span="1955:10:1955:21">readNmtoken</jtok>
<jtok eid="47" type="parameter_name" span="1955:31:1955:37">isName</jtok>
<jtok eid="47" type="throws" span="1956:12:1956:16">java</jtok>
<jtok eid="47" type="throws" span="1956:17:1956:21">lang</jtok>
<jtok eid="47" type="throws" span="1956:22:1956:31">Exception</jtok>
<jtok eid="47" type="local_variable_name" span="1958:10:1958:11">c</jtok>
<jtok eid="47" type="primary_name_ref" span="1960:9:1960:19">USE_CHEATS</jtok>
<jtok eid="47" type="label_name" span="1961:7:1961:11">loop</jtok>
<jtok eid="47" type="local_variable_name" span="1961:22:1961:23">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1961:26:1961:39">readBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="1961:41:1961:42">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1961:45:1961:61">readBufferLength</jtok>
<jtok eid="47" type="primary_name_ref" span="1961:63:1961:64">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1962:10:1962:20">readBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="1962:21:1962:22">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1964:8:1964:15">context</jtok>
<jtok eid="47" type="primary_name_ref" span="1964:19:1964:30">CONTEXT_DTD</jtok>
<jtok eid="47" type="primary_name_ref" span="1964:34:1964:41">context</jtok>
<jtok eid="47" type="primary_name_ref" span="1964:45:1964:64">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="47" type="label_ref" span="1965:12:1965:16">loop</jtok>
<jtok eid="47" type="line_comment" span="1966:6:1966:29">// else fall through...</jtok>
<jtok eid="47" type="local_variable_name" span="1987:8:1987:13">start</jtok>
<jtok eid="47" type="primary_name_ref" span="1987:16:1987:29">readBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="1988:8:1988:9">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1988:13:1988:18">start</jtok>
<jtok eid="47" type="method_call" span="1989:6:1989:11">error</jtok>
<jtok eid="47" type="string_literal" span="1989:12:1989:27">"name expected"</jtok>
<jtok eid="47" type="primary_name_ref" span="1989:29:1989:39">readBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="1989:40:1989:41">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1991:4:1991:17">readBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="1991:20:1991:21">i</jtok>
<jtok eid="47" type="method_call" span="1992:11:1992:17">intern</jtok>
<jtok eid="47" type="primary_name_ref" span="1992:18:1992:28">readBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="1992:30:1992:35">start</jtok>
<jtok eid="47" type="primary_name_ref" span="1992:37:1992:38">i</jtok>
<jtok eid="47" type="primary_name_ref" span="1992:41:1992:46">start</jtok>
<jtok eid="47" type="primary_name_ref" span="1997:5:1997:18">nameBufferPos</jtok>
<jtok eid="47" type="line_comment" span="1999:5:1999:33">// Read the first character.</jtok>
<jtok eid="47" type="label_name" span="2000:5:2000:9">loop</jtok>
<jtok eid="47" type="primary_name_ref" span="2001:7:2001:8">c</jtok>
<jtok eid="47" type="method_call" span="2001:11:2001:17">readCh</jtok>
<jtok eid="47" type="primary_name_ref" span="2002:15:2002:16">c</jtok>
<jtok eid="47" type="method_call" span="2023:2:2023:8">unread</jtok>
<jtok eid="47" type="primary_name_ref" span="2023:9:2023:10">c</jtok>
<jtok eid="47" type="primary_name_ref" span="2024:6:2024:19">nameBufferPos</jtok>
<jtok eid="47" type="method_call" span="2025:4:2025:9">error</jtok>
<jtok eid="47" type="string_literal" span="2025:10:2025:25">"name expected"</jtok>
<jtok eid="47" type="class_or_interface_ref" span="2027:2:2027:8">String</jtok>
<jtok eid="47" type="local_variable_name" span="2027:9:2027:10">s</jtok>
<jtok eid="47" type="method_call" span="2027:13:2027:19">intern</jtok>
<jtok eid="47" type="primary_name_ref" span="2027:20:2027:30">nameBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="2027:33:2027:46">nameBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="2028:2:2028:15">nameBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="2029:9:2029:10">s</jtok>
<jtok eid="47" type="primary_name_ref" span="2031:2:2031:12">nameBuffer</jtok>
<jtok eid="47" type="method_call" span="2032:12:2032:23">extendArray</jtok>
<jtok eid="47" type="primary_name_ref" span="2032:24:2032:34">nameBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="2032:36:2032:46">nameBuffer</jtok>
<jtok eid="47" type="qualified_name_ref" span="2032:47:2032:53">length</jtok>
<jtok eid="47" type="primary_name_ref" span="2032:55:2032:68">nameBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="2033:2:2033:12">nameBuffer</jtok>
<jtok eid="47" type="primary_name_ref" span="2033:13:2033:26">nameBufferPos</jtok>
<jtok eid="47" type="primary_name_ref" span="2033:32:2033:33">c</jtok>
<jtok eid="1" type="block_comment" span="2039:3:2047:7">/**
    * Read a literal.
    * [10] AttValue ::= '"' ([^&lt;&amp;"] | Reference)* '"'
    *                 | "'" ([^&lt;&amp;'] | Reference)* "'"
    * [11] SystemLiteral ::= '"' URLchar* '"' | "'" (URLchar - "'")* "'"
    * [13] PubidLiteral ::= '"' PubidChar* '"' | "'" (PubidChar - "'")* "'"
    * [9] EntityValue ::= '"' ([^%&amp;"] | PEReference | Reference)* '"'
    *                   | "'" ([^%&amp;'] | PEReference | Reference)* "'"
    */</jtok>
<jtok eid="48" type="class_or_interface_ref" span="2048:3:2048:9">String</jtok>
<jtok eid="48" type="method_name" span="2048:10:2048:21">readLiteral</jtok>
<jtok eid="48" type="parameter_name" span="2048:27:2048:32">flags</jtok>
<jtok eid="48" type="throws" span="2049:12:2049:16">java</jtok>
<jtok eid="48" type="throws" span="2049:17:2049:21">lang</jtok>
<jtok eid="48" type="throws" span="2049:22:2049:31">Exception</jtok>
<jtok eid="48" type="local_variable_name" span="2051:10:2051:15">delim</jtok>
<jtok eid="48" type="local_variable_name" span="2051:17:2051:18">c</jtok>
<jtok eid="48" type="local_variable_name" span="2052:9:2052:18">startLine</jtok>
<jtok eid="48" type="primary_name_ref" span="2052:21:2052:25">line</jtok>
<jtok eid="48" type="line_comment" span="2054:5:2054:27">// Find the delimiter.</jtok>
<jtok eid="48" type="primary_name_ref" span="2055:5:2055:10">delim</jtok>
<jtok eid="48" type="method_call" span="2055:13:2055:19">readCh</jtok>
<jtok eid="48" type="primary_name_ref" span="2056:9:2056:14">delim</jtok>
<jtok eid="48" type="primary_name_ref" span="2056:25:2056:30">delim</jtok>
<jtok eid="48" type="primary_name_ref" span="2056:42:2056:47">delim</jtok>
<jtok eid="48" type="method_call" span="2057:7:2057:12">error</jtok>
<jtok eid="48" type="string_literal" span="2057:13:2057:37">"expected '\"' or \"'\""</jtok>
<jtok eid="48" type="primary_name_ref" span="2057:39:2057:44">delim</jtok>
<jtok eid="48" type="line_comment" span="2061:5:2061:25">// Read the literal.</jtok>
<jtok eid="48" type="primary_name_ref" span="2063:7:2063:8">c</jtok>
<jtok eid="48" type="method_call" span="2063:11:2063:17">readCh</jtok>
<jtok eid="48" type="label_name" span="2065:5:2065:9">loop</jtok>
<jtok eid="48" type="primary_name_ref" span="2065:18:2065:19">c</jtok>
<jtok eid="48" type="primary_name_ref" span="2065:23:2065:28">delim</jtok>
<jtok eid="48" type="primary_name_ref" span="2066:15:2066:16">c</jtok>
<jtok eid="48" type="line_comment" span="2067:5:2067:37">// Literals never have line ends</jtok>
<jtok eid="48" type="primary_name_ref" span="2070:2:2070:3">c</jtok>
<jtok eid="48" type="line_comment" span="2072:5:2072:33">// References may be allowed</jtok>
<jtok eid="48" type="primary_name_ref" span="2074:7:2074:12">flags</jtok>
<jtok eid="48" type="primary_name_ref" span="2074:15:2074:27">LIT_CHAR_REF</jtok>
<jtok eid="48" type="primary_name_ref" span="2075:4:2075:5">c</jtok>
<jtok eid="48" type="method_call" span="2075:8:2075:14">readCh</jtok>
<jtok eid="48" type="primary_name_ref" span="2076:8:2076:9">c</jtok>
<jtok eid="48" type="method_call" span="2077:6:2077:18">parseCharRef</jtok>
<jtok eid="48" type="primary_name_ref" span="2078:6:2078:7">c</jtok>
<jtok eid="48" type="method_call" span="2078:10:2078:16">readCh</jtok>
<jtok eid="48" type="label_ref" span="2079:15:2079:19">loop</jtok>
<jtok eid="48" type="line_comment" span="2079:22:2079:49">// check the next character</jtok>
<jtok eid="48" type="primary_name_ref" span="2080:16:2080:21">flags</jtok>
<jtok eid="48" type="primary_name_ref" span="2080:24:2080:38">LIT_ENTITY_REF</jtok>
<jtok eid="48" type="method_call" span="2081:6:2081:12">unread</jtok>
<jtok eid="48" type="primary_name_ref" span="2081:13:2081:14">c</jtok>
<jtok eid="48" type="method_call" span="2082:6:2082:20">parseEntityRef</jtok>
<jtok eid="48" type="primary_name_ref" span="2083:6:2083:7">c</jtok>
<jtok eid="48" type="method_call" span="2083:10:2083:16">readCh</jtok>
<jtok eid="48" type="label_ref" span="2084:15:2084:19">loop</jtok>
<jtok eid="48" type="method_call" span="2086:6:2086:22">dataBufferAppend</jtok>
<jtok eid="48" type="method_call" span="2094:7:2094:23">dataBufferAppend</jtok>
<jtok eid="48" type="primary_name_ref" span="2094:24:2094:25">c</jtok>
<jtok eid="48" type="primary_name_ref" span="2095:7:2095:8">c</jtok>
<jtok eid="48" type="method_call" span="2095:11:2095:17">readCh</jtok>
<jtok eid="48" type="class_or_interface_ref" span="2097:14:2097:26">EOFException</jtok>
<jtok eid="48" type="local_variable_name" span="2097:27:2097:28">e</jtok>
<jtok eid="48" type="method_call" span="2098:7:2098:12">error</jtok>
<jtok eid="48" type="string_literal" span="2098:13:2098:73">"end of input while looking for delimiter (started on line "</jtok>
<jtok eid="48" type="primary_name_ref" span="2099:8:2099:17">startLine</jtok>
<jtok eid="48" type="constructor_call" span="2099:35:2099:44">Character</jtok>
<jtok eid="48" type="primary_name_ref" span="2099:45:2099:50">delim</jtok>
<jtok eid="48" type="method_call" span="2099:52:2099:60">toString</jtok>
<jtok eid="48" type="line_comment" span="2102:5:2102:42">// Normalise whitespace if necessary.</jtok>
<jtok eid="48" type="primary_name_ref" span="2103:10:2103:15">flags</jtok>
<jtok eid="48" type="primary_name_ref" span="2103:18:2103:31">LIT_NORMALIZE</jtok>
<jtok eid="48" type="method_call" span="2104:7:2104:26">dataBufferNormalize</jtok>
<jtok eid="48" type="line_comment" span="2107:5:2107:25">// Return the value.</jtok>
<jtok eid="48" type="method_call" span="2108:12:2108:30">dataBufferToString</jtok>
<jtok eid="1" type="block_comment" span="2112:3:2117:7">/**
    * Try reading external identifiers.
    * &lt;p&gt;The system identifier is not required for notations.
    * @param inNotation Are we in a notation?
    * @return A two-member String array containing the identifiers.
    */</jtok>
<jtok eid="49" type="class_or_interface_ref" span="2118:3:2118:9">String</jtok>
<jtok eid="49" type="method_name" span="2118:12:2118:27">readExternalIds</jtok>
<jtok eid="49" type="parameter_name" span="2118:37:2118:47">inNotation</jtok>
<jtok eid="49" type="throws" span="2119:12:2119:16">java</jtok>
<jtok eid="49" type="throws" span="2119:17:2119:21">lang</jtok>
<jtok eid="49" type="throws" span="2119:22:2119:31">Exception</jtok>
<jtok eid="49" type="local_variable_name" span="2121:10:2121:11">c</jtok>
<jtok eid="49" type="class_or_interface_ref" span="2122:5:2122:11">String</jtok>
<jtok eid="49" type="local_variable_name" span="2122:12:2122:15">ids</jtok>
<jtok eid="49" type="constructor_call" span="2122:24:2122:30">String</jtok>
<jtok eid="49" type="method_call" span="2124:9:2124:16">tryRead</jtok>
<jtok eid="49" type="string_literal" span="2124:17:2124:25">"PUBLIC"</jtok>
<jtok eid="49" type="method_call" span="2125:7:2125:24">requireWhitespace</jtok>
<jtok eid="49" type="primary_name_ref" span="2126:7:2126:10">ids</jtok>
<jtok eid="49" type="method_call" span="2126:16:2126:27">readLiteral</jtok>
<jtok eid="49" type="primary_name_ref" span="2126:28:2126:41">LIT_NORMALIZE</jtok>
<jtok eid="49" type="line_comment" span="2126:44:2126:56">// public id</jtok>
<jtok eid="49" type="primary_name_ref" span="2127:11:2127:21">inNotation</jtok>
<jtok eid="49" type="method_call" span="2128:2:2128:16">skipWhitespace</jtok>
<jtok eid="49" type="method_call" span="2129:6:2129:13">tryRead</jtok>
<jtok eid="49" type="method_call" span="2129:22:2129:29">tryRead</jtok>
<jtok eid="49" type="primary_name_ref" span="2130:4:2130:7">ids</jtok>
<jtok eid="49" type="method_call" span="2130:13:2130:24">readLiteral</jtok>
<jtok eid="49" type="method_call" span="2133:2:2133:19">requireWhitespace</jtok>
<jtok eid="49" type="primary_name_ref" span="2134:2:2134:5">ids</jtok>
<jtok eid="49" type="method_call" span="2134:11:2134:22">readLiteral</jtok>
<jtok eid="49" type="line_comment" span="2134:27:2134:39">// system id</jtok>
<jtok eid="49" type="method_call" span="2136:16:2136:23">tryRead</jtok>
<jtok eid="49" type="string_literal" span="2136:24:2136:32">"SYSTEM"</jtok>
<jtok eid="49" type="method_call" span="2137:7:2137:24">requireWhitespace</jtok>
<jtok eid="49" type="primary_name_ref" span="2138:7:2138:10">ids</jtok>
<jtok eid="49" type="method_call" span="2138:16:2138:27">readLiteral</jtok>
<jtok eid="49" type="line_comment" span="2138:32:2138:44">// system id</jtok>
<jtok eid="49" type="primary_name_ref" span="2141:12:2141:15">ids</jtok>
<jtok eid="1" type="block_comment" span="2145:3:2152:7">/**
    * Test if a character is whitespace.
    * &lt;pre&gt;
    * [1] S ::= (#x20 | #x9 | #xd | #xa)+
    * &lt;/pre&gt;
    * @param c The character to test.
    * @return true if the character is whitespace.
    */</jtok>
<jtok eid="50" type="method_name" span="2153:17:2153:29">isWhitespace</jtok>
<jtok eid="50" type="parameter_name" span="2153:36:2153:37">c</jtok>
<jtok eid="50" type="primary_name_ref" span="2155:18:2155:19">c</jtok>
<jtok eid="1" type="line_comment" span="2168:3:2168:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="2169:3:2169:23">// Utility routines.</jtok>
<jtok eid="1" type="line_comment" span="2170:3:2170:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="2173:3:2175:7">/**
    * Add a character to the data buffer.
    */</jtok>
<jtok eid="51" type="method_name" span="2176:8:2176:24">dataBufferAppend</jtok>
<jtok eid="51" type="parameter_name" span="2176:31:2176:32">c</jtok>
<jtok eid="51" type="line_comment" span="2178:5:2178:35">// Expand buffer if necessary.</jtok>
<jtok eid="51" type="primary_name_ref" span="2179:5:2179:15">dataBuffer</jtok>
<jtok eid="51" type="method_call" span="2180:15:2180:26">extendArray</jtok>
<jtok eid="51" type="primary_name_ref" span="2180:27:2180:37">dataBuffer</jtok>
<jtok eid="51" type="primary_name_ref" span="2180:39:2180:49">dataBuffer</jtok>
<jtok eid="51" type="qualified_name_ref" span="2180:50:2180:56">length</jtok>
<jtok eid="51" type="primary_name_ref" span="2180:58:2180:71">dataBufferPos</jtok>
<jtok eid="51" type="primary_name_ref" span="2181:5:2181:15">dataBuffer</jtok>
<jtok eid="51" type="primary_name_ref" span="2181:16:2181:29">dataBufferPos</jtok>
<jtok eid="51" type="primary_name_ref" span="2181:35:2181:36">c</jtok>
<jtok eid="1" type="block_comment" span="2185:3:2187:7">/** 
    * Add a string to the data buffer.
    */</jtok>
<jtok eid="52" type="method_name" span="2188:8:2188:24">dataBufferAppend</jtok>
<jtok eid="52" type="parameter_type" span="2188:26:2188:32">String</jtok>
<jtok eid="52" type="parameter_name" span="2188:33:2188:34">s</jtok>
<jtok eid="52" type="method_call" span="2190:5:2190:21">dataBufferAppend</jtok>
<jtok eid="52" type="primary_name_ref" span="2190:22:2190:23">s</jtok>
<jtok eid="52" type="method_call" span="2190:24:2190:35">toCharArray</jtok>
<jtok eid="52" type="primary_name_ref" span="2190:42:2190:43">s</jtok>
<jtok eid="52" type="method_call" span="2190:44:2190:50">length</jtok>
<jtok eid="1" type="block_comment" span="2194:3:2196:7">/**
    * Append (part of) a character array to the data buffer.
    */</jtok>
<jtok eid="53" type="method_name" span="2197:8:2197:24">dataBufferAppend</jtok>
<jtok eid="53" type="parameter_name" span="2197:31:2197:33">ch</jtok>
<jtok eid="53" type="parameter_name" span="2197:41:2197:46">start</jtok>
<jtok eid="53" type="parameter_name" span="2197:52:2197:58">length</jtok>
<jtok eid="53" type="primary_name_ref" span="2199:5:2199:15">dataBuffer</jtok>
<jtok eid="53" type="method_call" span="2200:15:2200:26">extendArray</jtok>
<jtok eid="53" type="primary_name_ref" span="2200:27:2200:37">dataBuffer</jtok>
<jtok eid="53" type="primary_name_ref" span="2200:39:2200:49">dataBuffer</jtok>
<jtok eid="53" type="qualified_name_ref" span="2200:50:2200:56">length</jtok>
<jtok eid="53" type="primary_name_ref" span="2201:6:2201:19">dataBufferPos</jtok>
<jtok eid="53" type="primary_name_ref" span="2201:22:2201:28">length</jtok>
<jtok eid="53" type="primary_name_ref" span="2202:5:2202:11">System</jtok>
<jtok eid="53" type="method_call" span="2202:12:2202:21">arraycopy</jtok>
<jtok eid="53" type="class_or_interface_ref" span="2202:23:2202:29">Object</jtok>
<jtok eid="53" type="primary_name_ref" span="2202:30:2202:32">ch</jtok>
<jtok eid="53" type="primary_name_ref" span="2202:34:2202:39">start</jtok>
<jtok eid="53" type="class_or_interface_ref" span="2203:9:2203:15">Object</jtok>
<jtok eid="53" type="primary_name_ref" span="2203:16:2203:26">dataBuffer</jtok>
<jtok eid="53" type="primary_name_ref" span="2203:28:2203:41">dataBufferPos</jtok>
<jtok eid="53" type="primary_name_ref" span="2204:8:2204:14">length</jtok>
<jtok eid="53" type="primary_name_ref" span="2205:5:2205:18">dataBufferPos</jtok>
<jtok eid="53" type="primary_name_ref" span="2205:22:2205:28">length</jtok>
<jtok eid="1" type="block_comment" span="2209:3:2211:7">/**
    * Normalise whitespace in the data buffer.
    */</jtok>
<jtok eid="54" type="method_name" span="2212:8:2212:27">dataBufferNormalize</jtok>
<jtok eid="54" type="local_variable_name" span="2214:9:2214:10">i</jtok>
<jtok eid="54" type="local_variable_name" span="2215:9:2215:10">j</jtok>
<jtok eid="54" type="local_variable_name" span="2216:9:2216:12">end</jtok>
<jtok eid="54" type="primary_name_ref" span="2216:15:2216:28">dataBufferPos</jtok>
<jtok eid="54" type="line_comment" span="2218:5:2218:37">// Skip whitespace at the start.</jtok>
<jtok eid="54" type="primary_name_ref" span="2219:12:2219:13">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2219:16:2219:19">end</jtok>
<jtok eid="54" type="method_call" span="2219:23:2219:35">isWhitespace</jtok>
<jtok eid="54" type="primary_name_ref" span="2219:36:2219:46">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2219:47:2219:48">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2220:7:2220:8">j</jtok>
<jtok eid="54" type="line_comment" span="2223:5:2223:35">// Skip whitespace at the end.</jtok>
<jtok eid="54" type="primary_name_ref" span="2224:12:2224:15">end</jtok>
<jtok eid="54" type="primary_name_ref" span="2224:18:2224:19">j</jtok>
<jtok eid="54" type="method_call" span="2224:23:2224:35">isWhitespace</jtok>
<jtok eid="54" type="primary_name_ref" span="2224:36:2224:46">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2224:47:2224:50">end</jtok>
<jtok eid="54" type="primary_name_ref" span="2225:7:2225:10">end</jtok>
<jtok eid="54" type="line_comment" span="2228:5:2228:34">// Start copying to the left.</jtok>
<jtok eid="54" type="primary_name_ref" span="2229:12:2229:13">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2229:16:2229:19">end</jtok>
<jtok eid="54" type="local_variable_name" span="2231:12:2231:13">c</jtok>
<jtok eid="54" type="primary_name_ref" span="2231:16:2231:26">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2231:27:2231:28">j</jtok>
<jtok eid="54" type="line_comment" span="2233:5:2233:41">// Normalise all other whitespace to</jtok>
<jtok eid="54" type="line_comment" span="2234:5:2234:23">// a single space.</jtok>
<jtok eid="54" type="method_call" span="2235:11:2235:23">isWhitespace</jtok>
<jtok eid="54" type="primary_name_ref" span="2235:24:2235:25">c</jtok>
<jtok eid="54" type="primary_name_ref" span="2236:9:2236:10">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2236:13:2236:16">end</jtok>
<jtok eid="54" type="method_call" span="2236:20:2236:32">isWhitespace</jtok>
<jtok eid="54" type="primary_name_ref" span="2236:33:2236:43">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2236:44:2236:45">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2238:2:2238:12">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2238:13:2238:14">i</jtok>
<jtok eid="54" type="primary_name_ref" span="2239:2:2239:12">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2239:13:2239:14">i</jtok>
<jtok eid="54" type="primary_name_ref" span="2239:20:2239:30">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2239:31:2239:32">j</jtok>
<jtok eid="54" type="primary_name_ref" span="2241:2:2241:12">dataBuffer</jtok>
<jtok eid="54" type="primary_name_ref" span="2241:13:2241:14">i</jtok>
<jtok eid="54" type="primary_name_ref" span="2241:20:2241:21">c</jtok>
<jtok eid="54" type="line_comment" span="2245:5:2245:41">// The new length is &lt;= the old one.</jtok>
<jtok eid="54" type="primary_name_ref" span="2246:5:2246:18">dataBufferPos</jtok>
<jtok eid="54" type="primary_name_ref" span="2246:21:2246:22">i</jtok>
<jtok eid="1" type="block_comment" span="2250:3:2254:7">/**
    * Convert the data buffer to a string.
    * @param internFlag true if the contents should be interned.
    * @see #intern(char[],int,int)
    */</jtok>
<jtok eid="55" type="class_or_interface_ref" span="2255:3:2255:9">String</jtok>
<jtok eid="55" type="method_name" span="2255:10:2255:28">dataBufferToString</jtok>
<jtok eid="55" type="class_or_interface_ref" span="2257:5:2257:11">String</jtok>
<jtok eid="55" type="local_variable_name" span="2257:12:2257:13">s</jtok>
<jtok eid="55" type="constructor_call" span="2257:20:2257:26">String</jtok>
<jtok eid="55" type="primary_name_ref" span="2257:27:2257:37">dataBuffer</jtok>
<jtok eid="55" type="primary_name_ref" span="2257:42:2257:55">dataBufferPos</jtok>
<jtok eid="55" type="primary_name_ref" span="2258:5:2258:18">dataBufferPos</jtok>
<jtok eid="55" type="primary_name_ref" span="2259:12:2259:13">s</jtok>
<jtok eid="1" type="block_comment" span="2263:3:2266:7">/**
    * Flush the contents of the data buffer to the handler, if
    * appropriate, and reset the buffer for new input.
    */</jtok>
<jtok eid="56" type="method_name" span="2267:8:2267:23">dataBufferFlush</jtok>
<jtok eid="56" type="throws" span="2268:12:2268:16">java</jtok>
<jtok eid="56" type="throws" span="2268:17:2268:21">lang</jtok>
<jtok eid="56" type="throws" span="2268:22:2268:31">Exception</jtok>
<jtok eid="56" type="primary_name_ref" span="2270:9:2270:22">dataBufferPos</jtok>
<jtok eid="56" type="primary_name_ref" span="2271:15:2271:36">currentElementContent</jtok>
<jtok eid="56" type="primary_name_ref" span="2272:12:2272:30">CONTENT_UNDECLARED</jtok>
<jtok eid="56" type="primary_name_ref" span="2273:12:2273:25">CONTENT_EMPTY</jtok>
<jtok eid="56" type="line_comment" span="2274:2:2274:15">// do nothing</jtok>
<jtok eid="56" type="primary_name_ref" span="2276:12:2276:25">CONTENT_MIXED</jtok>
<jtok eid="56" type="primary_name_ref" span="2277:12:2277:23">CONTENT_ANY</jtok>
<jtok eid="56" type="primary_name_ref" span="2278:6:2278:13">handler</jtok>
<jtok eid="56" type="primary_name_ref" span="2279:4:2279:11">handler</jtok>
<jtok eid="56" type="method_call" span="2279:12:2279:20">charData</jtok>
<jtok eid="56" type="primary_name_ref" span="2279:21:2279:31">dataBuffer</jtok>
<jtok eid="56" type="primary_name_ref" span="2279:36:2279:49">dataBufferPos</jtok>
<jtok eid="56" type="primary_name_ref" span="2282:12:2282:28">CONTENT_ELEMENTS</jtok>
<jtok eid="56" type="primary_name_ref" span="2283:6:2283:13">handler</jtok>
<jtok eid="56" type="primary_name_ref" span="2284:4:2284:11">handler</jtok>
<jtok eid="56" type="method_call" span="2284:12:2284:31">ignorableWhitespace</jtok>
<jtok eid="56" type="primary_name_ref" span="2284:32:2284:42">dataBuffer</jtok>
<jtok eid="56" type="primary_name_ref" span="2284:47:2284:60">dataBufferPos</jtok>
<jtok eid="56" type="primary_name_ref" span="2288:7:2288:20">dataBufferPos</jtok>
<jtok eid="1" type="block_comment" span="2293:3:2295:7">/**
    * Require a string to appear, or throw an exception.
    */</jtok>
<jtok eid="57" type="method_name" span="2296:8:2296:15">require</jtok>
<jtok eid="57" type="parameter_type" span="2296:17:2296:23">String</jtok>
<jtok eid="57" type="parameter_name" span="2296:24:2296:29">delim</jtok>
<jtok eid="57" type="throws" span="2297:12:2297:16">java</jtok>
<jtok eid="57" type="throws" span="2297:17:2297:21">lang</jtok>
<jtok eid="57" type="throws" span="2297:22:2297:31">Exception</jtok>
<jtok eid="57" type="local_variable_name" span="2299:10:2299:12">ch</jtok>
<jtok eid="57" type="primary_name_ref" span="2299:17:2299:22">delim</jtok>
<jtok eid="57" type="method_call" span="2299:23:2299:34">toCharArray</jtok>
<jtok eid="57" type="local_variable_name" span="2300:14:2300:15">i</jtok>
<jtok eid="57" type="primary_name_ref" span="2300:21:2300:22">i</jtok>
<jtok eid="57" type="primary_name_ref" span="2300:25:2300:27">ch</jtok>
<jtok eid="57" type="qualified_name_ref" span="2300:28:2300:34">length</jtok>
<jtok eid="57" type="primary_name_ref" span="2300:36:2300:37">i</jtok>
<jtok eid="57" type="method_call" span="2301:7:2301:14">require</jtok>
<jtok eid="57" type="primary_name_ref" span="2301:15:2301:17">ch</jtok>
<jtok eid="57" type="primary_name_ref" span="2301:18:2301:19">i</jtok>
<jtok eid="1" type="block_comment" span="2306:3:2308:7">/**
    * Require a character to appear, or throw an exception.
    */</jtok>
<jtok eid="58" type="method_name" span="2309:8:2309:15">require</jtok>
<jtok eid="58" type="parameter_name" span="2309:22:2309:27">delim</jtok>
<jtok eid="58" type="throws" span="2310:15:2310:19">java</jtok>
<jtok eid="58" type="throws" span="2310:20:2310:24">lang</jtok>
<jtok eid="58" type="throws" span="2310:25:2310:34">Exception</jtok>
<jtok eid="58" type="local_variable_name" span="2312:10:2312:11">c</jtok>
<jtok eid="58" type="method_call" span="2312:14:2312:20">readCh</jtok>
<jtok eid="58" type="primary_name_ref" span="2314:9:2314:10">c</jtok>
<jtok eid="58" type="primary_name_ref" span="2314:14:2314:19">delim</jtok>
<jtok eid="58" type="method_call" span="2315:7:2315:12">error</jtok>
<jtok eid="58" type="string_literal" span="2315:13:2315:33">"expected character"</jtok>
<jtok eid="58" type="primary_name_ref" span="2315:35:2315:36">c</jtok>
<jtok eid="58" type="constructor_call" span="2315:42:2315:51">Character</jtok>
<jtok eid="58" type="primary_name_ref" span="2315:52:2315:57">delim</jtok>
<jtok eid="58" type="method_call" span="2315:59:2315:67">toString</jtok>
<jtok eid="1" type="block_comment" span="2320:3:2335:7">/**
    * Return an internalised version of a string.
    * &lt;p&gt;&amp;AElig;lfred uses this method to create an internalised version
    * of all names and attribute values, so that it can test equality
    * with &lt;code&gt;==&lt;/code&gt; instead of &lt;code&gt;String.equals()&lt;/code&gt;.
    * &lt;p&gt;If you want to be able to test for equality in the same way,
    * you can use this method to internalise your own strings first:
    * &lt;pre&gt;
    * String PARA = handler.intern("PARA");
    * &lt;/pre&gt;
    * &lt;p&gt;Note that this will not return the same results as String.intern().
    * @param s The string to internalise.
    * @return An internalised version of the string.
    * @see #intern(char[],int,int)
    * @see java.lang.String#intern
    */</jtok>
<jtok eid="59" type="class_or_interface_ref" span="2336:10:2336:16">String</jtok>
<jtok eid="59" type="method_name" span="2336:17:2336:23">intern</jtok>
<jtok eid="59" type="parameter_type" span="2336:25:2336:31">String</jtok>
<jtok eid="59" type="parameter_name" span="2336:32:2336:33">s</jtok>
<jtok eid="59" type="local_variable_name" span="2338:10:2338:12">ch</jtok>
<jtok eid="59" type="primary_name_ref" span="2338:17:2338:18">s</jtok>
<jtok eid="59" type="method_call" span="2338:19:2338:30">toCharArray</jtok>
<jtok eid="59" type="method_call" span="2339:12:2339:18">intern</jtok>
<jtok eid="59" type="primary_name_ref" span="2339:19:2339:21">ch</jtok>
<jtok eid="59" type="primary_name_ref" span="2339:26:2339:28">ch</jtok>
<jtok eid="59" type="qualified_name_ref" span="2339:29:2339:35">length</jtok>
<jtok eid="1" type="block_comment" span="2343:3:2354:7">/**
    * Create an internalised string from a character array.
    * &lt;p&gt;This is much more efficient than constructing a non-internalised
    * string first, and then internalising it.
    * &lt;p&gt;Note that this will not return the same results as String.intern().
    * @param ch an array of characters for building the string.
    * @param start the starting position in the array.
    * @param length the number of characters to place in the string.
    * @return an internalised string.
    * @see #intern(String)
    * @see java.lang.String#intern
    */</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2355:10:2355:16">String</jtok>
<jtok eid="60" type="method_name" span="2355:17:2355:23">intern</jtok>
<jtok eid="60" type="parameter_name" span="2355:30:2355:32">ch</jtok>
<jtok eid="60" type="parameter_name" span="2355:40:2355:45">start</jtok>
<jtok eid="60" type="parameter_name" span="2355:51:2355:57">length</jtok>
<jtok eid="60" type="local_variable_name" span="2357:9:2357:14">index</jtok>
<jtok eid="60" type="local_variable_name" span="2358:9:2358:13">hash</jtok>
<jtok eid="60" type="line_comment" span="2360:5:2360:29">// Generate a hash code.</jtok>
<jtok eid="60" type="local_variable_name" span="2361:14:2361:15">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2361:18:2361:23">start</jtok>
<jtok eid="60" type="primary_name_ref" span="2361:25:2361:26">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2361:29:2361:34">start</jtok>
<jtok eid="60" type="primary_name_ref" span="2361:37:2361:43">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2361:45:2361:46">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2362:7:2362:11">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2362:16:2362:20">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2362:46:2362:48">ch</jtok>
<jtok eid="60" type="primary_name_ref" span="2362:49:2362:50">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2365:5:2365:9">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2365:12:2365:16">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2365:19:2365:38">SYMBOL_TABLE_LENGTH</jtok>
<jtok eid="60" type="line_comment" span="2367:5:2367:23">// Get the bucket.</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2368:5:2368:11">Object</jtok>
<jtok eid="60" type="local_variable_name" span="2368:12:2368:18">bucket</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2368:24:2368:30">Object</jtok>
<jtok eid="60" type="primary_name_ref" span="2368:33:2368:44">symbolTable</jtok>
<jtok eid="60" type="primary_name_ref" span="2368:45:2368:49">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2369:9:2369:15">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2370:7:2370:18">symbolTable</jtok>
<jtok eid="60" type="primary_name_ref" span="2370:19:2370:23">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2370:27:2370:33">bucket</jtok>
<jtok eid="60" type="constructor_call" span="2370:40:2370:46">Object</jtok>
<jtok eid="60" type="line_comment" span="2373:5:2373:40">// Search for a matching tuple, and</jtok>
<jtok eid="60" type="line_comment" span="2374:5:2374:41">// return the string if we find one.</jtok>
<jtok eid="60" type="primary_name_ref" span="2375:10:2375:15">index</jtok>
<jtok eid="60" type="primary_name_ref" span="2375:21:2375:26">index</jtok>
<jtok eid="60" type="primary_name_ref" span="2375:29:2375:35">bucket</jtok>
<jtok eid="60" type="qualified_name_ref" span="2375:36:2375:42">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2375:44:2375:49">index</jtok>
<jtok eid="60" type="local_variable_name" span="2376:12:2376:19">chFound</jtok>
<jtok eid="60" type="primary_name_ref" span="2376:32:2376:38">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2376:39:2376:44">index</jtok>
<jtok eid="60" type="line_comment" span="2378:5:2378:38">// Stop when we hit a null index.</jtok>
<jtok eid="60" type="primary_name_ref" span="2379:11:2379:18">chFound</jtok>
<jtok eid="60" type="line_comment" span="2383:5:2383:35">// If they're the same length,</jtok>
<jtok eid="60" type="line_comment" span="2384:5:2384:26">// check for a match.</jtok>
<jtok eid="60" type="line_comment" span="2385:5:2385:42">// If the loop finishes, 'index' will</jtok>
<jtok eid="60" type="line_comment" span="2386:5:2386:34">// contain the current bucket</jtok>
<jtok eid="60" type="line_comment" span="2387:5:2387:17">// position.</jtok>
<jtok eid="60" type="primary_name_ref" span="2388:11:2388:18">chFound</jtok>
<jtok eid="60" type="qualified_name_ref" span="2388:19:2388:25">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2388:29:2388:35">length</jtok>
<jtok eid="60" type="local_variable_name" span="2389:11:2389:12">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2389:18:2389:19">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2389:22:2389:29">chFound</jtok>
<jtok eid="60" type="qualified_name_ref" span="2389:30:2389:36">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2389:38:2389:39">i</jtok>
<jtok eid="60" type="line_comment" span="2390:5:2390:41">// Stop if there are no more tuples.</jtok>
<jtok eid="60" type="primary_name_ref" span="2391:8:2391:10">ch</jtok>
<jtok eid="60" type="primary_name_ref" span="2391:11:2391:16">start</jtok>
<jtok eid="60" type="primary_name_ref" span="2391:17:2391:18">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2391:23:2391:30">chFound</jtok>
<jtok eid="60" type="primary_name_ref" span="2391:31:2391:32">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2393:15:2393:16">i</jtok>
<jtok eid="60" type="primary_name_ref" span="2393:20:2393:26">length</jtok>
<jtok eid="60" type="line_comment" span="2394:5:2394:35">// That's it, we have a match!</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2395:14:2395:20">String</jtok>
<jtok eid="60" type="primary_name_ref" span="2395:21:2395:27">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2395:28:2395:33">index</jtok>
<jtok eid="60" type="line_comment" span="2401:5:2401:42">// Not found -- we'll have to add it.</jtok>
<jtok eid="60" type="line_comment" span="2403:5:2403:38">// Do we have to grow the bucket?</jtok>
<jtok eid="60" type="primary_name_ref" span="2404:5:2404:11">bucket</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2405:8:2405:14">Object</jtok>
<jtok eid="60" type="method_call" span="2405:17:2405:28">extendArray</jtok>
<jtok eid="60" type="primary_name_ref" span="2405:29:2405:35">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2405:37:2405:43">bucket</jtok>
<jtok eid="60" type="qualified_name_ref" span="2405:44:2405:50">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2405:52:2405:57">index</jtok>
<jtok eid="60" type="line_comment" span="2407:5:2407:36">// OK, add it to the end of the</jtok>
<jtok eid="60" type="line_comment" span="2408:5:2408:15">// bucket.</jtok>
<jtok eid="60" type="class_or_interface_ref" span="2409:5:2409:11">String</jtok>
<jtok eid="60" type="local_variable_name" span="2409:12:2409:13">s</jtok>
<jtok eid="60" type="constructor_call" span="2409:20:2409:26">String</jtok>
<jtok eid="60" type="primary_name_ref" span="2409:27:2409:29">ch</jtok>
<jtok eid="60" type="primary_name_ref" span="2409:31:2409:36">start</jtok>
<jtok eid="60" type="primary_name_ref" span="2409:38:2409:44">length</jtok>
<jtok eid="60" type="primary_name_ref" span="2410:5:2410:11">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2410:12:2410:17">index</jtok>
<jtok eid="60" type="primary_name_ref" span="2410:21:2410:22">s</jtok>
<jtok eid="60" type="method_call" span="2410:23:2410:34">toCharArray</jtok>
<jtok eid="60" type="primary_name_ref" span="2411:5:2411:11">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2411:12:2411:17">index</jtok>
<jtok eid="60" type="primary_name_ref" span="2411:23:2411:24">s</jtok>
<jtok eid="60" type="primary_name_ref" span="2412:5:2412:16">symbolTable</jtok>
<jtok eid="60" type="primary_name_ref" span="2412:17:2412:21">hash</jtok>
<jtok eid="60" type="primary_name_ref" span="2412:25:2412:31">bucket</jtok>
<jtok eid="60" type="primary_name_ref" span="2413:12:2413:13">s</jtok>
<jtok eid="1" type="block_comment" span="2417:3:2420:7">/**
    * Ensure the capacity of an array, allocating a new one if
    * necessary.
    */</jtok>
<jtok eid="61" type="class_or_interface_ref" span="2421:3:2421:9">Object</jtok>
<jtok eid="61" type="method_name" span="2421:10:2421:21">extendArray</jtok>
<jtok eid="61" type="parameter_type" span="2421:23:2421:29">Object</jtok>
<jtok eid="61" type="parameter_name" span="2421:30:2421:35">array</jtok>
<jtok eid="61" type="parameter_name" span="2421:41:2421:52">currentSize</jtok>
<jtok eid="61" type="parameter_name" span="2421:58:2421:70">requiredSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2423:9:2423:21">requiredSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2423:24:2423:35">currentSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2424:14:2424:19">array</jtok>
<jtok eid="61" type="class_or_interface_ref" span="2426:7:2426:13">Object</jtok>
<jtok eid="61" type="local_variable_name" span="2426:14:2426:22">newArray</jtok>
<jtok eid="61" type="local_variable_name" span="2427:11:2427:18">newSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2427:21:2427:32">currentSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2429:11:2429:18">newSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2429:22:2429:34">requiredSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2430:2:2430:9">newSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2430:12:2430:24">requiredSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2433:11:2433:16">array</jtok>
<jtok eid="61" type="primary_name_ref" span="2434:2:2434:10">newArray</jtok>
<jtok eid="61" type="primary_name_ref" span="2434:22:2434:29">newSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2435:18:2435:23">array</jtok>
<jtok eid="61" type="class_or_interface_ref" span="2435:35:2435:41">Object</jtok>
<jtok eid="61" type="primary_name_ref" span="2436:2:2436:10">newArray</jtok>
<jtok eid="61" type="constructor_call" span="2436:17:2436:23">Object</jtok>
<jtok eid="61" type="primary_name_ref" span="2436:24:2436:31">newSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2439:7:2439:13">System</jtok>
<jtok eid="61" type="method_call" span="2439:14:2439:23">arraycopy</jtok>
<jtok eid="61" type="primary_name_ref" span="2439:24:2439:29">array</jtok>
<jtok eid="61" type="primary_name_ref" span="2439:34:2439:42">newArray</jtok>
<jtok eid="61" type="primary_name_ref" span="2439:47:2439:58">currentSize</jtok>
<jtok eid="61" type="primary_name_ref" span="2440:14:2440:22">newArray</jtok>
<jtok eid="1" type="line_comment" span="2446:3:2446:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="2447:3:2447:25">// XML query routines.</jtok>
<jtok eid="1" type="line_comment" span="2448:3:2448:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="2451:3:2451:5">//</jtok>
<jtok eid="1" type="line_comment" span="2452:3:2452:14">// Elements</jtok>
<jtok eid="1" type="line_comment" span="2453:3:2453:5">//</jtok>
<jtok eid="1" type="block_comment" span="2455:3:2463:7">/**
    * Get the declared elements for an XML document.
    * &lt;p&gt;The results will be valid only after the DTD (if any) has been
    * parsed.
    * @return An enumeration of all element types declared for this
    *         document (as Strings).
    * @see #getElementContentType
    * @see #getElementContentModel
    */</jtok>
<jtok eid="62" type="class_or_interface_ref" span="2464:10:2464:21">Enumeration</jtok>
<jtok eid="62" type="method_name" span="2464:22:2464:38">declaredElements</jtok>
<jtok eid="62" type="primary_name_ref" span="2466:12:2466:23">elementInfo</jtok>
<jtok eid="62" type="method_call" span="2466:24:2466:28">keys</jtok>
<jtok eid="1" type="block_comment" span="2470:3:2480:7">/**
    * Look up the content type of an element.
    * @param name The element type name.
    * @return An integer constant representing the content type.
    * @see #getElementContentModel
    * @see #CONTENT_UNDECLARED
    * @see #CONTENT_ANY
    * @see #CONTENT_EMPTY
    * @see #CONTENT_MIXED
    * @see #CONTENT_ELEMENTS
    */</jtok>
<jtok eid="63" type="method_name" span="2481:14:2481:35">getElementContentType</jtok>
<jtok eid="63" type="parameter_type" span="2481:37:2481:43">String</jtok>
<jtok eid="63" type="parameter_name" span="2481:44:2481:48">name</jtok>
<jtok eid="63" type="class_or_interface_ref" span="2483:5:2483:11">Object</jtok>
<jtok eid="63" type="local_variable_name" span="2483:12:2483:19">element</jtok>
<jtok eid="63" type="class_or_interface_ref" span="2483:25:2483:31">Object</jtok>
<jtok eid="63" type="primary_name_ref" span="2483:34:2483:45">elementInfo</jtok>
<jtok eid="63" type="method_call" span="2483:46:2483:49">get</jtok>
<jtok eid="63" type="primary_name_ref" span="2483:50:2483:54">name</jtok>
<jtok eid="63" type="primary_name_ref" span="2484:9:2484:16">element</jtok>
<jtok eid="63" type="primary_name_ref" span="2485:14:2485:32">CONTENT_UNDECLARED</jtok>
<jtok eid="63" type="class_or_interface_ref" span="2487:16:2487:23">Integer</jtok>
<jtok eid="63" type="primary_name_ref" span="2487:24:2487:31">element</jtok>
<jtok eid="63" type="method_call" span="2487:36:2487:44">intValue</jtok>
<jtok eid="1" type="block_comment" span="2492:3:2499:7">/**
    * Look up the content model of an element.
    * &lt;p&gt;The result will always be null unless the content type is
    * CONTENT_ELEMENTS or CONTENT_MIXED.
    * @param name The element type name.
    * @return The normalised content model, as a string.
    * @see #getElementContentType
    */</jtok>
<jtok eid="64" type="class_or_interface_ref" span="2500:10:2500:16">String</jtok>
<jtok eid="64" type="method_name" span="2500:17:2500:39">getElementContentModel</jtok>
<jtok eid="64" type="parameter_type" span="2500:41:2500:47">String</jtok>
<jtok eid="64" type="parameter_name" span="2500:48:2500:52">name</jtok>
<jtok eid="64" type="class_or_interface_ref" span="2502:5:2502:11">Object</jtok>
<jtok eid="64" type="local_variable_name" span="2502:12:2502:19">element</jtok>
<jtok eid="64" type="class_or_interface_ref" span="2502:25:2502:31">Object</jtok>
<jtok eid="64" type="primary_name_ref" span="2502:34:2502:45">elementInfo</jtok>
<jtok eid="64" type="method_call" span="2502:46:2502:49">get</jtok>
<jtok eid="64" type="primary_name_ref" span="2502:50:2502:54">name</jtok>
<jtok eid="64" type="primary_name_ref" span="2503:9:2503:16">element</jtok>
<jtok eid="64" type="class_or_interface_ref" span="2506:15:2506:21">String</jtok>
<jtok eid="64" type="primary_name_ref" span="2506:22:2506:29">element</jtok>
<jtok eid="1" type="block_comment" span="2511:3:2516:7">/**
    * Register an element.
    * Array format:
    *  element type
    *  attribute hash table
    */</jtok>
<jtok eid="65" type="method_name" span="2517:8:2517:18">setElement</jtok>
<jtok eid="65" type="parameter_type" span="2517:20:2517:26">String</jtok>
<jtok eid="65" type="parameter_name" span="2517:27:2517:31">name</jtok>
<jtok eid="65" type="parameter_name" span="2517:37:2517:48">contentType</jtok>
<jtok eid="65" type="parameter_type" span="2518:6:2518:12">String</jtok>
<jtok eid="65" type="parameter_name" span="2518:13:2518:25">contentModel</jtok>
<jtok eid="65" type="parameter_type" span="2518:27:2518:36">Hashtable</jtok>
<jtok eid="65" type="parameter_name" span="2518:37:2518:47">attributes</jtok>
<jtok eid="65" type="throws" span="2519:12:2519:16">java</jtok>
<jtok eid="65" type="throws" span="2519:17:2519:21">lang</jtok>
<jtok eid="65" type="throws" span="2519:22:2519:31">Exception</jtok>
<jtok eid="65" type="class_or_interface_ref" span="2521:5:2521:11">Object</jtok>
<jtok eid="65" type="local_variable_name" span="2521:12:2521:19">element</jtok>
<jtok eid="65" type="line_comment" span="2523:5:2523:34">// Try looking up the element</jtok>
<jtok eid="65" type="primary_name_ref" span="2524:5:2524:12">element</jtok>
<jtok eid="65" type="class_or_interface_ref" span="2524:16:2524:22">Object</jtok>
<jtok eid="65" type="primary_name_ref" span="2524:25:2524:36">elementInfo</jtok>
<jtok eid="65" type="method_call" span="2524:37:2524:40">get</jtok>
<jtok eid="65" type="primary_name_ref" span="2524:41:2524:45">name</jtok>
<jtok eid="65" type="line_comment" span="2526:5:2526:36">// Make a new one if necessary.</jtok>
<jtok eid="65" type="primary_name_ref" span="2527:9:2527:16">element</jtok>
<jtok eid="65" type="primary_name_ref" span="2528:7:2528:14">element</jtok>
<jtok eid="65" type="constructor_call" span="2528:21:2528:27">Object</jtok>
<jtok eid="65" type="primary_name_ref" span="2529:7:2529:14">element</jtok>
<jtok eid="65" type="constructor_call" span="2529:24:2529:31">Integer</jtok>
<jtok eid="65" type="primary_name_ref" span="2529:32:2529:50">CONTENT_UNDECLARED</jtok>
<jtok eid="65" type="primary_name_ref" span="2530:7:2530:14">element</jtok>
<jtok eid="65" type="primary_name_ref" span="2531:7:2531:14">element</jtok>
<jtok eid="65" type="primary_name_ref" span="2532:16:2532:27">contentType</jtok>
<jtok eid="65" type="primary_name_ref" span="2532:31:2532:49">CONTENT_UNDECLARED</jtok>
<jtok eid="65" type="class_or_interface_ref" span="2533:11:2533:18">Integer</jtok>
<jtok eid="65" type="primary_name_ref" span="2533:19:2533:26">element</jtok>
<jtok eid="65" type="method_call" span="2533:31:2533:39">intValue</jtok>
<jtok eid="65" type="primary_name_ref" span="2533:45:2533:63">CONTENT_UNDECLARED</jtok>
<jtok eid="65" type="method_call" span="2534:7:2534:12">error</jtok>
<jtok eid="65" type="string_literal" span="2534:13:2534:53">"multiple declarations for element type"</jtok>
<jtok eid="65" type="primary_name_ref" span="2534:55:2534:59">name</jtok>
<jtok eid="65" type="line_comment" span="2538:5:2538:40">// Insert the content type, if any.</jtok>
<jtok eid="65" type="primary_name_ref" span="2539:9:2539:20">contentType</jtok>
<jtok eid="65" type="primary_name_ref" span="2539:24:2539:42">CONTENT_UNDECLARED</jtok>
<jtok eid="65" type="primary_name_ref" span="2540:7:2540:14">element</jtok>
<jtok eid="65" type="constructor_call" span="2540:24:2540:31">Integer</jtok>
<jtok eid="65" type="primary_name_ref" span="2540:32:2540:43">contentType</jtok>
<jtok eid="65" type="line_comment" span="2543:5:2543:41">// Insert the content model, if any.</jtok>
<jtok eid="65" type="primary_name_ref" span="2544:9:2544:21">contentModel</jtok>
<jtok eid="65" type="primary_name_ref" span="2545:7:2545:14">element</jtok>
<jtok eid="65" type="primary_name_ref" span="2545:20:2545:32">contentModel</jtok>
<jtok eid="65" type="line_comment" span="2548:5:2548:38">// Insert the attributes, if any.</jtok>
<jtok eid="65" type="primary_name_ref" span="2549:9:2549:19">attributes</jtok>
<jtok eid="65" type="primary_name_ref" span="2550:7:2550:14">element</jtok>
<jtok eid="65" type="primary_name_ref" span="2550:19:2550:29">attributes</jtok>
<jtok eid="65" type="line_comment" span="2553:5:2553:30">// Save the element info.</jtok>
<jtok eid="65" type="primary_name_ref" span="2554:5:2554:16">elementInfo</jtok>
<jtok eid="65" type="method_call" span="2554:17:2554:20">put</jtok>
<jtok eid="65" type="primary_name_ref" span="2554:21:2554:25">name</jtok>
<jtok eid="65" type="primary_name_ref" span="2554:26:2554:33">element</jtok>
<jtok eid="1" type="block_comment" span="2558:3:2561:7">/**
    * Look up the attribute hash table for an element.
    * The hash table is the second item in the element array.
    */</jtok>
<jtok eid="66" type="class_or_interface_ref" span="2562:3:2562:12">Hashtable</jtok>
<jtok eid="66" type="method_name" span="2562:13:2562:33">getElementAttributes</jtok>
<jtok eid="66" type="parameter_type" span="2562:35:2562:41">String</jtok>
<jtok eid="66" type="parameter_name" span="2562:42:2562:46">name</jtok>
<jtok eid="66" type="class_or_interface_ref" span="2564:5:2564:11">Object</jtok>
<jtok eid="66" type="local_variable_name" span="2564:12:2564:19">element</jtok>
<jtok eid="66" type="class_or_interface_ref" span="2564:25:2564:31">Object</jtok>
<jtok eid="66" type="primary_name_ref" span="2564:34:2564:45">elementInfo</jtok>
<jtok eid="66" type="method_call" span="2564:46:2564:49">get</jtok>
<jtok eid="66" type="primary_name_ref" span="2564:50:2564:54">name</jtok>
<jtok eid="66" type="primary_name_ref" span="2565:9:2565:16">element</jtok>
<jtok eid="66" type="class_or_interface_ref" span="2568:15:2568:24">Hashtable</jtok>
<jtok eid="66" type="primary_name_ref" span="2568:25:2568:32">element</jtok>
<jtok eid="1" type="line_comment" span="2574:3:2574:5">//</jtok>
<jtok eid="1" type="line_comment" span="2575:3:2575:16">// Attributes</jtok>
<jtok eid="1" type="line_comment" span="2576:3:2576:5">//</jtok>
<jtok eid="1" type="block_comment" span="2578:3:2589:7">/**
    * Get the declared attributes for an element type.
    * @param elname The name of the element type.
    * @return An Enumeration of all the attributes declared for
    *         a specific element type.  The results will be valid only
    *         after the DTD (if any) has been parsed.
    * @see #getAttributeType
    * @see #getAttributeEnumeration
    * @see #getAttributeDefaultValueType
    * @see #getAttributeDefaultValue
    * @see #getAttributeExpandedValue
    */</jtok>
<jtok eid="67" type="class_or_interface_ref" span="2590:10:2590:21">Enumeration</jtok>
<jtok eid="67" type="method_name" span="2590:22:2590:40">declaredAttributes</jtok>
<jtok eid="67" type="parameter_type" span="2590:42:2590:48">String</jtok>
<jtok eid="67" type="parameter_name" span="2590:49:2590:55">elname</jtok>
<jtok eid="67" type="class_or_interface_ref" span="2592:5:2592:14">Hashtable</jtok>
<jtok eid="67" type="local_variable_name" span="2592:15:2592:22">attlist</jtok>
<jtok eid="67" type="method_call" span="2592:25:2592:45">getElementAttributes</jtok>
<jtok eid="67" type="primary_name_ref" span="2592:46:2592:52">elname</jtok>
<jtok eid="67" type="primary_name_ref" span="2594:9:2594:16">attlist</jtok>
<jtok eid="67" type="primary_name_ref" span="2597:14:2597:21">attlist</jtok>
<jtok eid="67" type="method_call" span="2597:22:2597:26">keys</jtok>
<jtok eid="1" type="block_comment" span="2602:3:2618:7">/**
    * Retrieve the declared type of an attribute.
    * @param name The name of the associated element.
    * @param aname The name of the attribute.
    * @return An integer constant representing the attribute type.
    * @see #ATTRIBUTE_UNDECLARED
    * @see #ATTRIBUTE_CDATA
    * @see #ATTRIBUTE_ID
    * @see #ATTRIBUTE_IDREF
    * @see #ATTRIBUTE_IDREFS
    * @see #ATTRIBUTE_ENTITY
    * @see #ATTRIBUTE_ENTITIES
    * @see #ATTRIBUTE_NMTOKEN
    * @see #ATTRIBUTE_NMTOKENS
    * @see #ATTRIBUTE_ENUMERATED
    * @see #ATTRIBUTE_NOTATION
    */</jtok>
<jtok eid="68" type="method_name" span="2619:14:2619:30">getAttributeType</jtok>
<jtok eid="68" type="parameter_type" span="2619:32:2619:38">String</jtok>
<jtok eid="68" type="parameter_name" span="2619:39:2619:43">name</jtok>
<jtok eid="68" type="parameter_type" span="2619:45:2619:51">String</jtok>
<jtok eid="68" type="parameter_name" span="2619:52:2619:57">aname</jtok>
<jtok eid="68" type="class_or_interface_ref" span="2621:5:2621:11">Object</jtok>
<jtok eid="68" type="local_variable_name" span="2621:12:2621:21">attribute</jtok>
<jtok eid="68" type="method_call" span="2621:26:2621:38">getAttribute</jtok>
<jtok eid="68" type="primary_name_ref" span="2621:39:2621:43">name</jtok>
<jtok eid="68" type="primary_name_ref" span="2621:45:2621:50">aname</jtok>
<jtok eid="68" type="primary_name_ref" span="2622:9:2622:18">attribute</jtok>
<jtok eid="68" type="primary_name_ref" span="2623:14:2623:34">ATTRIBUTE_UNDECLARED</jtok>
<jtok eid="68" type="class_or_interface_ref" span="2625:16:2625:23">Integer</jtok>
<jtok eid="68" type="primary_name_ref" span="2625:24:2625:33">attribute</jtok>
<jtok eid="68" type="method_call" span="2625:38:2625:46">intValue</jtok>
<jtok eid="1" type="block_comment" span="2630:3:2637:7">/**
    * Retrieve the allowed values for an enumerated attribute type.
    * @param name The name of the associated element.
    * @param aname The name of the attribute.
    * @return A string containing the token list.
    * @see #ATTRIBUTE_ENUMERATED
    * @see #ATTRIBUTE_NOTATION
    */</jtok>
<jtok eid="69" type="class_or_interface_ref" span="2638:10:2638:16">String</jtok>
<jtok eid="69" type="method_name" span="2638:17:2638:40">getAttributeEnumeration</jtok>
<jtok eid="69" type="parameter_type" span="2638:42:2638:48">String</jtok>
<jtok eid="69" type="parameter_name" span="2638:49:2638:53">name</jtok>
<jtok eid="69" type="parameter_type" span="2638:55:2638:61">String</jtok>
<jtok eid="69" type="parameter_name" span="2638:62:2638:67">aname</jtok>
<jtok eid="69" type="class_or_interface_ref" span="2640:5:2640:11">Object</jtok>
<jtok eid="69" type="local_variable_name" span="2640:12:2640:21">attribute</jtok>
<jtok eid="69" type="method_call" span="2640:26:2640:38">getAttribute</jtok>
<jtok eid="69" type="primary_name_ref" span="2640:39:2640:43">name</jtok>
<jtok eid="69" type="primary_name_ref" span="2640:45:2640:50">aname</jtok>
<jtok eid="69" type="primary_name_ref" span="2641:9:2641:18">attribute</jtok>
<jtok eid="69" type="class_or_interface_ref" span="2644:15:2644:21">String</jtok>
<jtok eid="69" type="primary_name_ref" span="2644:22:2644:31">attribute</jtok>
<jtok eid="1" type="block_comment" span="2649:3:2656:7">/**
    * Retrieve the default value of a declared attribute.
    * @param name The name of the associated element.
    * @param aname The name of the attribute.
    * @return The default value, or null if the attribute was
    *         #IMPLIED or simply undeclared and unspecified.
    * @see #getAttributeExpandedValue
    */</jtok>
<jtok eid="70" type="class_or_interface_ref" span="2657:10:2657:16">String</jtok>
<jtok eid="70" type="method_name" span="2657:17:2657:41">getAttributeDefaultValue</jtok>
<jtok eid="70" type="parameter_type" span="2657:43:2657:49">String</jtok>
<jtok eid="70" type="parameter_name" span="2657:50:2657:54">name</jtok>
<jtok eid="70" type="parameter_type" span="2657:56:2657:62">String</jtok>
<jtok eid="70" type="parameter_name" span="2657:63:2657:68">aname</jtok>
<jtok eid="70" type="class_or_interface_ref" span="2659:5:2659:11">Object</jtok>
<jtok eid="70" type="local_variable_name" span="2659:12:2659:21">attribute</jtok>
<jtok eid="70" type="method_call" span="2659:26:2659:38">getAttribute</jtok>
<jtok eid="70" type="primary_name_ref" span="2659:39:2659:43">name</jtok>
<jtok eid="70" type="primary_name_ref" span="2659:45:2659:50">aname</jtok>
<jtok eid="70" type="primary_name_ref" span="2660:9:2660:18">attribute</jtok>
<jtok eid="70" type="class_or_interface_ref" span="2663:15:2663:21">String</jtok>
<jtok eid="70" type="primary_name_ref" span="2663:22:2663:31">attribute</jtok>
<jtok eid="1" type="block_comment" span="2668:3:2676:7">/**
    * Retrieve the expanded value of a declared attribute.
    * &lt;p&gt;All general entities will be expanded.
    * @param name The name of the associated element.
    * @param aname The name of the attribute.
    * @return The expanded default value, or null if the attribute was
    *         #IMPLIED or simply undeclared
    * @see #getAttributeDefaultValue
    */</jtok>
<jtok eid="71" type="class_or_interface_ref" span="2677:10:2677:16">String</jtok>
<jtok eid="71" type="method_name" span="2677:17:2677:42">getAttributeExpandedValue</jtok>
<jtok eid="71" type="parameter_type" span="2677:44:2677:50">String</jtok>
<jtok eid="71" type="parameter_name" span="2677:51:2677:55">name</jtok>
<jtok eid="71" type="parameter_type" span="2677:57:2677:63">String</jtok>
<jtok eid="71" type="parameter_name" span="2677:64:2677:69">aname</jtok>
<jtok eid="71" type="class_or_interface_ref" span="2679:5:2679:11">Object</jtok>
<jtok eid="71" type="local_variable_name" span="2679:12:2679:21">attribute</jtok>
<jtok eid="71" type="method_call" span="2679:26:2679:38">getAttribute</jtok>
<jtok eid="71" type="primary_name_ref" span="2679:39:2679:43">name</jtok>
<jtok eid="71" type="primary_name_ref" span="2679:45:2679:50">aname</jtok>
<jtok eid="71" type="primary_name_ref" span="2680:9:2680:18">attribute</jtok>
<jtok eid="71" type="primary_name_ref" span="2682:16:2682:25">attribute</jtok>
<jtok eid="71" type="primary_name_ref" span="2682:40:2682:49">attribute</jtok>
<jtok eid="71" type="method_call" span="2684:2:2684:12">pushString</jtok>
<jtok eid="71" type="class_or_interface_ref" span="2684:30:2684:36">String</jtok>
<jtok eid="71" type="primary_name_ref" span="2684:37:2684:46">attribute</jtok>
<jtok eid="71" type="primary_name_ref" span="2685:2:2685:11">attribute</jtok>
<jtok eid="71" type="method_call" span="2685:17:2685:28">readLiteral</jtok>
<jtok eid="71" type="primary_name_ref" span="2685:29:2685:42">LIT_NORMALIZE</jtok>
<jtok eid="71" type="primary_name_ref" span="2686:8:2686:20">LIT_CHAR_REF</jtok>
<jtok eid="71" type="primary_name_ref" span="2687:8:2687:22">LIT_ENTITY_REF</jtok>
<jtok eid="71" type="class_or_interface_ref" span="2688:16:2688:25">Exception</jtok>
<jtok eid="71" type="local_variable_name" span="2688:26:2688:27">e</jtok>
<jtok eid="71" type="class_or_interface_ref" span="2690:13:2690:19">String</jtok>
<jtok eid="71" type="primary_name_ref" span="2690:20:2690:29">attribute</jtok>
<jtok eid="1" type="block_comment" span="2694:3:2700:7">/**
    * Retrieve the default value type of a declared attribute.
    * @see #ATTRIBUTE_DEFAULT_SPECIFIED
    * @see #ATTRIBUTE_DEFAULT_IMPLIED
    * @see #ATTRIBUTE_DEFAULT_REQUIRED
    * @see #ATTRIBUTE_DEFAULT_FIXED
    */</jtok>
<jtok eid="72" type="method_name" span="2701:14:2701:42">getAttributeDefaultValueType</jtok>
<jtok eid="72" type="parameter_type" span="2701:44:2701:50">String</jtok>
<jtok eid="72" type="parameter_name" span="2701:51:2701:55">name</jtok>
<jtok eid="72" type="parameter_type" span="2701:57:2701:63">String</jtok>
<jtok eid="72" type="parameter_name" span="2701:64:2701:69">aname</jtok>
<jtok eid="72" type="class_or_interface_ref" span="2703:5:2703:11">Object</jtok>
<jtok eid="72" type="local_variable_name" span="2703:12:2703:21">attribute</jtok>
<jtok eid="72" type="method_call" span="2703:26:2703:38">getAttribute</jtok>
<jtok eid="72" type="primary_name_ref" span="2703:39:2703:43">name</jtok>
<jtok eid="72" type="primary_name_ref" span="2703:45:2703:50">aname</jtok>
<jtok eid="72" type="primary_name_ref" span="2704:9:2704:18">attribute</jtok>
<jtok eid="72" type="primary_name_ref" span="2705:14:2705:42">ATTRIBUTE_DEFAULT_UNDECLARED</jtok>
<jtok eid="72" type="class_or_interface_ref" span="2707:16:2707:23">Integer</jtok>
<jtok eid="72" type="primary_name_ref" span="2707:24:2707:33">attribute</jtok>
<jtok eid="72" type="method_call" span="2707:38:2707:46">intValue</jtok>
<jtok eid="1" type="block_comment" span="2712:3:2719:7">/**
    * Register an attribute declaration for later retrieval.
    * Format:
    * - String type
    * - String default value
    * - int value type
    * *TODO: do something with attribute types.
    */</jtok>
<jtok eid="73" type="method_name" span="2720:8:2720:20">setAttribute</jtok>
<jtok eid="73" type="parameter_type" span="2720:22:2720:28">String</jtok>
<jtok eid="73" type="parameter_name" span="2720:29:2720:35">elName</jtok>
<jtok eid="73" type="parameter_type" span="2720:37:2720:43">String</jtok>
<jtok eid="73" type="parameter_name" span="2720:44:2720:48">name</jtok>
<jtok eid="73" type="parameter_name" span="2720:54:2720:58">type</jtok>
<jtok eid="73" type="parameter_type" span="2720:60:2720:66">String</jtok>
<jtok eid="73" type="parameter_name" span="2720:67:2720:78">enumeration</jtok>
<jtok eid="73" type="parameter_type" span="2721:8:2721:14">String</jtok>
<jtok eid="73" type="parameter_name" span="2721:15:2721:20">value</jtok>
<jtok eid="73" type="parameter_name" span="2721:26:2721:35">valueType</jtok>
<jtok eid="73" type="throws" span="2722:12:2722:16">java</jtok>
<jtok eid="73" type="throws" span="2722:17:2722:21">lang</jtok>
<jtok eid="73" type="throws" span="2722:22:2722:31">Exception</jtok>
<jtok eid="73" type="class_or_interface_ref" span="2724:5:2724:14">Hashtable</jtok>
<jtok eid="73" type="local_variable_name" span="2724:15:2724:22">attlist</jtok>
<jtok eid="73" type="class_or_interface_ref" span="2725:5:2725:11">Object</jtok>
<jtok eid="73" type="local_variable_name" span="2725:12:2725:21">attribute</jtok>
<jtok eid="73" type="line_comment" span="2727:5:2727:44">// Create a new hashtable if necessary.</jtok>
<jtok eid="73" type="primary_name_ref" span="2728:5:2728:12">attlist</jtok>
<jtok eid="73" type="method_call" span="2728:15:2728:35">getElementAttributes</jtok>
<jtok eid="73" type="primary_name_ref" span="2728:36:2728:42">elName</jtok>
<jtok eid="73" type="primary_name_ref" span="2729:9:2729:16">attlist</jtok>
<jtok eid="73" type="primary_name_ref" span="2730:7:2730:14">attlist</jtok>
<jtok eid="73" type="constructor_call" span="2730:21:2730:30">Hashtable</jtok>
<jtok eid="73" type="line_comment" span="2733:5:2733:40">// Check that the attribute doesn't</jtok>
<jtok eid="73" type="line_comment" span="2734:5:2734:22">// already exist!</jtok>
<jtok eid="73" type="primary_name_ref" span="2735:9:2735:16">attlist</jtok>
<jtok eid="73" type="method_call" span="2735:17:2735:20">get</jtok>
<jtok eid="73" type="primary_name_ref" span="2735:21:2735:25">name</jtok>
<jtok eid="73" type="primary_name_ref" span="2738:7:2738:16">attribute</jtok>
<jtok eid="73" type="constructor_call" span="2738:23:2738:29">Object</jtok>
<jtok eid="73" type="primary_name_ref" span="2739:7:2739:16">attribute</jtok>
<jtok eid="73" type="constructor_call" span="2739:26:2739:33">Integer</jtok>
<jtok eid="73" type="primary_name_ref" span="2739:34:2739:38">type</jtok>
<jtok eid="73" type="primary_name_ref" span="2740:7:2740:16">attribute</jtok>
<jtok eid="73" type="primary_name_ref" span="2740:22:2740:27">value</jtok>
<jtok eid="73" type="primary_name_ref" span="2741:7:2741:16">attribute</jtok>
<jtok eid="73" type="constructor_call" span="2741:26:2741:33">Integer</jtok>
<jtok eid="73" type="primary_name_ref" span="2741:34:2741:43">valueType</jtok>
<jtok eid="73" type="primary_name_ref" span="2742:7:2742:16">attribute</jtok>
<jtok eid="73" type="primary_name_ref" span="2742:22:2742:33">enumeration</jtok>
<jtok eid="73" type="primary_name_ref" span="2743:7:2743:16">attribute</jtok>
<jtok eid="73" type="primary_name_ref" span="2744:7:2744:14">attlist</jtok>
<jtok eid="73" type="method_call" span="2744:15:2744:18">put</jtok>
<jtok eid="73" type="primary_name_ref" span="2744:19:2744:23">name</jtok>
<jtok eid="73" type="method_call" span="2744:24:2744:30">intern</jtok>
<jtok eid="73" type="primary_name_ref" span="2744:34:2744:43">attribute</jtok>
<jtok eid="73" type="line_comment" span="2746:5:2746:51">// Use CONTENT_UNDECLARED to avoid overwriting</jtok>
<jtok eid="73" type="line_comment" span="2747:5:2747:37">// existing element declaration.</jtok>
<jtok eid="73" type="method_call" span="2748:7:2748:17">setElement</jtok>
<jtok eid="73" type="primary_name_ref" span="2748:18:2748:24">elName</jtok>
<jtok eid="73" type="primary_name_ref" span="2748:25:2748:43">CONTENT_UNDECLARED</jtok>
<jtok eid="73" type="primary_name_ref" span="2748:51:2748:58">attlist</jtok>
<jtok eid="1" type="block_comment" span="2753:3:2756:7">/**
    * Retrieve the three-member array representing an
    * attribute declaration.
    */</jtok>
<jtok eid="74" type="class_or_interface_ref" span="2757:3:2757:9">Object</jtok>
<jtok eid="74" type="method_name" span="2757:12:2757:24">getAttribute</jtok>
<jtok eid="74" type="parameter_type" span="2757:26:2757:32">String</jtok>
<jtok eid="74" type="parameter_name" span="2757:33:2757:39">elName</jtok>
<jtok eid="74" type="parameter_type" span="2757:41:2757:47">String</jtok>
<jtok eid="74" type="parameter_name" span="2757:48:2757:52">name</jtok>
<jtok eid="74" type="class_or_interface_ref" span="2759:5:2759:14">Hashtable</jtok>
<jtok eid="74" type="local_variable_name" span="2759:15:2759:22">attlist</jtok>
<jtok eid="74" type="class_or_interface_ref" span="2760:5:2760:11">Object</jtok>
<jtok eid="74" type="local_variable_name" span="2760:12:2760:21">attribute</jtok>
<jtok eid="74" type="primary_name_ref" span="2762:5:2762:12">attlist</jtok>
<jtok eid="74" type="method_call" span="2762:15:2762:35">getElementAttributes</jtok>
<jtok eid="74" type="primary_name_ref" span="2762:36:2762:42">elName</jtok>
<jtok eid="74" type="primary_name_ref" span="2763:9:2763:16">attlist</jtok>
<jtok eid="74" type="primary_name_ref" span="2767:5:2767:14">attribute</jtok>
<jtok eid="74" type="class_or_interface_ref" span="2767:18:2767:24">Object</jtok>
<jtok eid="74" type="primary_name_ref" span="2767:27:2767:34">attlist</jtok>
<jtok eid="74" type="method_call" span="2767:35:2767:38">get</jtok>
<jtok eid="74" type="primary_name_ref" span="2767:39:2767:43">name</jtok>
<jtok eid="74" type="primary_name_ref" span="2768:12:2768:21">attribute</jtok>
<jtok eid="1" type="line_comment" span="2772:3:2772:5">//</jtok>
<jtok eid="1" type="line_comment" span="2773:3:2773:14">// Entities</jtok>
<jtok eid="1" type="line_comment" span="2774:3:2774:5">//</jtok>
<jtok eid="1" type="block_comment" span="2776:3:2786:7">/**
    * Get declared entities.
    * @return An Enumeration of all the entities declared for
    *         this XML document.  The results will be valid only
    *         after the DTD (if any) has been parsed.
    * @see #getEntityType
    * @see #getEntityPublicId
    * @see #getEntitySystemId
    * @see #getEntityValue
    * @see #getEntityNotationName
    */</jtok>
<jtok eid="75" type="class_or_interface_ref" span="2787:10:2787:21">Enumeration</jtok>
<jtok eid="75" type="method_name" span="2787:22:2787:38">declaredEntities</jtok>
<jtok eid="75" type="primary_name_ref" span="2789:12:2789:22">entityInfo</jtok>
<jtok eid="75" type="method_call" span="2789:23:2789:27">keys</jtok>
<jtok eid="1" type="block_comment" span="2793:3:2800:7">/**
    * Find the type of an entity.
    * @return An integer constant representing the entity type.
    * @see #ENTITY_UNDECLARED
    * @see #ENTITY_INTERNAL
    * @see #ENTITY_NDATA
    * @see #ENTITY_TEXT
    */</jtok>
<jtok eid="76" type="method_name" span="2801:14:2801:27">getEntityType</jtok>
<jtok eid="76" type="parameter_type" span="2801:29:2801:35">String</jtok>
<jtok eid="76" type="parameter_name" span="2801:36:2801:41">ename</jtok>
<jtok eid="76" type="class_or_interface_ref" span="2803:5:2803:11">Object</jtok>
<jtok eid="76" type="local_variable_name" span="2803:12:2803:18">entity</jtok>
<jtok eid="76" type="class_or_interface_ref" span="2803:24:2803:30">Object</jtok>
<jtok eid="76" type="primary_name_ref" span="2803:33:2803:43">entityInfo</jtok>
<jtok eid="76" type="method_call" span="2803:44:2803:47">get</jtok>
<jtok eid="76" type="primary_name_ref" span="2803:48:2803:53">ename</jtok>
<jtok eid="76" type="primary_name_ref" span="2804:9:2804:15">entity</jtok>
<jtok eid="76" type="primary_name_ref" span="2805:14:2805:31">ENTITY_UNDECLARED</jtok>
<jtok eid="76" type="class_or_interface_ref" span="2807:16:2807:23">Integer</jtok>
<jtok eid="76" type="primary_name_ref" span="2807:24:2807:30">entity</jtok>
<jtok eid="76" type="method_call" span="2807:35:2807:43">intValue</jtok>
<jtok eid="1" type="block_comment" span="2812:3:2820:7">/**
    * Return an external entity's public identifier, if any.
    * @param ename The name of the external entity.
    * @return The entity's system identifier, or null if the
    *         entity was not declared, if it is not an
    *         external entity, or if no public identifier was
    *         provided.
    * @see #getEntityType
    */</jtok>
<jtok eid="77" type="class_or_interface_ref" span="2821:10:2821:16">String</jtok>
<jtok eid="77" type="method_name" span="2821:17:2821:34">getEntityPublicId</jtok>
<jtok eid="77" type="parameter_type" span="2821:36:2821:42">String</jtok>
<jtok eid="77" type="parameter_name" span="2821:43:2821:48">ename</jtok>
<jtok eid="77" type="class_or_interface_ref" span="2823:5:2823:11">Object</jtok>
<jtok eid="77" type="local_variable_name" span="2823:12:2823:18">entity</jtok>
<jtok eid="77" type="class_or_interface_ref" span="2823:24:2823:30">Object</jtok>
<jtok eid="77" type="primary_name_ref" span="2823:33:2823:43">entityInfo</jtok>
<jtok eid="77" type="method_call" span="2823:44:2823:47">get</jtok>
<jtok eid="77" type="primary_name_ref" span="2823:48:2823:53">ename</jtok>
<jtok eid="77" type="primary_name_ref" span="2824:9:2824:15">entity</jtok>
<jtok eid="77" type="class_or_interface_ref" span="2827:15:2827:21">String</jtok>
<jtok eid="77" type="primary_name_ref" span="2827:22:2827:28">entity</jtok>
<jtok eid="1" type="block_comment" span="2832:3:2839:7">/**
    * Return an external entity's system identifier.
    * @param ename The name of the external entity.
    * @return The entity's system identifier, or null if the
    *         entity was not declared, or if it is not an
    *         external entity.
    * @see #getEntityType
    */</jtok>
<jtok eid="78" type="class_or_interface_ref" span="2840:10:2840:16">String</jtok>
<jtok eid="78" type="method_name" span="2840:17:2840:34">getEntitySystemId</jtok>
<jtok eid="78" type="parameter_type" span="2840:36:2840:42">String</jtok>
<jtok eid="78" type="parameter_name" span="2840:43:2840:48">ename</jtok>
<jtok eid="78" type="class_or_interface_ref" span="2842:5:2842:11">Object</jtok>
<jtok eid="78" type="local_variable_name" span="2842:12:2842:18">entity</jtok>
<jtok eid="78" type="class_or_interface_ref" span="2842:24:2842:30">Object</jtok>
<jtok eid="78" type="primary_name_ref" span="2842:33:2842:43">entityInfo</jtok>
<jtok eid="78" type="method_call" span="2842:44:2842:47">get</jtok>
<jtok eid="78" type="primary_name_ref" span="2842:48:2842:53">ename</jtok>
<jtok eid="78" type="primary_name_ref" span="2843:9:2843:15">entity</jtok>
<jtok eid="78" type="class_or_interface_ref" span="2846:15:2846:21">String</jtok>
<jtok eid="78" type="primary_name_ref" span="2846:22:2846:28">entity</jtok>
<jtok eid="1" type="block_comment" span="2851:3:2857:7">/**
    * Return the value of an internal entity.
    * @param ename The name of the internal entity.
    * @return The entity's value, or null if the entity was
    *         not declared, or if it is not an internal entity.
    * @see #getEntityType
    */</jtok>
<jtok eid="79" type="class_or_interface_ref" span="2858:10:2858:16">String</jtok>
<jtok eid="79" type="method_name" span="2858:17:2858:31">getEntityValue</jtok>
<jtok eid="79" type="parameter_type" span="2858:33:2858:39">String</jtok>
<jtok eid="79" type="parameter_name" span="2858:40:2858:45">ename</jtok>
<jtok eid="79" type="class_or_interface_ref" span="2860:5:2860:11">Object</jtok>
<jtok eid="79" type="local_variable_name" span="2860:12:2860:18">entity</jtok>
<jtok eid="79" type="class_or_interface_ref" span="2860:24:2860:30">Object</jtok>
<jtok eid="79" type="primary_name_ref" span="2860:33:2860:43">entityInfo</jtok>
<jtok eid="79" type="method_call" span="2860:44:2860:47">get</jtok>
<jtok eid="79" type="primary_name_ref" span="2860:48:2860:53">ename</jtok>
<jtok eid="79" type="primary_name_ref" span="2861:9:2861:15">entity</jtok>
<jtok eid="79" type="class_or_interface_ref" span="2864:15:2864:21">String</jtok>
<jtok eid="79" type="primary_name_ref" span="2864:22:2864:28">entity</jtok>
<jtok eid="1" type="block_comment" span="2869:3:2876:7">/**
    * Get the notation name associated with an NDATA entity.
    * @param eName The NDATA entity name.
    * @return The associated notation name, or null if the
    *         entity was not declared, or if it is not an
    *         NDATA entity.
    * @see #getEntityType
    */</jtok>
<jtok eid="80" type="class_or_interface_ref" span="2877:10:2877:16">String</jtok>
<jtok eid="80" type="method_name" span="2877:17:2877:38">getEntityNotationName</jtok>
<jtok eid="80" type="parameter_type" span="2877:40:2877:46">String</jtok>
<jtok eid="80" type="parameter_name" span="2877:47:2877:52">eName</jtok>
<jtok eid="80" type="class_or_interface_ref" span="2879:5:2879:11">Object</jtok>
<jtok eid="80" type="local_variable_name" span="2879:12:2879:18">entity</jtok>
<jtok eid="80" type="class_or_interface_ref" span="2879:24:2879:30">Object</jtok>
<jtok eid="80" type="primary_name_ref" span="2879:33:2879:43">entityInfo</jtok>
<jtok eid="80" type="method_call" span="2879:44:2879:47">get</jtok>
<jtok eid="80" type="primary_name_ref" span="2879:48:2879:53">eName</jtok>
<jtok eid="80" type="primary_name_ref" span="2880:9:2880:15">entity</jtok>
<jtok eid="80" type="class_or_interface_ref" span="2883:15:2883:21">String</jtok>
<jtok eid="80" type="primary_name_ref" span="2883:22:2883:28">entity</jtok>
<jtok eid="1" type="block_comment" span="2888:3:2890:7">/**
    * Register an entity declaration for later retrieval.
    */</jtok>
<jtok eid="81" type="method_name" span="2891:8:2891:25">setInternalEntity</jtok>
<jtok eid="81" type="parameter_type" span="2891:27:2891:33">String</jtok>
<jtok eid="81" type="parameter_name" span="2891:34:2891:39">eName</jtok>
<jtok eid="81" type="parameter_type" span="2891:41:2891:47">String</jtok>
<jtok eid="81" type="parameter_name" span="2891:48:2891:53">value</jtok>
<jtok eid="81" type="method_call" span="2893:5:2893:14">setEntity</jtok>
<jtok eid="81" type="primary_name_ref" span="2893:15:2893:20">eName</jtok>
<jtok eid="81" type="primary_name_ref" span="2893:22:2893:37">ENTITY_INTERNAL</jtok>
<jtok eid="81" type="primary_name_ref" span="2893:51:2893:56">value</jtok>
<jtok eid="1" type="block_comment" span="2897:3:2899:7">/**
    * Register an external data entity.
    */</jtok>
<jtok eid="82" type="method_name" span="2900:8:2900:29">setExternalDataEntity</jtok>
<jtok eid="82" type="parameter_type" span="2900:31:2900:37">String</jtok>
<jtok eid="82" type="parameter_name" span="2900:38:2900:43">eName</jtok>
<jtok eid="82" type="parameter_type" span="2900:45:2900:51">String</jtok>
<jtok eid="82" type="parameter_name" span="2900:52:2900:57">pubid</jtok>
<jtok eid="82" type="parameter_type" span="2901:10:2901:16">String</jtok>
<jtok eid="82" type="parameter_name" span="2901:17:2901:22">sysid</jtok>
<jtok eid="82" type="parameter_type" span="2901:24:2901:30">String</jtok>
<jtok eid="82" type="parameter_name" span="2901:31:2901:36">nName</jtok>
<jtok eid="82" type="method_call" span="2903:5:2903:14">setEntity</jtok>
<jtok eid="82" type="primary_name_ref" span="2903:15:2903:20">eName</jtok>
<jtok eid="82" type="primary_name_ref" span="2903:22:2903:34">ENTITY_NDATA</jtok>
<jtok eid="82" type="primary_name_ref" span="2903:36:2903:41">pubid</jtok>
<jtok eid="82" type="primary_name_ref" span="2903:43:2903:48">sysid</jtok>
<jtok eid="82" type="primary_name_ref" span="2903:56:2903:61">nName</jtok>
<jtok eid="1" type="block_comment" span="2907:3:2909:7">/**
    * Register an external text entity.
    */</jtok>
<jtok eid="83" type="method_name" span="2910:8:2910:29">setExternalTextEntity</jtok>
<jtok eid="83" type="parameter_type" span="2910:31:2910:37">String</jtok>
<jtok eid="83" type="parameter_name" span="2910:38:2910:43">eName</jtok>
<jtok eid="83" type="parameter_type" span="2910:45:2910:51">String</jtok>
<jtok eid="83" type="parameter_name" span="2910:52:2910:57">pubid</jtok>
<jtok eid="83" type="parameter_type" span="2910:59:2910:65">String</jtok>
<jtok eid="83" type="parameter_name" span="2910:66:2910:71">sysid</jtok>
<jtok eid="83" type="method_call" span="2912:5:2912:14">setEntity</jtok>
<jtok eid="83" type="primary_name_ref" span="2912:15:2912:20">eName</jtok>
<jtok eid="83" type="primary_name_ref" span="2912:22:2912:33">ENTITY_TEXT</jtok>
<jtok eid="83" type="primary_name_ref" span="2912:35:2912:40">pubid</jtok>
<jtok eid="83" type="primary_name_ref" span="2912:42:2912:47">sysid</jtok>
<jtok eid="1" type="block_comment" span="2916:3:2918:7">/**
    * Register an entity declaration for later retrieval.
    */</jtok>
<jtok eid="84" type="method_name" span="2919:8:2919:17">setEntity</jtok>
<jtok eid="84" type="parameter_type" span="2919:19:2919:25">String</jtok>
<jtok eid="84" type="parameter_name" span="2919:26:2919:31">eName</jtok>
<jtok eid="84" type="parameter_name" span="2919:37:2919:43">eClass</jtok>
<jtok eid="84" type="parameter_type" span="2920:5:2920:11">String</jtok>
<jtok eid="84" type="parameter_name" span="2920:12:2920:17">pubid</jtok>
<jtok eid="84" type="parameter_type" span="2920:19:2920:25">String</jtok>
<jtok eid="84" type="parameter_name" span="2920:26:2920:31">sysid</jtok>
<jtok eid="84" type="parameter_type" span="2921:5:2921:11">String</jtok>
<jtok eid="84" type="parameter_name" span="2921:12:2921:17">value</jtok>
<jtok eid="84" type="parameter_type" span="2921:19:2921:25">String</jtok>
<jtok eid="84" type="parameter_name" span="2921:26:2921:31">nName</jtok>
<jtok eid="84" type="class_or_interface_ref" span="2923:5:2923:11">Object</jtok>
<jtok eid="84" type="local_variable_name" span="2923:12:2923:18">entity</jtok>
<jtok eid="84" type="primary_name_ref" span="2925:9:2925:19">entityInfo</jtok>
<jtok eid="84" type="method_call" span="2925:20:2925:23">get</jtok>
<jtok eid="84" type="primary_name_ref" span="2925:24:2925:29">eName</jtok>
<jtok eid="84" type="primary_name_ref" span="2926:7:2926:13">entity</jtok>
<jtok eid="84" type="constructor_call" span="2926:20:2926:26">Object</jtok>
<jtok eid="84" type="primary_name_ref" span="2927:7:2927:13">entity</jtok>
<jtok eid="84" type="constructor_call" span="2927:23:2927:30">Integer</jtok>
<jtok eid="84" type="primary_name_ref" span="2927:31:2927:37">eClass</jtok>
<jtok eid="84" type="primary_name_ref" span="2928:7:2928:13">entity</jtok>
<jtok eid="84" type="primary_name_ref" span="2928:19:2928:24">pubid</jtok>
<jtok eid="84" type="primary_name_ref" span="2929:7:2929:13">entity</jtok>
<jtok eid="84" type="primary_name_ref" span="2929:19:2929:24">sysid</jtok>
<jtok eid="84" type="primary_name_ref" span="2930:7:2930:13">entity</jtok>
<jtok eid="84" type="primary_name_ref" span="2930:19:2930:24">value</jtok>
<jtok eid="84" type="primary_name_ref" span="2931:7:2931:13">entity</jtok>
<jtok eid="84" type="primary_name_ref" span="2931:19:2931:24">nName</jtok>
<jtok eid="84" type="primary_name_ref" span="2933:7:2933:17">entityInfo</jtok>
<jtok eid="84" type="method_call" span="2933:18:2933:21">put</jtok>
<jtok eid="84" type="primary_name_ref" span="2933:22:2933:27">eName</jtok>
<jtok eid="84" type="primary_name_ref" span="2933:28:2933:34">entity</jtok>
<jtok eid="1" type="line_comment" span="2938:3:2938:5">//</jtok>
<jtok eid="1" type="line_comment" span="2939:3:2939:16">// Notations.</jtok>
<jtok eid="1" type="line_comment" span="2940:3:2940:5">//</jtok>
<jtok eid="1" type="block_comment" span="2942:3:2949:7">/**
    * Get declared notations.
    * @return An Enumeration of all the notations declared for
    *         this XML document.  The results will be valid only
    *         after the DTD (if any) has been parsed.
    * @see #getNotationPublicId
    * @see #getNotationSystemId
    */</jtok>
<jtok eid="85" type="class_or_interface_ref" span="2950:10:2950:21">Enumeration</jtok>
<jtok eid="85" type="method_name" span="2950:22:2950:39">declaredNotations</jtok>
<jtok eid="85" type="primary_name_ref" span="2952:12:2952:24">notationInfo</jtok>
<jtok eid="85" type="method_call" span="2952:25:2952:29">keys</jtok>
<jtok eid="1" type="block_comment" span="2956:3:2965:7">/**
    * Look up the public identifier for a notation.
    * You will normally use this method to look up a notation
    * that was provided as an attribute value or for an NDATA entity.
    * @param nname The name of the notation.
    * @return A string containing the public identifier, or null
    *         if none was provided or if no such notation was
    *         declared.
    * @see #getNotationSystemId
    */</jtok>
<jtok eid="86" type="class_or_interface_ref" span="2966:10:2966:16">String</jtok>
<jtok eid="86" type="method_name" span="2966:17:2966:36">getNotationPublicId</jtok>
<jtok eid="86" type="parameter_type" span="2966:38:2966:44">String</jtok>
<jtok eid="86" type="parameter_name" span="2966:45:2966:50">nname</jtok>
<jtok eid="86" type="class_or_interface_ref" span="2968:5:2968:11">Object</jtok>
<jtok eid="86" type="local_variable_name" span="2968:12:2968:20">notation</jtok>
<jtok eid="86" type="class_or_interface_ref" span="2968:26:2968:32">Object</jtok>
<jtok eid="86" type="primary_name_ref" span="2968:35:2968:47">notationInfo</jtok>
<jtok eid="86" type="method_call" span="2968:48:2968:51">get</jtok>
<jtok eid="86" type="primary_name_ref" span="2968:52:2968:57">nname</jtok>
<jtok eid="86" type="primary_name_ref" span="2969:9:2969:17">notation</jtok>
<jtok eid="86" type="class_or_interface_ref" span="2972:15:2972:21">String</jtok>
<jtok eid="86" type="primary_name_ref" span="2972:22:2972:30">notation</jtok>
<jtok eid="1" type="block_comment" span="2977:3:2985:7">/**
    * Look up the system identifier for a notation.
    * You will normally use this method to look up a notation
    * that was provided as an attribute value or for an NDATA entity.
    * @param nname The name of the notation.
    * @return A string containing the system identifier, or null
    *         if no such notation was declared.
    * @see #getNotationPublicId
    */</jtok>
<jtok eid="87" type="class_or_interface_ref" span="2986:10:2986:16">String</jtok>
<jtok eid="87" type="method_name" span="2986:17:2986:36">getNotationSystemId</jtok>
<jtok eid="87" type="parameter_type" span="2986:38:2986:44">String</jtok>
<jtok eid="87" type="parameter_name" span="2986:45:2986:50">nname</jtok>
<jtok eid="87" type="class_or_interface_ref" span="2988:5:2988:11">Object</jtok>
<jtok eid="87" type="local_variable_name" span="2988:12:2988:20">notation</jtok>
<jtok eid="87" type="class_or_interface_ref" span="2988:26:2988:32">Object</jtok>
<jtok eid="87" type="primary_name_ref" span="2988:35:2988:47">notationInfo</jtok>
<jtok eid="87" type="method_call" span="2988:48:2988:51">get</jtok>
<jtok eid="87" type="primary_name_ref" span="2988:52:2988:57">nname</jtok>
<jtok eid="87" type="primary_name_ref" span="2989:9:2989:17">notation</jtok>
<jtok eid="87" type="class_or_interface_ref" span="2992:15:2992:21">String</jtok>
<jtok eid="87" type="primary_name_ref" span="2992:22:2992:30">notation</jtok>
<jtok eid="1" type="block_comment" span="2997:3:3002:7">/**
    * Register a notation declaration for later retrieval.
    * Format:
    * - public id
    * - system id
    */</jtok>
<jtok eid="88" type="method_name" span="3003:8:3003:19">setNotation</jtok>
<jtok eid="88" type="parameter_type" span="3003:21:3003:27">String</jtok>
<jtok eid="88" type="parameter_name" span="3003:28:3003:33">nname</jtok>
<jtok eid="88" type="parameter_type" span="3003:35:3003:41">String</jtok>
<jtok eid="88" type="parameter_name" span="3003:42:3003:47">pubid</jtok>
<jtok eid="88" type="parameter_type" span="3003:49:3003:55">String</jtok>
<jtok eid="88" type="parameter_name" span="3003:56:3003:61">sysid</jtok>
<jtok eid="88" type="throws" span="3004:12:3004:16">java</jtok>
<jtok eid="88" type="throws" span="3004:17:3004:21">lang</jtok>
<jtok eid="88" type="throws" span="3004:22:3004:31">Exception</jtok>
<jtok eid="88" type="class_or_interface_ref" span="3006:5:3006:11">Object</jtok>
<jtok eid="88" type="local_variable_name" span="3006:12:3006:20">notation</jtok>
<jtok eid="88" type="primary_name_ref" span="3008:9:3008:21">notationInfo</jtok>
<jtok eid="88" type="method_call" span="3008:22:3008:25">get</jtok>
<jtok eid="88" type="primary_name_ref" span="3008:26:3008:31">nname</jtok>
<jtok eid="88" type="primary_name_ref" span="3009:7:3009:15">notation</jtok>
<jtok eid="88" type="constructor_call" span="3009:22:3009:28">Object</jtok>
<jtok eid="88" type="primary_name_ref" span="3010:7:3010:15">notation</jtok>
<jtok eid="88" type="primary_name_ref" span="3010:21:3010:26">pubid</jtok>
<jtok eid="88" type="primary_name_ref" span="3011:7:3011:15">notation</jtok>
<jtok eid="88" type="primary_name_ref" span="3011:21:3011:26">sysid</jtok>
<jtok eid="88" type="primary_name_ref" span="3012:7:3012:19">notationInfo</jtok>
<jtok eid="88" type="method_call" span="3012:20:3012:23">put</jtok>
<jtok eid="88" type="primary_name_ref" span="3012:24:3012:29">nname</jtok>
<jtok eid="88" type="primary_name_ref" span="3012:30:3012:38">notation</jtok>
<jtok eid="88" type="method_call" span="3014:7:3014:12">error</jtok>
<jtok eid="88" type="string_literal" span="3014:13:3014:48">"multiple declarations of notation"</jtok>
<jtok eid="88" type="primary_name_ref" span="3014:50:3014:55">nname</jtok>
<jtok eid="1" type="line_comment" span="3019:3:3019:5">//</jtok>
<jtok eid="1" type="line_comment" span="3020:3:3020:15">// Location.</jtok>
<jtok eid="1" type="line_comment" span="3021:3:3021:5">//</jtok>
<jtok eid="1" type="block_comment" span="3024:3:3026:7">/**
    * Return the current line number.
    */</jtok>
<jtok eid="89" type="method_name" span="3027:14:3027:27">getLineNumber</jtok>
<jtok eid="89" type="primary_name_ref" span="3029:12:3029:16">line</jtok>
<jtok eid="1" type="block_comment" span="3033:3:3035:7">/**
    * Return the current column number.
    */</jtok>
<jtok eid="90" type="method_name" span="3036:14:3036:29">getColumnNumber</jtok>
<jtok eid="90" type="primary_name_ref" span="3038:12:3038:18">column</jtok>
<jtok eid="1" type="line_comment" span="3043:3:3043:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="3044:3:3044:21">// High-level I/O.</jtok>
<jtok eid="1" type="line_comment" span="3045:3:3045:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="3048:3:3065:7">/**
    * Read a single character from the readBuffer.
    * &lt;p&gt;The readDataChunk() method maintains the buffer.
    * &lt;p&gt;If we hit the end of an entity, try to pop the stack and
    * keep going.
    * &lt;p&gt;(This approach doesn't really enforce XML's rules about
    * entity boundaries, but this is not currently a validating
    * parser).
    * &lt;p&gt;This routine also attempts to keep track of the current
    * position in external entities, but it's not entirely accurate.
    * @return The next available input character.
    * @see #unread(char)
    * @see #unread(String)
    * @see #readDataChunk
    * @see #readBuffer
    * @see #line
    * @return The next character from the current input source.
    */</jtok>
<jtok eid="91" type="method_name" span="3066:8:3066:14">readCh</jtok>
<jtok eid="91" type="throws" span="3067:12:3067:16">java</jtok>
<jtok eid="91" type="throws" span="3067:17:3067:21">lang</jtok>
<jtok eid="91" type="throws" span="3067:22:3067:31">Exception</jtok>
<jtok eid="91" type="local_variable_name" span="3069:10:3069:11">c</jtok>
<jtok eid="91" type="line_comment" span="3071:5:3071:41">// As long as there's nothing in the</jtok>
<jtok eid="91" type="line_comment" span="3072:5:3072:42">// read buffer, try reading more data</jtok>
<jtok eid="91" type="line_comment" span="3073:5:3073:43">// (for an external entity) or popping</jtok>
<jtok eid="91" type="line_comment" span="3074:5:3074:38">// the entity stack (for either).</jtok>
<jtok eid="91" type="primary_name_ref" span="3075:12:3075:25">readBufferPos</jtok>
<jtok eid="91" type="primary_name_ref" span="3075:29:3075:45">readBufferLength</jtok>
<jtok eid="91" type="primary_name_ref" span="3077:15:3077:25">sourceType</jtok>
<jtok eid="91" type="primary_name_ref" span="3079:14:3079:26">INPUT_READER</jtok>
<jtok eid="91" type="primary_name_ref" span="3080:14:3080:28">INPUT_EXTERNAL</jtok>
<jtok eid="91" type="primary_name_ref" span="3081:14:3081:26">INPUT_STREAM</jtok>
<jtok eid="91" type="method_call" span="3082:9:3082:22">readDataChunk</jtok>
<jtok eid="91" type="primary_name_ref" span="3083:16:3083:32">readBufferLength</jtok>
<jtok eid="91" type="method_call" span="3085:11:3085:19">popInput</jtok>
<jtok eid="91" type="primary_name_ref" span="3086:15:3086:31">readBufferLength</jtok>
<jtok eid="91" type="method_call" span="3088:13:3088:26">readDataChunk</jtok>
<jtok eid="91" type="method_call" span="3094:9:3094:17">popInput</jtok>
<jtok eid="91" type="primary_name_ref" span="3099:5:3099:6">c</jtok>
<jtok eid="91" type="primary_name_ref" span="3099:9:3099:19">readBuffer</jtok>
<jtok eid="91" type="primary_name_ref" span="3099:20:3099:33">readBufferPos</jtok>
<jtok eid="91" type="line_comment" span="3101:5:3101:40">// This is a particularly nasty bit</jtok>
<jtok eid="91" type="line_comment" span="3102:5:3102:44">// of code, that checks for a parameter</jtok>
<jtok eid="91" type="line_comment" span="3103:5:3103:43">// entity reference but peeks ahead to</jtok>
<jtok eid="91" type="line_comment" span="3104:5:3104:41">// catch the '%' in parameter entity</jtok>
<jtok eid="91" type="line_comment" span="3105:5:3105:21">// declarations.</jtok>
<jtok eid="91" type="primary_name_ref" span="3108:7:3108:8">c</jtok>
<jtok eid="91" type="primary_name_ref" span="3109:8:3109:15">context</jtok>
<jtok eid="91" type="primary_name_ref" span="3109:19:3109:30">CONTEXT_DTD</jtok>
<jtok eid="91" type="primary_name_ref" span="3109:34:3109:41">context</jtok>
<jtok eid="91" type="primary_name_ref" span="3109:45:3109:64">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="91" type="local_variable_name" span="3112:12:3112:14">c2</jtok>
<jtok eid="91" type="method_call" span="3112:17:3112:23">readCh</jtok>
<jtok eid="91" type="method_call" span="3113:7:3113:13">unread</jtok>
<jtok eid="91" type="primary_name_ref" span="3113:14:3113:16">c2</jtok>
<jtok eid="91" type="method_call" span="3114:12:3114:24">isWhitespace</jtok>
<jtok eid="91" type="primary_name_ref" span="3114:25:3114:27">c2</jtok>
<jtok eid="91" type="method_call" span="3116:9:3116:25">parsePEReference</jtok>
<jtok eid="91" type="primary_name_ref" span="3116:26:3116:33">context</jtok>
<jtok eid="91" type="primary_name_ref" span="3116:37:3116:56">CONTEXT_ENTITYVALUE</jtok>
<jtok eid="91" type="method_call" span="3117:16:3117:22">readCh</jtok>
<jtok eid="91" type="primary_name_ref" span="3121:9:3121:10">c</jtok>
<jtok eid="91" type="primary_name_ref" span="3123:7:3123:11">line</jtok>
<jtok eid="91" type="primary_name_ref" span="3124:7:3124:13">column</jtok>
<jtok eid="91" type="primary_name_ref" span="3128:7:3128:13">column</jtok>
<jtok eid="91" type="primary_name_ref" span="3131:12:3131:13">c</jtok>
<jtok eid="1" type="block_comment" span="3135:3:3149:7">/**
    * Push a single character back onto the current input stream.
    * &lt;p&gt;This method usually pushes the character back onto
    * the readBuffer, while the unread(String) method treats the
    * string as a new internal entity.
    * &lt;p&gt;I don't think that this would ever be called with 
    * readBufferPos = 0, because the methods always reads a character
    * before unreading it, but just in case, I've added a boundary
    * condition.
    * @param c The character to push back.
    * @see #readCh
    * @see #unread(String)
    * @see #unread(char[])
    * @see #readBuffer
    */</jtok>
<jtok eid="92" type="method_name" span="3150:8:3150:14">unread</jtok>
<jtok eid="92" type="parameter_name" span="3150:21:3150:22">c</jtok>
<jtok eid="92" type="throws" span="3151:12:3151:16">java</jtok>
<jtok eid="92" type="throws" span="3151:17:3151:21">lang</jtok>
<jtok eid="92" type="throws" span="3151:22:3151:31">Exception</jtok>
<jtok eid="92" type="line_comment" span="3153:5:3153:25">// Normal condition.</jtok>
<jtok eid="92" type="primary_name_ref" span="3154:9:3154:10">c</jtok>
<jtok eid="92" type="primary_name_ref" span="3156:7:3156:11">line</jtok>
<jtok eid="92" type="primary_name_ref" span="3157:7:3157:13">column</jtok>
<jtok eid="92" type="primary_name_ref" span="3159:9:3159:22">readBufferPos</jtok>
<jtok eid="92" type="primary_name_ref" span="3161:7:3161:17">readBuffer</jtok>
<jtok eid="92" type="primary_name_ref" span="3161:20:3161:33">readBufferPos</jtok>
<jtok eid="92" type="primary_name_ref" span="3161:37:3161:38">c</jtok>
<jtok eid="92" type="method_call" span="3165:7:3165:17">pushString</jtok>
<jtok eid="92" type="constructor_call" span="3165:28:3165:37">Character</jtok>
<jtok eid="92" type="primary_name_ref" span="3165:38:3165:39">c</jtok>
<jtok eid="92" type="method_call" span="3165:41:3165:49">toString</jtok>
<jtok eid="1" type="block_comment" span="3170:3:3179:7">/**
    * Push a char array back onto the current input stream.
    * &lt;p&gt;NOTE: you must &lt;em&gt;never&lt;/em&gt; push back characters that you
    * haven't actually read: use pushString() instead.
    * @see #readCh
    * @see #unread(char)
    * @see #unread(String)
    * @see #readBuffer
    * @see #pushString
    */</jtok>
<jtok eid="93" type="method_name" span="3180:8:3180:14">unread</jtok>
<jtok eid="93" type="parameter_name" span="3180:21:3180:23">ch</jtok>
<jtok eid="93" type="parameter_name" span="3180:31:3180:37">length</jtok>
<jtok eid="93" type="throws" span="3181:12:3181:16">java</jtok>
<jtok eid="93" type="throws" span="3181:17:3181:21">lang</jtok>
<jtok eid="93" type="throws" span="3181:22:3181:31">Exception</jtok>
<jtok eid="93" type="local_variable_name" span="3183:14:3183:15">i</jtok>
<jtok eid="93" type="primary_name_ref" span="3183:21:3183:22">i</jtok>
<jtok eid="93" type="primary_name_ref" span="3183:25:3183:31">length</jtok>
<jtok eid="93" type="primary_name_ref" span="3183:33:3183:34">i</jtok>
<jtok eid="93" type="primary_name_ref" span="3185:13:3185:15">ch</jtok>
<jtok eid="93" type="primary_name_ref" span="3185:16:3185:17">i</jtok>
<jtok eid="93" type="primary_name_ref" span="3186:12:3186:16">line</jtok>
<jtok eid="93" type="primary_name_ref" span="3186:19:3186:25">column</jtok>
<jtok eid="93" type="primary_name_ref" span="3188:9:3188:15">length</jtok>
<jtok eid="93" type="primary_name_ref" span="3188:18:3188:31">readBufferPos</jtok>
<jtok eid="93" type="primary_name_ref" span="3189:8:3189:21">readBufferPos</jtok>
<jtok eid="93" type="primary_name_ref" span="3189:25:3189:31">length</jtok>
<jtok eid="93" type="method_call" span="3192:7:3192:20">pushCharArray</jtok>
<jtok eid="93" type="primary_name_ref" span="3192:27:3192:29">ch</jtok>
<jtok eid="93" type="primary_name_ref" span="3192:34:3192:40">length</jtok>
<jtok eid="93" type="primary_name_ref" span="3193:7:3193:17">sourceType</jtok>
<jtok eid="93" type="primary_name_ref" span="3193:20:3193:32">INPUT_BUFFER</jtok>
<jtok eid="1" type="block_comment" span="3198:3:3214:7">/**
    * Push a new external input source.
    * &lt;p&gt;The source will be either an external text entity, or the DTD
    * external subset.
    * &lt;p&gt;TO DO: Right now, this method always attempts to autodetect
    * the encoding; in the future, it should allow the caller to 
    * request an encoding explicitly, and it should also look at the
    * headers with an HTTP connection.
    * @param url The java.net.URL object for the entity.
    * @see XmlHandler#resolveEntity
    * @see #pushString
    * @see #sourceType
    * @see #pushInput
    * @see #detectEncoding
    * @see #sourceType
    * @see #readBuffer
    */</jtok>
<jtok eid="94" type="method_name" span="3215:8:3215:15">pushURL</jtok>
<jtok eid="94" type="parameter_type" span="3215:17:3215:23">String</jtok>
<jtok eid="94" type="parameter_name" span="3215:24:3215:29">ename</jtok>
<jtok eid="94" type="parameter_type" span="3215:31:3215:37">String</jtok>
<jtok eid="94" type="parameter_name" span="3215:38:3215:46">publicId</jtok>
<jtok eid="94" type="parameter_type" span="3215:48:3215:54">String</jtok>
<jtok eid="94" type="parameter_name" span="3215:55:3215:63">systemId</jtok>
<jtok eid="94" type="parameter_type" span="3216:3:3216:9">Reader</jtok>
<jtok eid="94" type="parameter_name" span="3216:10:3216:16">reader</jtok>
<jtok eid="94" type="parameter_type" span="3216:18:3216:29">InputStream</jtok>
<jtok eid="94" type="parameter_name" span="3216:30:3216:36">stream</jtok>
<jtok eid="94" type="parameter_type" span="3216:38:3216:44">String</jtok>
<jtok eid="94" type="parameter_name" span="3216:45:3216:53">encoding</jtok>
<jtok eid="94" type="throws" span="3217:12:3217:16">java</jtok>
<jtok eid="94" type="throws" span="3217:17:3217:21">lang</jtok>
<jtok eid="94" type="throws" span="3217:22:3217:31">Exception</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3219:5:3219:8">URL</jtok>
<jtok eid="94" type="local_variable_name" span="3219:9:3219:12">url</jtok>
<jtok eid="94" type="local_variable_name" span="3220:13:3220:27">ignoreEncoding</jtok>
<jtok eid="94" type="line_comment" span="3222:5:3222:33">// Push the existing status.</jtok>
<jtok eid="94" type="method_call" span="3223:5:3223:14">pushInput</jtok>
<jtok eid="94" type="primary_name_ref" span="3223:15:3223:20">ename</jtok>
<jtok eid="94" type="line_comment" span="3225:5:3225:33">// Create a new read buffer.</jtok>
<jtok eid="94" type="line_comment" span="3226:5:3226:40">// (Note the four-character margin)</jtok>
<jtok eid="94" type="primary_name_ref" span="3227:5:3227:15">readBuffer</jtok>
<jtok eid="94" type="primary_name_ref" span="3227:27:3227:42">READ_BUFFER_MAX</jtok>
<jtok eid="94" type="primary_name_ref" span="3228:5:3228:18">readBufferPos</jtok>
<jtok eid="94" type="primary_name_ref" span="3229:5:3229:21">readBufferLength</jtok>
<jtok eid="94" type="primary_name_ref" span="3230:5:3230:23">readBufferOverflow</jtok>
<jtok eid="94" type="primary_name_ref" span="3231:5:3231:7">is</jtok>
<jtok eid="94" type="primary_name_ref" span="3232:5:3232:9">line</jtok>
<jtok eid="94" type="primary_name_ref" span="3234:5:3234:21">currentByteCount</jtok>
<jtok eid="94" type="line_comment" span="3236:5:3236:33">// Flush any remaining data.</jtok>
<jtok eid="94" type="method_call" span="3237:5:3237:20">dataBufferFlush</jtok>
<jtok eid="94" type="line_comment" span="3239:5:3239:30">// Make the URL absolute.</jtok>
<jtok eid="94" type="primary_name_ref" span="3240:9:3240:17">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3240:29:3240:43">externalEntity</jtok>
<jtok eid="94" type="primary_name_ref" span="3241:7:3241:15">systemId</jtok>
<jtok eid="94" type="constructor_call" span="3241:22:3241:25">URL</jtok>
<jtok eid="94" type="primary_name_ref" span="3241:26:3241:40">externalEntity</jtok>
<jtok eid="94" type="method_call" span="3241:41:3241:47">getURL</jtok>
<jtok eid="94" type="primary_name_ref" span="3241:51:3241:59">systemId</jtok>
<jtok eid="94" type="method_call" span="3241:61:3241:69">toString</jtok>
<jtok eid="94" type="primary_name_ref" span="3242:16:3242:23">baseURI</jtok>
<jtok eid="94" type="primary_name_ref" span="3244:2:3244:10">systemId</jtok>
<jtok eid="94" type="constructor_call" span="3244:17:3244:20">URL</jtok>
<jtok eid="94" type="constructor_call" span="3244:25:3244:28">URL</jtok>
<jtok eid="94" type="primary_name_ref" span="3244:29:3244:36">baseURI</jtok>
<jtok eid="94" type="primary_name_ref" span="3244:39:3244:47">systemId</jtok>
<jtok eid="94" type="method_call" span="3244:49:3244:57">toString</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3245:16:3245:25">Exception</jtok>
<jtok eid="94" type="local_variable_name" span="3245:26:3245:27">e</jtok>
<jtok eid="94" type="line_comment" span="3248:5:3248:39">// See if the application wants to</jtok>
<jtok eid="94" type="line_comment" span="3249:5:3249:37">// redirect the system ID and/or</jtok>
<jtok eid="94" type="line_comment" span="3250:5:3250:40">// supply its own character stream.</jtok>
<jtok eid="94" type="primary_name_ref" span="3251:9:3251:17">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3251:29:3251:36">handler</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3252:7:3252:13">Object</jtok>
<jtok eid="94" type="local_variable_name" span="3252:14:3252:19">input</jtok>
<jtok eid="94" type="primary_name_ref" span="3252:22:3252:29">handler</jtok>
<jtok eid="94" type="method_call" span="3252:30:3252:43">resolveEntity</jtok>
<jtok eid="94" type="primary_name_ref" span="3252:44:3252:52">publicId</jtok>
<jtok eid="94" type="primary_name_ref" span="3252:54:3252:62">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3253:11:3253:16">input</jtok>
<jtok eid="94" type="primary_name_ref" span="3254:6:3254:11">input</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3254:23:3254:29">String</jtok>
<jtok eid="94" type="primary_name_ref" span="3255:4:3255:12">systemId</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3255:16:3255:22">String</jtok>
<jtok eid="94" type="primary_name_ref" span="3255:23:3255:28">input</jtok>
<jtok eid="94" type="primary_name_ref" span="3256:13:3256:18">input</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3256:30:3256:41">InputStream</jtok>
<jtok eid="94" type="primary_name_ref" span="3257:4:3257:10">stream</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3257:14:3257:25">InputStream</jtok>
<jtok eid="94" type="primary_name_ref" span="3257:26:3257:31">input</jtok>
<jtok eid="94" type="primary_name_ref" span="3258:13:3258:18">input</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3258:30:3258:36">Reader</jtok>
<jtok eid="94" type="primary_name_ref" span="3259:4:3259:10">reader</jtok>
<jtok eid="94" type="class_or_interface_ref" span="3259:14:3259:20">Reader</jtok>
<jtok eid="94" type="primary_name_ref" span="3259:21:3259:26">input</jtok>
<jtok eid="94" type="line_comment" span="3264:5:3264:25">// Start the entity.</jtok>
<jtok eid="94" type="primary_name_ref" span="3265:9:3265:16">handler</jtok>
<jtok eid="94" type="primary_name_ref" span="3266:11:3266:19">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3267:2:3267:9">handler</jtok>
<jtok eid="94" type="method_call" span="3267:10:3267:29">startExternalEntity</jtok>
<jtok eid="94" type="primary_name_ref" span="3267:30:3267:38">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3269:2:3269:9">handler</jtok>
<jtok eid="94" type="method_call" span="3269:10:3269:29">startExternalEntity</jtok>
<jtok eid="94" type="string_literal" span="3269:30:3269:49">"[external stream]"</jtok>
<jtok eid="94" type="line_comment" span="3273:5:3273:43">// Figure out what we're reading from.</jtok>
<jtok eid="94" type="primary_name_ref" span="3274:9:3274:15">reader</jtok>
<jtok eid="94" type="line_comment" span="3275:5:3275:45">// There's an explicit character stream.</jtok>
<jtok eid="94" type="primary_name_ref" span="3276:7:3276:17">sourceType</jtok>
<jtok eid="94" type="primary_name_ref" span="3276:20:3276:32">INPUT_READER</jtok>
<jtok eid="94" type="qualified_name_ref" span="3277:12:3277:18">reader</jtok>
<jtok eid="94" type="primary_name_ref" span="3277:21:3277:27">reader</jtok>
<jtok eid="94" type="method_call" span="3278:7:3278:22">tryEncodingDecl</jtok>
<jtok eid="94" type="primary_name_ref" span="3280:16:3280:22">stream</jtok>
<jtok eid="94" type="primary_name_ref" span="3281:7:3281:17">sourceType</jtok>
<jtok eid="94" type="primary_name_ref" span="3281:20:3281:32">INPUT_STREAM</jtok>
<jtok eid="94" type="primary_name_ref" span="3282:7:3282:9">is</jtok>
<jtok eid="94" type="primary_name_ref" span="3282:12:3282:18">stream</jtok>
<jtok eid="94" type="line_comment" span="3284:5:3284:38">// We have to open our own stream</jtok>
<jtok eid="94" type="line_comment" span="3285:5:3285:19">// to the URL.</jtok>
<jtok eid="94" type="line_comment" span="3287:5:3287:26">// Set the new status</jtok>
<jtok eid="94" type="primary_name_ref" span="3288:7:3288:17">sourceType</jtok>
<jtok eid="94" type="primary_name_ref" span="3288:20:3288:34">INPUT_EXTERNAL</jtok>
<jtok eid="94" type="primary_name_ref" span="3289:7:3289:10">url</jtok>
<jtok eid="94" type="constructor_call" span="3289:17:3289:20">URL</jtok>
<jtok eid="94" type="primary_name_ref" span="3289:21:3289:29">systemId</jtok>
<jtok eid="94" type="primary_name_ref" span="3291:7:3291:21">externalEntity</jtok>
<jtok eid="94" type="primary_name_ref" span="3291:24:3291:27">url</jtok>
<jtok eid="94" type="method_call" span="3291:28:3291:42">openConnection</jtok>
<jtok eid="94" type="primary_name_ref" span="3292:7:3292:21">externalEntity</jtok>
<jtok eid="94" type="method_call" span="3292:22:3292:29">connect</jtok>
<jtok eid="94" type="primary_name_ref" span="3293:7:3293:9">is</jtok>
<jtok eid="94" type="primary_name_ref" span="3293:12:3293:26">externalEntity</jtok>
<jtok eid="94" type="method_call" span="3293:27:3293:41">getInputStream</jtok>
<jtok eid="94" type="line_comment" span="3296:5:3296:40">// If we get to here, there must be</jtok>
<jtok eid="94" type="line_comment" span="3297:5:3297:33">// an InputStream available.</jtok>
<jtok eid="94" type="primary_name_ref" span="3298:10:3298:12">is</jtok>
<jtok eid="94" type="method_call" span="3298:13:3298:26">markSupported</jtok>
<jtok eid="94" type="primary_name_ref" span="3299:7:3299:9">is</jtok>
<jtok eid="94" type="constructor_call" span="3299:16:3299:35">BufferedInputStream</jtok>
<jtok eid="94" type="primary_name_ref" span="3299:36:3299:38">is</jtok>
<jtok eid="94" type="line_comment" span="3302:5:3302:39">// Attempt to detect the encoding.</jtok>
<jtok eid="94" type="primary_name_ref" span="3303:9:3303:17">encoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3303:29:3303:43">externalEntity</jtok>
<jtok eid="94" type="primary_name_ref" span="3304:7:3304:15">encoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3304:18:3304:32">externalEntity</jtok>
<jtok eid="94" type="method_call" span="3304:33:3304:51">getContentEncoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3307:9:3307:17">encoding</jtok>
<jtok eid="94" type="method_call" span="3308:7:3308:20">checkEncoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3308:21:3308:29">encoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3309:7:3309:21">ignoreEncoding</jtok>
<jtok eid="94" type="method_call" span="3311:7:3311:21">detectEncoding</jtok>
<jtok eid="94" type="primary_name_ref" span="3312:7:3312:21">ignoreEncoding</jtok>
<jtok eid="94" type="line_comment" span="3315:5:3315:40">// Read an XML or text declaration.</jtok>
<jtok eid="94" type="method_call" span="3316:5:3316:20">tryEncodingDecl</jtok>
<jtok eid="94" type="primary_name_ref" span="3316:21:3316:35">ignoreEncoding</jtok>
<jtok eid="1" type="block_comment" span="3320:3:3322:7">/**
    * Check for an encoding declaration.
    */</jtok>
<jtok eid="95" type="method_name" span="3323:8:3323:23">tryEncodingDecl</jtok>
<jtok eid="95" type="parameter_name" span="3323:33:3323:47">ignoreEncoding</jtok>
<jtok eid="95" type="throws" span="3324:12:3324:16">java</jtok>
<jtok eid="95" type="throws" span="3324:17:3324:21">lang</jtok>
<jtok eid="95" type="throws" span="3324:22:3324:31">Exception</jtok>
<jtok eid="95" type="line_comment" span="3326:5:3326:42">// Read the XML/Encoding declaration.</jtok>
<jtok eid="95" type="method_call" span="3327:9:3327:16">tryRead</jtok>
<jtok eid="95" type="string_literal" span="3327:17:3327:24">"&lt;?xml"</jtok>
<jtok eid="95" type="method_call" span="3328:11:3328:24">tryWhitespace</jtok>
<jtok eid="95" type="primary_name_ref" span="3329:6:3329:16">inputStack</jtok>
<jtok eid="95" type="method_call" span="3329:17:3329:21">size</jtok>
<jtok eid="95" type="method_call" span="3330:4:3330:17">parseTextDecl</jtok>
<jtok eid="95" type="primary_name_ref" span="3330:18:3330:32">ignoreEncoding</jtok>
<jtok eid="95" type="method_call" span="3332:4:3332:16">parseXMLDecl</jtok>
<jtok eid="95" type="primary_name_ref" span="3332:17:3332:31">ignoreEncoding</jtok>
<jtok eid="95" type="method_call" span="3335:2:3335:8">unread</jtok>
<jtok eid="95" type="string_literal" span="3335:9:3335:14">"xml"</jtok>
<jtok eid="95" type="method_call" span="3335:15:3335:26">toCharArray</jtok>
<jtok eid="95" type="method_call" span="3336:2:3336:9">parsePI</jtok>
<jtok eid="1" type="block_comment" span="3342:3:3360:7">/**
    * Attempt to detect the encoding of an entity.
    * &lt;p&gt;The trick here (as suggested in the XML standard) is that
    * any entity not in UTF-8, or in UCS-2 with a byte-order mark, 
    * &lt;b&gt;must&lt;/b&gt; begin with an XML declaration or an encoding
    * declaration; we simply have to look for "&amp;lt;?XML" in various
    * encodings.
    * &lt;p&gt;This method has no way to distinguish among 8-bit encodings.
    * Instead, it assumes UTF-8, then (possibly) revises its assumption
    * later in checkEncoding().  Any ASCII-derived 8-bit encoding
    * should work, but most will be rejected later by checkEncoding().
    * &lt;p&gt;I don't currently detect EBCDIC, since I'm concerned that it
    * could also be a valid UTF-8 sequence; I'll have to do more checking
    * later.
    * @see #tryEncoding(byte[], byte, byte, byte, byte)
    * @see #tryEncoding(byte[], byte, byte)
    * @see #checkEncoding
    * @see #read8bitEncodingDeclaration
    */</jtok>
<jtok eid="96" type="method_name" span="3361:8:3361:22">detectEncoding</jtok>
<jtok eid="96" type="throws" span="3362:12:3362:16">java</jtok>
<jtok eid="96" type="throws" span="3362:17:3362:21">lang</jtok>
<jtok eid="96" type="throws" span="3362:22:3362:31">Exception</jtok>
<jtok eid="96" type="local_variable_name" span="3364:10:3364:19">signature</jtok>
<jtok eid="96" type="line_comment" span="3366:5:3366:37">// Read the first four bytes for</jtok>
<jtok eid="96" type="line_comment" span="3367:5:3367:22">// autodetection.</jtok>
<jtok eid="96" type="primary_name_ref" span="3368:5:3368:7">is</jtok>
<jtok eid="96" type="method_call" span="3368:8:3368:12">mark</jtok>
<jtok eid="96" type="primary_name_ref" span="3369:5:3369:7">is</jtok>
<jtok eid="96" type="method_call" span="3369:8:3369:12">read</jtok>
<jtok eid="96" type="primary_name_ref" span="3369:13:3369:22">signature</jtok>
<jtok eid="96" type="primary_name_ref" span="3370:5:3370:7">is</jtok>
<jtok eid="96" type="method_call" span="3370:8:3370:13">reset</jtok>
<jtok eid="96" type="line_comment" span="3372:5:3372:35">// Look for a known signature.</jtok>
<jtok eid="96" type="method_call" span="3373:9:3373:20">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3373:21:3373:30">signature</jtok>
<jtok eid="96" type="line_comment" span="3375:7:3375:39">// UCS-4 must begin with "&lt;!XML"</jtok>
<jtok eid="96" type="line_comment" span="3376:7:3376:55">// 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)</jtok>
<jtok eid="96" type="primary_name_ref" span="3377:7:3377:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3377:18:3377:37">ENCODING_UCS_4_1234</jtok>
<jtok eid="96" type="method_call" span="3378:16:3378:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3378:28:3378:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3380:7:3380:39">// UCS-4 must begin with "&lt;!XML"</jtok>
<jtok eid="96" type="line_comment" span="3381:7:3381:58">// 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)</jtok>
<jtok eid="96" type="primary_name_ref" span="3382:7:3382:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3382:18:3382:37">ENCODING_UCS_4_4321</jtok>
<jtok eid="96" type="method_call" span="3383:16:3383:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3383:28:3383:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3385:7:3385:39">// UCS-4 must begin with "&lt;!XML"</jtok>
<jtok eid="96" type="line_comment" span="3386:7:3386:52">// 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)</jtok>
<jtok eid="96" type="primary_name_ref" span="3387:7:3387:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3387:18:3387:37">ENCODING_UCS_4_2143</jtok>
<jtok eid="96" type="method_call" span="3388:16:3388:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3388:28:3388:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3390:7:3390:39">// UCS-4 must begin with "&lt;!XML"</jtok>
<jtok eid="96" type="line_comment" span="3391:7:3391:52">// 0x00 0x3c 0x00 0x00: UCS-4, unusual (3421)</jtok>
<jtok eid="96" type="primary_name_ref" span="3392:7:3392:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3392:18:3392:37">ENCODING_UCS_4_3412</jtok>
<jtok eid="96" type="method_call" span="3393:16:3393:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3393:28:3393:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3394:7:3394:41">// UCS-2 with a byte-order marker.</jtok>
<jtok eid="96" type="line_comment" span="3395:7:3395:43">// 0xfe 0xff: UCS-2, big-endian (12)</jtok>
<jtok eid="96" type="primary_name_ref" span="3396:7:3396:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3396:18:3396:35">ENCODING_UCS_2_12</jtok>
<jtok eid="96" type="primary_name_ref" span="3397:7:3397:9">is</jtok>
<jtok eid="96" type="method_call" span="3397:10:3397:14">read</jtok>
<jtok eid="96" type="primary_name_ref" span="3397:18:3397:20">is</jtok>
<jtok eid="96" type="method_call" span="3397:21:3397:25">read</jtok>
<jtok eid="96" type="method_call" span="3398:16:3398:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3398:28:3398:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3399:7:3399:41">// UCS-2 with a byte-order marker.</jtok>
<jtok eid="96" type="line_comment" span="3400:7:3400:46">// 0xff 0xfe: UCS-2, little-endian (21)</jtok>
<jtok eid="96" type="primary_name_ref" span="3401:7:3401:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3401:18:3401:35">ENCODING_UCS_2_21</jtok>
<jtok eid="96" type="primary_name_ref" span="3402:7:3402:9">is</jtok>
<jtok eid="96" type="method_call" span="3402:10:3402:14">read</jtok>
<jtok eid="96" type="primary_name_ref" span="3402:18:3402:20">is</jtok>
<jtok eid="96" type="method_call" span="3402:21:3402:25">read</jtok>
<jtok eid="96" type="method_call" span="3403:16:3403:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3403:28:3403:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3405:7:3405:53">// UCS-2 without a BOM must begin with "&lt;?XML"</jtok>
<jtok eid="96" type="line_comment" span="3406:7:3406:68">// 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark</jtok>
<jtok eid="96" type="primary_name_ref" span="3407:7:3407:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3407:18:3407:35">ENCODING_UCS_2_12</jtok>
<jtok eid="96" type="method_call" span="3408:7:3408:12">error</jtok>
<jtok eid="96" type="string_literal" span="3408:13:3408:50">"no byte-order mark for UCS-2 entity"</jtok>
<jtok eid="96" type="method_call" span="3409:16:3409:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3409:28:3409:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3411:7:3411:53">// UCS-2 without a BOM must begin with "&lt;?XML"</jtok>
<jtok eid="96" type="line_comment" span="3412:7:3412:71">// 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark</jtok>
<jtok eid="96" type="primary_name_ref" span="3413:7:3413:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3413:18:3413:35">ENCODING_UCS_2_21</jtok>
<jtok eid="96" type="method_call" span="3414:7:3414:12">error</jtok>
<jtok eid="96" type="string_literal" span="3414:13:3414:50">"no byte-order mark for UCS-2 entity"</jtok>
<jtok eid="96" type="method_call" span="3415:16:3415:27">tryEncoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3415:28:3415:37">signature</jtok>
<jtok eid="96" type="line_comment" span="3417:7:3417:50">// Some kind of 8-bit encoding with "&lt;?XML"</jtok>
<jtok eid="96" type="line_comment" span="3418:7:3418:74">// 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)</jtok>
<jtok eid="96" type="primary_name_ref" span="3419:7:3419:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3419:18:3419:32">ENCODING_UTF_8</jtok>
<jtok eid="96" type="method_call" span="3420:7:3420:34">read8bitEncodingDeclaration</jtok>
<jtok eid="96" type="line_comment" span="3422:7:3422:53">// Some kind of 8-bit encoding without "&lt;?XML"</jtok>
<jtok eid="96" type="line_comment" span="3423:7:3423:60">// (otherwise) UTF-8 without encoding/XML declaration</jtok>
<jtok eid="96" type="primary_name_ref" span="3424:7:3424:15">encoding</jtok>
<jtok eid="96" type="primary_name_ref" span="3424:18:3424:32">ENCODING_UTF_8</jtok>
<jtok eid="1" type="block_comment" span="3429:3:3439:7">/**
    * Check for a four-byte signature.
    * &lt;p&gt;Utility routine for detectEncoding().
    * &lt;p&gt;Always looks for some part of "&lt;?XML" in a specific encoding.
    * @param sig The first four bytes read.
    * @param b1 The first byte of the signature
    * @param b2 The second byte of the signature
    * @param b3 The third byte of the signature
    * @param b4 The fourth byte of the signature
    * @see #detectEncoding
    */</jtok>
<jtok eid="97" type="method_name" span="3440:11:3440:22">tryEncoding</jtok>
<jtok eid="97" type="parameter_name" span="3440:29:3440:32">sig</jtok>
<jtok eid="97" type="parameter_name" span="3440:41:3440:43">b1</jtok>
<jtok eid="97" type="parameter_name" span="3440:50:3440:52">b2</jtok>
<jtok eid="97" type="parameter_name" span="3440:59:3440:61">b3</jtok>
<jtok eid="97" type="parameter_name" span="3440:68:3440:70">b4</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:13:3442:16">sig</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:23:3442:25">b1</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:29:3442:32">sig</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:39:3442:41">b2</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:45:3442:48">sig</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:55:3442:57">b3</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:61:3442:64">sig</jtok>
<jtok eid="97" type="primary_name_ref" span="3442:71:3442:73">b4</jtok>
<jtok eid="1" type="block_comment" span="3446:3:3454:7">/**
    * Check for a two-byte signature.
    * &lt;p&gt;Looks for a UCS-2 byte-order mark.
    * &lt;p&gt;Utility routine for detectEncoding().
    * @param sig The first four bytes read.
    * @param b1 The first byte of the signature
    * @param b2 The second byte of the signature
    * @see #detectEncoding
    */</jtok>
<jtok eid="98" type="method_name" span="3455:11:3455:22">tryEncoding</jtok>
<jtok eid="98" type="parameter_name" span="3455:29:3455:32">sig</jtok>
<jtok eid="98" type="parameter_name" span="3455:41:3455:43">b1</jtok>
<jtok eid="98" type="parameter_name" span="3455:50:3455:52">b2</jtok>
<jtok eid="98" type="primary_name_ref" span="3457:14:3457:17">sig</jtok>
<jtok eid="98" type="primary_name_ref" span="3457:24:3457:26">b1</jtok>
<jtok eid="98" type="primary_name_ref" span="3457:32:3457:35">sig</jtok>
<jtok eid="98" type="primary_name_ref" span="3457:42:3457:44">b2</jtok>
<jtok eid="1" type="block_comment" span="3461:3:3468:7">/**
    * This method pushes a string back onto input.
    * &lt;p&gt;It is useful either as the expansion of an internal entity, 
    * or for backtracking during the parse.
    * &lt;p&gt;Call pushCharArray() to do the actual work.
    * @param s The string to push back onto input.
    * @see #pushCharArray
    */</jtok>
<jtok eid="99" type="method_name" span="3469:8:3469:18">pushString</jtok>
<jtok eid="99" type="parameter_type" span="3469:20:3469:26">String</jtok>
<jtok eid="99" type="parameter_name" span="3469:27:3469:32">ename</jtok>
<jtok eid="99" type="parameter_type" span="3469:34:3469:40">String</jtok>
<jtok eid="99" type="parameter_name" span="3469:41:3469:42">s</jtok>
<jtok eid="99" type="throws" span="3470:12:3470:16">java</jtok>
<jtok eid="99" type="throws" span="3470:17:3470:21">lang</jtok>
<jtok eid="99" type="throws" span="3470:22:3470:31">Exception</jtok>
<jtok eid="99" type="local_variable_name" span="3472:10:3472:12">ch</jtok>
<jtok eid="99" type="primary_name_ref" span="3472:17:3472:18">s</jtok>
<jtok eid="99" type="method_call" span="3472:19:3472:30">toCharArray</jtok>
<jtok eid="99" type="method_call" span="3473:5:3473:18">pushCharArray</jtok>
<jtok eid="99" type="primary_name_ref" span="3473:19:3473:24">ename</jtok>
<jtok eid="99" type="primary_name_ref" span="3473:26:3473:28">ch</jtok>
<jtok eid="99" type="primary_name_ref" span="3473:33:3473:35">ch</jtok>
<jtok eid="99" type="qualified_name_ref" span="3473:36:3473:42">length</jtok>
<jtok eid="1" type="block_comment" span="3477:3:3492:7">/**
    * Push a new internal input source.
    * &lt;p&gt;This method is useful for expanding an internal entity,
    * or for unreading a string of characters.  It creates a new
    * readBuffer containing the characters in the array, instead
    * of characters converted from an input byte stream.
    * &lt;p&gt;I've added a couple of optimisations: don't push zero-
    * length strings, and just push back a single character
    * for 1-character strings; this should save some time and memory.
    * @param ch The char array to push.
    * @see #pushString
    * @see #pushURL
    * @see #readBuffer
    * @see #sourceType
    * @see #pushInput
    */</jtok>
<jtok eid="100" type="method_name" span="3493:8:3493:21">pushCharArray</jtok>
<jtok eid="100" type="parameter_type" span="3493:23:3493:29">String</jtok>
<jtok eid="100" type="parameter_name" span="3493:30:3493:35">ename</jtok>
<jtok eid="100" type="parameter_name" span="3493:42:3493:44">ch</jtok>
<jtok eid="100" type="parameter_name" span="3493:52:3493:57">start</jtok>
<jtok eid="100" type="parameter_name" span="3493:63:3493:69">length</jtok>
<jtok eid="100" type="throws" span="3494:12:3494:16">java</jtok>
<jtok eid="100" type="throws" span="3494:17:3494:21">lang</jtok>
<jtok eid="100" type="throws" span="3494:22:3494:31">Exception</jtok>
<jtok eid="100" type="line_comment" span="3496:5:3496:32">// Push the existing status</jtok>
<jtok eid="100" type="method_call" span="3497:5:3497:14">pushInput</jtok>
<jtok eid="100" type="primary_name_ref" span="3497:15:3497:20">ename</jtok>
<jtok eid="100" type="primary_name_ref" span="3498:5:3498:15">sourceType</jtok>
<jtok eid="100" type="primary_name_ref" span="3498:18:3498:32">INPUT_INTERNAL</jtok>
<jtok eid="100" type="primary_name_ref" span="3499:5:3499:15">readBuffer</jtok>
<jtok eid="100" type="primary_name_ref" span="3499:18:3499:20">ch</jtok>
<jtok eid="100" type="primary_name_ref" span="3500:5:3500:18">readBufferPos</jtok>
<jtok eid="100" type="primary_name_ref" span="3500:21:3500:26">start</jtok>
<jtok eid="100" type="primary_name_ref" span="3501:5:3501:21">readBufferLength</jtok>
<jtok eid="100" type="primary_name_ref" span="3501:24:3501:30">length</jtok>
<jtok eid="100" type="primary_name_ref" span="3502:5:3502:23">readBufferOverflow</jtok>
<jtok eid="1" type="block_comment" span="3506:3:3531:7">/**
    * Save the current input source onto the stack.
    * &lt;p&gt;This method saves all of the global variables associated with
    * the current input source, so that they can be restored when a new
    * input source has finished.  It also tests for entity recursion.
    * &lt;p&gt;The method saves the following global variables onto a stack
    * using a fixed-length array:
    * &lt;ol&gt;
    * &lt;li&gt;sourceType
    * &lt;li&gt;externalEntity
    * &lt;li&gt;readBuffer
    * &lt;li&gt;readBufferPos
    * &lt;li&gt;readBufferLength
    * &lt;li&gt;line
    * &lt;li&gt;encoding
    * &lt;/ol&gt;
    * @param ename The name of the entity (if any) causing the new input.
    * @see #popInput
    * @see #sourceType
    * @see #externalEntity
    * @see #readBuffer
    * @see #readBufferPos
    * @see #readBufferLength
    * @see #line
    * @see #encoding
    */</jtok>
<jtok eid="101" type="method_name" span="3532:8:3532:17">pushInput</jtok>
<jtok eid="101" type="parameter_type" span="3532:19:3532:25">String</jtok>
<jtok eid="101" type="parameter_name" span="3532:26:3532:31">ename</jtok>
<jtok eid="101" type="throws" span="3533:12:3533:16">java</jtok>
<jtok eid="101" type="throws" span="3533:17:3533:21">lang</jtok>
<jtok eid="101" type="throws" span="3533:22:3533:31">Exception</jtok>
<jtok eid="101" type="class_or_interface_ref" span="3535:5:3535:11">Object</jtok>
<jtok eid="101" type="local_variable_name" span="3535:12:3535:17">input</jtok>
<jtok eid="101" type="constructor_call" span="3535:26:3535:32">Object</jtok>
<jtok eid="101" type="line_comment" span="3537:5:3537:35">// Check for entity recursion.</jtok>
<jtok eid="101" type="primary_name_ref" span="3538:9:3538:14">ename</jtok>
<jtok eid="101" type="class_or_interface_ref" span="3539:7:3539:18">Enumeration</jtok>
<jtok eid="101" type="local_variable_name" span="3539:19:3539:27">entities</jtok>
<jtok eid="101" type="primary_name_ref" span="3539:30:3539:41">entityStack</jtok>
<jtok eid="101" type="method_call" span="3539:42:3539:50">elements</jtok>
<jtok eid="101" type="primary_name_ref" span="3540:14:3540:22">entities</jtok>
<jtok eid="101" type="method_call" span="3540:23:3540:38">hasMoreElements</jtok>
<jtok eid="101" type="class_or_interface_ref" span="3541:2:3541:8">String</jtok>
<jtok eid="101" type="local_variable_name" span="3541:9:3541:10">e</jtok>
<jtok eid="101" type="class_or_interface_ref" span="3541:14:3541:20">String</jtok>
<jtok eid="101" type="primary_name_ref" span="3541:21:3541:29">entities</jtok>
<jtok eid="101" type="method_call" span="3541:30:3541:41">nextElement</jtok>
<jtok eid="101" type="primary_name_ref" span="3542:6:3542:7">e</jtok>
<jtok eid="101" type="primary_name_ref" span="3542:11:3542:16">ename</jtok>
<jtok eid="101" type="method_call" span="3543:4:3543:9">error</jtok>
<jtok eid="101" type="string_literal" span="3543:10:3543:41">"recursive reference to entity"</jtok>
<jtok eid="101" type="primary_name_ref" span="3543:43:3543:48">ename</jtok>
<jtok eid="101" type="primary_name_ref" span="3547:5:3547:16">entityStack</jtok>
<jtok eid="101" type="method_call" span="3547:17:3547:21">push</jtok>
<jtok eid="101" type="primary_name_ref" span="3547:22:3547:27">ename</jtok>
<jtok eid="101" type="line_comment" span="3549:5:3549:42">// Don't bother if there is no input.</jtok>
<jtok eid="101" type="primary_name_ref" span="3550:9:3550:19">sourceType</jtok>
<jtok eid="101" type="primary_name_ref" span="3550:23:3550:33">INPUT_NONE</jtok>
<jtok eid="101" type="line_comment" span="3554:5:3554:40">// Set up a snapshot of the current</jtok>
<jtok eid="101" type="line_comment" span="3555:5:3555:21">// input source.</jtok>
<jtok eid="101" type="primary_name_ref" span="3556:5:3556:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3556:20:3556:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3556:28:3556:38">sourceType</jtok>
<jtok eid="101" type="primary_name_ref" span="3557:5:3557:10">input</jtok>
<jtok eid="101" type="primary_name_ref" span="3557:16:3557:30">externalEntity</jtok>
<jtok eid="101" type="primary_name_ref" span="3558:5:3558:10">input</jtok>
<jtok eid="101" type="primary_name_ref" span="3558:16:3558:26">readBuffer</jtok>
<jtok eid="101" type="primary_name_ref" span="3559:5:3559:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3559:20:3559:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3559:28:3559:41">readBufferPos</jtok>
<jtok eid="101" type="primary_name_ref" span="3560:5:3560:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3560:20:3560:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3560:28:3560:44">readBufferLength</jtok>
<jtok eid="101" type="primary_name_ref" span="3561:5:3561:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3561:20:3561:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3561:28:3561:32">line</jtok>
<jtok eid="101" type="primary_name_ref" span="3562:5:3562:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3562:20:3562:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3562:28:3562:36">encoding</jtok>
<jtok eid="101" type="primary_name_ref" span="3563:5:3563:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3563:20:3563:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3563:28:3563:46">readBufferOverflow</jtok>
<jtok eid="101" type="primary_name_ref" span="3564:5:3564:10">input</jtok>
<jtok eid="101" type="primary_name_ref" span="3564:16:3564:18">is</jtok>
<jtok eid="101" type="primary_name_ref" span="3565:5:3565:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3565:20:3565:27">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3565:28:3565:44">currentByteCount</jtok>
<jtok eid="101" type="primary_name_ref" span="3566:5:3566:10">input</jtok>
<jtok eid="101" type="constructor_call" span="3566:21:3566:28">Integer</jtok>
<jtok eid="101" type="primary_name_ref" span="3566:29:3566:35">column</jtok>
<jtok eid="101" type="primary_name_ref" span="3567:5:3567:10">input</jtok>
<jtok eid="101" type="primary_name_ref" span="3567:17:3567:23">reader</jtok>
<jtok eid="101" type="line_comment" span="3569:5:3569:31">// Push it onto the stack.</jtok>
<jtok eid="101" type="primary_name_ref" span="3570:5:3570:15">inputStack</jtok>
<jtok eid="101" type="method_call" span="3570:16:3570:20">push</jtok>
<jtok eid="101" type="primary_name_ref" span="3570:21:3570:26">input</jtok>
<jtok eid="1" type="block_comment" span="3574:3:3588:7">/**
    * Restore a previous input source.
    * &lt;p&gt;This method restores all of the global variables associated with
    * the current input source.
    * @exception java.io.EOFException
    *    If there are no more entries on the input stack.
    * @see #pushInput
    * @see #sourceType
    * @see #externalEntity
    * @see #readBuffer
    * @see #readBufferPos
    * @see #readBufferLength
    * @see #line
    * @see #encoding
    */</jtok>
<jtok eid="102" type="method_name" span="3589:8:3589:16">popInput</jtok>
<jtok eid="102" type="throws" span="3590:12:3590:16">java</jtok>
<jtok eid="102" type="throws" span="3590:17:3590:21">lang</jtok>
<jtok eid="102" type="throws" span="3590:22:3590:31">Exception</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3592:5:3592:11">Object</jtok>
<jtok eid="102" type="local_variable_name" span="3592:12:3592:17">input</jtok>
<jtok eid="102" type="primary_name_ref" span="3595:13:3595:23">sourceType</jtok>
<jtok eid="102" type="primary_name_ref" span="3597:10:3597:24">INPUT_EXTERNAL</jtok>
<jtok eid="102" type="method_call" span="3598:7:3598:22">dataBufferFlush</jtok>
<jtok eid="102" type="primary_name_ref" span="3599:11:3599:18">handler</jtok>
<jtok eid="102" type="primary_name_ref" span="3599:30:3599:44">externalEntity</jtok>
<jtok eid="102" type="primary_name_ref" span="3600:2:3600:9">handler</jtok>
<jtok eid="102" type="method_call" span="3600:10:3600:27">endExternalEntity</jtok>
<jtok eid="102" type="primary_name_ref" span="3600:28:3600:42">externalEntity</jtok>
<jtok eid="102" type="method_call" span="3600:43:3600:49">getURL</jtok>
<jtok eid="102" type="method_call" span="3600:52:3600:60">toString</jtok>
<jtok eid="102" type="primary_name_ref" span="3603:10:3603:22">INPUT_STREAM</jtok>
<jtok eid="102" type="method_call" span="3604:7:3604:22">dataBufferFlush</jtok>
<jtok eid="102" type="primary_name_ref" span="3605:11:3605:18">baseURI</jtok>
<jtok eid="102" type="primary_name_ref" span="3606:6:3606:13">handler</jtok>
<jtok eid="102" type="primary_name_ref" span="3607:4:3607:11">handler</jtok>
<jtok eid="102" type="method_call" span="3607:12:3607:29">endExternalEntity</jtok>
<jtok eid="102" type="primary_name_ref" span="3607:30:3607:37">baseURI</jtok>
<jtok eid="102" type="primary_name_ref" span="3611:10:3611:22">INPUT_READER</jtok>
<jtok eid="102" type="method_call" span="3612:7:3612:22">dataBufferFlush</jtok>
<jtok eid="102" type="primary_name_ref" span="3613:11:3613:18">baseURI</jtok>
<jtok eid="102" type="primary_name_ref" span="3614:6:3614:13">handler</jtok>
<jtok eid="102" type="primary_name_ref" span="3615:4:3615:11">handler</jtok>
<jtok eid="102" type="method_call" span="3615:12:3615:29">endExternalEntity</jtok>
<jtok eid="102" type="primary_name_ref" span="3615:30:3615:37">baseURI</jtok>
<jtok eid="102" type="line_comment" span="3621:5:3621:38">// Throw an EOFException if there</jtok>
<jtok eid="102" type="line_comment" span="3622:5:3622:31">// is nothing else to pop.</jtok>
<jtok eid="102" type="primary_name_ref" span="3623:9:3623:19">inputStack</jtok>
<jtok eid="102" type="method_call" span="3623:20:3623:27">isEmpty</jtok>
<jtok eid="102" type="constructor_call" span="3624:17:3624:29">EOFException</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3626:7:3626:13">String</jtok>
<jtok eid="102" type="local_variable_name" span="3626:14:3626:15">s</jtok>
<jtok eid="102" type="primary_name_ref" span="3627:7:3627:12">input</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3627:16:3627:22">Object</jtok>
<jtok eid="102" type="primary_name_ref" span="3627:25:3627:35">inputStack</jtok>
<jtok eid="102" type="method_call" span="3627:36:3627:39">pop</jtok>
<jtok eid="102" type="primary_name_ref" span="3628:7:3628:8">s</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3628:12:3628:18">String</jtok>
<jtok eid="102" type="primary_name_ref" span="3628:19:3628:30">entityStack</jtok>
<jtok eid="102" type="method_call" span="3628:31:3628:34">pop</jtok>
<jtok eid="102" type="primary_name_ref" span="3631:5:3631:15">sourceType</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3631:20:3631:27">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3631:28:3631:33">input</jtok>
<jtok eid="102" type="method_call" span="3631:38:3631:46">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3632:5:3632:19">externalEntity</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3632:23:3632:36">URLConnection</jtok>
<jtok eid="102" type="primary_name_ref" span="3632:37:3632:42">input</jtok>
<jtok eid="102" type="primary_name_ref" span="3633:5:3633:15">readBuffer</jtok>
<jtok eid="102" type="primary_name_ref" span="3633:26:3633:31">input</jtok>
<jtok eid="102" type="primary_name_ref" span="3634:5:3634:18">readBufferPos</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3634:23:3634:30">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3634:31:3634:36">input</jtok>
<jtok eid="102" type="method_call" span="3634:41:3634:49">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3635:5:3635:21">readBufferLength</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3635:26:3635:33">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3635:34:3635:39">input</jtok>
<jtok eid="102" type="method_call" span="3635:44:3635:52">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3636:5:3636:9">line</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3636:14:3636:21">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3636:22:3636:27">input</jtok>
<jtok eid="102" type="method_call" span="3636:32:3636:40">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3637:5:3637:13">encoding</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3637:18:3637:25">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3637:26:3637:31">input</jtok>
<jtok eid="102" type="method_call" span="3637:36:3637:44">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3638:5:3638:23">readBufferOverflow</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3638:28:3638:35">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3638:36:3638:41">input</jtok>
<jtok eid="102" type="method_call" span="3638:46:3638:54">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3639:5:3639:7">is</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3639:11:3639:22">InputStream</jtok>
<jtok eid="102" type="primary_name_ref" span="3639:23:3639:28">input</jtok>
<jtok eid="102" type="primary_name_ref" span="3640:5:3640:21">currentByteCount</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3640:26:3640:33">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3640:34:3640:39">input</jtok>
<jtok eid="102" type="method_call" span="3640:44:3640:52">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3641:5:3641:11">column</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3641:16:3641:23">Integer</jtok>
<jtok eid="102" type="primary_name_ref" span="3641:24:3641:29">input</jtok>
<jtok eid="102" type="method_call" span="3641:35:3641:43">intValue</jtok>
<jtok eid="102" type="primary_name_ref" span="3642:5:3642:11">reader</jtok>
<jtok eid="102" type="class_or_interface_ref" span="3642:15:3642:21">Reader</jtok>
<jtok eid="102" type="primary_name_ref" span="3642:22:3642:27">input</jtok>
<jtok eid="1" type="block_comment" span="3646:3:3656:7">/**
    * Return true if we can read the expected character.
    * &lt;p&gt;Note that the character will be removed from the input stream
    * on success, but will be put back on failure.  Do not attempt to
    * read the character again if the method succeeds.
    * @param delim The character that should appear next.  For a
    *              insensitive match, you must supply this in upper-case.
    * @return true if the character was successfully read, or false if
    *         it was not.
    * @see #tryRead(String)
    */</jtok>
<jtok eid="103" type="method_name" span="3657:11:3657:18">tryRead</jtok>
<jtok eid="103" type="parameter_name" span="3657:25:3657:30">delim</jtok>
<jtok eid="103" type="throws" span="3658:12:3658:16">java</jtok>
<jtok eid="103" type="throws" span="3658:17:3658:21">lang</jtok>
<jtok eid="103" type="throws" span="3658:22:3658:31">Exception</jtok>
<jtok eid="103" type="local_variable_name" span="3660:10:3660:11">c</jtok>
<jtok eid="103" type="line_comment" span="3662:5:3662:26">// Read the character</jtok>
<jtok eid="103" type="primary_name_ref" span="3663:5:3663:6">c</jtok>
<jtok eid="103" type="method_call" span="3663:9:3663:15">readCh</jtok>
<jtok eid="103" type="line_comment" span="3665:5:3665:48">// Test for a match, and push the character</jtok>
<jtok eid="103" type="line_comment" span="3666:5:3666:32">// back if the match fails.</jtok>
<jtok eid="103" type="primary_name_ref" span="3667:9:3667:10">c</jtok>
<jtok eid="103" type="primary_name_ref" span="3667:14:3667:19">delim</jtok>
<jtok eid="103" type="method_call" span="3670:7:3670:13">unread</jtok>
<jtok eid="103" type="primary_name_ref" span="3670:14:3670:15">c</jtok>
<jtok eid="1" type="block_comment" span="3676:3:3690:7">/**
    * Return true if we can read the expected string.
    * &lt;p&gt;This is simply a convenience method.
    * &lt;p&gt;Note that the string will be removed from the input stream
    * on success, but will be put back on failure.  Do not attempt to
    * read the string again if the method succeeds.
    * &lt;p&gt;This method will push back a character rather than an
    * array whenever possible (probably the majority of cases).
    * &lt;p&gt;&lt;b&gt;NOTE:&lt;/b&gt; This method currently has a hard-coded limit
    * of 100 characters for the delimiter.
    * @param delim The string that should appear next.
    * @return true if the string was successfully read, or false if
    *         it was not.
    * @see #tryRead(char)
    */</jtok>
<jtok eid="104" type="method_name" span="3691:11:3691:18">tryRead</jtok>
<jtok eid="104" type="parameter_type" span="3691:20:3691:26">String</jtok>
<jtok eid="104" type="parameter_name" span="3691:27:3691:32">delim</jtok>
<jtok eid="104" type="throws" span="3692:12:3692:16">java</jtok>
<jtok eid="104" type="throws" span="3692:17:3692:21">lang</jtok>
<jtok eid="104" type="throws" span="3692:22:3692:31">Exception</jtok>
<jtok eid="104" type="local_variable_name" span="3694:10:3694:12">ch</jtok>
<jtok eid="104" type="primary_name_ref" span="3694:17:3694:22">delim</jtok>
<jtok eid="104" type="method_call" span="3694:23:3694:34">toCharArray</jtok>
<jtok eid="104" type="local_variable_name" span="3695:10:3695:11">c</jtok>
<jtok eid="104" type="line_comment" span="3697:5:3697:37">// Compare the input, character-</jtok>
<jtok eid="104" type="line_comment" span="3698:5:3698:21">// by character.</jtok>
<jtok eid="104" type="local_variable_name" span="3700:14:3700:15">i</jtok>
<jtok eid="104" type="primary_name_ref" span="3700:21:3700:22">i</jtok>
<jtok eid="104" type="primary_name_ref" span="3700:25:3700:27">ch</jtok>
<jtok eid="104" type="qualified_name_ref" span="3700:28:3700:34">length</jtok>
<jtok eid="104" type="primary_name_ref" span="3700:36:3700:37">i</jtok>
<jtok eid="104" type="primary_name_ref" span="3702:7:3702:8">c</jtok>
<jtok eid="104" type="method_call" span="3702:9:3702:15">readCh</jtok>
<jtok eid="104" type="primary_name_ref" span="3703:11:3703:12">c</jtok>
<jtok eid="104" type="primary_name_ref" span="3703:14:3703:16">ch</jtok>
<jtok eid="104" type="primary_name_ref" span="3703:17:3703:18">i</jtok>
<jtok eid="104" type="method_call" span="3705:9:3705:15">unread</jtok>
<jtok eid="104" type="primary_name_ref" span="3705:16:3705:17">c</jtok>
<jtok eid="104" type="primary_name_ref" span="3706:13:3706:14">i</jtok>
<jtok eid="104" type="method_call" span="3707:12:3707:18">unread</jtok>
<jtok eid="104" type="primary_name_ref" span="3707:19:3707:21">ch</jtok>
<jtok eid="104" type="primary_name_ref" span="3707:22:3707:23">i</jtok>
<jtok eid="1" type="block_comment" span="3716:3:3722:7">/**
    * Return true if we can read some whitespace.
    * &lt;p&gt;This is simply a convenience method.
    * &lt;p&gt;This method will push back a character rather than an
    * array whenever possible (probably the majority of cases).
    * @return true if whitespace was found.
    */</jtok>
<jtok eid="105" type="method_name" span="3723:11:3723:24">tryWhitespace</jtok>
<jtok eid="105" type="throws" span="3724:12:3724:16">java</jtok>
<jtok eid="105" type="throws" span="3724:17:3724:21">lang</jtok>
<jtok eid="105" type="throws" span="3724:22:3724:31">Exception</jtok>
<jtok eid="105" type="local_variable_name" span="3726:10:3726:11">c</jtok>
<jtok eid="105" type="primary_name_ref" span="3727:5:3727:6">c</jtok>
<jtok eid="105" type="method_call" span="3727:9:3727:15">readCh</jtok>
<jtok eid="105" type="method_call" span="3728:9:3728:21">isWhitespace</jtok>
<jtok eid="105" type="primary_name_ref" span="3728:22:3728:23">c</jtok>
<jtok eid="105" type="method_call" span="3729:7:3729:21">skipWhitespace</jtok>
<jtok eid="105" type="method_call" span="3732:7:3732:13">unread</jtok>
<jtok eid="105" type="primary_name_ref" span="3732:14:3732:15">c</jtok>
<jtok eid="1" type="block_comment" span="3738:3:3746:7">/**
    * Read all data until we find the specified string.
    * &lt;p&gt;This is especially useful for scanning marked sections.
    * &lt;p&gt;This is a a little inefficient right now, since it calls tryRead()
    * for every character.
    * @param delim The string delimiter
    * @see #tryRead(String, boolean)
    * @see #readCh
    */</jtok>
<jtok eid="106" type="method_name" span="3747:8:3747:18">parseUntil</jtok>
<jtok eid="106" type="parameter_type" span="3747:20:3747:26">String</jtok>
<jtok eid="106" type="parameter_name" span="3747:27:3747:32">delim</jtok>
<jtok eid="106" type="throws" span="3748:12:3748:16">java</jtok>
<jtok eid="106" type="throws" span="3748:17:3748:21">lang</jtok>
<jtok eid="106" type="throws" span="3748:22:3748:31">Exception</jtok>
<jtok eid="106" type="local_variable_name" span="3750:10:3750:11">c</jtok>
<jtok eid="106" type="local_variable_name" span="3751:9:3751:18">startLine</jtok>
<jtok eid="106" type="primary_name_ref" span="3751:21:3751:25">line</jtok>
<jtok eid="106" type="method_call" span="3754:15:3754:22">tryRead</jtok>
<jtok eid="106" type="primary_name_ref" span="3754:23:3754:28">delim</jtok>
<jtok eid="106" type="primary_name_ref" span="3755:2:3755:3">c</jtok>
<jtok eid="106" type="method_call" span="3755:6:3755:12">readCh</jtok>
<jtok eid="106" type="method_call" span="3756:2:3756:18">dataBufferAppend</jtok>
<jtok eid="106" type="primary_name_ref" span="3756:19:3756:20">c</jtok>
<jtok eid="106" type="class_or_interface_ref" span="3758:14:3758:26">EOFException</jtok>
<jtok eid="106" type="local_variable_name" span="3758:27:3758:28">e</jtok>
<jtok eid="106" type="method_call" span="3759:7:3759:12">error</jtok>
<jtok eid="106" type="string_literal" span="3759:13:3759:73">"end of input while looking for delimiter (started on line "</jtok>
<jtok eid="106" type="primary_name_ref" span="3760:6:3760:15">startLine</jtok>
<jtok eid="106" type="primary_name_ref" span="3760:29:3760:34">delim</jtok>
<jtok eid="1" type="block_comment" span="3765:3:3773:7">/**
    * Skip all data until we find the specified string.
    * &lt;p&gt;This is especially useful for scanning comments.
    * &lt;p&gt;This is a a little inefficient right now, since it calls tryRead()
    * for every character.
    * @param delim The string delimiter
    * @see #tryRead(String, boolean)
    * @see #readCh
    */</jtok>
<jtok eid="107" type="method_name" span="3774:8:3774:17">skipUntil</jtok>
<jtok eid="107" type="parameter_type" span="3774:19:3774:25">String</jtok>
<jtok eid="107" type="parameter_name" span="3774:26:3774:31">delim</jtok>
<jtok eid="107" type="throws" span="3775:12:3775:16">java</jtok>
<jtok eid="107" type="throws" span="3775:17:3775:21">lang</jtok>
<jtok eid="107" type="throws" span="3775:22:3775:31">Exception</jtok>
<jtok eid="107" type="method_call" span="3777:13:3777:20">tryRead</jtok>
<jtok eid="107" type="primary_name_ref" span="3777:21:3777:26">delim</jtok>
<jtok eid="107" type="method_call" span="3778:7:3778:13">readCh</jtok>
<jtok eid="1" type="block_comment" span="3783:3:3793:7">/**
    * Read just the encoding declaration (or XML declaration) at the 
    * start of an external entity.
    * When this method is called, we know that the declaration is
    * present (or appears to be).  We also know that the entity is
    * in some sort of ASCII-derived 8-bit encoding.
    * The idea of this is to let us read what the 8-bit encoding is
    * before we've committed to converting any more of the file; the
    * XML or encoding declaration must be in 7-bit ASCII, so we're
    * safe as long as we don't go past it.
    */</jtok>
<jtok eid="108" type="method_name" span="3794:8:3794:35">read8bitEncodingDeclaration</jtok>
<jtok eid="108" type="throws" span="3795:12:3795:16">java</jtok>
<jtok eid="108" type="throws" span="3795:17:3795:21">lang</jtok>
<jtok eid="108" type="throws" span="3795:22:3795:31">Exception</jtok>
<jtok eid="108" type="local_variable_name" span="3797:9:3797:11">ch</jtok>
<jtok eid="108" type="primary_name_ref" span="3798:5:3798:18">readBufferPos</jtok>
<jtok eid="108" type="primary_name_ref" span="3798:21:3798:37">readBufferLength</jtok>
<jtok eid="108" type="primary_name_ref" span="3801:7:3801:9">ch</jtok>
<jtok eid="108" type="primary_name_ref" span="3801:12:3801:14">is</jtok>
<jtok eid="108" type="method_call" span="3801:15:3801:19">read</jtok>
<jtok eid="108" type="primary_name_ref" span="3802:7:3802:17">readBuffer</jtok>
<jtok eid="108" type="primary_name_ref" span="3802:18:3802:34">readBufferLength</jtok>
<jtok eid="108" type="primary_name_ref" span="3802:46:3802:48">ch</jtok>
<jtok eid="108" type="primary_name_ref" span="3803:15:3803:17">ch</jtok>
<jtok eid="108" type="method_call" span="3807:2:3807:7">error</jtok>
<jtok eid="108" type="string_literal" span="3807:8:3807:64">"end of file before end of XML or encoding declaration."</jtok>
<jtok eid="108" type="string_literal" span="3808:14:3808:18">"?&gt;"</jtok>
<jtok eid="108" type="primary_name_ref" span="3811:11:3811:21">readBuffer</jtok>
<jtok eid="108" type="qualified_name_ref" span="3811:22:3811:28">length</jtok>
<jtok eid="108" type="primary_name_ref" span="3811:32:3811:48">readBufferLength</jtok>
<jtok eid="108" type="method_call" span="3812:2:3812:7">error</jtok>
<jtok eid="108" type="string_literal" span="3812:8:3812:48">"unfinished XML or encoding declaration"</jtok>
<jtok eid="1" type="line_comment" span="3819:3:3819:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="3820:3:3820:20">// Low-level I/O.</jtok>
<jtok eid="1" type="line_comment" span="3821:3:3821:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="3824:3:3836:7">/**
    * Read a chunk of data from an external input source.
    * &lt;p&gt;This is simply a front-end that fills the rawReadBuffer
    * with bytes, then calls the appropriate encoding handler.
    * @see #encoding
    * @see #rawReadBuffer
    * @see #readBuffer
    * @see #filterCR
    * @see #copyUtf8ReadBuffer
    * @see #copyIso8859_1ReadBuffer
    * @see #copyUcs_2ReadBuffer
    * @see #copyUcs_4ReadBuffer
    */</jtok>
<jtok eid="109" type="method_name" span="3837:8:3837:21">readDataChunk</jtok>
<jtok eid="109" type="throws" span="3838:12:3838:16">java</jtok>
<jtok eid="109" type="throws" span="3838:17:3838:21">lang</jtok>
<jtok eid="109" type="throws" span="3838:22:3838:31">Exception</jtok>
<jtok eid="109" type="local_variable_name" span="3840:9:3840:14">count</jtok>
<jtok eid="109" type="local_variable_name" span="3840:16:3840:17">i</jtok>
<jtok eid="109" type="local_variable_name" span="3840:19:3840:20">j</jtok>
<jtok eid="109" type="line_comment" span="3842:5:3842:36">// See if we have any overflow.</jtok>
<jtok eid="109" type="primary_name_ref" span="3843:9:3843:27">readBufferOverflow</jtok>
<jtok eid="109" type="primary_name_ref" span="3845:7:3845:17">readBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3845:29:3845:47">readBufferOverflow</jtok>
<jtok eid="109" type="primary_name_ref" span="3846:7:3846:25">readBufferOverflow</jtok>
<jtok eid="109" type="primary_name_ref" span="3847:7:3847:20">readBufferPos</jtok>
<jtok eid="109" type="primary_name_ref" span="3848:7:3848:12">sawCR</jtok>
<jtok eid="109" type="primary_name_ref" span="3852:7:3852:20">readBufferPos</jtok>
<jtok eid="109" type="primary_name_ref" span="3853:7:3853:12">sawCR</jtok>
<jtok eid="109" type="line_comment" span="3856:5:3856:41">// Special situation -- we're taking</jtok>
<jtok eid="109" type="line_comment" span="3857:5:3857:38">// input from a character stream.</jtok>
<jtok eid="109" type="primary_name_ref" span="3858:9:3858:19">sourceType</jtok>
<jtok eid="109" type="primary_name_ref" span="3858:23:3858:35">INPUT_READER</jtok>
<jtok eid="109" type="primary_name_ref" span="3860:7:3860:12">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3860:15:3860:21">reader</jtok>
<jtok eid="109" type="method_call" span="3860:22:3860:26">read</jtok>
<jtok eid="109" type="primary_name_ref" span="3860:27:3860:37">readBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3860:39:3860:52">readBufferPos</jtok>
<jtok eid="109" type="primary_name_ref" span="3860:54:3860:69">READ_BUFFER_MAX</jtok>
<jtok eid="109" type="primary_name_ref" span="3861:11:3861:16">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3862:10:3862:26">readBufferLength</jtok>
<jtok eid="109" type="primary_name_ref" span="3865:9:3865:25">readBufferLength</jtok>
<jtok eid="109" type="primary_name_ref" span="3865:28:3865:41">readBufferPos</jtok>
<jtok eid="109" type="primary_name_ref" span="3865:42:3865:47">count</jtok>
<jtok eid="109" type="method_call" span="3866:9:3866:17">filterCR</jtok>
<jtok eid="109" type="primary_name_ref" span="3867:9:3867:14">sawCR</jtok>
<jtok eid="109" type="line_comment" span="3872:5:3872:38">// Read as many bytes as possible</jtok>
<jtok eid="109" type="line_comment" span="3873:5:3873:29">// into the read buffer.</jtok>
<jtok eid="109" type="primary_name_ref" span="3874:5:3874:10">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3874:13:3874:15">is</jtok>
<jtok eid="109" type="method_call" span="3874:16:3874:20">read</jtok>
<jtok eid="109" type="primary_name_ref" span="3874:21:3874:34">rawReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3874:39:3874:54">READ_BUFFER_MAX</jtok>
<jtok eid="109" type="line_comment" span="3876:5:3876:40">// Dispatch to an encoding-specific</jtok>
<jtok eid="109" type="line_comment" span="3877:5:3877:37">// reader method to populate the</jtok>
<jtok eid="109" type="line_comment" span="3878:5:3878:19">// readBuffer.</jtok>
<jtok eid="109" type="primary_name_ref" span="3879:13:3879:21">encoding</jtok>
<jtok eid="109" type="primary_name_ref" span="3881:12:3881:26">ENCODING_UTF_8</jtok>
<jtok eid="109" type="method_call" span="3882:7:3882:25">copyUtf8ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3882:26:3882:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3885:12:3885:31">ENCODING_ISO_8859_1</jtok>
<jtok eid="109" type="method_call" span="3886:7:3886:30">copyIso8859_1ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3886:31:3886:36">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3889:12:3889:29">ENCODING_UCS_2_12</jtok>
<jtok eid="109" type="method_call" span="3890:7:3890:25">copyUcs2ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3890:26:3890:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3893:12:3893:29">ENCODING_UCS_2_21</jtok>
<jtok eid="109" type="method_call" span="3894:7:3894:25">copyUcs2ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3894:26:3894:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3897:12:3897:31">ENCODING_UCS_4_1234</jtok>
<jtok eid="109" type="method_call" span="3898:7:3898:25">copyUcs4ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3898:26:3898:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3901:12:3901:31">ENCODING_UCS_4_4321</jtok>
<jtok eid="109" type="method_call" span="3902:7:3902:25">copyUcs4ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3902:26:3902:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3905:12:3905:31">ENCODING_UCS_4_2143</jtok>
<jtok eid="109" type="method_call" span="3906:7:3906:25">copyUcs4ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3906:26:3906:31">count</jtok>
<jtok eid="109" type="primary_name_ref" span="3909:12:3909:31">ENCODING_UCS_4_3412</jtok>
<jtok eid="109" type="method_call" span="3910:7:3910:25">copyUcs4ReadBuffer</jtok>
<jtok eid="109" type="primary_name_ref" span="3910:26:3910:31">count</jtok>
<jtok eid="109" type="line_comment" span="3914:5:3914:39">// Filter out all carriage returns</jtok>
<jtok eid="109" type="line_comment" span="3915:5:3915:26">// if we've seen any.</jtok>
<jtok eid="109" type="primary_name_ref" span="3916:9:3916:14">sawCR</jtok>
<jtok eid="109" type="method_call" span="3918:7:3918:15">filterCR</jtok>
<jtok eid="109" type="primary_name_ref" span="3919:7:3919:12">sawCR</jtok>
<jtok eid="109" type="line_comment" span="3922:5:3922:27">// Reset the position.</jtok>
<jtok eid="109" type="primary_name_ref" span="3923:5:3923:18">readBufferPos</jtok>
<jtok eid="109" type="primary_name_ref" span="3924:5:3924:21">currentByteCount</jtok>
<jtok eid="109" type="primary_name_ref" span="3924:25:3924:30">count</jtok>
<jtok eid="1" type="block_comment" span="3928:3:3934:7">/**
    * Filter carriage returns in the read buffer.
    * &lt;p&gt;CRLF becomes LF; CR becomes LF.
    * @see #readDataChunk
    * @see #readBuffer
    * @see #readBufferOverflow
    */</jtok>
<jtok eid="110" type="method_name" span="3935:8:3935:16">filterCR</jtok>
<jtok eid="110" type="local_variable_name" span="3937:9:3937:10">i</jtok>
<jtok eid="110" type="local_variable_name" span="3937:12:3937:13">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3939:5:3939:23">readBufferOverflow</jtok>
<jtok eid="110" type="label_name" span="3941:5:3941:9">loop</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:16:3941:17">i</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:23:3941:24">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:30:3941:31">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:34:3941:50">readBufferLength</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:52:3941:53">i</jtok>
<jtok eid="110" type="primary_name_ref" span="3941:57:3941:58">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3943:15:3943:25">readBuffer</jtok>
<jtok eid="110" type="primary_name_ref" span="3943:26:3943:27">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3946:13:3946:14">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3946:18:3946:34">readBufferLength</jtok>
<jtok eid="110" type="primary_name_ref" span="3948:11:3948:29">readBufferOverflow</jtok>
<jtok eid="110" type="primary_name_ref" span="3949:11:3949:27">readBufferLength</jtok>
<jtok eid="110" type="label_ref" span="3950:17:3950:21">loop</jtok>
<jtok eid="110" type="primary_name_ref" span="3952:18:3952:28">readBuffer</jtok>
<jtok eid="110" type="primary_name_ref" span="3952:29:3952:30">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3953:12:3953:13">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3954:9:3954:19">readBuffer</jtok>
<jtok eid="110" type="primary_name_ref" span="3954:20:3954:21">i</jtok>
<jtok eid="110" type="primary_name_ref" span="3959:9:3959:19">readBuffer</jtok>
<jtok eid="110" type="primary_name_ref" span="3959:20:3959:21">i</jtok>
<jtok eid="110" type="primary_name_ref" span="3959:25:3959:35">readBuffer</jtok>
<jtok eid="110" type="primary_name_ref" span="3959:36:3959:37">j</jtok>
<jtok eid="110" type="primary_name_ref" span="3963:5:3963:21">readBufferLength</jtok>
<jtok eid="110" type="primary_name_ref" span="3963:24:3963:25">i</jtok>
<jtok eid="1" type="block_comment" span="3967:3:3979:7">/**
    * Convert a buffer of UTF-8-encoded bytes into UTF-16 characters.
    * &lt;p&gt;When readDataChunk() calls this method, the raw bytes are in 
    * rawReadBuffer, and the final characters will appear in 
    * readBuffer.
    * &lt;p&gt;The tricky part of this is dealing with UTF-8 multi-byte 
    * sequences, but it doesn't seem to slow things down too much.
    * @param count The number of bytes to convert.
    * @see #readDataChunk
    * @see #rawReadBuffer
    * @see #readBuffer
    * @see #getNextUtf8Byte
    */</jtok>
<jtok eid="111" type="method_name" span="3980:8:3980:26">copyUtf8ReadBuffer</jtok>
<jtok eid="111" type="parameter_name" span="3980:32:3980:37">count</jtok>
<jtok eid="111" type="throws" span="3981:12:3981:16">java</jtok>
<jtok eid="111" type="throws" span="3981:17:3981:21">lang</jtok>
<jtok eid="111" type="throws" span="3981:22:3981:31">Exception</jtok>
<jtok eid="111" type="local_variable_name" span="3983:9:3983:10">i</jtok>
<jtok eid="111" type="local_variable_name" span="3984:9:3984:10">j</jtok>
<jtok eid="111" type="primary_name_ref" span="3984:13:3984:26">readBufferPos</jtok>
<jtok eid="111" type="local_variable_name" span="3985:9:3985:11">b1</jtok>
<jtok eid="111" type="local_variable_name" span="3986:13:3986:24">isSurrogate</jtok>
<jtok eid="111" type="primary_name_ref" span="3987:12:3987:13">i</jtok>
<jtok eid="111" type="primary_name_ref" span="3987:16:3987:21">count</jtok>
<jtok eid="111" type="primary_name_ref" span="3988:7:3988:9">b1</jtok>
<jtok eid="111" type="primary_name_ref" span="3988:12:3988:25">rawReadBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="3988:26:3988:27">i</jtok>
<jtok eid="111" type="primary_name_ref" span="3989:7:3989:18">isSurrogate</jtok>
<jtok eid="111" type="line_comment" span="3991:5:3991:40">// Determine whether we are dealing</jtok>
<jtok eid="111" type="line_comment" span="3992:5:3992:43">// with a one-, two-, three-, or four-</jtok>
<jtok eid="111" type="line_comment" span="3993:5:3993:22">// byte sequence.</jtok>
<jtok eid="111" type="primary_name_ref" span="3994:12:3994:14">b1</jtok>
<jtok eid="111" type="line_comment" span="3995:2:3995:49">// 1-byte sequence: 000000000xxxxxxx = 0xxxxxxx</jtok>
<jtok eid="111" type="primary_name_ref" span="3996:2:3996:12">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="3996:13:3996:14">j</jtok>
<jtok eid="111" type="primary_name_ref" span="3996:26:3996:28">b1</jtok>
<jtok eid="111" type="primary_name_ref" span="3997:19:3997:21">b1</jtok>
<jtok eid="111" type="line_comment" span="3998:2:3998:58">// 2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx</jtok>
<jtok eid="111" type="primary_name_ref" span="3999:2:3999:12">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="3999:13:3999:14">j</jtok>
<jtok eid="111" type="primary_name_ref" span="4000:13:4000:15">b1</jtok>
<jtok eid="111" type="method_call" span="4001:4:4001:19">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4001:20:4001:21">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4001:25:4001:30">count</jtok>
<jtok eid="111" type="primary_name_ref" span="4002:19:4002:21">b1</jtok>
<jtok eid="111" type="line_comment" span="4003:2:4003:67">// 3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx</jtok>
<jtok eid="111" type="primary_name_ref" span="4004:2:4004:12">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="4004:13:4004:14">j</jtok>
<jtok eid="111" type="primary_name_ref" span="4005:13:4005:15">b1</jtok>
<jtok eid="111" type="method_call" span="4006:5:4006:20">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4006:21:4006:22">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4006:26:4006:31">count</jtok>
<jtok eid="111" type="method_call" span="4007:4:4007:19">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4007:20:4007:21">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4007:25:4007:30">count</jtok>
<jtok eid="111" type="primary_name_ref" span="4008:19:4008:21">b1</jtok>
<jtok eid="111" type="line_comment" span="4009:2:4009:59">// 4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx</jtok>
<jtok eid="111" type="line_comment" span="4010:2:4010:46">//     = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx</jtok>
<jtok eid="111" type="line_comment" span="4011:2:4011:23">// (uuuuu = wwww + 1)</jtok>
<jtok eid="111" type="primary_name_ref" span="4012:2:4012:13">isSurrogate</jtok>
<jtok eid="111" type="local_variable_name" span="4013:6:4013:8">b2</jtok>
<jtok eid="111" type="method_call" span="4013:11:4013:26">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4013:27:4013:28">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4013:32:4013:37">count</jtok>
<jtok eid="111" type="local_variable_name" span="4014:6:4014:8">b3</jtok>
<jtok eid="111" type="method_call" span="4014:11:4014:26">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4014:27:4014:28">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4014:32:4014:37">count</jtok>
<jtok eid="111" type="local_variable_name" span="4015:6:4015:8">b4</jtok>
<jtok eid="111" type="method_call" span="4015:11:4015:26">getNextUtf8Byte</jtok>
<jtok eid="111" type="primary_name_ref" span="4015:27:4015:28">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4015:32:4015:37">count</jtok>
<jtok eid="111" type="primary_name_ref" span="4016:2:4016:12">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="4016:13:4016:14">j</jtok>
<jtok eid="111" type="primary_name_ref" span="4018:8:4018:10">b1</jtok>
<jtok eid="111" type="primary_name_ref" span="4018:29:4018:31">b2</jtok>
<jtok eid="111" type="primary_name_ref" span="4019:6:4019:8">b2</jtok>
<jtok eid="111" type="primary_name_ref" span="4020:6:4020:8">b3</jtok>
<jtok eid="111" type="primary_name_ref" span="4021:2:4021:12">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="4021:13:4021:14">j</jtok>
<jtok eid="111" type="primary_name_ref" span="4023:6:4023:8">b3</jtok>
<jtok eid="111" type="primary_name_ref" span="4024:4:4024:6">b4</jtok>
<jtok eid="111" type="line_comment" span="4025:5:4025:49">// TODO: test that surrogate value is legal.</jtok>
<jtok eid="111" type="line_comment" span="4027:2:4027:51">// Otherwise, the 8th bit may not be set in UTF-8</jtok>
<jtok eid="111" type="method_call" span="4028:2:4028:15">encodingError</jtok>
<jtok eid="111" type="string_literal" span="4028:16:4028:57">"bad start for UTF-8 multi-byte sequence"</jtok>
<jtok eid="111" type="primary_name_ref" span="4028:59:4028:61">b1</jtok>
<jtok eid="111" type="primary_name_ref" span="4028:63:4028:64">i</jtok>
<jtok eid="111" type="primary_name_ref" span="4030:11:4030:21">readBuffer</jtok>
<jtok eid="111" type="primary_name_ref" span="4030:22:4030:23">j</jtok>
<jtok eid="111" type="primary_name_ref" span="4031:2:4031:7">sawCR</jtok>
<jtok eid="111" type="line_comment" span="4034:5:4034:41">// How many characters have we read?</jtok>
<jtok eid="111" type="primary_name_ref" span="4035:5:4035:21">readBufferLength</jtok>
<jtok eid="111" type="primary_name_ref" span="4035:24:4035:25">j</jtok>
<jtok eid="1" type="block_comment" span="4039:3:4048:7">/**
    * Return the next byte value in a UTF-8 sequence.
    * If it is not possible to get a byte from the current
    * entity, throw an exception.
    * @param pos The current position in the rawReadBuffer.
    * @param count The number of bytes in the rawReadBuffer
    * @return The significant six bits of a non-initial byte in
    *         a UTF-8 sequence.
    * @exception EOFException If the sequence is incomplete.
    */</jtok>
<jtok eid="112" type="method_name" span="4049:7:4049:22">getNextUtf8Byte</jtok>
<jtok eid="112" type="parameter_name" span="4049:28:4049:31">pos</jtok>
<jtok eid="112" type="parameter_name" span="4049:37:4049:42">count</jtok>
<jtok eid="112" type="throws" span="4050:12:4050:16">java</jtok>
<jtok eid="112" type="throws" span="4050:17:4050:21">lang</jtok>
<jtok eid="112" type="throws" span="4050:22:4050:31">Exception</jtok>
<jtok eid="112" type="local_variable_name" span="4052:9:4052:12">val</jtok>
<jtok eid="112" type="line_comment" span="4054:5:4054:40">// Take a character from the buffer</jtok>
<jtok eid="112" type="line_comment" span="4055:5:4055:40">// or from the actual input stream.</jtok>
<jtok eid="112" type="primary_name_ref" span="4056:9:4056:12">pos</jtok>
<jtok eid="112" type="primary_name_ref" span="4056:15:4056:20">count</jtok>
<jtok eid="112" type="primary_name_ref" span="4057:7:4057:10">val</jtok>
<jtok eid="112" type="primary_name_ref" span="4057:13:4057:26">rawReadBuffer</jtok>
<jtok eid="112" type="primary_name_ref" span="4057:27:4057:30">pos</jtok>
<jtok eid="112" type="primary_name_ref" span="4059:7:4059:10">val</jtok>
<jtok eid="112" type="primary_name_ref" span="4059:13:4059:15">is</jtok>
<jtok eid="112" type="method_call" span="4059:16:4059:20">read</jtok>
<jtok eid="112" type="primary_name_ref" span="4060:11:4060:14">val</jtok>
<jtok eid="112" type="method_call" span="4061:2:4061:15">encodingError</jtok>
<jtok eid="112" type="string_literal" span="4061:16:4061:61">"unfinished multi-byte UTF-8 sequence at EOF"</jtok>
<jtok eid="112" type="primary_name_ref" span="4061:67:4061:70">pos</jtok>
<jtok eid="112" type="line_comment" span="4065:5:4065:41">// Check for the correct bits at the</jtok>
<jtok eid="112" type="line_comment" span="4066:5:4066:14">// start.</jtok>
<jtok eid="112" type="primary_name_ref" span="4067:10:4067:13">val</jtok>
<jtok eid="112" type="method_call" span="4068:7:4068:20">encodingError</jtok>
<jtok eid="112" type="string_literal" span="4068:21:4068:68">"bad continuation of multi-byte UTF-8 sequence"</jtok>
<jtok eid="112" type="primary_name_ref" span="4068:70:4068:73">val</jtok>
<jtok eid="112" type="primary_name_ref" span="4069:7:4069:10">pos</jtok>
<jtok eid="112" type="line_comment" span="4072:5:4072:36">// Return the significant bits.</jtok>
<jtok eid="112" type="primary_name_ref" span="4073:13:4073:16">val</jtok>
<jtok eid="1" type="block_comment" span="4077:3:4087:7">/**
    * Convert a buffer of ISO-8859-1-encoded bytes into UTF-16 characters.
    * &lt;p&gt;When readDataChunk() calls this method, the raw bytes are in 
    * rawReadBuffer, and the final characters will appear in 
    * readBuffer.
    * &lt;p&gt;This is a direct conversion, with no tricks.
    * @param count The number of bytes to convert.
    * @see #readDataChunk
    * @see #rawReadBuffer
    * @see #readBuffer
    */</jtok>
<jtok eid="113" type="method_name" span="4088:8:4088:31">copyIso8859_1ReadBuffer</jtok>
<jtok eid="113" type="parameter_name" span="4088:37:4088:42">count</jtok>
<jtok eid="113" type="local_variable_name" span="4090:9:4090:10">i</jtok>
<jtok eid="113" type="local_variable_name" span="4090:12:4090:13">j</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:10:4091:11">i</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:17:4091:18">j</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:21:4091:34">readBufferPos</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:36:4091:37">i</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:40:4091:45">count</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:47:4091:48">i</jtok>
<jtok eid="113" type="primary_name_ref" span="4091:52:4091:53">j</jtok>
<jtok eid="113" type="primary_name_ref" span="4092:7:4092:17">readBuffer</jtok>
<jtok eid="113" type="primary_name_ref" span="4092:18:4092:19">j</jtok>
<jtok eid="113" type="primary_name_ref" span="4092:30:4092:43">rawReadBuffer</jtok>
<jtok eid="113" type="primary_name_ref" span="4092:44:4092:45">i</jtok>
<jtok eid="113" type="primary_name_ref" span="4093:11:4093:21">readBuffer</jtok>
<jtok eid="113" type="primary_name_ref" span="4093:22:4093:23">j</jtok>
<jtok eid="113" type="primary_name_ref" span="4094:2:4094:7">sawCR</jtok>
<jtok eid="113" type="primary_name_ref" span="4097:5:4097:21">readBufferLength</jtok>
<jtok eid="113" type="primary_name_ref" span="4097:24:4097:25">j</jtok>
<jtok eid="1" type="block_comment" span="4101:3:4112:7">/**
    * Convert a buffer of UCS-2-encoded bytes into UTF-16 characters.
    * &lt;p&gt;When readDataChunk() calls this method, the raw bytes are in 
    * rawReadBuffer, and the final characters will appear in 
    * readBuffer.
    * @param count The number of bytes to convert.
    * @param shift1 The number of bits to shift byte 1.
    * @param shift2 The number of bits to shift byte 2
    * @see #readDataChunk
    * @see #rawReadBuffer
    * @see #readBuffer
    */</jtok>
<jtok eid="114" type="method_name" span="4113:8:4113:26">copyUcs2ReadBuffer</jtok>
<jtok eid="114" type="parameter_name" span="4113:32:4113:37">count</jtok>
<jtok eid="114" type="parameter_name" span="4113:43:4113:49">shift1</jtok>
<jtok eid="114" type="parameter_name" span="4113:55:4113:61">shift2</jtok>
<jtok eid="114" type="throws" span="4114:12:4114:16">java</jtok>
<jtok eid="114" type="throws" span="4114:17:4114:21">lang</jtok>
<jtok eid="114" type="throws" span="4114:22:4114:31">Exception</jtok>
<jtok eid="114" type="local_variable_name" span="4116:9:4116:10">j</jtok>
<jtok eid="114" type="primary_name_ref" span="4116:13:4116:26">readBufferPos</jtok>
<jtok eid="114" type="primary_name_ref" span="4118:9:4118:14">count</jtok>
<jtok eid="114" type="primary_name_ref" span="4118:23:4118:28">count</jtok>
<jtok eid="114" type="method_call" span="4119:7:4119:20">encodingError</jtok>
<jtok eid="114" type="string_literal" span="4119:21:4119:60">"odd number of bytes in UCS-2 encoding"</jtok>
<jtok eid="114" type="primary_name_ref" span="4119:66:4119:71">count</jtok>
<jtok eid="114" type="local_variable_name" span="4121:14:4121:15">i</jtok>
<jtok eid="114" type="primary_name_ref" span="4121:21:4121:22">i</jtok>
<jtok eid="114" type="primary_name_ref" span="4121:25:4121:30">count</jtok>
<jtok eid="114" type="primary_name_ref" span="4121:32:4121:33">i</jtok>
<jtok eid="114" type="primary_name_ref" span="4122:7:4122:17">readBuffer</jtok>
<jtok eid="114" type="primary_name_ref" span="4122:18:4122:19">j</jtok>
<jtok eid="114" type="primary_name_ref" span="4123:11:4123:24">rawReadBuffer</jtok>
<jtok eid="114" type="primary_name_ref" span="4123:25:4123:26">i</jtok>
<jtok eid="114" type="primary_name_ref" span="4123:39:4123:45">shift1</jtok>
<jtok eid="114" type="primary_name_ref" span="4124:11:4124:24">rawReadBuffer</jtok>
<jtok eid="114" type="primary_name_ref" span="4124:25:4124:26">i</jtok>
<jtok eid="114" type="primary_name_ref" span="4124:41:4124:47">shift2</jtok>
<jtok eid="114" type="primary_name_ref" span="4125:11:4125:21">readBuffer</jtok>
<jtok eid="114" type="primary_name_ref" span="4125:22:4125:23">j</jtok>
<jtok eid="114" type="primary_name_ref" span="4126:2:4126:7">sawCR</jtok>
<jtok eid="114" type="primary_name_ref" span="4129:5:4129:21">readBufferLength</jtok>
<jtok eid="114" type="primary_name_ref" span="4129:24:4129:25">j</jtok>
<jtok eid="1" type="block_comment" span="4133:3:4148:7">/**
    * Convert a buffer of UCS-4-encoded bytes into UTF-16 characters.
    * &lt;p&gt;When readDataChunk() calls this method, the raw bytes are in 
    * rawReadBuffer, and the final characters will appear in 
    * readBuffer.
    * &lt;p&gt;Java has 16-bit chars, but this routine will attempt to use
    * surrogates to encoding values between 0x00010000 and 0x000fffff.
    * @param count The number of bytes to convert.
    * @param shift1 The number of bits to shift byte 1.
    * @param shift2 The number of bits to shift byte 2
    * @param shift3 The number of bits to shift byte 2
    * @param shift4 The number of bits to shift byte 2
    * @see #readDataChunk
    * @see #rawReadBuffer
    * @see #readBuffer
    */</jtok>
<jtok eid="115" type="method_name" span="4149:8:4149:26">copyUcs4ReadBuffer</jtok>
<jtok eid="115" type="parameter_name" span="4149:32:4149:37">count</jtok>
<jtok eid="115" type="parameter_name" span="4149:43:4149:49">shift1</jtok>
<jtok eid="115" type="parameter_name" span="4149:55:4149:61">shift2</jtok>
<jtok eid="115" type="parameter_name" span="4150:11:4150:17">shift3</jtok>
<jtok eid="115" type="parameter_name" span="4150:23:4150:29">shift4</jtok>
<jtok eid="115" type="throws" span="4151:12:4151:16">java</jtok>
<jtok eid="115" type="throws" span="4151:17:4151:21">lang</jtok>
<jtok eid="115" type="throws" span="4151:22:4151:31">Exception</jtok>
<jtok eid="115" type="local_variable_name" span="4153:9:4153:10">j</jtok>
<jtok eid="115" type="primary_name_ref" span="4153:13:4153:26">readBufferPos</jtok>
<jtok eid="115" type="local_variable_name" span="4154:9:4154:14">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4156:9:4156:14">count</jtok>
<jtok eid="115" type="primary_name_ref" span="4156:23:4156:28">count</jtok>
<jtok eid="115" type="method_call" span="4157:7:4157:20">encodingError</jtok>
<jtok eid="115" type="string_literal" span="4157:21:4157:75">"number of bytes in UCS-4 encoding not divisible by 4"</jtok>
<jtok eid="115" type="primary_name_ref" span="4158:11:4158:16">count</jtok>
<jtok eid="115" type="local_variable_name" span="4160:14:4160:15">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4160:21:4160:22">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4160:25:4160:30">count</jtok>
<jtok eid="115" type="primary_name_ref" span="4160:32:4160:33">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4161:7:4161:12">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4161:18:4161:31">rawReadBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4161:32:4161:33">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4161:46:4161:52">shift1</jtok>
<jtok eid="115" type="primary_name_ref" span="4162:11:4162:24">rawReadBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4162:25:4162:26">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4162:41:4162:47">shift2</jtok>
<jtok eid="115" type="primary_name_ref" span="4163:11:4163:24">rawReadBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4163:25:4163:26">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4163:41:4163:47">shift3</jtok>
<jtok eid="115" type="primary_name_ref" span="4164:11:4164:24">rawReadBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4164:25:4164:26">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4164:41:4164:47">shift4</jtok>
<jtok eid="115" type="primary_name_ref" span="4165:11:4165:16">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4166:2:4166:12">readBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4166:13:4166:14">j</jtok>
<jtok eid="115" type="primary_name_ref" span="4166:26:4166:31">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4167:6:4167:11">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4168:4:4168:9">sawCR</jtok>
<jtok eid="115" type="primary_name_ref" span="4170:18:4170:23">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4171:2:4171:12">readBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4171:13:4171:14">j</jtok>
<jtok eid="115" type="primary_name_ref" span="4171:36:4171:41">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4172:2:4172:12">readBuffer</jtok>
<jtok eid="115" type="primary_name_ref" span="4172:13:4172:14">j</jtok>
<jtok eid="115" type="primary_name_ref" span="4172:35:4172:40">value</jtok>
<jtok eid="115" type="method_call" span="4174:2:4174:15">encodingError</jtok>
<jtok eid="115" type="string_literal" span="4174:16:4174:55">"value cannot be represented in UTF-16"</jtok>
<jtok eid="115" type="primary_name_ref" span="4175:9:4175:14">value</jtok>
<jtok eid="115" type="primary_name_ref" span="4175:16:4175:17">i</jtok>
<jtok eid="115" type="primary_name_ref" span="4178:5:4178:21">readBufferLength</jtok>
<jtok eid="115" type="primary_name_ref" span="4178:24:4178:25">j</jtok>
<jtok eid="1" type="block_comment" span="4182:3:4184:7">/**
    * Report a character encoding error.
    */</jtok>
<jtok eid="116" type="method_name" span="4185:8:4185:21">encodingError</jtok>
<jtok eid="116" type="parameter_type" span="4185:23:4185:29">String</jtok>
<jtok eid="116" type="parameter_name" span="4185:30:4185:37">message</jtok>
<jtok eid="116" type="parameter_name" span="4185:43:4185:48">value</jtok>
<jtok eid="116" type="parameter_name" span="4185:54:4185:60">offset</jtok>
<jtok eid="116" type="throws" span="4186:12:4186:16">java</jtok>
<jtok eid="116" type="throws" span="4186:17:4186:21">lang</jtok>
<jtok eid="116" type="throws" span="4186:22:4186:31">Exception</jtok>
<jtok eid="116" type="class_or_interface_ref" span="4188:5:4188:11">String</jtok>
<jtok eid="116" type="local_variable_name" span="4188:12:4188:15">uri</jtok>
<jtok eid="116" type="primary_name_ref" span="4190:9:4190:14">value</jtok>
<jtok eid="116" type="primary_name_ref" span="4191:7:4191:14">message</jtok>
<jtok eid="116" type="primary_name_ref" span="4191:17:4191:24">message</jtok>
<jtok eid="116" type="string_literal" span="4191:27:4191:45">" (byte value: 0x"</jtok>
<jtok eid="116" type="primary_name_ref" span="4192:2:4192:9">Integer</jtok>
<jtok eid="116" type="method_call" span="4192:10:4192:21">toHexString</jtok>
<jtok eid="116" type="primary_name_ref" span="4192:22:4192:27">value</jtok>
<jtok eid="116" type="primary_name_ref" span="4194:9:4194:23">externalEntity</jtok>
<jtok eid="116" type="primary_name_ref" span="4195:7:4195:10">uri</jtok>
<jtok eid="116" type="primary_name_ref" span="4195:13:4195:27">externalEntity</jtok>
<jtok eid="116" type="method_call" span="4195:28:4195:34">getURL</jtok>
<jtok eid="116" type="method_call" span="4195:37:4195:45">toString</jtok>
<jtok eid="116" type="primary_name_ref" span="4197:7:4197:10">uri</jtok>
<jtok eid="116" type="primary_name_ref" span="4197:13:4197:20">baseURI</jtok>
<jtok eid="116" type="primary_name_ref" span="4199:5:4199:12">handler</jtok>
<jtok eid="116" type="method_call" span="4199:13:4199:18">error</jtok>
<jtok eid="116" type="primary_name_ref" span="4199:19:4199:26">message</jtok>
<jtok eid="116" type="primary_name_ref" span="4199:28:4199:31">uri</jtok>
<jtok eid="116" type="primary_name_ref" span="4199:37:4199:43">offset</jtok>
<jtok eid="116" type="primary_name_ref" span="4199:46:4199:62">currentByteCount</jtok>
<jtok eid="1" type="line_comment" span="4204:3:4204:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="line_comment" span="4205:3:4205:22">// Local Variables.</jtok>
<jtok eid="1" type="line_comment" span="4206:3:4206:73">//////////////////////////////////////////////////////////////////////</jtok>
<jtok eid="1" type="block_comment" span="4208:3:4210:7">/**
    * Re-initialize the variables for each parse.
    */</jtok>
<jtok eid="117" type="method_name" span="4211:8:4211:27">initializeVariables</jtok>
<jtok eid="117" type="line_comment" span="4213:5:4213:29">// No errors; first line</jtok>
<jtok eid="117" type="primary_name_ref" span="4214:5:4214:15">errorCount</jtok>
<jtok eid="117" type="primary_name_ref" span="4215:5:4215:9">line</jtok>
<jtok eid="117" type="primary_name_ref" span="4216:5:4216:11">column</jtok>
<jtok eid="117" type="line_comment" span="4218:5:4218:45">// Set up the buffers for data and names</jtok>
<jtok eid="117" type="primary_name_ref" span="4219:5:4219:18">dataBufferPos</jtok>
<jtok eid="117" type="primary_name_ref" span="4220:5:4220:15">dataBuffer</jtok>
<jtok eid="117" type="primary_name_ref" span="4220:27:4220:46">DATA_BUFFER_INITIAL</jtok>
<jtok eid="117" type="primary_name_ref" span="4221:5:4221:18">nameBufferPos</jtok>
<jtok eid="117" type="primary_name_ref" span="4222:5:4222:15">nameBuffer</jtok>
<jtok eid="117" type="primary_name_ref" span="4222:27:4222:46">NAME_BUFFER_INITIAL</jtok>
<jtok eid="117" type="line_comment" span="4224:5:4224:34">// Set up the DTD hash tables</jtok>
<jtok eid="117" type="primary_name_ref" span="4225:5:4225:16">elementInfo</jtok>
<jtok eid="117" type="constructor_call" span="4225:23:4225:32">Hashtable</jtok>
<jtok eid="117" type="primary_name_ref" span="4226:5:4226:15">entityInfo</jtok>
<jtok eid="117" type="constructor_call" span="4226:22:4226:31">Hashtable</jtok>
<jtok eid="117" type="primary_name_ref" span="4227:5:4227:17">notationInfo</jtok>
<jtok eid="117" type="constructor_call" span="4227:24:4227:33">Hashtable</jtok>
<jtok eid="117" type="line_comment" span="4229:5:4229:44">// Set up the variables for the current</jtok>
<jtok eid="117" type="line_comment" span="4230:5:4230:24">// element context.</jtok>
<jtok eid="117" type="primary_name_ref" span="4231:5:4231:19">currentElement</jtok>
<jtok eid="117" type="primary_name_ref" span="4232:5:4232:26">currentElementContent</jtok>
<jtok eid="117" type="primary_name_ref" span="4232:29:4232:47">CONTENT_UNDECLARED</jtok>
<jtok eid="117" type="line_comment" span="4234:5:4234:34">// Set up the input variables</jtok>
<jtok eid="117" type="primary_name_ref" span="4235:5:4235:15">sourceType</jtok>
<jtok eid="117" type="primary_name_ref" span="4235:18:4235:28">INPUT_NONE</jtok>
<jtok eid="117" type="primary_name_ref" span="4236:5:4236:15">inputStack</jtok>
<jtok eid="117" type="constructor_call" span="4236:22:4236:27">Stack</jtok>
<jtok eid="117" type="primary_name_ref" span="4237:5:4237:16">entityStack</jtok>
<jtok eid="117" type="constructor_call" span="4237:23:4237:28">Stack</jtok>
<jtok eid="117" type="primary_name_ref" span="4238:5:4238:19">externalEntity</jtok>
<jtok eid="117" type="primary_name_ref" span="4239:5:4239:20">tagAttributePos</jtok>
<jtok eid="117" type="primary_name_ref" span="4240:5:4240:18">tagAttributes</jtok>
<jtok eid="117" type="constructor_call" span="4240:25:4240:31">String</jtok>
<jtok eid="117" type="primary_name_ref" span="4241:5:4241:18">rawReadBuffer</jtok>
<jtok eid="117" type="primary_name_ref" span="4241:30:4241:45">READ_BUFFER_MAX</jtok>
<jtok eid="117" type="primary_name_ref" span="4242:5:4242:23">readBufferOverflow</jtok>
<jtok eid="117" type="primary_name_ref" span="4244:5:4244:12">context</jtok>
<jtok eid="117" type="primary_name_ref" span="4244:15:4244:27">CONTEXT_NONE</jtok>
<jtok eid="117" type="primary_name_ref" span="4246:5:4246:16">symbolTable</jtok>
<jtok eid="117" type="constructor_call" span="4246:23:4246:29">Object</jtok>
<jtok eid="117" type="primary_name_ref" span="4246:30:4246:49">SYMBOL_TABLE_LENGTH</jtok>
<jtok eid="1" type="block_comment" span="4250:3:4253:7">/**
    * Clean up after the parse to allow some garbage collection.
    * Leave around anything that might be useful for queries.
    */</jtok>
<jtok eid="118" type="method_name" span="4254:8:4254:24">cleanupVariables</jtok>
<jtok eid="118" type="primary_name_ref" span="4256:5:4256:15">errorCount</jtok>
<jtok eid="118" type="primary_name_ref" span="4257:5:4257:9">line</jtok>
<jtok eid="118" type="primary_name_ref" span="4258:5:4258:11">column</jtok>
<jtok eid="118" type="primary_name_ref" span="4259:5:4259:15">dataBuffer</jtok>
<jtok eid="118" type="primary_name_ref" span="4260:5:4260:15">nameBuffer</jtok>
<jtok eid="118" type="primary_name_ref" span="4261:5:4261:19">currentElement</jtok>
<jtok eid="118" type="primary_name_ref" span="4262:5:4262:26">currentElementContent</jtok>
<jtok eid="118" type="primary_name_ref" span="4262:29:4262:47">CONTENT_UNDECLARED</jtok>
<jtok eid="118" type="primary_name_ref" span="4263:5:4263:15">sourceType</jtok>
<jtok eid="118" type="primary_name_ref" span="4263:18:4263:28">INPUT_NONE</jtok>
<jtok eid="118" type="primary_name_ref" span="4264:5:4264:15">inputStack</jtok>
<jtok eid="118" type="primary_name_ref" span="4265:5:4265:19">externalEntity</jtok>
<jtok eid="118" type="primary_name_ref" span="4266:5:4266:16">entityStack</jtok>
<jtok eid="1" type="line_comment" span="4269:3:4269:5">//</jtok>
<jtok eid="1" type="line_comment" span="4270:3:4270:40">// The current XML handler interface.</jtok>
<jtok eid="1" type="line_comment" span="4271:3:4271:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4272:3:4272:13">XmlHandler</jtok>
<jtok eid="1" type="field_name" span="4272:14:4272:21">handler</jtok>
<jtok eid="1" type="line_comment" span="4274:3:4274:5">//</jtok>
<jtok eid="1" type="line_comment" span="4275:3:4275:22">// I/O information.</jtok>
<jtok eid="1" type="line_comment" span="4276:3:4276:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4277:11:4277:17">Reader</jtok>
<jtok eid="1" type="field_name" span="4277:18:4277:24">reader</jtok>
<jtok eid="1" type="line_comment" span="4277:26:4277:43">// current reader</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4278:11:4278:22">InputStream</jtok>
<jtok eid="1" type="field_name" span="4278:23:4278:25">is</jtok>
<jtok eid="1" type="line_comment" span="4278:27:4278:50">// current input stream</jtok>
<jtok eid="1" type="field_name" span="4279:15:4279:19">line</jtok>
<jtok eid="1" type="line_comment" span="4279:22:4279:44">// current line number</jtok>
<jtok eid="1" type="field_name" span="4280:15:4280:21">column</jtok>
<jtok eid="1" type="line_comment" span="4280:24:4280:48">// current column number</jtok>
<jtok eid="1" type="field_name" span="4281:15:4281:25">sourceType</jtok>
<jtok eid="1" type="line_comment" span="4281:27:4281:50">// type of input source</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4282:11:4282:16">Stack</jtok>
<jtok eid="1" type="field_name" span="4282:17:4282:27">inputStack</jtok>
<jtok eid="1" type="line_comment" span="4282:29:4282:54">// stack of input soruces</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4283:11:4283:24">URLConnection</jtok>
<jtok eid="1" type="field_name" span="4283:25:4283:39">externalEntity</jtok>
<jtok eid="1" type="line_comment" span="4283:41:4283:67">// current external entity</jtok>
<jtok eid="1" type="field_name" span="4284:15:4284:23">encoding</jtok>
<jtok eid="1" type="line_comment" span="4284:26:4284:56">// current character encoding.</jtok>
<jtok eid="1" type="field_name" span="4285:15:4285:31">currentByteCount</jtok>
<jtok eid="1" type="line_comment" span="4285:33:4285:76">// how many bytes read from current source.</jtok>
<jtok eid="1" type="line_comment" span="4287:3:4287:5">//</jtok>
<jtok eid="1" type="line_comment" span="4288:3:4288:33">// Maintain a count of errors.</jtok>
<jtok eid="1" type="line_comment" span="4289:3:4289:5">//</jtok>
<jtok eid="1" type="field_name" span="4290:15:4290:25">errorCount</jtok>
<jtok eid="1" type="line_comment" span="4292:3:4292:5">//</jtok>
<jtok eid="1" type="line_comment" span="4293:3:4293:55">// Buffers for decoded but unparsed character input.</jtok>
<jtok eid="1" type="line_comment" span="4294:3:4294:5">//</jtok>
<jtok eid="1" type="field_name" span="4295:28:4295:43">READ_BUFFER_MAX</jtok>
<jtok eid="1" type="field_name" span="4296:16:4296:26">readBuffer</jtok>
<jtok eid="1" type="field_name" span="4297:15:4297:28">readBufferPos</jtok>
<jtok eid="1" type="field_name" span="4298:15:4298:31">readBufferLength</jtok>
<jtok eid="1" type="field_name" span="4299:15:4299:33">readBufferOverflow</jtok>
<jtok eid="1" type="line_comment" span="4299:35:4299:78">// overflow character from last data chunk.</jtok>
<jtok eid="1" type="line_comment" span="4302:3:4302:5">//</jtok>
<jtok eid="1" type="line_comment" span="4303:3:4303:42">// Buffer for undecoded raw byte input.</jtok>
<jtok eid="1" type="line_comment" span="4304:3:4304:5">//</jtok>
<jtok eid="1" type="field_name" span="4305:16:4305:29">rawReadBuffer</jtok>
<jtok eid="1" type="line_comment" span="4308:3:4308:5">//</jtok>
<jtok eid="1" type="line_comment" span="4309:3:4309:39">// Buffer for parsed character data.</jtok>
<jtok eid="1" type="line_comment" span="4310:3:4310:5">//</jtok>
<jtok eid="1" type="field_name" span="4311:22:4311:41">DATA_BUFFER_INITIAL</jtok>
<jtok eid="1" type="field_name" span="4312:16:4312:26">dataBuffer</jtok>
<jtok eid="1" type="field_name" span="4313:15:4313:28">dataBufferPos</jtok>
<jtok eid="1" type="line_comment" span="4315:3:4315:5">//</jtok>
<jtok eid="1" type="line_comment" span="4316:3:4316:30">// Buffer for parsed names.</jtok>
<jtok eid="1" type="line_comment" span="4317:3:4317:5">//</jtok>
<jtok eid="1" type="field_name" span="4318:22:4318:41">NAME_BUFFER_INITIAL</jtok>
<jtok eid="1" type="field_name" span="4319:16:4319:26">nameBuffer</jtok>
<jtok eid="1" type="field_name" span="4320:15:4320:28">nameBufferPos</jtok>
<jtok eid="1" type="line_comment" span="4323:3:4323:5">//</jtok>
<jtok eid="1" type="line_comment" span="4324:3:4324:74">// Hashtables for DTD information on elements, entities, and notations.</jtok>
<jtok eid="1" type="line_comment" span="4325:3:4325:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4326:11:4326:20">Hashtable</jtok>
<jtok eid="1" type="field_name" span="4326:21:4326:32">elementInfo</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4327:11:4327:20">Hashtable</jtok>
<jtok eid="1" type="field_name" span="4327:21:4327:31">entityInfo</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4328:11:4328:20">Hashtable</jtok>
<jtok eid="1" type="field_name" span="4328:21:4328:33">notationInfo</jtok>
<jtok eid="1" type="line_comment" span="4331:3:4331:5">//</jtok>
<jtok eid="1" type="line_comment" span="4332:3:4332:38">// Element type currently in force.</jtok>
<jtok eid="1" type="line_comment" span="4333:3:4333:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4334:11:4334:17">String</jtok>
<jtok eid="1" type="field_name" span="4334:18:4334:32">currentElement</jtok>
<jtok eid="1" type="field_name" span="4335:15:4335:36">currentElementContent</jtok>
<jtok eid="1" type="line_comment" span="4337:3:4337:5">//</jtok>
<jtok eid="1" type="line_comment" span="4338:3:4338:47">// Base external identifiers for resolution.</jtok>
<jtok eid="1" type="line_comment" span="4339:3:4339:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4340:11:4340:17">String</jtok>
<jtok eid="1" type="field_name" span="4340:18:4340:30">basePublicId</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4341:11:4341:17">String</jtok>
<jtok eid="1" type="field_name" span="4341:18:4341:25">baseURI</jtok>
<jtok eid="1" type="field_name" span="4342:15:4342:27">baseEncoding</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4343:11:4343:17">Reader</jtok>
<jtok eid="1" type="field_name" span="4343:18:4343:28">baseReader</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4344:11:4344:22">InputStream</jtok>
<jtok eid="1" type="field_name" span="4344:23:4344:38">baseInputStream</jtok>
<jtok eid="1" type="field_name" span="4345:16:4345:31">baseInputBuffer</jtok>
<jtok eid="1" type="field_name" span="4346:15:4346:35">baseInputBufferStart</jtok>
<jtok eid="1" type="field_name" span="4347:15:4347:36">baseInputBufferLength</jtok>
<jtok eid="1" type="line_comment" span="4349:3:4349:5">//</jtok>
<jtok eid="1" type="line_comment" span="4350:3:4350:54">// Stack of entity names, to help detect recursion.</jtok>
<jtok eid="1" type="line_comment" span="4351:3:4351:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4352:11:4352:16">Stack</jtok>
<jtok eid="1" type="field_name" span="4352:17:4352:28">entityStack</jtok>
<jtok eid="1" type="line_comment" span="4354:3:4354:5">//</jtok>
<jtok eid="1" type="line_comment" span="4355:3:4355:48">// Are we in a context where PEs are allowed?</jtok>
<jtok eid="1" type="line_comment" span="4356:3:4356:5">//</jtok>
<jtok eid="1" type="field_name" span="4357:15:4357:22">context</jtok>
<jtok eid="1" type="line_comment" span="4359:3:4359:5">//</jtok>
<jtok eid="1" type="line_comment" span="4360:3:4360:44">// Symbol table, for internalising names.</jtok>
<jtok eid="1" type="line_comment" span="4361:3:4361:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4362:11:4362:17">Object</jtok>
<jtok eid="1" type="field_name" span="4362:18:4362:29">symbolTable</jtok>
<jtok eid="1" type="field_name" span="4363:28:4363:47">SYMBOL_TABLE_LENGTH</jtok>
<jtok eid="1" type="line_comment" span="4365:3:4365:5">//</jtok>
<jtok eid="1" type="line_comment" span="4366:3:4366:58">// Hash table of attributes found in current start tag.</jtok>
<jtok eid="1" type="line_comment" span="4367:3:4367:5">//</jtok>
<jtok eid="1" type="class_or_interface_ref" span="4368:11:4368:17">String</jtok>
<jtok eid="1" type="field_name" span="4368:18:4368:31">tagAttributes</jtok>
<jtok eid="1" type="field_name" span="4369:15:4369:30">tagAttributePos</jtok>
<jtok eid="1" type="line_comment" span="4371:3:4371:5">//</jtok>
<jtok eid="1" type="line_comment" span="4372:3:4372:63">// Utility flag: have we noticed a CR while reading the last</jtok>
<jtok eid="1" type="line_comment" span="4373:3:4373:63">// data chunk?  If so, we will have to go back and normalise</jtok>
<jtok eid="1" type="line_comment" span="4374:3:4374:12">// CR/LF.</jtok>
<jtok eid="1" type="line_comment" span="4375:3:4375:5">//</jtok>
<jtok eid="1" type="field_name" span="4376:19:4376:24">sawCR</jtok>
</jdoc>