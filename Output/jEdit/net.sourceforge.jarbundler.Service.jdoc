<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="net.sourceforge.jarbundler.Service" jls="java5">
<jent id="0" type="file" span="0:0:204:2">Source/jEdit/net/sourceforge/jarbundler/Service.java</jent>
<jent id="1" pid="0" type="class" span="59:1:204:1">net.sourceforge.jarbundler.Service</jent>
<jent id="2" pid="1" type="method" span="140:2:142:2">net.sourceforge.jarbundler.Service.setPortName(String)</jent>
<jent id="3" pid="1" type="method" span="144:2:146:2">net.sourceforge.jarbundler.Service.getPortName()</jent>
<jent id="4" pid="1" type="method" span="148:2:150:2">net.sourceforge.jarbundler.Service.setMessage(String)</jent>
<jent id="5" pid="1" type="method" span="152:2:154:2">net.sourceforge.jarbundler.Service.getMessage()</jent>
<jent id="6" pid="1" type="method" span="156:2:159:2">net.sourceforge.jarbundler.Service.setMenuItem(String)</jent>
<jent id="7" pid="1" type="method" span="161:2:163:2">net.sourceforge.jarbundler.Service.getMenuItem()</jent>
<jent id="8" pid="1" type="method" span="165:2:167:2">net.sourceforge.jarbundler.Service.setSendTypes(String)</jent>
<jent id="9" pid="1" type="method" span="169:2:171:2">net.sourceforge.jarbundler.Service.getSendTypes()</jent>
<jent id="10" pid="1" type="method" span="173:2:175:2">net.sourceforge.jarbundler.Service.setReturnTypes(String)</jent>
<jent id="11" pid="1" type="method" span="177:2:179:2">net.sourceforge.jarbundler.Service.getReturnTypes()</jent>
<jent id="12" pid="1" type="method" span="181:2:183:2">net.sourceforge.jarbundler.Service.setKeyEquivalent(String)</jent>
<jent id="13" pid="1" type="method" span="185:2:187:2">net.sourceforge.jarbundler.Service.getKeyEquivalent()</jent>
<jent id="14" pid="1" type="method" span="189:2:191:2">net.sourceforge.jarbundler.Service.setUserData(String)</jent>
<jent id="15" pid="1" type="method" span="193:2:195:2">net.sourceforge.jarbundler.Service.getUserData()</jent>
<jent id="16" pid="1" type="method" span="197:2:199:2">net.sourceforge.jarbundler.Service.setTimeout(String)</jent>
<jent id="17" pid="1" type="method" span="201:2:203:2">net.sourceforge.jarbundler.Service.getTimeout()</jent>
<jtok eid="0" type="block_comment" span="9:1:58:4">/**
 * Represents an Info.plist Service specifying a service provided by the application.
 * 
 * Port Name - The name of the port the application monitors for incoming service requests.
 * 
 
 * Message - The name of the instance method to invoke for the service. 
 * In Objective-C, the instance method must be of the form messageName:userData:error:.
 * In Java, the instance method must be of the form messageName(NSPasteBoard,String).
 * 
 * 
 * Menu Item - The text to add to the Services menu. The value must be unique.
 * You can use a slash character "/" to specify a submenu. For example, Mail/Send
 * would appear in the Services Menu as a menu named Mail with an item named Send.
 * 
 * 
 * Send Types - A list of the data type names that can be read by the service.
 *   The NSPasteboard class description lists several common data types.
 *
 *
 * Return Types - A list of the data type names that can be returned by the service.
 * The NSPasteboard class description lists several common data types.
 * You must specify either Return Types, Send Types or both.
 * 
 * You must specify either Send Types, Return Types or both.
 *  
 * 
 * Key Equivalent - This attribute is optional. The keyboard equivalent used to invoke
 * the service menu command. The value has to be a single character. Users invoke this
 * keyboard equivalent by pressing the Command and Shift key modifiers along with the character.
 * 
 * 
 * User Data - This attribute is optional. The value is free choosable and is passed
 * to the method as second parameter.
 * 
 * 
 * Timeout - This attribute is optional. It indicates the number of milliseconds
 * Services should wait for a response from the application providing
 * a service when a respond is required.
 * 
 * 
 * &lt;service portname="jarBundler"
 *          message="processRequest"
 *          menuitem="JarBundler/Process Request"
 *          sendtypes="NSStringPboardType,NSFilenamesPboardType"
 *          returntypes="NSStringPboardType"
 *          keyequivalent="p"
 *          userdata="a string passed to the method"
 *          timeout="5000" /&gt;
 */</jtok>
<jtok eid="1" type="class_name" span="59:14:59:21">Service</jtok>
<jtok eid="1" type="class_or_interface_ref" span="60:23:60:27">List</jtok>
<jtok eid="1" type="field_name" span="60:28:60:37">EMPTYLIST</jtok>
<jtok eid="1" type="constructor_call" span="60:44:60:53">ArrayList</jtok>
<jtok eid="1" type="block_comment" span="63:2:63:85">/** The name of the port the application monitors for incoming service requests. */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="64:10:64:16">String</jtok>
<jtok eid="1" type="field_name" span="64:17:64:25">portName</jtok>
<jtok eid="1" type="block_comment" span="67:2:73:5">/** 

	 * The name of the instance method to invoke for the service. 
	 * In Objective-C, the instance method must be of the form messageName:userData:error:.

	 * In Java, the instance method must be of the form messageName(NSPasteBoard,String).
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="74:10:74:16">String</jtok>
<jtok eid="1" type="field_name" span="74:17:74:24">message</jtok>
<jtok eid="1" type="block_comment" span="77:2:84:5">/** 

	 * The text to add to the Services menu. The value must be unique.

	 * You can use a slash character "/" to specify a submenu. For example, Mail/Send

	 * would appear in the Services Menu as a menu named Mail with an item named Send.
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="85:10:85:16">String</jtok>
<jtok eid="1" type="field_name" span="85:17:85:25">menuItem</jtok>
<jtok eid="1" type="block_comment" span="87:2:93:5">/**
	 * A list of the data type names that can be read by the service.

	 * The NSPasteboard class description lists several common data types.

	 * You must specify either Send Types, Return Types or both.
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="94:10:94:16">String</jtok>
<jtok eid="1" type="field_name" span="94:19:94:28">sendTypes</jtok>
<jtok eid="1" type="block_comment" span="97:2:103:5">/**
	 * A list of the data type names that can be returned by the service.

	 * The NSPasteboard class description lists several common data types.

	 * You must specify either Return Types, Send Types or both.
	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="104:10:104:16">String</jtok>
<jtok eid="1" type="field_name" span="104:19:104:30">returnTypes</jtok>
<jtok eid="1" type="block_comment" span="107:2:114:5">/**
	 * This attribute is optional. The keyboard equivalent used to invoke

	 * the service menu command. The value has to be a single character. Users invoke this

	 * keyboard equivalent by pressing the Command and Shift key modifiers along with the character.

	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="115:10:115:16">String</jtok>
<jtok eid="1" type="field_name" span="115:17:115:30">keyEquivalent</jtok>
<jtok eid="1" type="block_comment" span="118:2:124:5">/** 

	 * This attribute is optional. The value is free choosable and is passed

	 * to the method as second parameter.

	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="125:10:125:16">String</jtok>
<jtok eid="1" type="field_name" span="125:17:125:25">userData</jtok>
<jtok eid="1" type="block_comment" span="128:2:136:5">/** 

	 * This attribute is optional. It indicates the number of milliseconds

	 * Services should wait for a response from the application providing

	 * a service when a respond is required.

	 */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="137:10:137:16">String</jtok>
<jtok eid="1" type="field_name" span="137:17:137:24">timeout</jtok>
<jtok eid="2" type="method_name" span="140:14:140:25">setPortName</jtok>
<jtok eid="2" type="parameter_type" span="140:26:140:32">String</jtok>
<jtok eid="2" type="parameter_name" span="140:33:140:41">portName</jtok>
<jtok eid="2" type="qualified_name_ref" span="141:8:141:16">portName</jtok>
<jtok eid="2" type="primary_name_ref" span="141:19:141:27">portName</jtok>
<jtok eid="3" type="class_or_interface_ref" span="144:9:144:15">String</jtok>
<jtok eid="3" type="method_name" span="144:16:144:27">getPortName</jtok>
<jtok eid="3" type="primary_name_ref" span="145:10:145:18">portName</jtok>
<jtok eid="4" type="method_name" span="148:14:148:24">setMessage</jtok>
<jtok eid="4" type="parameter_type" span="148:25:148:31">String</jtok>
<jtok eid="4" type="parameter_name" span="148:32:148:39">message</jtok>
<jtok eid="4" type="qualified_name_ref" span="149:8:149:15">message</jtok>
<jtok eid="4" type="primary_name_ref" span="149:18:149:25">message</jtok>
<jtok eid="5" type="class_or_interface_ref" span="152:9:152:15">String</jtok>
<jtok eid="5" type="method_name" span="152:16:152:26">getMessage</jtok>
<jtok eid="5" type="primary_name_ref" span="153:10:153:17">message</jtok>
<jtok eid="6" type="method_name" span="156:14:156:25">setMenuItem</jtok>
<jtok eid="6" type="parameter_type" span="156:26:156:32">String</jtok>
<jtok eid="6" type="parameter_name" span="156:33:156:41">menuItem</jtok>
<jtok eid="6" type="qualified_name_ref" span="157:8:157:16">menuItem</jtok>
<jtok eid="6" type="primary_name_ref" span="157:19:157:27">menuItem</jtok>
<jtok eid="7" type="class_or_interface_ref" span="161:9:161:15">String</jtok>
<jtok eid="7" type="method_name" span="161:16:161:27">getMenuItem</jtok>
<jtok eid="7" type="primary_name_ref" span="162:10:162:18">menuItem</jtok>
<jtok eid="8" type="method_name" span="165:14:165:26">setSendTypes</jtok>
<jtok eid="8" type="parameter_type" span="165:27:165:33">String</jtok>
<jtok eid="8" type="parameter_name" span="165:34:165:43">sendTypes</jtok>
<jtok eid="8" type="qualified_name_ref" span="166:8:166:17">sendTypes</jtok>
<jtok eid="8" type="primary_name_ref" span="166:20:166:29">sendTypes</jtok>
<jtok eid="8" type="method_call" span="166:30:166:35">split</jtok>
<jtok eid="8" type="string_literal" span="166:36:166:44">"[\\s,]"</jtok>
<jtok eid="9" type="class_or_interface_ref" span="169:9:169:13">List</jtok>
<jtok eid="9" type="method_name" span="169:14:169:26">getSendTypes</jtok>
<jtok eid="9" type="primary_name_ref" span="170:11:170:20">sendTypes</jtok>
<jtok eid="9" type="primary_name_ref" span="170:32:170:41">EMPTYLIST</jtok>
<jtok eid="9" type="primary_name_ref" span="170:44:170:50">Arrays</jtok>
<jtok eid="9" type="method_call" span="170:51:170:57">asList</jtok>
<jtok eid="9" type="primary_name_ref" span="170:58:170:67">sendTypes</jtok>
<jtok eid="10" type="method_name" span="173:14:173:28">setReturnTypes</jtok>
<jtok eid="10" type="parameter_type" span="173:29:173:35">String</jtok>
<jtok eid="10" type="parameter_name" span="173:36:173:47">returnTypes</jtok>
<jtok eid="10" type="qualified_name_ref" span="174:8:174:19">returnTypes</jtok>
<jtok eid="10" type="primary_name_ref" span="174:22:174:33">returnTypes</jtok>
<jtok eid="10" type="method_call" span="174:34:174:39">split</jtok>
<jtok eid="10" type="string_literal" span="174:40:174:48">"[\\s,]"</jtok>
<jtok eid="11" type="class_or_interface_ref" span="177:9:177:13">List</jtok>
<jtok eid="11" type="method_name" span="177:14:177:28">getReturnTypes</jtok>
<jtok eid="11" type="primary_name_ref" span="178:11:178:22">returnTypes</jtok>
<jtok eid="11" type="primary_name_ref" span="178:34:178:43">EMPTYLIST</jtok>
<jtok eid="11" type="primary_name_ref" span="178:46:178:52">Arrays</jtok>
<jtok eid="11" type="method_call" span="178:53:178:59">asList</jtok>
<jtok eid="11" type="primary_name_ref" span="178:60:178:71">returnTypes</jtok>
<jtok eid="12" type="method_name" span="181:14:181:30">setKeyEquivalent</jtok>
<jtok eid="12" type="parameter_type" span="181:31:181:37">String</jtok>
<jtok eid="12" type="parameter_name" span="181:38:181:51">keyEquivalent</jtok>
<jtok eid="12" type="qualified_name_ref" span="182:8:182:21">keyEquivalent</jtok>
<jtok eid="12" type="primary_name_ref" span="182:24:182:37">keyEquivalent</jtok>
<jtok eid="13" type="class_or_interface_ref" span="185:9:185:15">String</jtok>
<jtok eid="13" type="method_name" span="185:16:185:32">getKeyEquivalent</jtok>
<jtok eid="13" type="primary_name_ref" span="186:10:186:23">keyEquivalent</jtok>
<jtok eid="14" type="method_name" span="189:14:189:25">setUserData</jtok>
<jtok eid="14" type="parameter_type" span="189:26:189:32">String</jtok>
<jtok eid="14" type="parameter_name" span="189:33:189:41">userData</jtok>
<jtok eid="14" type="qualified_name_ref" span="190:8:190:16">userData</jtok>
<jtok eid="14" type="primary_name_ref" span="190:19:190:27">userData</jtok>
<jtok eid="15" type="class_or_interface_ref" span="193:9:193:15">String</jtok>
<jtok eid="15" type="method_name" span="193:16:193:27">getUserData</jtok>
<jtok eid="15" type="primary_name_ref" span="194:10:194:18">userData</jtok>
<jtok eid="16" type="method_name" span="197:14:197:24">setTimeout</jtok>
<jtok eid="16" type="parameter_type" span="197:25:197:31">String</jtok>
<jtok eid="16" type="parameter_name" span="197:32:197:39">timeout</jtok>
<jtok eid="16" type="qualified_name_ref" span="198:8:198:15">timeout</jtok>
<jtok eid="16" type="primary_name_ref" span="198:18:198:25">timeout</jtok>
<jtok eid="17" type="class_or_interface_ref" span="201:9:201:15">String</jtok>
<jtok eid="17" type="method_name" span="201:16:201:26">getTimeout</jtok>
<jtok eid="17" type="primary_name_ref" span="202:10:202:17">timeout</jtok>
</jdoc>