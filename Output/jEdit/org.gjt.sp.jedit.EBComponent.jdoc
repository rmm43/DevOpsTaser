<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.EBComponent" jls="java5">
<jent id="0" type="file" span="0:0:56:2">Source/jEdit/org/gjt/sp/jedit/EBComponent.java</jent>
<jent id="1" pid="0" type="interface" span="34:1:56:1">org.gjt.sp.jedit.EBComponent</jent>
<jent id="2" pid="1" type="method" span="55:2:55:39">org.gjt.sp.jedit.EBComponent.handleMessage(EBMessage)</jent>
<jtok eid="0" type="block_comment" span="1:1:18:4">/*
 * EBComponent.java - An EditBus component
 * Copyright (C) 1999 Slava Pestov
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="22:1:33:4">/**
 * A component on the EditBus. Every plugin class that uses the EditBus for
 * receiving messages must implement this interface.
 *
 * @see org.gjt.sp.jedit.EBMessage
 *
 * @author Slava Pestov
 * @author John Gellene (API documentation)
 * @version $Id: EBComponent.java 12504 2008-04-22 23:12:43Z ezust $
 *
 * @since jEdit 2.2pre6
 */</jtok>
<jtok eid="1" type="interface_name" span="34:18:34:29">EBComponent</jtok>
<jtok eid="1" type="block_comment" span="36:2:54:5">/**
	 * Handles a message sent on the EditBus.
	 *
	 * This method must specify the type of responses the plugin will have
	 * for various subclasses of the {@link EBMessage} class. Typically
	 * this is done with one or more &lt;code&gt;if&lt;/code&gt; blocks that test
	 * whether the message is an instance of a derived message class in
	 * which the component has an interest. For example:
	 *
	 * &lt;pre&gt; if(msg instanceof BufferUpdate) {
	 *     // a buffer's state has changed!
	 * }
	 * else if(msg instanceof ViewUpdate) {
	 *     // a view's state has changed!
	 * }
	 * // ... and so on&lt;/pre&gt;
	 *
	 * @param message The message
	 */</jtok>
<jtok eid="2" type="method_name" span="55:7:55:20">handleMessage</jtok>
<jtok eid="2" type="parameter_type" span="55:21:55:30">EBMessage</jtok>
<jtok eid="2" type="parameter_name" span="55:31:55:38">message</jtok>
</jdoc>