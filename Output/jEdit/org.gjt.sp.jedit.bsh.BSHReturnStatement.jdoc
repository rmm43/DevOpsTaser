<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.BSHReturnStatement" jls="java5">
<jent id="0" type="file" span="0:0:55:1">Source/jEdit/org/gjt/sp/jedit/bsh/BSHReturnStatement.java</jent>
<jent id="1" pid="0" type="class" span="37:1:54:1">org.gjt.sp.jedit.bsh.BSHReturnStatement</jent>
<jent id="2" pid="1" type="method" span="41:2:41:42">org.gjt.sp.jedit.bsh.BSHReturnStatement.BSHReturnStatement(int)</jent>
<jent id="3" pid="1" type="method" span="43:2:53:2">org.gjt.sp.jedit.bsh.BSHReturnStatement.eval(CallStack,Interpreter)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="1" type="class_name" span="37:7:37:25">BSHReturnStatement</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:34:37:44">SimpleNode</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:56:37:71">ParserConstants</jtok>
<jtok eid="1" type="field_name" span="39:13:39:17">kind</jtok>
<jtok eid="2" type="method_name" span="41:2:41:20">BSHReturnStatement</jtok>
<jtok eid="2" type="parameter_name" span="41:25:41:27">id</jtok>
<jtok eid="2" type="primary_name_ref" span="41:37:41:39">id</jtok>
<jtok eid="3" type="class_or_interface_ref" span="43:9:43:15">Object</jtok>
<jtok eid="3" type="method_name" span="43:16:43:20">eval</jtok>
<jtok eid="3" type="parameter_type" span="43:21:43:30">CallStack</jtok>
<jtok eid="3" type="parameter_name" span="43:31:43:40">callstack</jtok>
<jtok eid="3" type="parameter_type" span="43:42:43:53">Interpreter</jtok>
<jtok eid="3" type="parameter_name" span="43:54:43:65">interpreter</jtok>
<jtok eid="3" type="throws" span="44:10:44:19">EvalError</jtok>
<jtok eid="3" type="class_or_interface_ref" span="46:3:46:9">Object</jtok>
<jtok eid="3" type="local_variable_name" span="46:10:46:15">value</jtok>
<jtok eid="3" type="method_call" span="47:6:47:23">jjtGetNumChildren</jtok>
<jtok eid="3" type="primary_name_ref" span="48:4:48:9">value</jtok>
<jtok eid="3" type="class_or_interface_ref" span="48:14:48:24">SimpleNode</jtok>
<jtok eid="3" type="method_call" span="48:25:48:36">jjtGetChild</jtok>
<jtok eid="3" type="method_call" span="48:41:48:45">eval</jtok>
<jtok eid="3" type="primary_name_ref" span="48:46:48:55">callstack</jtok>
<jtok eid="3" type="primary_name_ref" span="48:57:48:68">interpreter</jtok>
<jtok eid="3" type="primary_name_ref" span="50:4:50:9">value</jtok>
<jtok eid="3" type="primary_name_ref" span="50:12:50:21">Primitive</jtok>
<jtok eid="3" type="qualified_name_ref" span="50:22:50:26">VOID</jtok>
<jtok eid="3" type="constructor_call" span="52:14:52:27">ReturnControl</jtok>
<jtok eid="3" type="primary_name_ref" span="52:29:52:33">kind</jtok>
<jtok eid="3" type="primary_name_ref" span="52:35:52:40">value</jtok>
</jdoc>