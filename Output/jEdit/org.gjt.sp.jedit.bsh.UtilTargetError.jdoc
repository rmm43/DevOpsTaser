<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.bsh.UtilTargetError" jls="java5">
<jent id="0" type="file" span="0:0:73:1">Source/jEdit/org/gjt/sp/jedit/bsh/UtilTargetError.java</jent>
<jent id="1" pid="0" type="class" span="46:1:72:1">org.gjt.sp.jedit.bsh.UtilTargetError</jent>
<jent id="2" pid="1" type="method" span="50:2:53:2">org.gjt.sp.jedit.bsh.UtilTargetError.UtilTargetError(String,Throwable)</jent>
<jent id="3" pid="1" type="method" span="55:2:57:2">org.gjt.sp.jedit.bsh.UtilTargetError.UtilTargetError(Throwable)</jent>
<jent id="4" pid="1" type="method" span="62:2:71:2">org.gjt.sp.jedit.bsh.UtilTargetError.toEvalError(String,SimpleNode,CallStack)</jent>
<jtok eid="0" type="block_comment" span="1:1:32:80">/*****************************************************************************
 *                                                                           *
 *  This file is part of the BeanShell Java Scripting distribution.          *
 *  Documentation and updates may be found at http://www.beanshell.org/      *
 *                                                                           *
 *  Sun Public License Notice:                                               *
 *                                                                           *
 *  The contents of this file are subject to the Sun Public License Version  *
 *  1.0 (the "License"); you may not use this file except in compliance with *
 *  the License. A copy of the License is available at http://www.sun.com    * 
 *                                                                           *
 *  The Original Code is BeanShell. The Initial Developer of the Original    *
 *  Code is Pat Niemeyer. Portions created by Pat Niemeyer are Copyright     *
 *  (C) 2000.  All Rights Reserved.                                          *
 *                                                                           *
 *  GNU Public License Notice:                                               *
 *                                                                           *
 *  Alternatively, the contents of this file may be used under the terms of  *
 *  the GNU Lesser General Public License (the "LGPL"), in which case the    *
 *  provisions of LGPL are applicable instead of those above. If you wish to *
 *  allow use of your version of this file only under the  terms of the LGPL *
 *  and not to allow others to use your version of this file under the SPL,  *
 *  indicate your decision by deleting the provisions above and replace      *
 *  them with the notice and other provisions required by the LGPL.  If you  *
 *  do not delete the provisions above, a recipient may use your version of  *
 *  this file under either the SPL or the LGPL.                              *
 *                                                                           *
 *  Patrick Niemeyer (pat@pat.net)                                           *
 *  Author of Learning Java, O'Reilly &amp; Associates                           *
 *  http://www.pat.net/~pat/                                                 *
 *                                                                           *
 *****************************************************************************/</jtok>
<jtok eid="0" type="block_comment" span="37:1:45:3">/**
	UtilTargetError is an error corresponding to a TargetError but thrown by a 
	utility or other class that does not have the caller context (Node) 
	available to it.  See UtilEvalError for an explanation of the difference
	between UtilEvalError and EvalError.
	&lt;p&gt;

	@see UtilEvalError
*/</jtok>
<jtok eid="1" type="class_name" span="46:14:46:29">UtilTargetError</jtok>
<jtok eid="1" type="class_or_interface_ref" span="46:38:46:51">UtilEvalError</jtok>
<jtok eid="1" type="class_or_interface_ref" span="48:9:48:18">Throwable</jtok>
<jtok eid="1" type="field_name" span="48:19:48:20">t</jtok>
<jtok eid="2" type="method_name" span="50:9:50:24">UtilTargetError</jtok>
<jtok eid="2" type="parameter_type" span="50:26:50:32">String</jtok>
<jtok eid="2" type="parameter_name" span="50:33:50:40">message</jtok>
<jtok eid="2" type="parameter_type" span="50:42:50:51">Throwable</jtok>
<jtok eid="2" type="parameter_name" span="50:52:50:53">t</jtok>
<jtok eid="2" type="primary_name_ref" span="51:10:51:17">message</jtok>
<jtok eid="2" type="qualified_name_ref" span="52:8:52:9">t</jtok>
<jtok eid="2" type="primary_name_ref" span="52:12:52:13">t</jtok>
<jtok eid="3" type="method_name" span="55:9:55:24">UtilTargetError</jtok>
<jtok eid="3" type="parameter_type" span="55:26:55:35">Throwable</jtok>
<jtok eid="3" type="parameter_name" span="55:36:55:37">t</jtok>
<jtok eid="3" type="primary_name_ref" span="56:15:56:16">t</jtok>
<jtok eid="1" type="block_comment" span="59:2:61:4">/**
		Override toEvalError to throw TargetError type.
	*/</jtok>
<jtok eid="4" type="class_or_interface_ref" span="62:9:62:18">EvalError</jtok>
<jtok eid="4" type="method_name" span="62:19:62:30">toEvalError</jtok>
<jtok eid="4" type="parameter_type" span="63:3:63:9">String</jtok>
<jtok eid="4" type="parameter_name" span="63:10:63:13">msg</jtok>
<jtok eid="4" type="parameter_type" span="63:15:63:25">SimpleNode</jtok>
<jtok eid="4" type="parameter_name" span="63:26:63:30">node</jtok>
<jtok eid="4" type="parameter_type" span="63:32:63:41">CallStack</jtok>
<jtok eid="4" type="parameter_name" span="63:42:63:51">callstack</jtok>
<jtok eid="4" type="primary_name_ref" span="65:8:65:11">msg</jtok>
<jtok eid="4" type="primary_name_ref" span="66:4:66:7">msg</jtok>
<jtok eid="4" type="method_call" span="66:10:66:20">getMessage</jtok>
<jtok eid="4" type="primary_name_ref" span="68:4:68:7">msg</jtok>
<jtok eid="4" type="primary_name_ref" span="68:10:68:13">msg</jtok>
<jtok eid="4" type="string_literal" span="68:16:68:20">": "</jtok>
<jtok eid="4" type="method_call" span="68:23:68:33">getMessage</jtok>
<jtok eid="4" type="constructor_call" span="70:14:70:25">TargetError</jtok>
<jtok eid="4" type="primary_name_ref" span="70:27:70:30">msg</jtok>
<jtok eid="4" type="primary_name_ref" span="70:32:70:33">t</jtok>
<jtok eid="4" type="primary_name_ref" span="70:35:70:39">node</jtok>
<jtok eid="4" type="primary_name_ref" span="70:41:70:50">callstack</jtok>
</jdoc>