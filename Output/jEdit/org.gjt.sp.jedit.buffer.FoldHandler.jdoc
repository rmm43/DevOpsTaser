<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.buffer.FoldHandler" jls="java5">
<jent id="0" type="file" span="0:0:162:2">Source/jEdit/org/gjt/sp/jedit/buffer/FoldHandler.java</jent>
<jent id="1" pid="0" type="class" span="45:1:162:1">org.gjt.sp.jedit.buffer.FoldHandler</jent>
<jent id="2" pid="1" type="method" span="64:2:67:2">org.gjt.sp.jedit.buffer.FoldHandler.getName()</jent>
<jent id="3" pid="1" type="method" span="80:2:80:82">org.gjt.sp.jedit.buffer.FoldHandler.getFoldLevel(JEditBuffer,int,Segment)</jent>
<jent id="4" pid="1" type="method" span="95:2:99:2">org.gjt.sp.jedit.buffer.FoldHandler.getPrecedingFoldLevels(JEditBuffer,int,Segment,int)</jent>
<jent id="5" pid="1" type="method" span="107:2:114:2">org.gjt.sp.jedit.buffer.FoldHandler.equals(Object)</jent>
<jent id="6" pid="1" type="method" span="117:2:120:2">org.gjt.sp.jedit.buffer.FoldHandler.hashCode()</jent>
<jent id="7" pid="1" type="method" span="129:2:132:2">org.gjt.sp.jedit.buffer.FoldHandler.getFoldHandler(String)</jent>
<jent id="8" pid="1" type="method" span="142:2:145:2">org.gjt.sp.jedit.buffer.FoldHandler.getFoldModes()</jent>
<jent id="9" pid="1" type="method" span="149:2:152:2">org.gjt.sp.jedit.buffer.FoldHandler.FoldHandler(String)</jent>
<jent id="10" pid="1" type="method" span="156:2:159:2">org.gjt.sp.jedit.buffer.FoldHandler.toString()</jent>
<jtok eid="0" type="block_comment" span="1:1:21:4">/*
 * FoldHandler.java - Fold handler interface
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2001, 2005 Slava Pestov
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="29:1:44:4">/**
 * Interface for obtaining the fold level of a specified line.&lt;p&gt;
 *
 * Plugins can provide fold handlers by defining entries in their
 * &lt;code&gt;services.xml&lt;/code&gt; files like so:
 *
 * &lt;pre&gt;&amp;lt;SERVICE CLASS="org.gjt.sp.jedit.buffer.FoldHandler" NAME="&lt;i&gt;name&lt;/i&gt;"&amp;gt;
 *    new &lt;i&gt;MyFoldHandler&lt;i&gt;();
 *&amp;lt;/SERVICE&amp;gt;&lt;/pre&gt;
 *
 * See {@link org.gjt.sp.jedit.ServiceManager} for details.
 *
 * @author Slava Pestov
 * @version $Id: FoldHandler.java 16133 2009-08-31 21:07:15Z shlomy $
 * @since jEdit 4.3pre3
 */</jtok>
<jtok eid="1" type="class_name" span="45:23:45:34">FoldHandler</jtok>
<jtok eid="1" type="block_comment" span="47:2:51:5">/**
	 * The service type. See {@link org.gjt.sp.jedit.ServiceManager}.
	 * @since jEdit 4.2pre1
	 * @deprecated use {@link org.gjt.sp.jedit.ServiceManager.ServiceFoldHandlerProvider}
	 */</jtok>
<jtok eid="1" type="annotation_ref" span="52:3:52:13">Deprecated</jtok>
<jtok eid="1" type="class_or_interface_ref" span="53:22:53:28">String</jtok>
<jtok eid="1" type="field_name" span="53:29:53:36">SERVICE</jtok>
<jtok eid="1" type="string_literal" span="53:39:53:76">"org.gjt.sp.jedit.buffer.FoldHandler"</jtok>
<jtok eid="1" type="block_comment" span="55:2:55:33">/** The FoldHandlerProvider. */</jtok>
<jtok eid="1" type="class_or_interface_ref" span="56:16:56:35">FoldHandlerProvider</jtok>
<jtok eid="1" type="field_name" span="56:36:56:55">foldHandlerProvider</jtok>
<jtok eid="1" type="line_comment" span="58:2:58:24">//{{{ getName() method</jtok>
<jtok eid="1" type="block_comment" span="59:2:63:5">/**
	 * Returns the internal name of this FoldHandler
	 * @return The internal name of this FoldHandler
	 * @since jEdit 4.0pre6
	 */</jtok>
<jtok eid="2" type="class_or_interface_ref" span="64:9:64:15">String</jtok>
<jtok eid="2" type="method_name" span="64:16:64:23">getName</jtok>
<jtok eid="2" type="primary_name_ref" span="66:10:66:14">name</jtok>
<jtok eid="1" type="line_comment" span="68:2:68:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="70:2:70:29">//{{{ getFoldLevel() method</jtok>
<jtok eid="1" type="block_comment" span="71:2:79:5">/**
	 * Returns the fold level of the specified line.
	 * @param buffer The buffer in question
	 * @param lineIndex The line index
	 * @param seg A segment the fold handler can use to obtain any
	 * text from the buffer, if necessary
	 * @return The fold level of the specified line
	 * @since jEdit 4.0pre1
	 */</jtok>
<jtok eid="3" type="method_name" span="80:22:80:34">getFoldLevel</jtok>
<jtok eid="3" type="parameter_type" span="80:35:80:46">JEditBuffer</jtok>
<jtok eid="3" type="parameter_name" span="80:47:80:53">buffer</jtok>
<jtok eid="3" type="parameter_name" span="80:59:80:68">lineIndex</jtok>
<jtok eid="3" type="parameter_type" span="80:70:80:77">Segment</jtok>
<jtok eid="3" type="parameter_name" span="80:78:80:81">seg</jtok>
<jtok eid="1" type="line_comment" span="81:2:81:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="83:2:83:39">//{{{ getPrecedingFoldLevels() method</jtok>
<jtok eid="1" type="block_comment" span="84:2:94:5">/**
	 * Returns the fold levels of the lines preceding the specified line,
	 * which depend on the specified line.
	 * @param buffer The buffer in question
	 * @param lineIndex The line index
	 * @param seg A segment the fold handler can use to obtain any
	 * @param lineFoldLevel The fold level of the specified line
	 * @return The fold levels of the preceding lines, in decreasing line
	 * number order (i.e. bottomost line first).
	 * @since jEdit 4.3pre18
	 */</jtok>
<jtok eid="4" type="class_or_interface_ref" span="95:9:95:13">List</jtok>
<jtok eid="4" type="class_or_interface_ref" span="95:14:95:21">Integer</jtok>
<jtok eid="4" type="method_name" span="95:23:95:45">getPrecedingFoldLevels</jtok>
<jtok eid="4" type="parameter_type" span="95:46:95:57">JEditBuffer</jtok>
<jtok eid="4" type="parameter_name" span="95:58:95:64">buffer</jtok>
<jtok eid="4" type="parameter_name" span="96:7:96:16">lineIndex</jtok>
<jtok eid="4" type="parameter_type" span="96:18:96:25">Segment</jtok>
<jtok eid="4" type="parameter_name" span="96:26:96:29">seg</jtok>
<jtok eid="4" type="parameter_name" span="96:35:96:48">lineFoldLevel</jtok>
<jtok eid="1" type="line_comment" span="100:2:100:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="102:2:102:23">//{{{ equals() method</jtok>
<jtok eid="1" type="block_comment" span="103:2:106:5">/**
	 * Returns if the specified fold handler is equal to this one.
	 * @param o The object
	 */</jtok>
<jtok eid="5" type="method_name" span="107:17:107:23">equals</jtok>
<jtok eid="5" type="parameter_type" span="107:24:107:30">Object</jtok>
<jtok eid="5" type="parameter_name" span="107:31:107:32">o</jtok>
<jtok eid="5" type="line_comment" span="109:3:109:59">// Default implementation... subclasses can extend this.</jtok>
<jtok eid="5" type="primary_name_ref" span="110:6:110:7">o</jtok>
<jtok eid="5" type="method_call" span="113:11:113:19">getClass</jtok>
<jtok eid="5" type="primary_name_ref" span="113:25:113:26">o</jtok>
<jtok eid="5" type="method_call" span="113:27:113:35">getClass</jtok>
<jtok eid="1" type="line_comment" span="114:4:114:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="116:2:116:25">//{{{ hashCode() method</jtok>
<jtok eid="6" type="method_name" span="117:13:117:21">hashCode</jtok>
<jtok eid="6" type="method_call" span="119:10:119:18">getClass</jtok>
<jtok eid="6" type="method_call" span="119:21:119:29">hashCode</jtok>
<jtok eid="1" type="line_comment" span="120:4:120:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="122:2:122:31">//{{{ getFoldHandler() method</jtok>
<jtok eid="1" type="block_comment" span="123:2:128:5">/**
	 * Returns the fold handler with the specified name, or null if
	 * there is no registered handler with that name.
	 * @param name The name of the desired fold handler
	 * @since jEdit 4.0pre6
	 */</jtok>
<jtok eid="7" type="class_or_interface_ref" span="129:16:129:27">FoldHandler</jtok>
<jtok eid="7" type="method_name" span="129:28:129:42">getFoldHandler</jtok>
<jtok eid="7" type="parameter_type" span="129:43:129:49">String</jtok>
<jtok eid="7" type="parameter_name" span="129:50:129:54">name</jtok>
<jtok eid="7" type="primary_name_ref" span="131:10:131:29">foldHandlerProvider</jtok>
<jtok eid="7" type="method_call" span="131:30:131:44">getFoldHandler</jtok>
<jtok eid="7" type="primary_name_ref" span="131:45:131:49">name</jtok>
<jtok eid="1" type="line_comment" span="133:2:133:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="135:2:135:29">//{{{ getFoldModes() method</jtok>
<jtok eid="1" type="block_comment" span="136:2:141:5">/**
	 * Returns an array containing the names of all registered fold
	 * handlers.
	 *
	 * @since jEdit 4.0pre6
	 */</jtok>
<jtok eid="8" type="class_or_interface_ref" span="142:16:142:22">String</jtok>
<jtok eid="8" type="method_name" span="142:25:142:37">getFoldModes</jtok>
<jtok eid="8" type="primary_name_ref" span="144:10:144:29">foldHandlerProvider</jtok>
<jtok eid="8" type="method_call" span="144:30:144:42">getFoldModes</jtok>
<jtok eid="1" type="line_comment" span="146:2:146:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="148:2:148:33">//{{{ FoldHandler() constructor</jtok>
<jtok eid="9" type="method_name" span="149:12:149:23">FoldHandler</jtok>
<jtok eid="9" type="parameter_type" span="149:24:149:30">String</jtok>
<jtok eid="9" type="parameter_name" span="149:31:149:35">name</jtok>
<jtok eid="9" type="qualified_name_ref" span="151:8:151:12">name</jtok>
<jtok eid="9" type="primary_name_ref" span="151:15:151:19">name</jtok>
<jtok eid="1" type="line_comment" span="153:2:153:7">//}}}</jtok>
<jtok eid="1" type="line_comment" span="155:2:155:25">//{{{ toString() method</jtok>
<jtok eid="10" type="class_or_interface_ref" span="156:9:156:15">String</jtok>
<jtok eid="10" type="method_name" span="156:16:156:24">toString</jtok>
<jtok eid="10" type="primary_name_ref" span="158:10:158:14">name</jtok>
<jtok eid="1" type="line_comment" span="159:4:159:9">//}}}</jtok>
<jtok eid="1" type="class_or_interface_ref" span="161:10:161:16">String</jtok>
<jtok eid="1" type="field_name" span="161:17:161:21">name</jtok>
</jdoc>