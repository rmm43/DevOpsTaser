<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.gui.DockingFrameworkProvider" jls="java5">
<jent id="0" type="file" span="0:0:21:2">Source/jEdit/org/gjt/sp/jedit/gui/DockingFrameworkProvider.java</jent>
<jent id="1" pid="0" type="interface" span="17:1:21:1">org.gjt.sp.jedit.gui.DockingFrameworkProvider</jent>
<jent id="2" pid="1" type="method" span="18:2:19:22">org.gjt.sp.jedit.gui.DockingFrameworkProvider.create(View,DockableWindowFactory,ViewConfig)</jent>
<jent id="3" pid="1" type="method" span="20:2:20:37">org.gjt.sp.jedit.gui.DockingFrameworkProvider.createDockingLayout()</jent>
<jtok eid="0" type="block_comment" span="8:1:16:3">/** Base interface for Docking Framework Provider services.
    Plugins can offer alternate docking frameworks by offering a service
    that creates an instance of one of these.
    For an example, see jEdit's own services.xml, which provides jEdit's classic
    docking framework via the class DockableWindowManagerProvider.

    @since jEdit 4.3pre16
    @author Shlomy Reinstein
*/</jtok>
<jtok eid="1" type="interface_name" span="17:18:17:42">DockingFrameworkProvider</jtok>
<jtok eid="2" type="class_or_interface_ref" span="18:2:18:23">DockableWindowManager</jtok>
<jtok eid="2" type="method_name" span="18:24:18:30">create</jtok>
<jtok eid="2" type="parameter_type" span="18:31:18:35">View</jtok>
<jtok eid="2" type="parameter_name" span="18:36:18:40">view</jtok>
<jtok eid="2" type="parameter_type" span="18:42:18:63">DockableWindowFactory</jtok>
<jtok eid="2" type="parameter_name" span="18:64:18:72">instance</jtok>
<jtok eid="2" type="parameter_type" span="19:4:19:14">ViewConfig</jtok>
<jtok eid="2" type="parameter_name" span="19:15:19:21">config</jtok>
<jtok eid="3" type="class_or_interface_ref" span="20:2:20:15">DockingLayout</jtok>
<jtok eid="3" type="method_name" span="20:16:20:35">createDockingLayout</jtok>
</jdoc>