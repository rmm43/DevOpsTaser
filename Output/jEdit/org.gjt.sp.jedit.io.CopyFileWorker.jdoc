<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.io.CopyFileWorker" jls="java5">
<jent id="0" type="file" span="0:0:73:2">Source/jEdit/org/gjt/sp/jedit/io/CopyFileWorker.java</jent>
<jent id="1" pid="0" type="class" span="38:1:73:1">org.gjt.sp.jedit.io.CopyFileWorker</jent>
<jent id="2" pid="1" type="method" span="52:2:59:2">org.gjt.sp.jedit.io.CopyFileWorker.CopyFileWorker(Component,String,String)</jent>
<jent id="3" pid="1" type="method" span="62:2:72:2">org.gjt.sp.jedit.io.CopyFileWorker.run()</jent>
<jtok eid="0" type="block_comment" span="1:1:21:4">/*
 * CopyFileWorker.java - a worker that will copy a file
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2008 Matthieu Casanova
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA	02111-1307, USA.
 */</jtok>
<jtok eid="0" type="line_comment" span="25:1:25:14">//{{{ Imports</jtok>
<jtok eid="0" type="line_comment" span="30:1:30:6">//}}}</jtok>
<jtok eid="0" type="block_comment" span="32:1:37:4">/**
 * This worker will copy a file. Be careful it override files if the target
 * already exists
 * @author Matthieu Casanova
 * @since jEdit 4.3pre13
 */</jtok>
<jtok eid="1" type="class_name" span="38:14:38:28">CopyFileWorker</jtok>
<jtok eid="1" type="class_or_interface_ref" span="38:37:38:48">WorkRequest</jtok>
<jtok eid="1" type="class_or_interface_ref" span="40:16:40:25">Component</jtok>
<jtok eid="1" type="field_name" span="40:26:40:30">comp</jtok>
<jtok eid="1" type="class_or_interface_ref" span="41:16:41:22">String</jtok>
<jtok eid="1" type="field_name" span="41:23:41:29">source</jtok>
<jtok eid="1" type="class_or_interface_ref" span="43:16:43:22">String</jtok>
<jtok eid="1" type="field_name" span="43:23:43:29">target</jtok>
<jtok eid="1" type="line_comment" span="46:2:46:34">//{{{ CopyFileWorker constructor</jtok>
<jtok eid="1" type="block_comment" span="47:2:51:5">/**
	 * @param comp the component that will be used as parent in case of error
	 * @param source the source VFS
	 * @param target the target VFS
	 */</jtok>
<jtok eid="2" type="method_name" span="52:9:52:23">CopyFileWorker</jtok>
<jtok eid="2" type="parameter_type" span="52:24:52:33">Component</jtok>
<jtok eid="2" type="parameter_name" span="52:34:52:38">comp</jtok>
<jtok eid="2" type="parameter_type" span="52:40:52:46">String</jtok>
<jtok eid="2" type="parameter_name" span="52:47:52:53">source</jtok>
<jtok eid="2" type="parameter_type" span="52:55:52:61">String</jtok>
<jtok eid="2" type="parameter_name" span="52:62:52:68">target</jtok>
<jtok eid="2" type="primary_name_ref" span="54:7:54:13">source</jtok>
<jtok eid="2" type="primary_name_ref" span="54:25:54:31">target</jtok>
<jtok eid="2" type="constructor_call" span="55:14:55:34">NullPointerException</jtok>
<jtok eid="2" type="string_literal" span="55:35:55:73">"The source and target cannot be null"</jtok>
<jtok eid="2" type="qualified_name_ref" span="56:8:56:12">comp</jtok>
<jtok eid="2" type="primary_name_ref" span="56:15:56:19">comp</jtok>
<jtok eid="2" type="qualified_name_ref" span="57:8:57:14">source</jtok>
<jtok eid="2" type="primary_name_ref" span="57:17:57:23">source</jtok>
<jtok eid="2" type="qualified_name_ref" span="58:8:58:14">target</jtok>
<jtok eid="2" type="primary_name_ref" span="58:17:58:23">target</jtok>
<jtok eid="1" type="line_comment" span="59:4:59:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="61:2:61:20">//{{{ run() method</jtok>
<jtok eid="3" type="method_name" span="62:14:62:17">run</jtok>
<jtok eid="3" type="primary_name_ref" span="66:4:66:7">VFS</jtok>
<jtok eid="3" type="method_call" span="66:8:66:12">copy</jtok>
<jtok eid="3" type="primary_name_ref" span="66:19:66:25">source</jtok>
<jtok eid="3" type="primary_name_ref" span="66:27:66:33">target</jtok>
<jtok eid="3" type="primary_name_ref" span="66:35:66:39">comp</jtok>
<jtok eid="3" type="class_or_interface_ref" span="68:10:68:21">IOException</jtok>
<jtok eid="3" type="local_variable_name" span="68:22:68:23">e</jtok>
<jtok eid="3" type="primary_name_ref" span="70:4:70:7">Log</jtok>
<jtok eid="3" type="method_call" span="70:8:70:11">log</jtok>
<jtok eid="3" type="primary_name_ref" span="70:12:70:15">Log</jtok>
<jtok eid="3" type="qualified_name_ref" span="70:16:70:21">ERROR</jtok>
<jtok eid="3" type="primary_name_ref" span="70:28:70:29">e</jtok>
<jtok eid="3" type="primary_name_ref" span="70:31:70:32">e</jtok>
<jtok eid="1" type="line_comment" span="72:4:72:9">//}}}</jtok>
</jdoc>