<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.search.PatternSearchMatcher" jls="java5">
<jent id="0" type="file" span="0:0:233:1">Source/jEdit/org/gjt/sp/jedit/search/PatternSearchMatcher.java</jent>
<jent id="1" pid="0" type="class" span="37:1:232:1">org.gjt.sp.jedit.search.PatternSearchMatcher</jent>
<jent id="2" pid="1" type="method" span="47:2:51:2">org.gjt.sp.jedit.search.PatternSearchMatcher.PatternSearchMatcher(String,boolean)</jent>
<jent id="3" pid="1" type="method" span="60:2:64:2">org.gjt.sp.jedit.search.PatternSearchMatcher.PatternSearchMatcher(Pattern,boolean)</jent>
<jent id="4" pid="1" type="method" span="88:2:209:2">org.gjt.sp.jedit.search.PatternSearchMatcher.nextMatch(CharSequence,boolean,boolean,boolean,boolean)</jent>
<jent id="5" pid="1" type="method" span="213:2:217:2">org.gjt.sp.jedit.search.PatternSearchMatcher.toString()</jent>
<jent id="6" pid="1" type="method" span="219:2:225:2">org.gjt.sp.jedit.search.PatternSearchMatcher.getFlag(boolean)</jent>
<jtok eid="0" type="block_comment" span="1:1:20:4">/*
 * PatternSearchMatcher.java - Regular expression matcher
 * :noTabs=false:
 *
 * Copyright (C) 2006 Marcelo Vanzin
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="29:1:36:4">/**
 * A regular expression string matcher using java.util.regex.
 * @see java.util.regex.Pattern
 *
 * @author Marcelo Vanzin
 * @version $Id: PatternSearchMatcher.java 13908 2008-10-19 08:25:44Z k_satoda $
 * @since jEdit 4.3pre5
 */</jtok>
<jtok eid="1" type="class_name" span="37:14:37:34">PatternSearchMatcher</jtok>
<jtok eid="1" type="class_or_interface_ref" span="37:43:37:56">SearchMatcher</jtok>
<jtok eid="1" type="line_comment" span="39:2:39:41">//{{{ PatternSearchMatcher constructors</jtok>
<jtok eid="1" type="block_comment" span="40:2:46:5">/**
	 * Creates a new regular expression string matcher.
	 * @see java.util.regex.Pattern
	 * @param search the search pattern
	 * @param ignoreCase &lt;code&gt;true&lt;/code&gt; if you want to ignore case
	 * @since jEdit 4.3pre5
	 */</jtok>
<jtok eid="2" type="method_name" span="47:9:47:29">PatternSearchMatcher</jtok>
<jtok eid="2" type="parameter_type" span="47:30:47:36">String</jtok>
<jtok eid="2" type="parameter_name" span="47:37:47:43">search</jtok>
<jtok eid="2" type="parameter_name" span="47:53:47:63">ignoreCase</jtok>
<jtok eid="2" type="primary_name_ref" span="49:3:49:10">pattern</jtok>
<jtok eid="2" type="primary_name_ref" span="49:13:49:19">search</jtok>
<jtok eid="2" type="primary_name_ref" span="50:3:50:8">flags</jtok>
<jtok eid="2" type="method_call" span="50:11:50:18">getFlag</jtok>
<jtok eid="2" type="primary_name_ref" span="50:19:50:29">ignoreCase</jtok>
<jtok eid="1" type="block_comment" span="53:2:59:5">/**
	 * Creates a new regular expression already compiled.
	 * @see java.util.regex.Pattern
	 * @param re the compiled regex
	 * @param ignoreCase &lt;code&gt;true&lt;/code&gt; if you want to ignore case
	 * @since jEdit 4.3pre13
	 */</jtok>
<jtok eid="3" type="method_name" span="60:9:60:29">PatternSearchMatcher</jtok>
<jtok eid="3" type="parameter_type" span="60:30:60:37">Pattern</jtok>
<jtok eid="3" type="parameter_name" span="60:38:60:40">re</jtok>
<jtok eid="3" type="parameter_name" span="60:50:60:60">ignoreCase</jtok>
<jtok eid="3" type="primary_name_ref" span="62:8:62:10">re</jtok>
<jtok eid="3" type="method_call" span="62:11:62:18">pattern</jtok>
<jtok eid="3" type="primary_name_ref" span="62:22:62:32">ignoreCase</jtok>
<jtok eid="3" type="qualified_name_ref" span="63:8:63:10">re</jtok>
<jtok eid="3" type="primary_name_ref" span="63:13:63:15">re</jtok>
<jtok eid="1" type="line_comment" span="64:4:64:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="66:2:66:26">//{{{ nextMatch() method</jtok>
<jtok eid="1" type="block_comment" span="67:2:86:5">/**
	 * Returns the offset of the first match of the specified text
	 * within this matcher.
	 *
	 * @param text 		The text to search in
	 * @param start 	True if the start of the segment is the beginning
	 *			of the buffer
	 * @param end 		True if the end of the segment is the end of the
	 *			buffer
	 * @param firstTime 	If false and the search string matched at the
	 *			start offset with length zero, automatically
	 *			find next match
	 * @param reverse 	If true find match prior to current match
	 * 			(this is done by searching from the beginning to
	 * 			just prior to the current match, so will be inefficient
	 * 			for large buffers)
	 *
	 * @return A {@link SearchMatcher.Match} object.
	 * @since jEdit 4.3pre5
	 */</jtok>
<jtok eid="1" type="annotation_ref" span="87:3:87:11">Override</jtok>
<jtok eid="4" type="class_or_interface_ref" span="88:9:88:22">SearchMatcher</jtok>
<jtok eid="4" type="class_or_interface_ref" span="88:23:88:28">Match</jtok>
<jtok eid="4" type="method_name" span="88:29:88:38">nextMatch</jtok>
<jtok eid="4" type="parameter_type" span="88:39:88:51">CharSequence</jtok>
<jtok eid="4" type="parameter_name" span="88:52:88:56">text</jtok>
<jtok eid="4" type="parameter_name" span="88:66:88:71">start</jtok>
<jtok eid="4" type="parameter_name" span="89:11:89:14">end</jtok>
<jtok eid="4" type="parameter_name" span="89:24:89:33">firstTime</jtok>
<jtok eid="4" type="parameter_name" span="89:43:89:50">reverse</jtok>
<jtok eid="4" type="line_comment" span="91:3:91:78">// "For the mean time, there is no way to automatically generate a sexeger"</jtok>
<jtok eid="4" type="line_comment" span="92:3:92:5">//</jtok>
<jtok eid="4" type="line_comment" span="93:3:93:52">// http://japhy.perlmonk.org/sexeger/sexeger.html</jtok>
<jtok eid="4" type="line_comment" span="94:3:94:5">//</jtok>
<jtok eid="4" type="line_comment" span="95:3:95:54">// So ... for reverse regex searches we will search</jtok>
<jtok eid="4" type="line_comment" span="96:3:96:45">// the string in the forward direction and</jtok>
<jtok eid="4" type="line_comment" span="97:3:97:28">// return the last match.</jtok>
<jtok eid="4" type="line_comment" span="99:3:99:58">// Since we search the String in the forward direction,</jtok>
<jtok eid="4" type="line_comment" span="100:3:100:69">// (even for reverse searches) un-reverse the ReverseCharSequence.</jtok>
<jtok eid="4" type="primary_name_ref" span="101:7:101:11">text</jtok>
<jtok eid="4" type="class_or_interface_ref" span="101:23:101:42">ReverseCharSequence</jtok>
<jtok eid="4" type="primary_name_ref" span="102:4:102:8">text</jtok>
<jtok eid="4" type="class_or_interface_ref" span="102:13:102:32">ReverseCharSequence</jtok>
<jtok eid="4" type="primary_name_ref" span="102:33:102:37">text</jtok>
<jtok eid="4" type="method_call" span="102:39:102:51">baseSequence</jtok>
<jtok eid="4" type="primary_name_ref" span="104:7:104:9">re</jtok>
<jtok eid="4" type="primary_name_ref" span="105:4:105:6">re</jtok>
<jtok eid="4" type="primary_name_ref" span="105:9:105:16">Pattern</jtok>
<jtok eid="4" type="method_call" span="105:17:105:24">compile</jtok>
<jtok eid="4" type="primary_name_ref" span="105:25:105:32">pattern</jtok>
<jtok eid="4" type="primary_name_ref" span="105:34:105:39">flags</jtok>
<jtok eid="4" type="class_or_interface_ref" span="107:3:107:10">Matcher</jtok>
<jtok eid="4" type="local_variable_name" span="107:11:107:16">match</jtok>
<jtok eid="4" type="primary_name_ref" span="107:19:107:21">re</jtok>
<jtok eid="4" type="method_call" span="107:22:107:29">matcher</jtok>
<jtok eid="4" type="primary_name_ref" span="107:30:107:34">text</jtok>
<jtok eid="4" type="primary_name_ref" span="108:8:108:13">match</jtok>
<jtok eid="4" type="method_call" span="108:14:108:18">find</jtok>
<jtok eid="4" type="line_comment" span="111:3:111:62">// if we're not at the start of the buffer, and the pattern</jtok>
<jtok eid="4" type="line_comment" span="112:3:112:61">// begins with "^" and matched the beginning of the region</jtok>
<jtok eid="4" type="line_comment" span="113:3:113:59">// being matched, ignore the match and try the next one.</jtok>
<jtok eid="4" type="primary_name_ref" span="114:8:114:13">start</jtok>
<jtok eid="4" type="primary_name_ref" span="114:17:114:22">match</jtok>
<jtok eid="4" type="method_call" span="114:23:114:28">start</jtok>
<jtok eid="4" type="primary_name_ref" span="115:7:115:9">re</jtok>
<jtok eid="4" type="method_call" span="115:10:115:17">pattern</jtok>
<jtok eid="4" type="method_call" span="115:20:115:26">charAt</jtok>
<jtok eid="4" type="primary_name_ref" span="115:41:115:46">match</jtok>
<jtok eid="4" type="method_call" span="115:47:115:51">find</jtok>
<jtok eid="4" type="line_comment" span="118:3:118:61">// Special care for zero width matches. Without this care,</jtok>
<jtok eid="4" type="line_comment" span="119:3:119:65">// the caller will fall into an infinite loop, for non-reverse</jtok>
<jtok eid="4" type="line_comment" span="120:3:120:13">// search.</jtok>
<jtok eid="4" type="primary_name_ref" span="121:8:121:15">reverse</jtok>
<jtok eid="4" type="primary_name_ref" span="121:20:121:29">firstTime</jtok>
<jtok eid="4" type="primary_name_ref" span="121:33:121:38">match</jtok>
<jtok eid="4" type="method_call" span="121:39:121:44">start</jtok>
<jtok eid="4" type="primary_name_ref" span="121:55:121:60">match</jtok>
<jtok eid="4" type="method_call" span="121:61:121:64">end</jtok>
<jtok eid="4" type="primary_name_ref" span="123:9:123:14">match</jtok>
<jtok eid="4" type="method_call" span="123:15:123:19">find</jtok>
<jtok eid="4" type="class_or_interface_ref" span="127:3:127:8">Match</jtok>
<jtok eid="4" type="local_variable_name" span="127:9:127:17">previous</jtok>
<jtok eid="4" type="line_comment" span="130:4:130:51">// if we're not at the end of the buffer and we</jtok>
<jtok eid="4" type="line_comment" span="131:4:131:66">// match the end of the text, and the pattern ends with a "$",</jtok>
<jtok eid="4" type="line_comment" span="132:4:132:24">// ignore the match.</jtok>
<jtok eid="4" type="line_comment" span="133:4:133:64">// The match at the end the buffer which immediately follows</jtok>
<jtok eid="4" type="line_comment" span="134:4:134:64">// the final newline is also ignored because it is generally</jtok>
<jtok eid="4" type="line_comment" span="135:4:135:30">// not expected as an EOL.</jtok>
<jtok eid="4" type="primary_name_ref" span="136:10:136:13">end</jtok>
<jtok eid="4" type="primary_name_ref" span="136:18:136:22">text</jtok>
<jtok eid="4" type="method_call" span="136:23:136:29">charAt</jtok>
<jtok eid="4" type="primary_name_ref" span="136:30:136:34">text</jtok>
<jtok eid="4" type="method_call" span="136:35:136:41">length</jtok>
<jtok eid="4" type="primary_name_ref" span="137:8:137:13">match</jtok>
<jtok eid="4" type="method_call" span="137:14:137:17">end</jtok>
<jtok eid="4" type="primary_name_ref" span="137:23:137:27">text</jtok>
<jtok eid="4" type="method_call" span="137:28:137:34">length</jtok>
<jtok eid="4" type="primary_name_ref" span="138:8:138:15">pattern</jtok>
<jtok eid="4" type="method_call" span="138:16:138:22">charAt</jtok>
<jtok eid="4" type="primary_name_ref" span="138:23:138:30">pattern</jtok>
<jtok eid="4" type="method_call" span="138:31:138:37">length</jtok>
<jtok eid="4" type="primary_name_ref" span="140:9:140:17">previous</jtok>
<jtok eid="4" type="primary_name_ref" span="142:6:142:17">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="142:18:142:23">start</jtok>
<jtok eid="4" type="primary_name_ref" span="142:26:142:34">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="142:35:142:40">start</jtok>
<jtok eid="4" type="primary_name_ref" span="143:6:143:17">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="143:18:143:21">end</jtok>
<jtok eid="4" type="primary_name_ref" span="143:24:143:32">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="143:33:143:36">end</jtok>
<jtok eid="4" type="primary_name_ref" span="144:6:144:17">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="144:18:144:31">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="144:34:144:42">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="144:43:144:56">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="153:4:153:15">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="153:16:153:29">substitutions</jtok>
<jtok eid="4" type="constructor_call" span="153:36:153:42">String</jtok>
<jtok eid="4" type="primary_name_ref" span="153:43:153:48">match</jtok>
<jtok eid="4" type="method_call" span="153:49:153:59">groupCount</jtok>
<jtok eid="4" type="local_variable_name" span="154:12:154:13">i</jtok>
<jtok eid="4" type="primary_name_ref" span="154:19:154:20">i</jtok>
<jtok eid="4" type="primary_name_ref" span="154:23:154:34">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="154:35:154:48">substitutions</jtok>
<jtok eid="4" type="qualified_name_ref" span="154:49:154:55">length</jtok>
<jtok eid="4" type="primary_name_ref" span="154:57:154:58">i</jtok>
<jtok eid="4" type="primary_name_ref" span="156:5:156:16">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="156:17:156:30">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="156:31:156:32">i</jtok>
<jtok eid="4" type="primary_name_ref" span="156:36:156:41">match</jtok>
<jtok eid="4" type="method_call" span="156:42:156:47">group</jtok>
<jtok eid="4" type="primary_name_ref" span="156:48:156:49">i</jtok>
<jtok eid="4" type="local_variable_name" span="159:8:159:14">_start</jtok>
<jtok eid="4" type="primary_name_ref" span="159:17:159:22">match</jtok>
<jtok eid="4" type="method_call" span="159:23:159:28">start</jtok>
<jtok eid="4" type="local_variable_name" span="160:8:160:12">_end</jtok>
<jtok eid="4" type="primary_name_ref" span="160:15:160:20">match</jtok>
<jtok eid="4" type="method_call" span="160:21:160:24">end</jtok>
<jtok eid="4" type="primary_name_ref" span="162:4:162:15">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="162:16:162:21">start</jtok>
<jtok eid="4" type="primary_name_ref" span="162:24:162:30">_start</jtok>
<jtok eid="4" type="primary_name_ref" span="163:4:163:15">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="163:16:163:19">end</jtok>
<jtok eid="4" type="primary_name_ref" span="163:22:163:26">_end</jtok>
<jtok eid="4" type="line_comment" span="165:4:165:54">// For non-reversed searches, we break immediately</jtok>
<jtok eid="4" type="line_comment" span="166:4:166:57">// to return the first match.  For reversed searches,</jtok>
<jtok eid="4" type="line_comment" span="167:4:167:50">// we continue until no more matches are found</jtok>
<jtok eid="4" type="primary_name_ref" span="168:9:168:16">reverse</jtok>
<jtok eid="4" type="primary_name_ref" span="168:21:168:26">match</jtok>
<jtok eid="4" type="method_call" span="168:27:168:31">find</jtok>
<jtok eid="4" type="line_comment" span="170:5:170:57">// For reverse search, check for zero width match at</jtok>
<jtok eid="4" type="line_comment" span="171:5:171:24">// the end of text.</jtok>
<jtok eid="4" type="primary_name_ref" span="172:9:172:16">reverse</jtok>
<jtok eid="4" type="primary_name_ref" span="172:21:172:30">firstTime</jtok>
<jtok eid="4" type="primary_name_ref" span="172:34:172:45">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="172:46:172:51">start</jtok>
<jtok eid="4" type="primary_name_ref" span="172:55:172:59">text</jtok>
<jtok eid="4" type="method_call" span="172:60:172:66">length</jtok>
<jtok eid="4" type="primary_name_ref" span="173:9:173:20">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="173:21:173:24">end</jtok>
<jtok eid="4" type="primary_name_ref" span="173:28:173:32">text</jtok>
<jtok eid="4" type="method_call" span="173:33:173:39">length</jtok>
<jtok eid="4" type="primary_name_ref" span="175:10:175:18">previous</jtok>
<jtok eid="4" type="primary_name_ref" span="177:7:177:18">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="177:19:177:24">start</jtok>
<jtok eid="4" type="primary_name_ref" span="177:27:177:35">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="177:36:177:41">start</jtok>
<jtok eid="4" type="primary_name_ref" span="178:7:178:18">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="178:19:178:22">end</jtok>
<jtok eid="4" type="primary_name_ref" span="178:25:178:33">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="178:34:178:37">end</jtok>
<jtok eid="4" type="primary_name_ref" span="179:7:179:18">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="179:19:179:32">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="179:35:179:43">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="179:44:179:57">substitutions</jtok>
<jtok eid="4" type="line_comment" span="188:4:188:52">// Save the result for reverse zero width match.</jtok>
<jtok eid="4" type="primary_name_ref" span="189:8:189:16">previous</jtok>
<jtok eid="4" type="primary_name_ref" span="191:5:191:13">previous</jtok>
<jtok eid="4" type="constructor_call" span="191:20:191:25">Match</jtok>
<jtok eid="4" type="primary_name_ref" span="193:4:193:12">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="193:13:193:18">start</jtok>
<jtok eid="4" type="primary_name_ref" span="193:21:193:32">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="193:33:193:38">start</jtok>
<jtok eid="4" type="primary_name_ref" span="194:4:194:12">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="194:13:194:16">end</jtok>
<jtok eid="4" type="primary_name_ref" span="194:19:194:30">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="194:31:194:34">end</jtok>
<jtok eid="4" type="primary_name_ref" span="195:4:195:12">previous</jtok>
<jtok eid="4" type="qualified_name_ref" span="195:13:195:26">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="195:29:195:40">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="195:41:195:54">substitutions</jtok>
<jtok eid="4" type="primary_name_ref" span="198:7:198:14">reverse</jtok>
<jtok eid="4" type="line_comment" span="200:4:200:53">// The caller assumes we are searching a reversed</jtok>
<jtok eid="4" type="line_comment" span="201:4:201:53">// CharSegment, so we need to reverse the indices</jtok>
<jtok eid="4" type="line_comment" span="202:4:202:23">// before returning</jtok>
<jtok eid="4" type="local_variable_name" span="203:8:203:11">len</jtok>
<jtok eid="4" type="primary_name_ref" span="203:14:203:25">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="203:26:203:29">end</jtok>
<jtok eid="4" type="primary_name_ref" span="203:32:203:43">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="203:44:203:49">start</jtok>
<jtok eid="4" type="primary_name_ref" span="204:4:204:15">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="204:16:204:21">start</jtok>
<jtok eid="4" type="primary_name_ref" span="204:24:204:28">text</jtok>
<jtok eid="4" type="method_call" span="204:29:204:35">length</jtok>
<jtok eid="4" type="primary_name_ref" span="204:40:204:51">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="204:52:204:55">end</jtok>
<jtok eid="4" type="primary_name_ref" span="205:4:205:15">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="205:16:205:19">end</jtok>
<jtok eid="4" type="primary_name_ref" span="205:22:205:33">returnValue</jtok>
<jtok eid="4" type="qualified_name_ref" span="205:34:205:39">start</jtok>
<jtok eid="4" type="primary_name_ref" span="205:42:205:45">len</jtok>
<jtok eid="4" type="primary_name_ref" span="208:10:208:21">returnValue</jtok>
<jtok eid="1" type="line_comment" span="209:4:209:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="211:2:211:25">//{{{ toString() method</jtok>
<jtok eid="1" type="annotation_ref" span="212:3:212:11">Override</jtok>
<jtok eid="5" type="class_or_interface_ref" span="213:9:213:15">String</jtok>
<jtok eid="5" type="method_name" span="213:16:213:24">toString</jtok>
<jtok eid="5" type="local_variable_name" span="215:11:215:21">ignoreCase</jtok>
<jtok eid="5" type="primary_name_ref" span="215:25:215:30">flags</jtok>
<jtok eid="5" type="primary_name_ref" span="215:33:215:40">Pattern</jtok>
<jtok eid="5" type="qualified_name_ref" span="215:41:215:57">CASE_INSENSITIVE</jtok>
<jtok eid="5" type="string_literal" span="216:10:216:33">"PatternSearchMatcher["</jtok>
<jtok eid="5" type="primary_name_ref" span="216:36:216:43">pattern</jtok>
<jtok eid="5" type="primary_name_ref" span="216:52:216:62">ignoreCase</jtok>
<jtok eid="1" type="line_comment" span="217:4:217:9">//}}}</jtok>
<jtok eid="6" type="method_name" span="219:13:219:20">getFlag</jtok>
<jtok eid="6" type="parameter_name" span="219:29:219:39">ignoreCase</jtok>
<jtok eid="6" type="local_variable_name" span="221:7:221:12">flags</jtok>
<jtok eid="6" type="primary_name_ref" span="221:15:221:22">Pattern</jtok>
<jtok eid="6" type="qualified_name_ref" span="221:23:221:32">MULTILINE</jtok>
<jtok eid="6" type="primary_name_ref" span="222:7:222:17">ignoreCase</jtok>
<jtok eid="6" type="primary_name_ref" span="223:4:223:9">flags</jtok>
<jtok eid="6" type="primary_name_ref" span="223:13:223:20">Pattern</jtok>
<jtok eid="6" type="qualified_name_ref" span="223:21:223:37">CASE_INSENSITIVE</jtok>
<jtok eid="6" type="primary_name_ref" span="224:10:224:15">flags</jtok>
<jtok eid="1" type="line_comment" span="227:2:227:23">//{{{ Private members</jtok>
<jtok eid="1" type="field_name" span="228:14:228:19">flags</jtok>
<jtok eid="1" type="class_or_interface_ref" span="229:10:229:17">Pattern</jtok>
<jtok eid="1" type="field_name" span="229:18:229:20">re</jtok>
<jtok eid="1" type="class_or_interface_ref" span="230:16:230:22">String</jtok>
<jtok eid="1" type="field_name" span="230:23:230:30">pattern</jtok>
<jtok eid="1" type="line_comment" span="231:2:231:7">//}}}</jtok>
</jdoc>