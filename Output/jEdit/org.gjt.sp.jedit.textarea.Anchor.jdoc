<?xml version="1.0" encoding="utf-8"?>
<jdoc cUnit="org.gjt.sp.jedit.textarea.Anchor" jls="java5">
<jent id="0" type="file" span="0:0:155:2">Source/jEdit/org/gjt/sp/jedit/textarea/Anchor.java</jent>
<jent id="1" pid="0" type="class" span="33:1:155:1">org.gjt.sp.jedit.textarea.Anchor</jent>
<jent id="2" pid="1" type="method" span="56:2:61:2">org.gjt.sp.jedit.textarea.Anchor.Anchor(DisplayManager,TextArea)</jent>
<jent id="3" pid="1" type="method" span="64:2:64:23">org.gjt.sp.jedit.textarea.Anchor.reset()</jent>
<jent id="4" pid="1" type="method" span="65:2:65:25">org.gjt.sp.jedit.textarea.Anchor.changed()</jent>
<jent id="5" pid="1" type="method" span="69:2:73:2">org.gjt.sp.jedit.textarea.Anchor.toString()</jent>
<jent id="6" pid="1" type="method" span="82:2:91:2">org.gjt.sp.jedit.textarea.Anchor.contentInserted(int,int)</jent>
<jent id="7" pid="1" type="method" span="101:2:154:2">org.gjt.sp.jedit.textarea.Anchor.preContentRemoved(int,int,int)</jent>
<jtok eid="0" type="block_comment" span="1:1:21:4">/*
 * Anchor.java - A base point for physical line &lt;-&gt; screen line conversion
 * :tabSize=8:indentSize=8:noTabs=false:
 * :folding=explicit:collapseFolds=1:
 *
 * Copyright (C) 2005 Slava Pestov
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */</jtok>
<jtok eid="0" type="block_comment" span="28:1:32:4">/**
 * A base point for physical line/screen line conversion.
 * @author Slava Pestov
 * @version $Id: Anchor.java 15570 2009-06-25 00:43:57Z ezust $
 */</jtok>
<jtok eid="1" type="class_name" span="33:16:33:22">Anchor</jtok>
<jtok eid="1" type="class_or_interface_ref" span="35:18:35:32">DisplayManager</jtok>
<jtok eid="1" type="field_name" span="35:33:35:47">displayManager</jtok>
<jtok eid="1" type="class_or_interface_ref" span="36:18:36:26">TextArea</jtok>
<jtok eid="1" type="field_name" span="36:27:36:35">textArea</jtok>
<jtok eid="1" type="block_comment" span="37:2:37:27">/** The physical line. */</jtok>
<jtok eid="1" type="field_name" span="38:6:38:18">physicalLine</jtok>
<jtok eid="1" type="block_comment" span="39:2:42:5">/**
	 * The visible line index. (from the top of the buffer). It can be different from physical line
	 * when using soft wrap.
	 */</jtok>
<jtok eid="1" type="field_name" span="43:6:43:16">scrollLine</jtok>
<jtok eid="1" type="block_comment" span="44:2:47:5">/** 
	 * If this is set to true, the changed() method will be called in
	 * {@link DisplayManager#notifyScreenLineChanges()}
	 */</jtok>
<jtok eid="1" type="field_name" span="48:10:48:21">callChanged</jtok>
<jtok eid="1" type="block_comment" span="49:2:52:5">/** 
	 * If this is set to true, the reset() method will be called in
	 * {@link DisplayManager#notifyScreenLineChanges()}
	 */</jtok>
<jtok eid="1" type="field_name" span="53:10:53:19">callReset</jtok>
<jtok eid="1" type="line_comment" span="55:2:55:26">//{{{ Anchor constructor</jtok>
<jtok eid="2" type="method_name" span="56:12:56:18">Anchor</jtok>
<jtok eid="2" type="parameter_type" span="56:19:56:33">DisplayManager</jtok>
<jtok eid="2" type="parameter_name" span="56:34:56:48">displayManager</jtok>
<jtok eid="2" type="parameter_type" span="57:3:57:11">TextArea</jtok>
<jtok eid="2" type="parameter_name" span="57:12:57:20">textArea</jtok>
<jtok eid="2" type="qualified_name_ref" span="59:8:59:22">displayManager</jtok>
<jtok eid="2" type="primary_name_ref" span="59:25:59:39">displayManager</jtok>
<jtok eid="2" type="qualified_name_ref" span="60:8:60:16">textArea</jtok>
<jtok eid="2" type="primary_name_ref" span="60:19:60:27">textArea</jtok>
<jtok eid="1" type="line_comment" span="61:4:61:9">//}}}</jtok>
<jtok eid="1" type="block_comment" span="63:2:63:68">/** This method recalculates the scrollLine from the beginning. */</jtok>
<jtok eid="3" type="method_name" span="64:16:64:21">reset</jtok>
<jtok eid="4" type="method_name" span="65:16:65:23">changed</jtok>
<jtok eid="1" type="line_comment" span="67:2:67:25">//{{{ toString() method</jtok>
<jtok eid="1" type="annotation_ref" span="68:3:68:11">Override</jtok>
<jtok eid="5" type="class_or_interface_ref" span="69:9:69:15">String</jtok>
<jtok eid="5" type="method_name" span="69:16:69:24">toString</jtok>
<jtok eid="5" type="method_call" span="71:10:71:18">getClass</jtok>
<jtok eid="5" type="method_call" span="71:21:71:28">getName</jtok>
<jtok eid="5" type="primary_name_ref" span="71:39:71:51">physicalLine</jtok>
<jtok eid="5" type="primary_name_ref" span="72:12:72:22">scrollLine</jtok>
<jtok eid="1" type="line_comment" span="73:4:73:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="75:2:75:32">//{{{ contentInserted() method</jtok>
<jtok eid="1" type="block_comment" span="76:2:81:5">/**
	 * Some content is inserted.
	 *
	 * @param startLine the start of the insert
	 * @param numLines the number of insterted lines
	 */</jtok>
<jtok eid="6" type="method_name" span="82:7:82:22">contentInserted</jtok>
<jtok eid="6" type="parameter_name" span="82:27:82:36">startLine</jtok>
<jtok eid="6" type="parameter_name" span="82:42:82:50">numLines</jtok>
<jtok eid="6" type="line_comment" span="84:3:84:67">// The Anchor is changed only if the content was inserted before</jtok>
<jtok eid="6" type="primary_name_ref" span="85:6:85:18">physicalLine</jtok>
<jtok eid="6" type="primary_name_ref" span="85:22:85:31">startLine</jtok>
<jtok eid="6" type="primary_name_ref" span="87:7:87:19">physicalLine</jtok>
<jtok eid="6" type="primary_name_ref" span="87:23:87:32">startLine</jtok>
<jtok eid="6" type="primary_name_ref" span="88:5:88:17">physicalLine</jtok>
<jtok eid="6" type="primary_name_ref" span="88:21:88:29">numLines</jtok>
<jtok eid="6" type="primary_name_ref" span="89:4:89:15">callChanged</jtok>
<jtok eid="1" type="line_comment" span="91:4:91:9">//}}}</jtok>
<jtok eid="1" type="line_comment" span="93:2:93:34">//{{{ preContentRemoved() method</jtok>
<jtok eid="1" type="block_comment" span="94:2:100:5">/**
	 * Method called before a content is removed from a buffer.
	 *
	 * @param startLine the first line of the removed content
	 * @param offset the offset in the start line
	 * @param numLines the number of removed lines
	 */</jtok>
<jtok eid="7" type="method_name" span="101:7:101:24">preContentRemoved</jtok>
<jtok eid="7" type="parameter_name" span="101:29:101:38">startLine</jtok>
<jtok eid="7" type="parameter_name" span="101:44:101:50">offset</jtok>
<jtok eid="7" type="parameter_name" span="101:56:101:64">numLines</jtok>
<jtok eid="7" type="primary_name_ref" span="103:6:103:11">Debug</jtok>
<jtok eid="7" type="qualified_name_ref" span="103:12:103:24">SCROLL_DEBUG</jtok>
<jtok eid="7" type="primary_name_ref" span="104:4:104:7">Log</jtok>
<jtok eid="7" type="method_call" span="104:8:104:11">log</jtok>
<jtok eid="7" type="primary_name_ref" span="104:12:104:15">Log</jtok>
<jtok eid="7" type="qualified_name_ref" span="104:16:104:21">DEBUG</jtok>
<jtok eid="7" type="string_literal" span="104:27:104:56">"preContentRemoved() before:"</jtok>
<jtok eid="7" type="line_comment" span="105:3:105:81">// The removed content starts before the Anchor, we need to pull the anchor up</jtok>
<jtok eid="7" type="primary_name_ref" span="106:6:106:18">physicalLine</jtok>
<jtok eid="7" type="primary_name_ref" span="106:22:106:31">startLine</jtok>
<jtok eid="7" type="primary_name_ref" span="108:7:108:19">physicalLine</jtok>
<jtok eid="7" type="primary_name_ref" span="108:23:108:32">startLine</jtok>
<jtok eid="7" type="primary_name_ref" span="109:5:109:16">callChanged</jtok>
<jtok eid="7" type="local_variable_name" span="112:9:112:12">end</jtok>
<jtok eid="7" type="primary_name_ref" span="112:15:112:19">Math</jtok>
<jtok eid="7" type="method_call" span="112:20:112:23">min</jtok>
<jtok eid="7" type="primary_name_ref" span="112:24:112:33">startLine</jtok>
<jtok eid="7" type="primary_name_ref" span="112:36:112:44">numLines</jtok>
<jtok eid="7" type="primary_name_ref" span="112:46:112:58">physicalLine</jtok>
<jtok eid="7" type="line_comment" span="113:5:113:92">//Check the lines from the beginning of the removed content to the end (or the physical</jtok>
<jtok eid="7" type="line_comment" span="114:5:114:72">//line of the Anchor if it is before the end of the removed content</jtok>
<jtok eid="7" type="line_comment" span="116:5:116:37">//int loopStart = startLine + 1;</jtok>
<jtok eid="7" type="line_comment" span="118:5:118:115">//{{{ treatment if the beginning of the deleted content is inside a physical line that has several line counts</jtok>
<jtok eid="7" type="block_comment" span="119:5:134:8">/*if (displayManager.isLineVisible(startLine))
				{
					int screenLineCount = displayManager.screenLineMgr.getScreenLineCount(startLine);
					if (screenLineCount &gt; 1)
					{
						int lineStartOffset = textArea.getLineStartOffset(startLine);

						int startScreenLine = textArea.getScreenLineOfOffset(lineStartOffset);
						int deleteStartScreenLine = textArea.getScreenLineOfOffset(offset);
						if (startScreenLine != deleteStartScreenLine)
						{
							loopStart = startLine + 2;
							scrollLine -= screenLineCount - deleteStartScreenLine + startScreenLine;
						}
					}
				}*/</jtok>
<jtok eid="7" type="line_comment" span="135:5:135:10">//}}}</jtok>
<jtok eid="7" type="local_variable_name" span="137:13:137:14">i</jtok>
<jtok eid="7" type="primary_name_ref" span="137:17:137:26">startLine</jtok>
<jtok eid="7" type="primary_name_ref" span="137:32:137:33">i</jtok>
<jtok eid="7" type="primary_name_ref" span="137:37:137:40">end</jtok>
<jtok eid="7" type="primary_name_ref" span="137:42:137:43">i</jtok>
<jtok eid="7" type="line_comment" span="139:6:139:11">//XXX</jtok>
<jtok eid="7" type="primary_name_ref" span="140:9:140:23">displayManager</jtok>
<jtok eid="7" type="method_call" span="140:24:140:37">isLineVisible</jtok>
<jtok eid="7" type="primary_name_ref" span="140:38:140:39">i</jtok>
<jtok eid="7" type="primary_name_ref" span="142:7:142:17">scrollLine</jtok>
<jtok eid="7" type="primary_name_ref" span="143:8:143:22">displayManager</jtok>
<jtok eid="7" type="qualified_name_ref" span="144:10:144:23">screenLineMgr</jtok>
<jtok eid="7" type="method_call" span="145:10:145:28">getScreenLineCount</jtok>
<jtok eid="7" type="primary_name_ref" span="145:29:145:30">i</jtok>
<jtok eid="7" type="primary_name_ref" span="148:5:148:17">physicalLine</jtok>
<jtok eid="7" type="primary_name_ref" span="148:21:148:24">end</jtok>
<jtok eid="7" type="primary_name_ref" span="148:27:148:36">startLine</jtok>
<jtok eid="7" type="primary_name_ref" span="149:5:149:16">callChanged</jtok>
<jtok eid="7" type="primary_name_ref" span="152:6:152:11">Debug</jtok>
<jtok eid="7" type="qualified_name_ref" span="152:12:152:24">SCROLL_DEBUG</jtok>
<jtok eid="7" type="primary_name_ref" span="153:4:153:7">Log</jtok>
<jtok eid="7" type="method_call" span="153:8:153:11">log</jtok>
<jtok eid="7" type="primary_name_ref" span="153:12:153:15">Log</jtok>
<jtok eid="7" type="qualified_name_ref" span="153:16:153:21">DEBUG</jtok>
<jtok eid="7" type="string_literal" span="153:27:153:55">"preContentRemoved() after:"</jtok>
<jtok eid="1" type="line_comment" span="154:4:154:9">//}}}</jtok>
</jdoc>